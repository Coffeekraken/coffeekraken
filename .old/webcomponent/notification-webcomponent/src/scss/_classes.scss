@use '@coffeekraken/sugar/index' as sugar;

/**
 * @name 				classes
 * @namespace 			notification-webcomponent
 * @type 				Mixin
 *
 * Print out the classes for notifications styling
 *
 * @param 		{List} 		[$colors=default primary secondary] 		The registered colors to generate
 *
 * @example 	scss
 * @use '@coffeekraken/notification-webcomponent/index' as notification-webcomponent;
 * \@include notification-webcomponent.classes(
 * 	$colors : default primary secondary
 * );
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes(
	$colors : default primary secondary
) {
	@include classes-bare();
	@include classes-style($colors);
	@include classes-animation();
}

/**
 * @name 				classes-bare
 * @namespace 		notification-webcomponent
 * @type 			Mixin
 *
 * Print out the bare classes for notifications styling
 *
 * @example 	scss
 * @use '@coffeekraken/notification-webcomponent/index' as notification-webcomponent;
 * \@include notification-webcomponent.classes-bare();
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes-bare() {
	.ck-notification-container {
		margin: sugar.space(default);
	}
	.ck-notification {
		padding: sugar.space(default);
		margin-bottom: sugar.space(default);
		border-radius: sugar.lnf(border-radius);
		max-width: sugar.to-rem(500px);
		@include sugar.clearfix;
	}
	.ck-notification-container[class*="--b"] .ck-notification {
		margin-bottom: 0;
		margin-top: sugar.space(default);
	}
	.ck-notification__title {
		margin-bottom : sugar.space(default);
	}
	.ck-notification__icon ~ .ck-notification__title {
		padding-left: calc(2.4em + #{sugar.space(default) / 2});
	}
	.ck-notification__body {
	}
	.ck-notification__icon ~ .ck-notification__body {
		padding-left: calc(3em + #{sugar.space(default) / 2});
	}
	.ck-notification__icon {
		float : left;
		font-size:3em;
	}
	.ck-notification__actions {
		margin-top : sugar.space(default);
		margin-left : sugar.space(default) / 2 * -1;
		margin-right : sugar.space(default) / 2 * -1;
	}
	.ck-notification__action {
		margin-left : sugar.space(default) / 2;
		margin-right : sugar.space(default) / 2;
	}
}

/**
 * @name 			classes-style
 * @namespace 		notification-webcomponent
 * @type 				Mixin
 *
 * Print out the style classes for notifications styling
 *
 * @param 		{List} 		[$colors=default primary secondary] 		The registered colors to generate
 *
 * @example 	scss
 * @use '@coffeekraken/notification-webcomponent/index' as notification-webcomponent;
 * \@include notification-webcomponent.classes-style(
 * 	$colors : default primary secondary
 * );
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes-style(
	$colors : default primary secondary
) {
	.ck-notification {
		// @include s-depth(5);
		background: white;
		overflow: hidden;
		// &:hover {
		// 	@include s-depth(10);
		// }
	}
	.ck-notification__title {
		font-size:1.2em;
		font-weight: bold;
	}
	.ck-notification--interactive {
		@include sugar.transition(fast);
		&:hover {
			background: darken(white,2%);
		}
	}
	@each $color in $colors {
		.ck-notification--#{$color} {
			background : sugar.color($color);
			color : white;

			&.ck-notification--interactive {
				&:hover {
					background: sugar.color($color, -darken 5%);
				}
			}
		}
	}
}


@keyframes ck-notification-in {
	0% {
		max-height:0;
		opacity:0;
		padding-top:0;
		padding-bottom:0;
	}
	50% {
		opacity:1;
	}
	100% {
		max-height:50vh;
		opacity:1;
	}
}
@keyframes ck-notification-out {
	0% {
		max-height:50vh;
		opacity:1;
	}
	50% {
		opacity:1;
	}
	100% {
		max-height:0;
		opacity:0;
		padding-top:0;
		padding-bottom:0;
	}
}

/**
 * @name 				classes-animation
 * @namespace 			notification-webcomponent
 * @type 			Mixin
 *
 * Print out the animation classes for notifications styling
 *
 * @example 	scss
 * @use '@coffeekraken/notification-webcomponent/index' as notification-webcomponent;
 * \@include notification-webcomponent.classes-animation();
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes-animation() {
	.ck-notification {
		animation : ck-notification-in .2s ease-in-out forwards;
	}
	.ck-notification--out {
		animation : ck-notification-out .2s ease-in-out forwards;
	}
}

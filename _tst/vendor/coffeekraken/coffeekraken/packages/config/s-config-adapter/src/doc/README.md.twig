{% extends 'sugar/readme/layouts/main/main.twig' %}
{% block body %}

<!--
/**
 * @name            README
 * @namespace       doc
 * @type            Markdown
 * @platform        md
 * @status          stable
 * @menu            Documentation           /doc/readme
 *
 * @since           2.0.0
 * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)
 */
-->

## SConfigAdapter

This package expose a simple `SConfigAdapter` class that has to be used as base when creating an [SConfig](/package/@coffeekraken/s-config/doc/readme) adapter.

## Features

-   Provide an `update` method to call when some configs has been changed.
    -   For example, the [SConfigFolderAdapter](/package/@coffeekraken/s-config-folder-adapter) call this method when a configuration file has been updated
-   And more...

## Usage

Here's a simple example how to use the SConfigAdapter class:

```js
import __SConfigAdapter from '@coffeekraken/s-config-adapter';
import type { ISConfigAdapterLoadParams } from '@coffeekraken/s-config-adapter';

class MyConfigAdapter extends __SConfigAdapter {
    constructor() {
        super({
            some: 'settings',
        });
        // listen for configuration change...
        myCoolLiteneingFunction(() => {
            // call the "update" method on the adapter
            this.update();
        });
    }
    async load(params: ISConfigAdapterLoadParams): Promise<any> {
        // load your configuration like you want....
        // return a simple configuration object
        return {
            my: 'config',
        };
    }
}
const myConfig = new __SConfig('my-config', new MyConfigAdapter());
myConfig.get('my'); // config
```

## API

For more information about the API, please check out [the API documentation](/api/@coffeekraken.s-config-adapter.shared.SConfigAdapter)

{% endblock %}

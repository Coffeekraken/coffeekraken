{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/aa",
            "@coffeekraken/cli",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-appear-feature",
            "@coffeekraken/s-asset-picker-component",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-carpenter",
            "@coffeekraken/s-class",
            "@coffeekraken/s-classmap",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-code-formatter-prettier",
            "@coffeekraken/s-code-formatter",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-datetime-picker-component",
            "@coffeekraken/s-deps-feature",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-dropzone-component",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-front",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-glitch-feature",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-google-map-component",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-highlight-feature",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-inline-feature",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-kitchen",
            "@coffeekraken/s-lazy-feature",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-pack-essentials",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-export-plugin",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-rating-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-specs-editor-component",
            "@coffeekraken/s-specs",
            "@coffeekraken/s-state",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme-switcher-component",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-validator",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-request.doc.README": {
                "id": "@coffeekraken.s-request.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-request.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md.twig",
                "extension": "md",
                "relPath": "src/doc/README.md.twig",
                "children": {}
            },
            "@coffeekraken.s-request.shared.SRequest": {
                "id": "@coffeekraken.s-request.shared.SRequest",
                "name": "SRequest",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "description": "Class that allows to simply handle ajax requests with ease.\nThis class give some useful features like :\n- Promise support\n- Recursive requests",
                "namespace": "@coffeekraken.s-request.shared",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SRequest from '@coffeekraken/s-request';\nconst request = new SRequest({\n\t\turl : 'api/...',\n\t\tmethod : 'GET',\n\t\tdata : {\n\t\t\tmyVar : 'myVal'\n\t\t}\n});\n\n// send and listen for data\nrequest.send().then((response) => {\n\t\t// do something with response here...\n}).catch((error) => {\n\t\t// something went wrong...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SRequest.ts",
                "extension": "ts",
                "relPath": "src/shared/SRequest.ts",
                "children": {
                    "constructor": {
                        "id": "s1f0e7617423d60fb61f00e50607b33ede0ef9e8f011a554128aa3e9098a3c69a",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "retry": {
                        "id": "sca4748dd750676a84bfe06c0989c334a5071c9764dbdab8b6cfa1e8d0d1475e7",
                        "name": "retry",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Reset the request settings variables and relaunch the request",
                        "example": [
                            {
                                "language": "js",
                                "code": "myAjax.retry().then(response => {\n   // do something...\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "send": {
                        "id": "s08fe3388a893a5c928e05f2c623174c0f57a380ebabf4cb6e2a8926924b03255",
                        "name": "send",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Send the request and return a promise that will be resolved once all the requests\nhave been made or rejected if one of the requests has returned an error...",
                        "example": [
                            {
                                "language": "js",
                                "code": "myAjax.send().then(response => {\n   // do something...\n}).catch(error => {\n   // do something...\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.s-request.shared.interface.SRequestParamsInterface": {
                "id": "@coffeekraken.s-request.shared.interface.SRequestParamsInterface",
                "name": "SRequestParamsInterface",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe SRequest parameters",
                "namespace": "@coffeekraken.s-request.shared.interface",
                "status": "beta",
                "interface": {
                    "name": "SRequestParamsInterface",
                    "description": "",
                    "definition": {
                        "url": {
                            "description": "The url of the request",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "required": true
                        },
                        "baseUrl": {
                            "description": "Specify the base url to call like \"https://api.github.com/2.0\" for example. If the \"url\" setting is absolute, this setting will don't have any impact on your request...",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            }
                        },
                        "method": {
                            "description": "The request method to use like GET, DELETE, HEAD, POST, OPTIONS, PUT or PATCH",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "values": [
                                "GET",
                                "DELETE",
                                "HEAD",
                                "OPTIONS",
                                "POST",
                                "PUT",
                                "PATCH"
                            ],
                            "default": "GET"
                        },
                        "headers": {
                            "description": "Specify some headers to add to the request",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            },
                            "default": {}
                        },
                        "params": {
                            "description": "Specify some params to be sent through the URL. Must be a plain object or a URLSearchParams object",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            },
                            "default": {}
                        },
                        "data": {
                            "description": "Specify some data you want to send with the request. This setting is available only for `PUT`, `POST`, and `PATCH` requests...",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            },
                            "default": {}
                        },
                        "timeout": {
                            "description": "Specify time to wait before aborting the actual request. If setted in number format, this will mean milliseconds.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            },
                            "default": 0
                        },
                        "transformRequest": {
                            "description": "Allows changes to the request data before it is sent to the server. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "transformResponse": {
                            "description": "Allows changes to the response data to be made before it is passed to then/catch. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "paramsSerializer": {
                            "description": "An optional function in charge of serializing. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "withCredentials": {
                            "description": "Indicates whether or not cross-site Access-Control requests should be made using credentials. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": false
                        },
                        "auth": {
                            "description": "indicates that HTTP Basic auth should be used, and supplies credentials. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "responseType": {
                            "description": "Indicates encoding to use for decoding responses (Node.js only)",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "values": [
                                "arraybuffer",
                                "blob",
                                "document",
                                "json",
                                "text",
                                "stream",
                                "blob"
                            ],
                            "default": "json"
                        },
                        "responseEncoding": {
                            "description": "indicates encoding to use for decoding responses (Node.js only). See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "default": "utf8"
                        },
                        "xsrfCookieName": {
                            "description": "The name of the cookie to use as a value for xsrf token",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "default": "XSRF-TOKEN"
                        },
                        "xsrfHeaderName": {
                            "description": "The name of the http header that carries the xsrf token value",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "default": "X-XSRF-TOKEN"
                        },
                        "onUploadProgress": {
                            "description": "Allows handling of progress events for uploads browser only",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "onDownloadProgress": {
                            "description": "Allows handling of progress events for downloads browser only",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "maxContentLength": {
                            "description": "Defines the max size of the http response content in bytes allowed in node.js",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            }
                        },
                        "maxBodyLength": {
                            "description": "(Node only option) defines the max size of the http request content in bytes allowed",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            }
                        },
                        "validateStatus": {
                            "description": "Defines whether to resolve or reject the promise for a give HTTP response status code. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Function"
                                    }
                                ],
                                "raw": "Function"
                            }
                        },
                        "maxRedirects": {
                            "description": "Defines the maximum number of redirects to follow in node.js",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            },
                            "default": 5
                        },
                        "socketPath": {
                            "description": "Defines a UNIX Socket to be used in node.js. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            }
                        },
                        "httpAgent": {
                            "description": "Define a custom agent to be used when performing http. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "httpsAgent": {
                            "description": "Define a custom agent to be used when performing https. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "proxy": {
                            "description": "Defines the hostname, port, and protocol of the proxy server. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "cancelToken": {
                            "description": "Specifies a cancel token that can be used to cancel the request. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "signal": {
                            "description": "an alternative way to cancel Axios requests using AbortController",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        },
                        "decompress": {
                            "description": "indicates whether or not the response body should be decompressed automatically. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "insecureHTTPParser": {
                            "description": "Indicates where to use an insecure HTTP parser that accepts invalid HTTP headers. See [axios](https://github.com/axios/axios#response-schema) documentation for more.",
                            "type": {
                                "types": [
                                    {
                                        "type": "Object"
                                    }
                                ],
                                "raw": "Object"
                            }
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SRequestParamsInterface.ts",
                "extension": "ts",
                "relPath": "src/shared/interface/SRequestParamsInterface.ts",
                "children": {}
            }
        }
    }
}
{% extends 'sugar/readme/layouts/doc/doc.twig' %}
{% block body %}

<!--
/**
 * @name            Modules
 * @namespace       doc.servers
 * @type            Markdown
 * @platform        md
 * @status          stable
 * @menu            Documentation / Servers           /doc/servers/modules
 *
 * @since           2.0.0
 * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)
 */
-->

# SFrontendServer modules

The SFrontendServer is based on the AMAZING [ExpressJs](https://expressjs.com/) server. This mean that you can extend it as you want by following these steps described bellow:

## Built-in modules

Our server comes with some built-in modules. Here's the list:

{% for key, module in config.frontendServer.modules %}

- `{{key}}`: {{module.description}}
  {% endfor %}

## Create your module

First of all, create a file (where you want) `src/node/myModule.ts` that will be the entry point of your module.

Here's the scaffold content that you can copy and past in your file:

```js
export default function myModule({express, settings, config, startParams}) {
  // here you can update the config depending on the needs of your
  // module, as well as access the express app instance to register routes, etc...
}
```

You module default exported function will be called with an object containing these data:

- `express`: The express instance used for the server on which you can register new routes, etc...
- `settings`: The settings object specified in the `frontendServer.config.ts` file alongside your module path.
- `config`: The full `frontendServer.config.ts` configuration object.
- `startParams`: The parameters passed to the `SFrontendServer.start` method.

## Register your module

To to register your module, simply add it to the `config.frontendServer.modules` by creating a file under `.sugar/frontendServer.config.ts` like this:

```js
export default function () {
  return {
    modules: {
      myModule: {
        path: '/absolute/path/to/your/module',
        settings: {},
      },
    },
  };
}
```

> For more information about configuring your server, check out the next doc that talk about `handlers`, `middleware` and `routes`.

{% endblock %}

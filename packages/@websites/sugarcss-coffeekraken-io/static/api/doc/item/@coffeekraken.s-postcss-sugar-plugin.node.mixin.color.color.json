{
    "id": "@coffeekraken.s-postcss-sugar-plugin.node.mixin.color.color",
    "name": "color",
    "as": "@s.color",
    "type": {
        "types": [
            {
                "type": "PostcssMixin"
            }
        ],
        "raw": "PostcssMixin"
    },
    "param": {
        "current": {
            "name": "current",
            "type": {
                "types": [
                    {
                        "type": "String"
                    }
                ],
                "raw": "String"
            },
            "description": "The new color you want for the \"current\" one",
            "defaultStr": ""
        },
        "accent": {
            "name": "accent",
            "type": {
                "types": [
                    {
                        "type": "String"
                    }
                ],
                "raw": "String"
            },
            "description": "The new color you want for the \"accent\" one",
            "default": null,
            "defaultStr": "null"
        },
        "complementary": {
            "name": "complementary",
            "type": {
                "types": [
                    {
                        "type": "String"
                    }
                ],
                "raw": "String"
            },
            "description": "The new color you want for the \"complementary\" one",
            "default": null,
            "defaultStr": "null"
        }
    },
    "return": {
        "type": {
            "types": [
                {
                    "type": "Css"
                }
            ],
            "raw": "Css"
        },
        "description": "The generated remap css"
    },
    "platform": [
        {
            "name": "postcss",
            "description": ""
        }
    ],
    "description": "This mixin allows you to (re)map the \"current\", \"accent\" and \"complementary\" color to any other colors you want like \"accent\", \"success, \"etc...\"\"\nNote that is you don't specify any \"accent\" and \"complementary\" color, these once will be set to the passed \"current\" color.",
    "namespace": "@coffeekraken.s-postcss-sugar-plugin.node.mixin.color",
    "status": "stable",
    "snippet": {
        "label": "@s.color($1)"
    },
    "example": [
        {
            "language": "css",
            "code": ".my-section {\n     @s.color(accent, complementary, success);\n}"
        }
    ],
    "since": "2.0.0",
    "author": {
        "name": "Olivier Bossel",
        "email": "olivier.bossel@gmail.com",
        "url": "https://coffeekraken.io"
    },
    "filename": "color.ts",
    "extension": "ts",
    "relPath": "src/node/mixins/color/color.ts",
    "children": {},
    "isDependency": true,
    "package": {
        "name": "@coffeekraken/s-postcss-sugar-plugin",
        "description": "Postcss Coffeekraken plugin that gives you access to a ton of sugar like \"@sugar.when.dark\", \"@sugar.classes\", etc... mixins as well as functions like \"sugar.padding\", \"sugar.color\", etc... All of these makes uses of your theme configuration defined using the @coffeekraken/s-sugar-config system.",
        "version": "2.0.0-beta.1",
        "author": "Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)",
        "license": "MIT",
        "type": "npm"
    },
    "path": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/node_modules/@coffeekraken/s-postcss-sugar-plugin/src/node/mixins/color/color.ts",
    "docblocks": [
        {
            "name": "color",
            "as": "@s.color",
            "namespace": "@coffeekraken.s-postcss-sugar-plugin.node.mixin.color",
            "type": {
                "types": [
                    {
                        "type": "PostcssMixin"
                    }
                ],
                "raw": "PostcssMixin"
            },
            "platform": [
                {
                    "name": "postcss",
                    "description": ""
                }
            ],
            "status": "stable",
            "description": "This mixin allows you to (re)map the \"current\", \"accent\" and \"complementary\" color to any other colors you want like \"accent\", \"success, \"etc...\"\"\nNote that is you don't specify any \"accent\" and \"complementary\" color, these once will be set to the passed \"current\" color.",
            "param": {
                "current": {
                    "name": "current",
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new color you want for the \"current\" one",
                    "defaultStr": ""
                },
                "accent": {
                    "name": "accent",
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new color you want for the \"accent\" one",
                    "default": null,
                    "defaultStr": "null"
                },
                "complementary": {
                    "name": "complementary",
                    "type": {
                        "types": [
                            {
                                "type": "String"
                            }
                        ],
                        "raw": "String"
                    },
                    "description": "The new color you want for the \"complementary\" one",
                    "default": null,
                    "defaultStr": "null"
                }
            },
            "return": {
                "type": {
                    "types": [
                        {
                            "type": "Css"
                        }
                    ],
                    "raw": "Css"
                },
                "description": "The generated remap css"
            },
            "snippet": {
                "label": "@s.color($1)"
            },
            "example": [
                {
                    "language": "css",
                    "code": ".my-section {\n     @s.color(accent, complementary, success);\n}"
                }
            ],
            "since": "2.0.0",
            "author": {
                "name": "Olivier Bossel",
                "email": "olivier.bossel@gmail.com",
                "url": "https://coffeekraken.io"
            },
            "raw": "/**\n*\n* @name           color\n* @as              @s.color\n* @namespace      node.mixin.color\n* @type           PostcssMixin\n* @platform      postcss\n* @status        stable\n*\n* This mixin allows you to (re)map the \"current\", \"accent\" and \"complementary\" color to any other colors you want like \"accent\", \"success, \"etc...\"\"\n* Note that is you don't specify any \"accent\" and \"complementary\" color, these once will be set to the passed \"current\" color.\n*\n* @param       {String}        current             The new color you want for the \"current\" one\n* @param       {String}        [accent=null]             The new color you want for the \"accent\" one\n* @param       {String}        [complementary=null]             The new color you want for the \"complementary\" one\n* @return      {Css}                     The generated remap css\n*\n* @snippet         @s.color($1)\n*\n* @example        css\n* .my-section {\n*      @s.color(accent, complementary, success);\n* }\n*\n* @since       2.0.0\n* @author         Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\n\n*/",
            "id": "@coffeekraken.s-postcss-sugar-plugin.node.mixin.color.color"
        }
    ]
}
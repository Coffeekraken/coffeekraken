@keyframes s-carpenter-app-controls-in {
    from {
        opacity: 0;
        transform: translate(-200%, 0);
    }
    to {
        opacity: 1;
        transform: translate(0, 0);
    }
}

.s-carpenter-app_controls {
    position: absolute;
    z-index: 99999;
    left: var(--s-carpenter-media-bottom);
    top: var(--s-carpenter-media-bottom);
    width: 80px;
    transform: translate(0, 0);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: sugar.margin(30);
    background: sugar.color(main, background);
    padding: sugar.padding(20);
    opacity: 1;
    pointer-events: all;
    /* animation: s-carpenter-app-controls-in 0.3s ease-out forwards; */
    @sugar.transition();
    @sugar.border.radius (30);
    @sugar.depth (100);

    .s-carpenter--preview & {
        transform: translate(-200%, 0);
        opacity: 0;
        pointer-events: none;
    }

    ._logo {
        width: 100%;
    }

    ._modes {
        display: flex;
        align-items: center;
        gap: sugar.margin(10);
        user-select: none;
    }
    ._switch {
        @sugar.ui.switch;
        @sugar.color (accent);
    }
}

.s-carpenter-app_menu {
    @sugar.ui.button ($lnf: text);
}

.s-carpenter-app_queries {
    background: sugar.color(main, background) !important;
    border-bottom-left-radius: sugar.border.radius();
    display: flex;
    flex-direction: column;
    width: 100%;

    ._query {
        aspect-ratio: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        @sugar.border.radius;
        @sugar.transition fast;

        &:hover,
        &.is-active {
            i {
                color: sugar.color(complementary, foreground);
            }
        }
        &:hover {
            background: sugar.color(complementary, hover);
        }
        &:active {
            background: sugar.color(complementary, active);
        }
        &.is-active {
            background: sugar.color(complementary);
        }
    }
}

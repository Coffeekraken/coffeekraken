import __SLitComponent from"@coffeekraken/s-lit-component";import __deepMerge from"@coffeekraken/sugar/shared/object/deepMerge";import __Pickr from"@simonwep/pickr";import __baseCss from"@simonwep/pickr/dist/themes/nano.min.css?used";import{css,unsafeCSS,html}from"lit";import __SInterface from"@coffeekraken/s-interface";import __wait from"@coffeekraken/sugar/shared/time/wait";var __css="s-color-picker:not([mounted]) > * {\n        display: none;\n    }\n    s-color-picker:not([no-input]) .s-color-picker {\n        display: flex;\n        position: relative;\n        align-items: center;\n    }\n    s-color-picker[no-input] .s-color-picker {\n        position: relative;\n        display: inline-block;\n    }\n    s-color-picker .s-color-picker--top .s-color-picker__picker {\n        position: absolute !important;\n        top: auto !important;\n        right: 0 !important;\n        left: auto !important;\n        bottom: 100% !important;\n        pointer-events: all !important;\n    }\n    s-color-picker .s-color-picker--bottom .s-color-picker__picker {\n        position: absolute !important;\n        top: 100% !important;\n        right: 0 !important;\n        left: auto !important;\n        pointer-events: all !important;\n    }\n    s-color-picker[no-preview] .s-color-picker__picker-wrapper,\n    s-color-picker[no-preview] .s-color-picker__preview {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n    }\n    s-color-picker[no-preview] .s-color-picker__picker-wrapper button, s-color-picker[no-preview] .s-color-picker__preview button {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            background: none !important;\n            pointer-events: none;\n        }\n    s-color-picker[no-preview] .s-color-picker__picker-wrapper button:before,\n            s-color-picker[no-preview] .s-color-picker__picker-wrapper button:after,\n            s-color-picker[no-preview] .s-color-picker__preview button:before,\n            s-color-picker[no-preview] .s-color-picker__preview button:after {\n                content: initial;\n            }\n    s-color-picker :not([bare]) input:not([type='hidden']) ~ .s-color-picker__preview {\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translate(-50%, -50%);\n    }\n\n.s-color-picker__input {\n    /* border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 0 !important; */\n\n    /* :not([bare]) & ~ .s-color-picker__preview {\n        display: block;\n        aspect-ratio: 1;\n        height: 100%;\n\n        button {\n            width: 100% !important;\n            height: 100% !important;\n\n            &,\n            &:before,\n            &:after {\n                border-top-left-radius: 0 !important;\n                border-bottom-left-radius: 0 !important;\n            }\n        }\n    } */\n}\n\n.s-color-picker__picker {\n    position: absolute !important;\n    top: 100% !important;\n    right: 0 !important;\n    left: auto !important;\n    z-index: 10;\n}\n\n:not([bare]) .s-color-picker__picker {\n        background: hsla(calc(var(--s-theme-color-current-h, 0) + var(--s-theme-color-current-surface-spin ,0)),calc((var(--s-theme-color-current-s, 0) + var(--s-theme-color-current-surface-saturation-offset, 0)) * 1%),calc((var(--s-theme-color-current-l, 0) + var(--s-theme-color-current-surface-lightness-offset, 0)) * 1%),var(--s-theme-color-current-surface-a, 1));\n        overflow: hidden;box-shadow: var(--s-theme-ui-colorPicker-depth, 0);\n        border-radius: var(--s-theme-ui-colorPicker-borderRadius, 10px);\n        padding-inline: var(--s-theme-ui-colorPicker-paddingInline, 0.75em);\n        padding-block: var(--s-theme-ui-colorPicker-paddingBlock, 0.375em);\n    }\n\n.pickr.s-color-picker__preview {\n    display: inline-block;\n    outline: none;\n    width: 1em;\n    height: 1em;\n}\n\n:not([bare]) .pickr.s-color-picker__preview {\n        transition: var(--s-theme-transition-fast, all .1s cubic-bezier(0.700, 0.000, 0.305, 0.995));\n    }\n\n/* button:focus {\n        display: none;\n    } */\n\n.pickr.s-color-picker__preview button {\n        position: absolute;\n        width: 1em;\n        height: 1em;\n        top: 0;\n        left: 0;\n        border-radius: var(--s-theme-border-radius-default) ;\n    }\n\n.pickr.s-color-picker__preview button:before,\n        .pickr.s-color-picker__preview button:after {\n            border-radius: var(--s-theme-border-radius-default) ;\n        }\n";class SColorPickerComponentInterface extends __SInterface{static get _definition(){return{name:{description:"Specify the name that will be assigned to the injected input if you don't provide one yourself",type:"String",default:"date"},value:{description:"Specify the initial value for your picker",type:"String"},placeholder:{description:"Specify the placeholder that will be assigned to the injected input if you don't provide one yourself",type:"String",default:"Select a color"},theme:{description:"Specify the theme you want to use for this picker",type:"String",values:["nano","monolith"],default:"nano"},noInput:{description:"Specify if you dont want an automatically injected text input when you dont provide yours",type:"Boolean",default:!1},noPreview:{description:"Specify if you want to display the preview or not",type:"Boolean",default:!1,physical:!0},position:{description:'Specify the position of the picker. Can be "top" or "bottom"',type:"String",values:["top","bottom"],default:"bottom"},swatches:{description:"Specify some colors you want in your swatches",type:"Array<String>",default:[]}}}}var __awaiter=globalThis&&globalThis.__awaiter||function(e,s,c,a){return new(c=c||Promise)(function(o,t){function n(e){try{i(a.next(e))}catch(e){t(e)}}function r(e){try{i(a.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?o(e.value):((t=e.value)instanceof c?t:new c(function(e){e(t)})).then(n,r)}i((a=a.apply(e,s||[])).next())})};class SColorPicker extends __SLitComponent{static get properties(){return __SLitComponent.properties({},SColorPickerComponentInterface)}static get styles(){return css`
            ${unsafeCSS(`
            ${__baseCss}
            ${__css}
        `)}
        `}constructor(){super(__deepMerge({litComponent:{shadowDom:!1},componentUtils:{interface:SColorPickerComponentInterface}}))}firstUpdated(){var c;return __awaiter(this,void 0,void 0,function*(){yield __wait(100);let o=this.querySelector("input");var e=null!==(c=null!==(c=this.props.value)&&void 0!==c?c:null===o||void 0===o?void 0:o.value)&&void 0!==c?c:"#ff0000";o?o.classList.add(this.componentUtils.className("__input")):(o=document.createElement("input"),o.setAttribute("type",this.props.noInput?"hidden":"text"),this.props.noInput||o.setAttribute("class",this.componentUtils.className("__input","s-input"))),o.hasAttribute("name")||o.setAttribute("name",this.props.name),o.hasAttribute("placeholder")||o.setAttribute("placeholder",this.props.placeholder),o.hasAttribute("autocomplete")||o.setAttribute("autocomplete","off");const t=this.querySelector("."+this.componentUtils.className(""));o&&(t.prepend(o),o.classList.add(this.componentUtils.className("__input")));const s=__Pickr.create({el:null!==(c=this.querySelector(".s-color-picker__preview"))&&void 0!==c?c:this,theme:"nano",container:this.querySelector(".s-color-picker__picker-wrapper"),default:e,inline:!0,comparison:!1,swatches:[],components:{preview:!0,opacity:!0,hue:!0,interaction:{hex:!0,rgba:!0,hsla:!0,input:!0,clear:!0}}});function n(){const e=s.getColor(),t=e.toHSLA(),o=e.toHSVA(),n=e.toRGBA(),r=e.toHEXA(),i=e.toCMYK();return{isOpened:s.isOpen(),hsla:{h:t[0],s:t[1],l:t[2],a:t[3],string:`hsla(${t[0]},${t[1]},${t[2]},${t[3]})`},hsva:{h:o[0],s:o[1],v:o[2],a:o[3],string:`hsva(${o[0]},${o[1]},${o[2]},${o[3]})`},rgba:{r:n[0],g:n[1],b:n[2],a:n[3],string:`rgba(${n[0]},${n[1]},${n[2]},${n[3]})`},hex:r.toString(),cmyk:{c:i[0],m:i[1],y:i[2],k:i[3],string:`cmyk(${i[0]},${i[1]},${i[2]},${i[3]})`}}}s.on("change",()=>{s.applyColor();var e=n(),t=new CustomEvent("change",{detail:e});o&&(o.value=e.hex),this.dispatchEvent(t)}),s.on("show",()=>{var e=n(),e=new CustomEvent("show",{detail:e});this.dispatchEvent(e)}),s.on("hide",()=>{var e=n(),e=new CustomEvent("hide",{detail:e});this.dispatchEvent(e)}),s.on("cancel",()=>{var e=n(),e=new CustomEvent("cancel",{detail:e});this.dispatchEvent(e)}),o&&(o.addEventListener("focus",()=>{s.show()}),o.addEventListener("change",()=>{s.setColor(o.value)}));const r=this.querySelector(".pcr-app");null!==r&&void 0!==r&&r.classList.add(this.componentUtils.className("__picker"));const i=this.querySelector(".pickr");null!==i&&void 0!==i&&i.classList.add(this.componentUtils.className("__preview"))})}render(){return html`
            <div
                class="${this.componentUtils.className("")} ${this.componentUtils.className("")}--${this.props.position}"
            >
                <div
                    class="${this.componentUtils.className("__picker-wrapper")}"
                ></div>
                <div
                    class="${this.componentUtils.className("__preview")}"
                ></div>
            </div>
        `}}function define(e={},t="s-color-picker"){__SLitComponent.setDefaultProps(t,e),customElements.define(t,SColorPicker)}export{SColorPicker as default,define};
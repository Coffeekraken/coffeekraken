{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-appear-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-code-formatter-prettier",
            "@coffeekraken/s-code-formatter",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-datetime-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-inline-feature",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-kitchen",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-state",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-validator",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-color-picker-component.doc.README": {
                "id": "@coffeekraken.s-color-picker-component.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-color-picker-component.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md",
                "extension": "md",
                "relPath": "src/doc/README.md",
                "children": {}
            },
            "@coffeekraken.s-color-picker-component.js.SColorPickerComponent": {
                "id": "@coffeekraken.s-color-picker-component.js.SColorPickerComponent",
                "name": "SColorPickerComponent",
                "as": "Color Picker",
                "type": {
                    "types": [
                        {
                            "type": "CustomElement"
                        }
                    ],
                    "raw": "CustomElement"
                },
                "menu": {
                    "tree": [
                        "Styleguide",
                        "Forms"
                    ],
                    "slug": "/styleguide/form/s-color-picker"
                },
                "platform": [
                    {
                        "name": "html",
                        "description": ""
                    }
                ],
                "description": "This component specify a color picker. It uses under the hood the **AMAZING Pickr library** with some additional features like\nsugar theming support as well as some events and more.\nAlmost all the Pickr options are available through properties. Check out the api documentation for more details...",
                "namespace": "@coffeekraken.s-color-picker-component.js",
                "status": "beta",
                "example": [
                    {
                        "language": "html",
                        "title": "Simple input",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker value=\"#FABB03\" placeholder=\"Choose a color\" input></s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "With an input and a button",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker value=\"#5101FF\" placeholder=\"Choose a color\" input button></s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "With a different format (hsla)",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker value=\"#5101FF\" format=\"hsla\" placeholder=\"Choose a color\" input button></s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Just a button",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker value=\"#55FFFF\" button></s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "With a custom input",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker>\n         <input type=\"text\" class=\"s-input\" placeholder=\"Choose a color\" value=\"#FABB03\" />\n     </s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "With a custom button",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker>\n         <button class=\"s-btn s-color:error\">Choose a color</button>\n     </s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "With a custom input and button",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker>\n         <div class=\"s-group\">\n             <input type=\"text\" class=\"s-input\" placeholder=\"Choose a color\" value=\"#FABB03\" />\n             <button class=\"s-btn s-color:error\">Choose a color</button>\n         </div>\n     </s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Disabled",
                        "code": "<label class=\"s-label:responsive\">\n     <span>Choose a color</span>\n     <s-color-picker disabled input button></s-color-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "RTL Support",
                        "code": "<label class=\"s-label:responsive\" dir=\"rtl\">\n     <span>Choose a color</span>\n     <s-color-picker value=\"#FABB03\" placeholder=\"Choose a color\" input button dir=\"rtl\"></s-color-picker>\n</label>"
                    }
                ],
                "interface": {
                    "name": "SColorPickerComponentInterface",
                    "description": "",
                    "definition": {
                        "name": {
                            "description": "Specify the name that will be assigned to the injected input if you don't provide one yourself",
                            "type": "String",
                            "default": "color"
                        },
                        "value": {
                            "description": "Specify the initial value for your picker",
                            "type": "String"
                        },
                        "updateInput": {
                            "description": "Specify when you want to updat the attached input. Can be \"pointermove\", \"pointerup\", \"pointerdown\", \"input\", \"validate\", \"close\"",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ","
                                ]
                            },
                            "values": [
                                "pointerdown",
                                "pointerup",
                                "pointermove",
                                "validate",
                                "reset",
                                "clear",
                                "close"
                            ],
                            "default": [
                                "pointerdown",
                                "pointerup",
                                "pointermove",
                                "validate",
                                "reset",
                                "clear",
                                "close"
                            ]
                        },
                        "format": {
                            "description": "Specify the format of the color you want as end in the input value. Can be \"hex\", \"hexa\", \"rgb\", \"rgba\", \"hsl\" or \"hsla\"",
                            "type": "String",
                            "values": [
                                "hex",
                                "hexa",
                                "rgb",
                                "rgba",
                                "hsl",
                                "hsla"
                            ],
                            "default": "hex"
                        },
                        "inline": {
                            "description": "Specify if you want to initalize the color picker inline or if you want it to be displayed only when the focus is in the input",
                            "type": "Boolean",
                            "default": false,
                            "physical": true
                        },
                        "i18n": {
                            "description": "Specify some translations for the color picker. You can translate the \"reset\", \"clear\" and \"validate\" buttons",
                            "type": "Object",
                            "default": {
                                "reset": "Reset",
                                "clear": "Clear",
                                "validate": "Validate"
                            }
                        },
                        "placeholder": {
                            "description": "Specify the placeholder that will be assigned to the injected input if you don't provide one yourself",
                            "type": "String",
                            "default": "Select a color"
                        },
                        "input": {
                            "description": "Specify if you dont want an automatically injected text input when you dont provide yours",
                            "type": "Boolean",
                            "default": false
                        },
                        "button": {
                            "description": "Specify if you want to display the button or not",
                            "type": "Boolean",
                            "default": false,
                            "physical": true
                        },
                        "backdrop": {
                            "description": "Specify if you want the \".s-backdrop\" element or not",
                            "type": "Boolean",
                            "default": false
                        },
                        "actions": {
                            "description": "Specify the actions buttons you want to display. Can be \"clear\", \"reset\" and \"validate\". If false, hide all button",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ",",
                                    " "
                                ]
                            },
                            "values": [
                                "clear",
                                "reset",
                                "validate"
                            ],
                            "default": [
                                "reset",
                                "validate"
                            ]
                        },
                        "floatSettings": {
                            "description": "Specify some float settings to pass to the \"makeFloat\" function of the sugar toolkit",
                            "type": "Object",
                            "default": {
                                "position": "auto",
                                "shift": 10,
                                "offset": 0,
                                "arrow": false,
                                "arrowSize": 15,
                                "arrowPadding": 10
                            }
                        },
                        "copyIconClass": {
                            "description": "Specify the class you want to apply on the \"i\" that display the \"copy\" icon",
                            "type": "String",
                            "default": "s-icon s-icon--copy"
                        },
                        "copiedIconClass": {
                            "description": "Specify the class you want to apply on the \"i\" that display the \"copy\" icon when the color has been copied",
                            "type": "String",
                            "default": "s-icon s-icon--copied"
                        },
                        "buttonIconClass": {
                            "description": "Specify the class you want to apply on the injected button icon",
                            "type": "String",
                            "default": "s-icon s-icon--color"
                        },
                        "backdropClass": {
                            "description": "Specify the class to apply on the backdrop when the \"backdrop\" prop is true",
                            "type": "String",
                            "default": "s-backdrop"
                        },
                        "disabled": {
                            "description": "Specify if the color picker is disabled",
                            "type": "Boolean",
                            "default": false
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SColorPickerComponent.ts",
                "extension": "ts",
                "relPath": "src/js/SColorPickerComponent.ts",
                "children": {}
            },
            "@coffeekraken.s-color-picker-component.js.interface.SColorPickerComponentInterface": {
                "id": "@coffeekraken.s-color-picker-component.js.interface.SColorPickerComponentInterface",
                "name": "SColorPickerComponentInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ],
                    "raw": ".                      Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe parameters of the SColorPickerComponent",
                "namespace": "@coffeekraken.s-color-picker-component.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SColorPickerComponentInterface",
                    "description": "",
                    "definition": {
                        "name": {
                            "description": "Specify the name that will be assigned to the injected input if you don't provide one yourself",
                            "type": "String",
                            "default": "color"
                        },
                        "value": {
                            "description": "Specify the initial value for your picker",
                            "type": "String"
                        },
                        "updateInput": {
                            "description": "Specify when you want to updat the attached input. Can be \"pointermove\", \"pointerup\", \"pointerdown\", \"input\", \"validate\", \"close\"",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ","
                                ]
                            },
                            "values": [
                                "pointerdown",
                                "pointerup",
                                "pointermove",
                                "validate",
                                "reset",
                                "clear",
                                "close"
                            ],
                            "default": [
                                "pointerdown",
                                "pointerup",
                                "pointermove",
                                "validate",
                                "reset",
                                "clear",
                                "close"
                            ]
                        },
                        "format": {
                            "description": "Specify the format of the color you want as end in the input value. Can be \"hex\", \"hexa\", \"rgb\", \"rgba\", \"hsl\" or \"hsla\"",
                            "type": "String",
                            "values": [
                                "hex",
                                "hexa",
                                "rgb",
                                "rgba",
                                "hsl",
                                "hsla"
                            ],
                            "default": "hex"
                        },
                        "inline": {
                            "description": "Specify if you want to initalize the color picker inline or if you want it to be displayed only when the focus is in the input",
                            "type": "Boolean",
                            "default": false,
                            "physical": true
                        },
                        "i18n": {
                            "description": "Specify some translations for the color picker. You can translate the \"reset\", \"clear\" and \"validate\" buttons",
                            "type": "Object",
                            "default": {
                                "reset": "Reset",
                                "clear": "Clear",
                                "validate": "Validate"
                            }
                        },
                        "placeholder": {
                            "description": "Specify the placeholder that will be assigned to the injected input if you don't provide one yourself",
                            "type": "String",
                            "default": "Select a color"
                        },
                        "input": {
                            "description": "Specify if you dont want an automatically injected text input when you dont provide yours",
                            "type": "Boolean",
                            "default": false
                        },
                        "button": {
                            "description": "Specify if you want to display the button or not",
                            "type": "Boolean",
                            "default": false,
                            "physical": true
                        },
                        "backdrop": {
                            "description": "Specify if you want the \".s-backdrop\" element or not",
                            "type": "Boolean",
                            "default": false
                        },
                        "actions": {
                            "description": "Specify the actions buttons you want to display. Can be \"clear\", \"reset\" and \"validate\". If false, hide all button",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ",",
                                    " "
                                ]
                            },
                            "values": [
                                "clear",
                                "reset",
                                "validate"
                            ],
                            "default": [
                                "reset",
                                "validate"
                            ]
                        },
                        "floatSettings": {
                            "description": "Specify some float settings to pass to the \"makeFloat\" function of the sugar toolkit",
                            "type": "Object",
                            "default": {
                                "position": "auto",
                                "shift": 10,
                                "offset": 0,
                                "arrow": false,
                                "arrowSize": 15,
                                "arrowPadding": 10
                            }
                        },
                        "copyIconClass": {
                            "description": "Specify the class you want to apply on the \"i\" that display the \"copy\" icon",
                            "type": "String",
                            "default": "s-icon s-icon--copy"
                        },
                        "copiedIconClass": {
                            "description": "Specify the class you want to apply on the \"i\" that display the \"copy\" icon when the color has been copied",
                            "type": "String",
                            "default": "s-icon s-icon--copied"
                        },
                        "buttonIconClass": {
                            "description": "Specify the class you want to apply on the injected button icon",
                            "type": "String",
                            "default": "s-icon s-icon--color"
                        },
                        "backdropClass": {
                            "description": "Specify the class to apply on the backdrop when the \"backdrop\" prop is true",
                            "type": "String",
                            "default": "s-backdrop"
                        },
                        "disabled": {
                            "description": "Specify if the color picker is disabled",
                            "type": "Boolean",
                            "default": false
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SColorPickerComponentInterface.ts",
                "extension": "ts",
                "relPath": "src/js/interface/SColorPickerComponentInterface.ts",
                "children": {}
            }
        }
    }
}
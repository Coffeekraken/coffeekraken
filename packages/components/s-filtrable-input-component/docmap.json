{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/prettier-plugin-coffeekraken",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-coffeekraken-theme",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-request",
            "@coffeekraken/s-riotjs-plugin-postcss-preprocessor",
            "@coffeekraken/s-side-panel-component",
            "@coffeekraken/s-sitemap",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-plugin-postcss",
            "@coffeekraken/s-vite-plugin-riotjs",
            "@coffeekraken/s-vite-plugin-sugar",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-filtrable-input-component.js.interface.sFiltrableInputComponentInterface": {
                "name": "SFiltrableInputComponentInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe parameters of the SFiltrableInputComponent",
                "namespace": "@coffeekraken.s-filtrable-input-component.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SFiltrableInputComponentInterface",
                    "description": "",
                    "definition": {
                        "items": {
                            "description": "Specify an array of items to use in your filtrable list. Can be a JSON string, a function that take an object with the \"value\" property and must return an array of items to use",
                            "type": "String|Function"
                        },
                        "value": {
                            "description": "Specify the attribute in your items to use as a value. Can be also a function that will be called with an object containing the selected item and must return the string you want to use as value",
                            "type": "String",
                            "default": "value"
                        },
                        "label": {
                            "description": "Specify the attribute in your items to use as a label. Can be also a function that will be called with an object containing the selected item and must return the string you want to use as label",
                            "type": "String|Function",
                            "default": "value"
                        },
                        "emptyText": {
                            "description": "Specify the text to use for the default \"empty\" (no result) state",
                            "type": "String",
                            "default": "No item to display"
                        },
                        "loadingText": {
                            "description": "Specify the text to use for the default \"loading\" state",
                            "type": "String",
                            "default": "Loading please wait..."
                        },
                        "filtrable": {
                            "description": "Specify all the properties of your \"item\" to use as source for the filtrable process",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ","
                                ]
                            },
                            "default": []
                        },
                        "templates": {
                            "description": "Specify either an object with properties like \"item\", \"empty\" and \"loading\", or a function returning the good template depending on tne \"type\" argument property",
                            "type": "Object|Function"
                        },
                        "closeTimeout": {
                            "description": "Specify the duration before closing the list when having selected an item",
                            "type": "Number",
                            "default": 100
                        },
                        "interactive": {
                            "description": "Specify if your items in the list are interactive or not to let the user click and interact with them",
                            "type": "Boolean",
                            "default": false
                        },
                        "notSelectable": {
                            "description": "Specify if you want the items to be not selectable",
                            "type": "Boolean",
                            "default": false
                        },
                        "maxItems": {
                            "description": "Specify the maximum number of items to display at first in the list",
                            "type": "Number",
                            "default": 25
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SFiltrableInputComponentInterface.js",
                "extension": "js",
                "relPath": "src/js/interface/SFiltrableInputComponentInterface.js",
                "children": {}
            },
            "@coffeekraken.s-filtrable-input-component.sugar.css.ui.filtrableInput": {
                "name": "Filtrable Input",
                "type": "Styleguide",
                "menu": {
                    "tree": [
                        "Styleguide",
                        "UI"
                    ],
                    "slug": "/styleguide/ui/filtrable-input"
                },
                "platform": [
                    {
                        "name": "css",
                        "description": ""
                    }
                ],
                "description": "These classes allows you to display an input as filtrable",
                "namespace": "@coffeekraken.s-filtrable-input-component.sugar.css.ui",
                "status": "beta",
                "example": [
                    {
                        "language": "html",
                        "code": "${finalParams.styles\n.map((style) => {\nreturn `\n<!-- ${style} style -->\n<div class=\"s-mbe:50\">\n  <h3 class=\"s-tc:accent s-font:30 s-mbe:30\">${style}Â style</h3>\n  <a tabindex=\"0\" class=\"s-btn:${style} s-mie:20 s-mbe:20\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn:${style} s-mie:20 s-mbe:20 s-color:accent\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn:${style} s-mie:20 s-mbe:20 s-color:complementary\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn:${style} s-mie:20 s-mbe:20 s-color:info\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn:${style} s-mie:20 s-mbe:20 s-color:error\"><span>Click me!</span></a>\n  <span class=\"s-btn-group s-mie:20 s-mbe:20\">\n      <a tabindex=\"0\" class=\"s-btn:${style}\"><span>Click me!</span></a>\n      <a tabindex=\"0\" class=\"s-btn:${style}\"><span>+</span></a>\n  </span>\n  <a tabindex=\"0\" disabled class=\"s-btn:${style} s-mie:20 s-mbe:20\"><span>Click me!</span></a>\n</div>\n`;\n})\n.join('\\n')}\n\n<!-- scales -->\n<div class=\"s-mbe:50\">\n  <h3 class=\"s-tc:accent s-font:30 s-mbe:30\">Scales</h3>\n  <a tabindex=\"0\" class=\"s-btn s-scale:07 s-mie:20\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn s-scale:1 s-mie:20\"><span>Click me!</span></a>\n  <a tabindex=\"0\" class=\"s-btn s-scale:13 s-mie:20\"><span>Click me!</span></a>\n</div>\n\n<!-- Rhythm and text format -->\n<div class=\"s-font:30 s-mbe:50\">\n  <h3 class=\"s-tc:accent s-font:30 s-mbe:30\">Vertical rhythm and text formatting</h3>\n  <p class=\"s-typo:p s-mbe:30\">\n      Text format mean that all the \\`button\\` tags inside the \\`s-format:text\\` class scope will be *styled automatically** using the default style and color.\n  </p>\n  <div class=\"s-format:text s-rhythm:vertical\">\n      <button>\n         ${__faker.name.findName()}\n      </button>\n      <br />\n      <button>\n          ${__faker.name.findName()}\n      </button>\n  </div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "classes.js",
                "extension": "js",
                "relPath": "src/node/postcss/mixins/ui/filtrableInput/classes.js"
            },
            "@coffeekraken.s-filtrable-input-component.sugar.css.ui.filtrableInput.-cls": {
                "name": "${cls}",
                "type": "CssClass",
                "description": "This class represent a(n) \"<s-color=\"accent\">${style}</s-color>\" filtrable input",
                "namespace": "@coffeekraken.s-filtrable-input-component.sugar.css.ui.filtrableInput",
                "example": [
                    {
                        "language": "html",
                        "code": "<a class=\"${cls.replace(/\\./gm, ' ').trim()}\">I'm a cool button</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "classes.js",
                "extension": "js",
                "relPath": "src/node/postcss/mixins/ui/filtrableInput/classes.js"
            },
            "@coffeekraken.s-filtrable-input-component.sugar.css.ui.filtrableInput.sRhythm-vertical": {
                "name": "s-rhythm:vertical",
                "type": "CssClass",
                "description": "This class represent some filtrable inputs in the s-rhythm:vertical scope",
                "namespace": "@coffeekraken.s-filtrable-input-component.sugar.css.ui.filtrableInput",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"s-rhythm:vertical\">\n  <button class=\"s-btn\">\n      Hello world\n  </button>\n  <br />\n  <button class=\"s-btn\">\n      Hello world\n  </button>\n  <br />\n  <button class=\"s-btn\">\n      Hello world\n  </button>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "classes.js",
                "extension": "js",
                "relPath": "src/node/postcss/mixins/ui/filtrableInput/classes.js",
                "children": {}
            },
            "@coffeekraken.s-filtrable-input-component.ui.filtrableInput.filtrableInput": {
                "name": "filtrableInput",
                "type": "CssMixin",
                "platform": [
                    {
                        "name": "css",
                        "description": ""
                    }
                ],
                "description": "Apply the filtrable input style to any s-filtrable-input element",
                "namespace": "@coffeekraken.s-filtrable-input-component.ui.filtrableInput",
                "status": "beta",
                "example": [
                    {
                        "language": "css",
                        "code": ".s-filtrable-input {\n   @sugar.ui.filtrableInput;\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "filtrableInput.js",
                "extension": "js",
                "relPath": "src/node/postcss/mixins/ui/filtrableInput/filtrableInput.js",
                "children": {}
            }
        }
    }
}
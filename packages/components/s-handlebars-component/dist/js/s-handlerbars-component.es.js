import*as e from"riot";import{v4 as t}from"uuid";import o from"@coffeekraken/s-promise";import r from"@coffeekraken/s-component-utils";import n from"@coffeekraken/s-interface";function s(){return t()}let c;const l={};class i extends n{}i.definition={};const a={css:'s-handlebars,[is="s-handlebars"]{ }',exports:{onBeforeMount(){this.component=new r(this.root,this.props,{interface:i})}},template:null,name:"s-handlebars"};e.register("s-handlebars",a),function(e,t=null,r={}){const n=`${e} - ${s()}`;r=Object.assign({},{rootNode:document,once:!0},r),l[e]?l[e].push({id:n,selector:e,cb:t,settings:r}):l[e]=[{id:n,selector:e,cb:t,settings:r}],new o((({resolve:t,reject:o,emit:n})=>{function s(e,t){const o=l[t];o&&o.forEach((t=>{if(t.settings.once){if(e._querySelectorLive||(e._querySelectorLive={}),e._querySelectorLive[t.id])return;e._querySelectorLive[t.id]=!0}n("node",e),t.cb&&t.cb(e,(()=>{delete l[t.selector]}))}))}c||(c=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes&&[].forEach.call(e.addedNodes,(e=>{const t=Object.keys(l);t.forEach((t=>{(function(e,t){if("#comment"==e.nodeName||"#text"==e.nodeName)return!1;const o=Element.prototype;return(o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.msMatchesSelector||function(e){return-1!==[].indexOf.call(document.querySelectorAll(e),this)}).call(e,t)})(e,t)&&s(e,t)})),e.querySelectorAll&&t.forEach((t=>{const o=e.querySelectorAll(t);[].forEach.call(o,(e=>{s(e,t)}))}))}))}))})),c.observe(r.rootNode,{childList:!0,subtree:!0})),[].forEach.call(r.rootNode.querySelectorAll(e),(t=>{s(t,e)}))}))}("s-handlebars",(t=>{const o=t.id||"s-handlebars-"+s();t.setAttribute("id",o),e.mount("#"+o)})),a.mount=()=>{e.mount("s-handlebars")};export default a;

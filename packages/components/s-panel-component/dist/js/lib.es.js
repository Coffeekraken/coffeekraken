import __deepMerge from"@coffeekraken/sugar/shared/object/deepMerge";import{css,unsafeCSS,html}from"lit";import{property}from"lit/decorators.js";import __SInterface from"@coffeekraken/s-interface";import __SLitComponent from"@coffeekraken/s-lit-component";import __hotkey from"@coffeekraken/sugar/js/keyboard/hotkey";class SSidePanelComponentInterface extends __SInterface{static get _definition(){return{side:{description:'Specify the side where to display the panel. Can be "top","left","bottom" or "right"',type:"String",values:["top","left","bottom","right"],default:"left"},active:{description:"Specify the panel initial state",type:"Boolean",default:!1},overlay:{description:'Specify if you want an "overlay" between the panel and your content',type:"Boolean",default:!1},triggerer:{description:"Specify a css selector that targets the elements in your UI you want to open the panel on click",type:"String"},closeOn:{description:'Specify which "action(s)" close the panel. Valid values are "click" or/and "escape"',type:{type:"Array<String>",splitChars:[","]},values:["click","escape"],default:["click","escape"]}}}}var __css="s-side-panel {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n    pointer-events: none;\n}\n\n    s-side-panel[active] {\n        pointer-events: all;\n    }\n\n    s-side-panel:not([mounted]) > * {\n        display: none;\n    }\n\n.s-side-panel__overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n    width: 100%;\n    height: 100%;\n}\n\n:not([bare]) .s-side-panel__overlay {\n        background: hsla(calc(var(--s-theme-color-main-h, 0) + var(--s-theme-color-main-spin ,0)),calc((var(--s-theme-color-main-s, 0)) * 1%),calc((var(--s-theme-color-main-l, 0)) * 1%),0.3);\n        transition: var(--s-theme-transition-default, all .3s cubic-bezier(0.700, 0.000, 0.305, 0.995));\n        opacity: 0;\n    }\n\n:not([bare])[active] .s-side-panel__overlay {\n        opacity: 1;\n    }\n\n.s-side-panel__container {\n    display: none;\n    position: absolute;\n    z-index: 1;\n}\n\n[mounted] .s-side-panel__container {\n        display: block;\n    }\n\n:not([bare]) .s-side-panel__container {\n        transition: var(--s-theme-transition-default, all .3s cubic-bezier(0.700, 0.000, 0.305, 0.995));\n    }\n\n[side='left'] .s-side-panel__container {\n        left: 0;\n        top: 0;\n        height: 100%;\n        transform: translateX(-100%);\n    }\n\n[side='top'] .s-side-panel__container {\n        left: 0;\n        top: 0;\n        width: 100%;\n        min-height: 40px;\n        transform: translateY(-100%);\n    }\n\n[side='right'] .s-side-panel__container {\n        right: 0;\n        top: 0;\n        height: 100%;\n        min-width: 40px;\n        transform: translateX(100%);\n    }\n\n[side='bottom'] .s-side-panel__container {\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        min-height: 40px;\n        transform: translateY(100%);\n    }\n\n[active] .s-side-panel__container {\n        transform: translateX(0) translateY(0);\n    }\n\n.s-side-panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n}\n\n.s-side-panel[active] {\n        pointer-events: all;\n    }\n",__decorate=globalThis&&globalThis.__decorate||function(e,t,n,i){var s,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;0<=r;r--)(s=e[r])&&(a=(o<3?s(a):3<o?s(t,n,a):s(t,n))||a);return 3<o&&a&&Object.defineProperty(t,n,a),a};class SSidePanel extends __SLitComponent{constructor(){if(super(__deepMerge({litComponent:{shadowDom:!1},componentUtils:{interface:SSidePanelComponentInterface}})),-1!==this.props.closeOn.indexOf("click")&&this.addEventListener("click",e=>{this._$container.contains(e.target)||this.constructor._activePanels.slice(-1)[0]===this&&(this.constructor._activePanels.pop(),this.active=!1)}),-1!==this.props.closeOn.indexOf("escape")&&__hotkey("escape").on("press",()=>{this.constructor._activePanels.slice(-1)[0]===this&&(this.constructor._activePanels.pop(),this.active=!1)}),this._$nodes=Array.from(this.children),this.props.triggerer){const e=Array.from(document.querySelectorAll(this.props.triggerer));e.forEach(e=>{e.addEventListener("click",e=>{this.open()})})}}static get properties(){return __SLitComponent.properties({},SSidePanelComponentInterface)}static get styles(){return css`
            ${unsafeCSS(__css)}
        `}set active(e){(this._active=e)&&-1===this.constructor._activePanels.indexOf(this)&&this.constructor._activePanels.push(this),e?this.setAttribute("active",!0):this.removeAttribute("active"),this.requestUpdate()}get active(){return this._active}firstUpdated(){this._$container=this.querySelector(".s-side-panel__container"),this._$nodes.forEach(e=>{var t;null!==(t=this._$container)&&void 0!==t&&t.appendChild(e)})}open(){this.active=!0}close(){this.active=!1}render(){return html`
            ${this.overlay?html` <div class="${this.componentUtils.className("__overlay")}"></div> `:""}
            <div class="${this.componentUtils.className("__container")}"></div>
        `}}function define(e={},t="s-side-panel"){__SLitComponent.setDefaultProps(t,e),customElements.define(t,SSidePanel)}SSidePanel._activePanels=[],__decorate([property()],SSidePanel.prototype,"overlay",void 0);export{SSidePanel as default,define};
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("riot"),require("@coffeekraken/s-request"),require("@coffeekraken/s-interface"),require("@coffeekraken/s-component-utils"),require("uuid")):"function"==typeof define&&define.amd?define(["riot","@coffeekraken/s-request","@coffeekraken/s-interface","@coffeekraken/s-component-utils","uuid"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).riot,e.__SRequest,e.__SInterface,e.__SComponentUtils,e.uuid)}(this,(function(e,t,n,o,r){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function s(e){if(e&&e.__esModule)return e;var t={__proto__:null,[Symbol.toStringTag]:"Module"};return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var u=s(e),l=i(t),c=i(n),p=i(o);class f extends c.default{}f.definition={method:{type:"String",values:["get","post"],default:"get"},url:{type:"String",required:!0},trigger:{type:"String",values:["event"],default:"event"},on:{type:"String"}};const d={css:'s-request,[is="s-request"]{ display: none; }',exports:{_inlineProxyObj:void 0,async onBeforeMount(){this.component=new p.default(this.root,this.props,{interface:f});const e=this.root.querySelector("script");if(e){const t=r.v4();let n=e.innerText.trim();n=n.replace(/^export default /,`window['s-request-script-${t}'] = `);const o=document.createElement("script");o.text=n,e.parentNode.insertBefore(o,e),e.remove(),this._inlineProxyObj=window[`s-request-script-${t}`]}switch(this.component.props.trigger){case"event":if(!this.component.props.on)throw new Error(`<red>[s-request${this.root.id?`#${this.root.id}`:""}]</red> When using the trigger "event", you MUST specify the "<yellow>on</yellow>" property to tell the component which event to listen to`);if(!this.component.$targets.length)throw new Error(`<red>[s-request${this.root.id?`#${this.root.id}`:""}]</red> When using the trigger "event", you MUST specify the "<yellow>target</yellow>" property to tell the component which other HTMLElement to listen to`);this.component.addTargetsEventListener(this.component.props.on,(async e=>await this._request(e.detail)))}},async _request(e){var t,n;(null==(t=this._inlineProxyObj)?void 0:t.send)&&(e=this._inlineProxyObj.send(e));const o=new l.default({type:this.component.props.type,url:this.component.props.url});let r=await o.send();return(null==(n=this._inlineProxyObj)?void 0:n.receive)&&(r=this._inlineProxyObj.receive(r)),r},onMounted(){}},template:null,name:"s-request"};u.register("s-request",d),setTimeout((()=>{u.mount("s-request")})),d.mount=()=>{u.mount("s-request")},window.env||(window.env={SUGAR:{}}),window.env.SUGAR=JSON.parse('{"ENVIRONMENT":"development"}')}));

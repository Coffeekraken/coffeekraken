@import './components/child.css';
@import './components/color-picker-widget.css';
@import './components/datetime-picker-widget.css';
@import './components/spaces-widget.css';

.s-specs-editor {
    --s-specs-editor-padding-inline: sugar.padding(40);
    user-select: none;

    .s-tooltip-container {
        float: right;
    }
    .s-tooltip {
        /* min-width: 250px; */
    }

    /**
     * Metas
     */
    .s-specs-editor_metas {
        display: flex;
        align-items: center;
        padding-inline-start: var(--s-specs-editor-padding-inline);
        padding-inline-end: sugar.padding(10);

        ._title {
            flex-grow: 1;
        }

        ._actions {
            display: flex;
            gap: sugar.margin(10);

            ._action {
            }
            ._action-save {
                @sugar.ui.button();
                @sugar.color (complementary);
            }
            ._action-delete {
                @sugar.ui.button ($lnf: text);
                /* @sugar.color (error); */
            }
        }
    }

    .s-specs-editor_actions {
        padding: sugar.padding(10);

        ._action {
            display: block;
            aspect-ratio: 1;
            width: 2em;
            text-align: center;
            background: sugar.color(current, --alpha 0);
            @sugar.transition (fast);
            @sugar.border.radius();

            &:hover {
                background: sugar.color(current, --darken 10%);
            }

            i {
                opacity: 1;
            }
        }
    }

    .s-specs-editor_prop:has(> div) {
        padding-block: sugar.padding(20);

        &.s-specs-editor_prop-checkbox {
            border-bottom: 1px solid sugar.color(main, surface, --darken 5%);
        }
    }
    .s-specs-editor_prop:has(> .s-specs-editor_repeatable) {
        padding: 0;
    }

    .s-specs-editor_prop-checkbox {
        margin-block-start: sugar.margin(30);

        .s-specs-editor_label {
            > span {
                flex-grow: 1;
            }
        }
    }

    .s-specs-editor_switch {
        @sugar.color (accent);
    }

    .s-specs-editor_repeatable {
        /* background: red; */
        background: sugar.color(main, background);
        /* margin-inline: calc(sugar.margin(40) * -1); */
    }
    .s-specs-editor_repeatable-title {
        display: flex;
        align-items: center;
        background: sugar.color(main, surface);
        padding: sugar.padding(30) var(--s-specs-editor-padding-inline);
        border-top: 1px solid sugar.color(main, --alpha 0.1);
        cursor: pointer;

        &,
        * {
            @sugar.transition (fast);
        }

        > span {
            flex-grow: 1;
        }

        &.active,
        &:hover {
            background: sugar.color(complementary, --alpha 0.05);
        }

        &.active {
            background: sugar.color(complementary, --alpha 0.5);
            color: white;
            font-weight: bold;

            * {
                color: white;
            }
        }

        &.active,
        &:has(
                + .s-specs-editor_repeatable-item
                    + .s-specs-editor_repeatable-actions:last-child
            ) {
            border-bottom: 1px solid sugar.color(main, --alpha 0.1);
        }

        ._remove {
            @sugar.ui.button ($lnf: text);
            @sugar.color (error);
            @sugar.scale (0.9);
            /* display: none; */
            margin-inline-end: sugar.margin(10);

            &:focus {
                margin-inline-end: sugar.margin(30);
            }
        }
        &:hover ._remove {
            display: inline-block;
        }
    }
    .s-specs-editor_repeatable-item {
        overflow: hidden;
        max-height: 0;
        border-left: sugar.margin(10) solid
            sugar.color(complementary, --alpha 0.5);
        @sugar.transition;
    }
    .s-specs-editor_repeatable-item.active {
        display: block;
        max-height: 4000px;
    }

    .s-specs-editor_repeatable-item-actions {
        text-align: end;
        padding: sugar.padding(30) var(--s-specs-editor-padding-inline);
        background: sugar.color(main, background, --darken 5%);
    }

    .s-specs-editor_repeatable-item-props {
        padding-block: sugar.padding(30);
        /* padding: sugar.padding(30) 0; */
    }

    .s-specs-editor_repeatable-actions {
        padding: sugar.padding(30) sugar.padding(40);
        text-align: end;

        ._add {
            @sugar.ui.button ($lnf: outline);
            @sugar.color (accent);

            i {
                color: currentColor;
                margin: 0;
            }
        }
    }

    .s-specs-editor_media-icons {
        float: right;
    }
    .s-specs-editor_media-icon {
        padding-inline: sugar.padding(10);
        cursor: pointer;

        i {
            opacity: 0.3;
        }

        &.active i {
            color: sugar.color(accent);
        }

        &:hover i,
        &.current i {
            opacity: 1;
        }
    }

    .s-specs-editor_prop:not(.s-specs-editor_child .s-specs-editor_prop) {
        /* padding-inline: sugar.padding(40); */
    }

    .s-specs-editor_prop {
        padding-inline: var(--s-specs-editor-padding-inline);
    }

    .s-specs-editor_label {
        margin-block-end: sugar.margin(20);

        > span {
            display: flex;
        }

        ._title {
            opacity: 0.5;
            flex-grow: 1;
        }

        ._help-icon {
            margin-inline-start: sugar.margin(10);

            .s-tooltip {
                min-width: 200px;
            }
        }

        i {
            opacity: 0.4;
            @sugar.transition (fast);

            &:hover {
                opacity: 0.8;
            }
        }
    }

    .s-specs-editor_metas {
        position: sticky;
        z-index: 10;
        top: 0;
        left: 0;
        width: 100%;
        padding-block: sugar.padding(30);
        margin-block-end: sugar.margin(30);
        border-bottom: 1px solid sugar.color(main, border);
        background-image: linear-gradient(
            45deg,
            sugar.color(main, background),
            sugar.color(main, background, --lighten 5%)
        );
        @sugar.transition;

        &-title {
            color: sugar.color(accent);
            padding-inline: sugar.padding(30);
        }

        * {
            @sugar.transition;
            overflow: hidden;
            opacity: 1;
        }
    }

    .s-specs-editor_child {
        padding-block-start: sugar.margin(40);
        padding-block-end: sugar.margin(40);

        &:has(.s-specs-editor_child) {
            position: relative;
            padding-block-end: 0;
            border-left: sugar.margin(10) solid
                sugar.color(complementary, --alpha 0.5);
        }

        .s-specs-editor_child {
            border-left: sugar.margin(10) solid
                sugar.color(complementary, --alpha 0.5);
        }
        .s-specs-editor_prop + .s-specs-editor_child {
            margin-block-start: sugar.margin(40);
        }
    }
}

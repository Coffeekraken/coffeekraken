{
    "map": {},
    "extends": [],
    "generated": {
        "map": {
            "@coffeekraken.s-config.doc.README": {
                "id": "@coffeekraken.s-config.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-config.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md.twig",
                "extension": "md",
                "relPath": "src/doc/README.md.twig",
                "children": {}
            },
            "@coffeekraken.s-config.shared.SConfig": {
                "id": "@coffeekraken.s-config.shared.SConfig",
                "name": "SConfig",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class allows you to quickly access/update some configuration depending on the data adapters specified.\nThe base available data adapters are:\n- For node:\n- File system adapter: @coffeekraken/s-config/src/node/adapters/SConfigFsAdapter\n- For js:\n- Localstorage adapter: @coffeekraken/s-config/src/js/adapters/SConfigLsAdapter",
                "namespace": "@coffeekraken.s-config.shared",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import SConfig, { SConfigLsAdapter } from '@coffeekraken/s-config';\nconst config = new SConfig('my-config', new SConfigLsAdapter();\nawait config.get('log.frontend.mail.host'); // => gmail.google.com\nawait config.set('log.frontend.mail.host', 'mailchimp.com');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SConfig.ts",
                "extension": "ts",
                "relPath": "src/shared/SConfig.ts",
                "children": {
                    "config": {
                        "id": "s0a25e0ca85420552d6a8cc01e1caa1c8d72f383e9af3cf246494a4754b10a9d1",
                        "name": "config",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Store the loaded config obect",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "integrity": {
                        "id": "s26377c32f5f2c628777938cb6284c9ff7c4ecb2d9afadaaac10a0ff5d8822cab",
                        "name": "integrity",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Store the config integrity",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "registerpostprocess": {
                        "id": "s45bce6330f90c6dbd845b5fc864c8312167023f597069667087490c8956d5db1",
                        "name": "registerPostprocess",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "configId": {
                                "name": "configId",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The configuration id you want to proxy",
                                "defaultStr": ""
                            },
                            "configKey": {
                                "name": "configKey",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The root config key you want to prepare with that function. This has to be one of the root config property",
                                "defaultStr": ""
                            },
                            "postprocessFn": {
                                "name": "postprocessFn",
                                "type": {
                                    "types": [
                                        {
                                            "type": "ISConfigPostprocessFn"
                                        }
                                    ],
                                    "raw": "ISConfigPostprocessFn"
                                },
                                "description": "The post process function that MUST return the new current config and that take as parameters the current config object and the whole config object",
                                "defaultStr": ""
                            }
                        },
                        "description": "This method allows you to register a postprocess function that will be fired once the config is ready so you can make updates as needed",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "registerpreprocess": {
                        "id": "sc22897389c8b46946f3277db162f3bfd825dfe560e7e6141d1f2ebf85d180fb0",
                        "name": "registerPreprocess",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "configId": {
                                "name": "configId",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The configuration id you want to proxy",
                                "defaultStr": ""
                            },
                            "configKey": {
                                "name": "configKey",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The root config key you want to preprocess with that function. This has to be one of the root config property",
                                "defaultStr": ""
                            },
                            "preprocessFn": {
                                "name": "preprocessFn",
                                "type": {
                                    "types": [
                                        {
                                            "type": "ISConfigPreprocessFn"
                                        }
                                    ],
                                    "raw": "ISConfigPreprocessFn"
                                },
                                "description": "The preprocess function that MUST return the new current config and that take as parameters the current config object and the whole config object",
                                "defaultStr": ""
                            }
                        },
                        "description": "This method allows you to register a preprocess function that will be fired once the config is ready so you can make updates as needed",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "constructor": {
                        "id": "sb2c69ba197a49e1d8db57960cb20caa4e1bc89eddd667b58dd45dd693302ed81",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "name": {
                                "name": "name",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The name of the config",
                                "defaultStr": ""
                            },
                            "adapter": {
                                "name": "adapter",
                                "type": {
                                    "types": [
                                        {
                                            "type": "SConfigAdapter"
                                        }
                                    ],
                                    "raw": "SConfigAdapter"
                                },
                                "description": "An SConfigAdapter instance to use",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "null",
                                "default": {},
                                "defaultStr": "{}",
                                "content": "An object to configure your SConfig instance. See the list above\nThe available settings are:\n- throwErrorOnUndefinedConfig (true) {Boolean}: Specify if you want the class to throw some errors when get undefined configs\n- resolvers ([]) {ISConfigResolverObj[]}: Specify some resolvers function to handle special values like \"[theme.something....]\"\n"
                            }
                        },
                        "description": "Init the config instance by passing a name and a settings object to configure your instance",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "load": {
                        "id": "sf738fac06f43d402c1f304c3772b69eeef7380e34467993199924663ddc3992f",
                        "name": "load",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "adapter": {
                                "name": "adapter",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The adapter to use to load the config",
                                "default": "this.settings.defaultAdapter",
                                "defaultStr": "this.settings.defaultAdapter"
                            }
                        },
                        "description": "Load the config from the default adapter or from the passed adapter",
                        "example": [
                            {
                                "language": "js",
                                "code": "const config = await config.load();"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "fromcache": {
                        "id": "s03372ba5234a0a345cd2257897513cd9bf5a236ee638569e06e4caef873d6409",
                        "name": "fromCache",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Get the config from cache if possible. Otherwise it will resolve to undefined",
                        "example": [
                            {
                                "language": "js",
                                "code": "await config.fromCache();"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "cache": {
                        "id": "sf0ae931d48b43701bc440a49e8775e611f40c069075459ac475b32c1378919de",
                        "name": "cache",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Save the config in the cache to load it faster next time",
                        "example": [
                            {
                                "language": "js",
                                "code": "await config.cache();"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "get": {
                        "id": "s5aa2c696fb01e65c1f78a76282dc6ce8129a7c710074e5c744c5ccb08ded34e6",
                        "name": "get",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "path": {
                                "name": "path",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The dotted object path for the value wanted",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The same object settings that you can pass in the constructor but just for this get process",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "Get a config depending on the dotted object path passed and either using the first registered adapter found, or the passed one",
                        "example": [
                            {
                                "language": "js",
                                "code": "await config.get('log.frontend.mail.host'); // => gmail.google.com"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "set": {
                        "id": "s014f487b67419b774a29b8a362c3bc4c7bb97d82e3109497eac97d7b31d03ff1",
                        "name": "set",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "path": {
                                "name": "path",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The dotted object path for the value wanted",
                                "defaultStr": ""
                            },
                            "value": {
                                "name": "value",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Any"
                                        }
                                    ],
                                    "raw": "Any"
                                },
                                "description": "The value to set",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The same object settings that you can pass in the constructor but just for this get process",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "Set a config depending on the dotted object path passed and the value to set",
                        "example": [
                            {
                                "language": "js",
                                "code": "await config.get('log.frontend.mail.host'); // => gmail.google.com"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "toobject": {
                        "id": "s5e3c3f9f095253afbb25d09c0ea7f66d3f25e07900648690273ae9fd8f7548a0",
                        "name": "toObject",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "This method allows you to get the config in a simple object format",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "tojson": {
                        "id": "s03799b036127f6528075fb73f35f77402c6877ca674050dbb08a96374f1e7a4c",
                        "name": "toJson",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "This method allows you to get the config in a simple json object format",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.s-config.sugar.js.config.adapters.SConfigLsAdapter": {
                "id": "@coffeekraken.s-config.sugar.js.config.adapters.SConfigLsAdapter",
                "name": "SConfigLsAdapter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The adapter settings that let you work with the good data storage solution...",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- name (null) {String}: This specify the config name that you want to use.\n- defaultConfig ({}) {Object}: This specify the \"default\" config that you want.\n- appConfig ({}) {Object}: This specify the \"application\" level config that you want.\n- userConfig ({}) {Object}: This specify the \"user\" level config that you want. It's usually this config that is updated"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This Local Storage adapter for the SConfig class let you define a name for your config and then you can just\nlet the SConfig class do the work for you...",
                "namespace": "@coffeekraken.s-config.sugar.js.config.adapters",
                "status": "wip",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SConfigLsAdapter.ts",
                "extension": "ts",
                "relPath": "src/js/adapters/SConfigLsAdapter.ts",
                "children": {}
            }
        }
    }
}
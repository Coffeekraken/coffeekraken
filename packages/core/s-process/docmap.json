{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/prettier-plugin-coffeekraken",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-coffeekraken-theme",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-request",
            "@coffeekraken/s-riotjs-plugin-postcss-preprocessor",
            "@coffeekraken/s-side-panel-component",
            "@coffeekraken/s-sitemap",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-plugin-postcss",
            "@coffeekraken/s-vite-plugin-riotjs",
            "@coffeekraken/s-vite-plugin-sugar",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-process.node.interface.sCommandProcessInterface": {
                "name": "SCommandProcessInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe the minimum requirement\nneeded for a process instance usable across the toolkit like in an SCli instance, etc...",
                "namespace": "@coffeekraken.s-process.node.interface",
                "status": "beta",
                "interface": {
                    "name": "SCommandProcessInterface",
                    "description": "",
                    "definition": {
                        "help": {
                            "description": "Specify if you want to see the help of the process",
                            "type": "Boolean",
                            "alias": "h",
                            "default": false
                        },
                        "command": {
                            "description": "Specify the command to execute",
                            "type": "String",
                            "alias": "c",
                            "required": true
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SCommandProcessInterface.js",
                "extension": "js",
                "relPath": "src/node/interface/SCommandProcessInterface.js",
                "children": {}
            },
            "@coffeekraken.s-process.node.interface.sProcessInterface": {
                "name": "SProcessInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe the minimum requirement\nneeded for a process instance usable across the toolkit like in an SCli instance, etc...",
                "namespace": "@coffeekraken.s-process.node.interface",
                "status": "beta",
                "interface": {
                    "name": "SProcessInterface",
                    "description": "",
                    "definition": {
                        "help": {
                            "description": "Specify if you want to see the help of the process",
                            "type": "Boolean",
                            "alias": "h",
                            "default": false
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcessInterface.js",
                "extension": "js",
                "relPath": "src/node/interface/SProcessInterface.js",
                "children": {}
            },
            "@coffeekraken.s-process.node.interface.sProcessSettingsInterface": {
                "name": "SProcessSettingsInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe the minimum requirement\nneeded for a process instance usable across the toolkit like in an SCli instance, etc...",
                "namespace": "@coffeekraken.s-process.node.interface",
                "status": "beta",
                "interface": {
                    "name": "SProcessSettingsInterface",
                    "description": "",
                    "definition": {
                        "killOnError": {
                            "description": "Specify if you want to kill the process when an error occurs",
                            "type": "Boolean",
                            "default": true
                        },
                        "stdio": {
                            "description": "Specify the stdio to use for your process",
                            "type": "String|SStdio|Boolean",
                            "alias": "s",
                            "default": "inherit"
                        },
                        "throw": {
                            "description": "Specify if you want to throw error when an error occurs",
                            "type": "Boolean",
                            "alias": "t",
                            "default": true
                        },
                        "exitAtEnd": {
                            "description": "Specify if you want to kill the process at his end",
                            "type": "Boolean",
                            "alias": "e",
                            "default": false
                        },
                        "runAsChild": {
                            "description": "Specify if you want to run your process as a child one",
                            "type": "Boolean",
                            "alias": "c",
                            "default": false
                        },
                        "processPath": {
                            "description": "Specify a path to a process file that exports a process supported type like an SProcess based class, a function, etc...",
                            "type": "String",
                            "default": null
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcessSettingsInterface.js",
                "extension": "js",
                "relPath": "src/node/interface/SProcessSettingsInterface.js",
                "children": {}
            },
            "@coffeekraken.s-process.s-process.sCommandProcess": {
                "name": "SCommandProcess",
                "type": "Class",
                "description": "This class represent an SProcess started with a simple bash command like \"ls -la\" or whatever",
                "namespace": "@coffeekraken.s-process.s-process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { SCommandProcess } from '@coffeekreken/s-process';\nconst commandProcess = new SCommandProcess();\ncommandProcess.run('npm i');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SCommandProcess.js",
                "extension": "js",
                "relPath": "src/node/SCommandProcess.js",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "commandProcessSettings": {
                        "name": "commandProcessSettings",
                        "type": "ISCommandProcessSettings",
                        "description": "Access the command process settings",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "process": {
                        "name": "process",
                        "type": "Function",
                        "description": "Run the actual command through a ```spawn``` call.\nThe spawn function used here is the sugar one stored in \"sugar.node.process.spawn\"",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-process.sugar.node.process.sProcess": {
                "name": "SProcess",
                "type": "Class",
                "description": "This class represent an SProcess run iteration that store things like\nthe value, the startTime, endTime, duration, state, etc...",
                "namespace": "@coffeekraken.s-process.sugar.node.process",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcess.js",
                "extension": "js",
                "relPath": "src/node/SProcess.js",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "stdio": {
                        "name": "stdio",
                        "type": "SProcessOutput",
                        "description": "Access the stdio class initiated if exists",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "state": {
                        "name": "state",
                        "type": "String",
                        "description": "Access the process state like 'idle', 'ready', 'running', 'killed', 'error', 'success'",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "executionsStack": {
                        "name": "executionsStack",
                        "type": "ISProcessProcessObj[]",
                        "description": "This array store each executions informations in separated objects\nthat store the duration, startTime, endTime, state, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "from": {
                        "name": "from",
                        "type": "Function",
                        "description": "This static method allows you to pass arguments like:\n- file path: Will require it, check what's returned from and instanciate an SProcess depending on that\n- command string: Will instanciate a new SCommandProcess instance and returns it for you to run it\n- function: Will execute the function and instanciate the proper SPromise instance type depending on the returned value\n- SPromise instance: Will simply wrap the SPromise  instance inside an SProcess one and returns you this new SProcess instance\n- SProcess based class: This make not so much sens but at least you can rely on this method to instanciate event an SProcess based class\nOnce you get the proper instance back, you can use it the same as an SProcess based class instance and use the ```run``` method to\nexecute your process",
                        "async": "true",
                        "static": "true",
                        "since": "true",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "fromCommand": {
                        "name": "fromCommand",
                        "type": "Function",
                        "description": "Initialize an SCommandProcess instance on which you can call the standard \"run\" method\nand execute a command by passing inside the params object the ```command``` prop.",
                        "async": "true",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "run": {
                        "name": "run",
                        "type": "Function",
                        "description": "Static \"run\" function to use as a shortcut of the new, and run call",
                        "async": "true",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "lastExecutionObj": {
                        "name": "lastExecutionObj",
                        "type": "ISProcessProcessObj",
                        "description": "Get the last execution object",
                        "since": "2.0.0"
                    },
                    "process": {
                        "name": "process",
                        "type": "Function",
                        "description": "This is the method you have to implement in you SProcess class. It will be called\nwhen you call the ```run``` method with the params, etc...\nYou have to return an SPromise instance in order that the SProcess class is able to keep\ntrack of your process state, logs, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "ready": {
                        "name": "ready",
                        "type": "Function",
                        "description": "This method allows you to set the process in the \"ready\" state.\nThis will make the stdio initialize, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "kill": {
                        "name": "kill",
                        "type": "Function",
                        "description": "This method will simply kill the process and call the \"cancel\" method\non the SPromise super instance as well as on the passed \"promise\" instance",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "cancel": {
                        "name": "cancel",
                        "type": "Function",
                        "description": "This method allows you to cancel the process",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isRunning": {
                        "name": "isRunning",
                        "type": "Function",
                        "description": "This method allows you to check if the process is currently running or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isIdle": {
                        "name": "isIdle",
                        "type": "Function",
                        "description": "This method allows you to check if the process is currently idle or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isReady": {
                        "name": "isReady",
                        "type": "Function",
                        "description": "This method allows you to check if the process is currently ready or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isKilled": {
                        "name": "isKilled",
                        "type": "Function",
                        "description": "This method allows you to check if the process has been killed or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isError": {
                        "name": "isError",
                        "type": "Function",
                        "description": "This method allows you to check if the process is in error state or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "isSuccess": {
                        "name": "isSuccess",
                        "type": "Function",
                        "description": "This method allows you to check if the process is in success state or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "log": {
                        "name": "log",
                        "type": "Function",
                        "description": "This method allows you to log a message that will be catched by the parent manager class",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "error": {
                        "name": "error",
                        "type": "Function",
                        "description": "This method allows you to error a message that will be catched by the parent manager class",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-process.s-process.sProcessManager": {
                "name": "SProcessManager",
                "type": "Class",
                "description": "This class represent a process handler class that will fire up some SProcess processes",
                "namespace": "@coffeekraken.s-process.s-process",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcessManager.ts",
                "extension": "ts",
                "relPath": "src/node/SProcessManager.ts",
                "children": {
                    "processManageSettings": {
                        "name": "processManageSettings",
                        "type": "ISProcessManageSettings",
                        "description": "Access the process manager process settings",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "attachProcess": {
                        "name": "attachProcess",
                        "type": "Function",
                        "description": "This method allows you to attach a process to the manager with\nhis proper settings like restart, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "detachProcess": {
                        "name": "detachProcess",
                        "type": "Function",
                        "description": "Simple method to detach a process from the manager using his id.",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "run": {
                        "name": "run",
                        "type": "Function",
                        "description": "Proxy to the ```run``` method on the passed processInstance for the specified process id",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-process.s-process.sProcessManagerProcessWrapper": {
                "name": "SProcessManagerProcessWrapper",
                "type": "Class",
                "description": "This class represent a process manager process wrapper that handle the actual restarting, watch, etc...",
                "namespace": "@coffeekraken.s-process.s-process",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcessManagerProcessWrapper.ts",
                "extension": "ts",
                "relPath": "src/node/SProcessManagerProcessWrapper.ts",
                "children": {
                    "initialParams": {
                        "name": "initialParams",
                        "type": "Object",
                        "description": "Store the initial params object",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "processInstance": {
                        "name": "processInstance",
                        "type": "SProcess",
                        "description": "Store the actual processInstance passed through the constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "processManagerProcessSettings": {
                        "name": "processManagerProcessSettings",
                        "type": "ISProcessManagerProcessWrapperSettings",
                        "description": "Access the process manager process settings",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "detach": {
                        "name": "detach",
                        "type": "Function",
                        "description": "This method has to be called by the process manager when this process has been detached\nin order to clear some listeners, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "run": {
                        "name": "run",
                        "type": "Function",
                        "description": "Proxy to the ```run``` method on the passed processInstance",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-process.sugar.node.process.sProcessPipe": {
                "name": "SProcessPipe",
                "type": "Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class allowddffffs you to handle easily some process pipes.\nA process pipe is simply multiple processes that will execute one after\nthe other by passing the params to one after the other\nand will be resolved once all the processes have been executed correctly",
                "namespace": "@coffeekraken.s-process.sugar.node.process",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import SProcess, { SProcessPipe } from '@coffeekraken/s-process';\nclass MyProcess extends SProcess {\n constructor(settings = {}) {\n     super(settings);\n }\n}\nconst processPipe = new SProcessPipe([\n   (params) => {\n     // update params to pass to the next process\n     return params;\n   },\n   new MyProcess()\n]);\nconst res = await processPipe.run({\n   something: 'coco'\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SProcessPipe.ts",
                "extension": "ts",
                "relPath": "src/node/SProcessPipe.ts",
                "children": {
                    "processPipeSettings": {
                        "name": "processPipeSettings",
                        "type": "ISProcessPipeSettings",
                        "description": "Access the process pipe settings",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "run": {
                        "name": "run",
                        "type": "Function",
                        "description": "Execute the processes pipe",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            }
        }
    }
}
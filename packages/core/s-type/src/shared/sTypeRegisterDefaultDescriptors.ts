import __SType from './_SType.js';
import __arrayTypeDescriptor from './descriptors/arrayTypeDescriptor.js';
import __bigintTypeDescriptor from './descriptors/bigintTypeDescriptor.js';
import __booleanTypeDescriptor from './descriptors/booleanTypeDescriptor.js';
import __classTypeDescriptor from './descriptors/classTypeDescriptor.js';
import __dateTypeDescriptor from './descriptors/dateTypeDescriptor.js';
import __functionTypeDescriptor from './descriptors/functionTypeDescriptor.js';
import __integerTypeDescriptor from './descriptors/integerTypeDescriptor.js';
import __mapTypeDescriptor from './descriptors/mapTypeDescriptor.js';
import __nullTypeDescriptor from './descriptors/nullTypeDescriptor.js';
import __numberTypeDescriptor from './descriptors/numberTypeDescriptor.js';
import __objectTypeDescriptor from './descriptors/objectTypeDescriptor.js';
import __setTypeDescriptor from './descriptors/setTypeDescriptor.js';
import __stringTypeDescriptor from './descriptors/stringTypeDescriptor.js';
import __symbolTypeDescriptor from './descriptors/symbolTypeDescriptor.js';
import __undefinedTypeDescriptor from './descriptors/undefinedTypeDescriptor.js';
import __weakmapTypeDescriptor from './descriptors/weakmapTypeDescriptor.js';
import __weaksetTypeDescriptor from './descriptors/weaksetTypeDescriptor.js';

__SType.registerType(__stringTypeDescriptor);
__SType.registerType(__mapTypeDescriptor);
__SType.registerType(__objectTypeDescriptor);
__SType.registerType(__arrayTypeDescriptor);
__SType.registerType(__integerTypeDescriptor);
__SType.registerType(__numberTypeDescriptor);
__SType.registerType(__booleanTypeDescriptor);
__SType.registerType(__undefinedTypeDescriptor);
__SType.registerType(__nullTypeDescriptor);
__SType.registerType(__symbolTypeDescriptor);
__SType.registerType(__bigintTypeDescriptor);
__SType.registerType(__dateTypeDescriptor);
__SType.registerType(__functionTypeDescriptor);
__SType.registerType(__weakmapTypeDescriptor);
__SType.registerType(__weaksetTypeDescriptor);
__SType.registerType(__setTypeDescriptor);
__SType.registerType(__classTypeDescriptor);

export default __SType;

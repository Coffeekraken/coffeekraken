{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/prettier-plugin-coffeekraken",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-data-handler-generic",
            "@coffeekraken/s-data-handler-js",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-jest-tester",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-riotjs-plugin-postcss-preprocessor",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-plugin-riotjs",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-activate-feature.js.SActivateFeature": {
                "id": "@coffeekraken.s-activate-feature.js.SActivateFeature",
                "name": "SActivateFeature",
                "type": "Feature",
                "menu": {
                    "tree": [
                        "Styleguide",
                        "Features"
                    ],
                    "slug": "/styleguide/feature/s-activate-feature"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature allows you to activate some elements depending on triggers like `click`, `mouseover`, `mouseout`, `anchor`, etc...\nTo be explicit, you can apply this feature on a link tag with the href attribute `#something`, and on click,\nthe DOM element that has the id \"something\" will get the \"active\" class applied.",
                "namespace": "@coffeekraken.s-activate-feature.js",
                "status": "beta",
                "example": [
                    {
                        "language": "html",
                        "title": "Simple click activation",
                        "code": "<a class=\"s-btn s-color:accent\" href=\"#my-element\" s-activate>Click me!</a>\n<div id=\"my-element\">I will be activated on click</div>\n<style>\n   #my-element.active { background: green; }\n</style>"
                    },
                    {
                        "language": "html",
                        "title": "Grouping",
                        "code": "<a href=\"#my-grouped-element-1\" class=\"s-btn s-color:accent\" s-activate group=\"my-tabs\">Tab 1</a>\n<a href=\"#my-grouped-element-2\" class=\"s-btn s-color:accent\" s-activate group=\"my-tabs\">Tab 1</a>\n<a href=\"#my-grouped-element-3\" class=\"s-btn s-color:accent\" s-activate group=\"my-tabs\">Tab 1</a>\n<div id=\"my-grouped-element-1\">Content #1</div>\n<div id=\"my-grouped-element-2\">Content #2</div>\n<div id=\"my-grouped-element-3\">Content #3</div>\n<style>\n   [id^=\"my-grouped-element-\"].active { background: green; }\n</style>"
                    },
                    {
                        "language": "html",
                        "title": "Toggle mode",
                        "code": "<a class=\"s-btn s-color:accent\" href=\"#my-element-toggle\" s-activate toggle>Click me!</a>\n<div id=\"my-element-toggle\">I will be toggled on click</div>\n<style>\n   #my-element-toggle.active { background: green; }\n</style>"
                    }
                ],
                "interface": {
                    "name": "SActivateFeatureInterface",
                    "description": "",
                    "definition": {
                        "href": {
                            "description": "Specify the target element(s) to activate/unactivate",
                            "type": "String",
                            "default": ""
                        },
                        "group": {
                            "description": "Specify a group id for your element. This is used for things like tabs, etc...",
                            "type": "String"
                        },
                        "toggle": {
                            "description": "Specify if you want to be able to click on the same element to activate/unactivate it.",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false
                        },
                        "history": {
                            "description": "Specify if you want to store and react to history hash changes",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false
                        },
                        "active": {
                            "description": "Specify the initial state of your element",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false,
                            "physical": true
                        },
                        "activeClass": {
                            "description": "Specify the class applied on target(s) when active. Default is \"active\"",
                            "type": "String",
                            "default": "active"
                        },
                        "activeAttribute": {
                            "description": "Specify the attribute name applied on target(s) when active.",
                            "type": "String",
                            "default": "active"
                        },
                        "saveState": {
                            "description": "Specify if you want to save state in localStorage to restore it on page reload, etc...",
                            "type": "Boolean",
                            "default": false
                        },
                        "activateTimeout": {
                            "description": "Specify a timeout before actiavting the target(s)",
                            "type": "Number",
                            "default": 0
                        },
                        "unactivateTimeout": {
                            "description": "Specify a timeout before unactivate the target(s)",
                            "type": "Number",
                            "default": 0
                        },
                        "triggerer": {
                            "description": "Specify an element selector that will be used as the triggerer instead of this current element",
                            "type": "String"
                        },
                        "trigger": {
                            "description": "Specify what trigger an activate/unactivate action. Can be \"click\", \"mouseover\", \"mouseout\" and/or \"anchor\"",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ","
                                ]
                            },
                            "values": [
                                "click",
                                "mouseover",
                                "mouseenter",
                                "mouseout",
                                "mouseleave",
                                "anchor"
                            ],
                            "default": [
                                "click"
                            ]
                        },
                        "unactivateOn": {
                            "description": "Specify some event(s) catched on the body tag that will unactivate the target(s)",
                            "type": "Array<String>"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SActivateFeature.ts",
                "extension": "ts",
                "relPath": "src/js/SActivateFeature.ts",
                "children": {
                    "isactive": {
                        "id": "5996f2f954ff83c2e00976caa9e0a65091b196af233d9b57d11eb941faa377f0",
                        "name": "isActive",
                        "type": "Function",
                        "description": "This method allows you to know if this particular s-activate node is active or not",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "activate": {
                        "id": "4d2bcb37a9f506b581ac2f5d6f96f79b3be4c3c149de825d758ff75c57bfcbe1",
                        "name": "activate",
                        "type": "Function",
                        "description": "This async method allows you to activate this particular s-activate node",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "unactivate": {
                        "id": "2f5cc4c7a725cd122d0eaa04042183b813df33521c81afd84a5c3ac7086127c8",
                        "name": "unactivate",
                        "type": "Function",
                        "description": "This async method allows you to unactivate this particular s-activate node",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-activate-feature.js.interface.SActivateFeatureInterface": {
                "id": "@coffeekraken.s-activate-feature.js.interface.SActivateFeatureInterface",
                "name": "SActivateFeatureInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the attributes of the SActivateFeature",
                "namespace": "@coffeekraken.s-activate-feature.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SActivateFeatureInterface",
                    "description": "",
                    "definition": {
                        "href": {
                            "description": "Specify the target element(s) to activate/unactivate",
                            "type": "String",
                            "default": ""
                        },
                        "group": {
                            "description": "Specify a group id for your element. This is used for things like tabs, etc...",
                            "type": "String"
                        },
                        "toggle": {
                            "description": "Specify if you want to be able to click on the same element to activate/unactivate it.",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false
                        },
                        "history": {
                            "description": "Specify if you want to store and react to history hash changes",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false
                        },
                        "active": {
                            "description": "Specify the initial state of your element",
                            "type": {
                                "type": "Boolean",
                                "nullishAsTrue": true
                            },
                            "default": false,
                            "physical": true
                        },
                        "activeClass": {
                            "description": "Specify the class applied on target(s) when active. Default is \"active\"",
                            "type": "String",
                            "default": "active"
                        },
                        "activeAttribute": {
                            "description": "Specify the attribute name applied on target(s) when active.",
                            "type": "String",
                            "default": "active"
                        },
                        "saveState": {
                            "description": "Specify if you want to save state in localStorage to restore it on page reload, etc...",
                            "type": "Boolean",
                            "default": false
                        },
                        "activateTimeout": {
                            "description": "Specify a timeout before actiavting the target(s)",
                            "type": "Number",
                            "default": 0
                        },
                        "unactivateTimeout": {
                            "description": "Specify a timeout before unactivate the target(s)",
                            "type": "Number",
                            "default": 0
                        },
                        "triggerer": {
                            "description": "Specify an element selector that will be used as the triggerer instead of this current element",
                            "type": "String"
                        },
                        "trigger": {
                            "description": "Specify what trigger an activate/unactivate action. Can be \"click\", \"mouseover\", \"mouseout\" and/or \"anchor\"",
                            "type": {
                                "type": "Array<String>",
                                "splitChars": [
                                    ","
                                ]
                            },
                            "values": [
                                "click",
                                "mouseover",
                                "mouseenter",
                                "mouseout",
                                "mouseleave",
                                "anchor"
                            ],
                            "default": [
                                "click"
                            ]
                        },
                        "unactivateOn": {
                            "description": "Specify some event(s) catched on the body tag that will unactivate the target(s)",
                            "type": "Array<String>"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SActivateFeatureInterface.ts",
                "extension": "ts",
                "relPath": "src/js/interface/SActivateFeatureInterface.ts",
                "children": {}
            }
        }
    }
}
{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-datetime-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-jest-tester",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-feature.shared.SFeature": {
                "id": "@coffeekraken.s-feature.shared.SFeature",
                "name": "SFeature",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "This class allows you to create \"features\". Feature is like webcomponent but does not provide a\ncustom HTML tag.",
                "namespace": "@coffeekraken.s-feature.shared",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import SFeature from '@coffeekraken/s-lit-component';\nconst component = new SFeature('my-cool-component');\ncomponent.className('__something'); // => my-cool-component__something\ncomponent.className('hello'); // => my-cool-component-hello"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SFeature.ts",
                "extension": "ts",
                "relPath": "src/js/SFeature.ts",
                "children": {
                    "name": {
                        "id": "e7e78df2166e7195f152267200b29d0243f3fe08045d8a2efd0be7b88f3511a5",
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the feature name",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "node": {
                        "id": "df262925215f93e339186d394b4a774aa6f60e8ce63e5f24f8140c0b2f96ad71",
                        "name": "node",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ]
                        },
                        "description": "Store the component node",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "props": {
                        "id": "9ebb834b48dd51aa56ae3d735a8702a7c7d41d04887cb3fbeba89279b5f52d79",
                        "name": "props",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ]
                        },
                        "description": "Store the component props",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "setdefaultprops": {
                        "id": "1a20c35a87063cd50d2548b56ff04506cf5ece09ace63d14a2babb418a709ac4",
                        "name": "setDefaultProps",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This static method allows you to set some default props for some particular\ncomponent(s). You can target components using simple css selectorl like \"my-component#cool\".\nOnce the component is instanciated, it will check if some defaults are specified and\nextends them with the passed props.",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "definefeature": {
                        "id": "b14787f92dc259aad3ff9d777d3e7f721f3ca637436fa0e755629418b47f69f3",
                        "name": "defineFeature",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This static method allows you to register a new feature\nassociated with an HTMLElement attribute like \"s-activate\", etc...",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "featuresettings": {
                        "id": "827235e8dfeb7a9d27f1dd04ff31d764053631f9ef694b97efcd3ff4780d8462",
                        "name": "featureSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISFeatureSettings"
                                }
                            ]
                        },
                        "description": "Access the feature settings",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "id": "2ec1eb0b75c3d998c2688ffbf03f92d0487e9a5bd2cd5e533b16e00b2266f575",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "beforepropchange": {
                        "id": "71d126a4ce49d1e0db163350525e256270a784d4ba817a0edaaf5f1f0ebe6633",
                        "name": "beforePropChange",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to catch a property change before it actually occurs.\nYou can return the value to set it as it is, return another value to set another one\nor returns undefined to prevent the change to be commited.",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "afterpropchanged": {
                        "id": "c8b7e2755dfed65d016ffada8d8c82e86befa17008df6ffd166ae8c81fdc7526",
                        "name": "afterPropChanged",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to catch properties updates AFTER it has been commited.",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "mount": {
                        "id": "495f9428f7bc280f8f206241d94f17373d47972cdf1a31e9535f6f1b131b403f",
                        "name": "mount",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to actually mount your feature behavior.\nIt will be called depending on the \"mountWhen\" setting setted.",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            }
        }
    }
}
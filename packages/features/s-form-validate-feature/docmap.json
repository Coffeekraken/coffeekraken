{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-datetime-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-jest-tester",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-validator",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-form-validate-feature.doc.README": {
                "id": "@coffeekraken.s-form-validate-feature.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ]
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-form-validate-feature.doc",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md",
                "extension": "md",
                "relPath": "src/doc/README.md",
                "children": {}
            },
            "@coffeekraken.s-form-validate-feature.js.SFormValidateFeature": {
                "id": "@coffeekraken.s-form-validate-feature.js.SFormValidateFeature",
                "name": "SFormValidateFeature",
                "as": "Form validate feature",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "menu": {
                    "tree": [
                        "Styleguide",
                        "Forms"
                    ],
                    "slug": "/styleguide/form/s-form-validate-feature"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature allows you to validate your forms by using under the hood the **AMAZING joi library**.\nFor now, you can validate data types like `string`, `number` or  `boolean` with options like `email`,\n`date`, `greater`, `less`, `min`, `max`, and a lot more.",
                "namespace": "@coffeekraken.s-form-validate-feature.js",
                "status": "beta",
                "example": [
                    {
                        "language": "html",
                        "title": "Email field",
                        "code": "<label class=\"s-label:responsive\" s-form-validate email email-message=\"Coco\" required-message=\"PLOP\">\n   Email address\n   <input type=\"text\" class=\"s-input s-width:60\" required placeholder=\"olivier.bossel@coffeekraken.io\" />\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Alphanumeric field",
                        "code": "<label class=\"s-label:responsive\" s-form-validate alphanum>\n   Alphanumeric\n   <input type=\"text\" class=\"s-input s-width:60\" placeholder=\"a-zA-Z0-9\" />\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Credit card field",
                        "code": "<label class=\"s-label:responsive\" s-form-validate credit-card>\n   Credit card\n   <input type=\"text\" class=\"s-input s-width:60\" placeholder=\"340716737808634\" />\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Min / Max",
                        "code": "<label class=\"s-label:responsive\" s-form-validate min=\"3\" max=\"6\">\n   Min and max\n   <input type=\"text\" class=\"s-input s-width:60\" placeholder=\"3 to 6\" />\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Select field",
                        "code": "<label class=\"s-label:responsive\" s-form-validate>\n   Select\n   <select class=\"s-select s-width:60\">\n       <option value=\"value 1\">This is the first option...</option>\n       <option value=\"value 2\">This is the second...</option>\n       <option value=\"value 3\">Third...</option>\n   </select>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Select min / max",
                        "code": "<label class=\"s-label:responsive\" s-form-validate min=\"2\" max=\"2\">\n   Multiple select\n   <select multiple class=\"s-select s-width:60\">\n       <option value=\"value 1\">This is the first option...</option>\n       <option value=\"value 2\">This is the second...</option>\n       <option value=\"value 3\">Third...</option>\n   </select>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "ISO date field",
                        "code": "<label class=\"s-label:responsive\" s-form-validate iso-date>\n   ISO date\n   <s-date-picker input button name=\"my-cool-date\" placeholder=\"2021-09-16\" class=\"s-width:60\"></s-date-picker>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Range min / max",
                        "code": "<label class=\"s-label:responsive\" s-form-validate min=\"25\" max=\"75\">\n   Value between 25 and 75\n   <s-range class=\"s-width:60\" min=\"0\" max=\"100\" tooltip></s-range>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Checkboxes min / max",
                        "code": "<label class=\"s-label\" s-form-validate min=\"2\" max=\"2\">\n     Choose at least 2 items\n     <div class=\"\">\n        <label class=\"s-label s-mb:20\">\n           Item 1\n           <input type=\"checkbox\" class=\"s-checkbox\" value=\"value 1\" />\n        </label>\n        <label class=\"s-label s-mb:20\">\n           Item 1\n           <input type=\"checkbox\" class=\"s-checkbox\" value=\"value 2\" />\n        </label>\n        <label class=\"s-label s-mb:20\">\n           Item 1\n           <input type=\"checkbox\" class=\"s-checkbox\" value=\"value 3\" />\n        </label>\n     </div>\n</label>"
                    },
                    {
                        "language": "html",
                        "title": "Submit / Reset",
                        "code": "<form>\n<label class=\"s-label:responsive\" s-form-validate min=\"3\" max=\"6\">\n   Min and max\n   <input type=\"text\" class=\"s-input s-width:60\" placeholder=\"3 to 6\" />\n</label>\n<label class=\"s-label:responsive s-mbs:30\" s-form-validate min=\"2\" max=\"2\">\n   Multiple select\n   <select multiple class=\"s-select s-width:60\">\n       <option value=\"value 1\">This is the first option...</option>\n       <option value=\"value 2\">This is the second...</option>\n       <option value=\"value 3\">Third...</option>\n   </select>\n</label>\n<div class=\"s-text:end s-mbs:30\">\n     <input type=\"reset\" class=\"s-btn\" value=\"Reset!\" />\n     <input type=\"submit\" class=\"s-btn s-color:complementary s-ml:20\" value=\"Submit!\" />\n</div>\n</form>"
                    }
                ],
                "interface": {
                    "name": "SFormValidateFeatureInterface",
                    "description": "",
                    "definition": {
                        "min": {
                            "description": "Validate string, array, object and number using the \"min\" rule",
                            "type": "String|Array|Object|Number"
                        },
                        "max": {
                            "description": "Validate string, array, object and number using the \"max\" rule",
                            "type": "String|Array|Object|Number"
                        },
                        "email": {
                            "description": "Validate an email string",
                            "type": "String"
                        },
                        "required": {
                            "description": "Make sure a value has been provided",
                            "type": "any"
                        },
                        "isoDate": {
                            "description": "Validate an iso date string",
                            "type": "String"
                        },
                        "isoTime": {
                            "description": "Validate an iso time string",
                            "type": "String"
                        },
                        "isoDateTime": {
                            "description": "Validate an iso date string",
                            "type": "String"
                        },
                        "integer": {
                            "description": "Validate an integer",
                            "type": "number"
                        },
                        "number": {
                            "description": "Validate an number",
                            "type": "number"
                        },
                        "negative": {
                            "description": "Validate an negative number",
                            "type": "number"
                        },
                        "positive": {
                            "description": "Validate an positive number",
                            "type": "number"
                        },
                        "pattern": {
                            "description": "Validate a string using a regex pattern",
                            "type": "String"
                        },
                        "alphanum": {
                            "description": "Validate an alphanum string",
                            "type": "String"
                        },
                        "creditCard": {
                            "description": "Validate a credit card string",
                            "type": "String"
                        },
                        "color": {
                            "description": "Validate a color string",
                            "type": "String"
                        },
                        "hex": {
                            "description": "Validate a hexadecimal string",
                            "type": "String"
                        },
                        "minMessage": {
                            "description": "The message to display when the validator \"min\" fails",
                            "type": "String"
                        },
                        "maxMessage": {
                            "description": "The message to display when the validator \"max\" fails",
                            "type": "String"
                        },
                        "emailMessage": {
                            "description": "The message to display when the validator \"email\" fails",
                            "type": "String"
                        },
                        "requiredMessage": {
                            "description": "The message to display when the validator \"required\" fails",
                            "type": "String"
                        },
                        "isoDateMessage": {
                            "description": "The message to display when the validator \"isoDate\" fails",
                            "type": "String"
                        },
                        "isoTimeMessage": {
                            "description": "The message to display when the validator \"isoTime\" fails",
                            "type": "String"
                        },
                        "isoDateTimeMessage": {
                            "description": "The message to display when the validator \"isoDateTime\" fails",
                            "type": "String"
                        },
                        "integerMessage": {
                            "description": "The message to display when the validator \"integer\" fails",
                            "type": "String"
                        },
                        "numberMessage": {
                            "description": "The message to display when the validator \"number\" fails",
                            "type": "String"
                        },
                        "negativeMessage": {
                            "description": "The message to display when the validator \"negative\" fails",
                            "type": "String"
                        },
                        "positiveMessage": {
                            "description": "The message to display when the validator \"positive\" fails",
                            "type": "String"
                        },
                        "patternMessage": {
                            "description": "The message to display when the validator \"pattern\" fails",
                            "type": "String"
                        },
                        "alphanumMessage": {
                            "description": "The message to display when the validator \"alphanum\" fails",
                            "type": "String"
                        },
                        "creditCardMessage": {
                            "description": "The message to display when the validator \"creditCard\" fails",
                            "type": "String"
                        },
                        "colorMessage": {
                            "description": "The message to display when the validator \"color\" fails",
                            "type": "String"
                        },
                        "hexMessage": {
                            "description": "The message to display when the validator \"hex\" fails",
                            "type": "String"
                        },
                        "type": {
                            "description": "Specify the validation type. Usually automatically detected depending on the field type",
                            "type": "String",
                            "default": "text"
                        },
                        "on": {
                            "description": "Specify when to trigger a validation. Can be \"change\",\"submit\",\"enter\" and/or \"reset\"",
                            "type": "Array<String>",
                            "values": [
                                "keyup",
                                "change",
                                "submit",
                                "enter",
                                "reset"
                            ],
                            "default": [
                                "keyup",
                                "change",
                                "submit",
                                "enter",
                                "reset"
                            ]
                        },
                        "errorClass": {
                            "description": "Specify the class to apply when theres an error",
                            "type": "String",
                            "default": "s-form-validate--error s-color--error"
                        },
                        "validClass": {
                            "description": "Specify the class to apply on your s-form-validate element when validation is passed successfully",
                            "type": "String",
                            "default": "s-form-validate--valid s-color--success"
                        },
                        "language": {
                            "description": "Specify the language you want to use for messages",
                            "type": "String",
                            "default": "en"
                        },
                        "displayError": {
                            "description": "Specify if you want to display the error messages or not",
                            "type": "Boolean",
                            "default": true
                        },
                        "errorContainerAttr": {
                            "description": "Specify the attribute to search for the error container. If not found, a default container will be created and inserted after your s-form-validate element",
                            "type": "String",
                            "default": "s-form-validate-error"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SFormValidateFeature.ts",
                "extension": "ts",
                "relPath": "src/js/SFormValidateFeature.ts",
                "children": {}
            },
            "@coffeekraken.s-form-validate-feature.js.interface.SFormValidateFeatureInterface": {
                "id": "@coffeekraken.s-form-validate-feature.js.interface.SFormValidateFeatureInterface",
                "name": "SFormValidateFeatureInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the attributes of the SFormValidateFeature",
                "namespace": "@coffeekraken.s-form-validate-feature.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SFormValidateFeatureInterface",
                    "description": "",
                    "definition": {
                        "min": {
                            "description": "Validate string, array, object and number using the \"min\" rule",
                            "type": "String|Array|Object|Number"
                        },
                        "max": {
                            "description": "Validate string, array, object and number using the \"max\" rule",
                            "type": "String|Array|Object|Number"
                        },
                        "email": {
                            "description": "Validate an email string",
                            "type": "String"
                        },
                        "required": {
                            "description": "Make sure a value has been provided",
                            "type": "any"
                        },
                        "isoDate": {
                            "description": "Validate an iso date string",
                            "type": "String"
                        },
                        "isoTime": {
                            "description": "Validate an iso time string",
                            "type": "String"
                        },
                        "isoDateTime": {
                            "description": "Validate an iso date string",
                            "type": "String"
                        },
                        "integer": {
                            "description": "Validate an integer",
                            "type": "number"
                        },
                        "number": {
                            "description": "Validate an number",
                            "type": "number"
                        },
                        "negative": {
                            "description": "Validate an negative number",
                            "type": "number"
                        },
                        "positive": {
                            "description": "Validate an positive number",
                            "type": "number"
                        },
                        "pattern": {
                            "description": "Validate a string using a regex pattern",
                            "type": "String"
                        },
                        "alphanum": {
                            "description": "Validate an alphanum string",
                            "type": "String"
                        },
                        "creditCard": {
                            "description": "Validate a credit card string",
                            "type": "String"
                        },
                        "color": {
                            "description": "Validate a color string",
                            "type": "String"
                        },
                        "hex": {
                            "description": "Validate a hexadecimal string",
                            "type": "String"
                        },
                        "minMessage": {
                            "description": "The message to display when the validator \"min\" fails",
                            "type": "String"
                        },
                        "maxMessage": {
                            "description": "The message to display when the validator \"max\" fails",
                            "type": "String"
                        },
                        "emailMessage": {
                            "description": "The message to display when the validator \"email\" fails",
                            "type": "String"
                        },
                        "requiredMessage": {
                            "description": "The message to display when the validator \"required\" fails",
                            "type": "String"
                        },
                        "isoDateMessage": {
                            "description": "The message to display when the validator \"isoDate\" fails",
                            "type": "String"
                        },
                        "isoTimeMessage": {
                            "description": "The message to display when the validator \"isoTime\" fails",
                            "type": "String"
                        },
                        "isoDateTimeMessage": {
                            "description": "The message to display when the validator \"isoDateTime\" fails",
                            "type": "String"
                        },
                        "integerMessage": {
                            "description": "The message to display when the validator \"integer\" fails",
                            "type": "String"
                        },
                        "numberMessage": {
                            "description": "The message to display when the validator \"number\" fails",
                            "type": "String"
                        },
                        "negativeMessage": {
                            "description": "The message to display when the validator \"negative\" fails",
                            "type": "String"
                        },
                        "positiveMessage": {
                            "description": "The message to display when the validator \"positive\" fails",
                            "type": "String"
                        },
                        "patternMessage": {
                            "description": "The message to display when the validator \"pattern\" fails",
                            "type": "String"
                        },
                        "alphanumMessage": {
                            "description": "The message to display when the validator \"alphanum\" fails",
                            "type": "String"
                        },
                        "creditCardMessage": {
                            "description": "The message to display when the validator \"creditCard\" fails",
                            "type": "String"
                        },
                        "colorMessage": {
                            "description": "The message to display when the validator \"color\" fails",
                            "type": "String"
                        },
                        "hexMessage": {
                            "description": "The message to display when the validator \"hex\" fails",
                            "type": "String"
                        },
                        "type": {
                            "description": "Specify the validation type. Usually automatically detected depending on the field type",
                            "type": "String",
                            "default": "text"
                        },
                        "on": {
                            "description": "Specify when to trigger a validation. Can be \"change\",\"submit\",\"enter\" and/or \"reset\"",
                            "type": "Array<String>",
                            "values": [
                                "keyup",
                                "change",
                                "submit",
                                "enter",
                                "reset"
                            ],
                            "default": [
                                "keyup",
                                "change",
                                "submit",
                                "enter",
                                "reset"
                            ]
                        },
                        "errorClass": {
                            "description": "Specify the class to apply when theres an error",
                            "type": "String",
                            "default": "s-form-validate--error s-color--error"
                        },
                        "validClass": {
                            "description": "Specify the class to apply on your s-form-validate element when validation is passed successfully",
                            "type": "String",
                            "default": "s-form-validate--valid s-color--success"
                        },
                        "language": {
                            "description": "Specify the language you want to use for messages",
                            "type": "String",
                            "default": "en"
                        },
                        "displayError": {
                            "description": "Specify if you want to display the error messages or not",
                            "type": "Boolean",
                            "default": true
                        },
                        "errorContainerAttr": {
                            "description": "Specify the attribute to search for the error container. If not found, a default container will be created and inserted after your s-form-validate element",
                            "type": "String",
                            "default": "s-form-validate-error"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SFormValidateFeatureInterface.ts",
                "extension": "ts",
                "relPath": "src/js/interface/SFormValidateFeatureInterface.ts",
                "children": {}
            }
        }
    }
}
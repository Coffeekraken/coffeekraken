{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-jest-tester",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-conductor.doc.README": {
                "id": "@coffeekraken.s-conductor.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ]
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-conductor.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md",
                "extension": "md",
                "relPath": "src/doc/README.md",
                "children": {}
            },
            "@coffeekraken.s-conductor.s-duration.SConductor": {
                "id": "@coffeekraken.s-conductor.s-duration.SConductor",
                "name": "SConductor",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "This class represent the conductor for your UI. With it you can register some \"task\" to execute\nat a specific time. The \"times\" available are these ones:\n\n- direct: Execute directly the task\n- directly: Execute directly the task\n- inViewport: Execute when the element enter the viewport\n- nearViewport: Execute when the element is near the viewport\n- outOfViewport: Execute when the element is out of the viewport\n- domReady: Execute when the DOM is ready\n- visible: Execute when the element became visible\n- stylesheetsReady: Execute when the stylesheets are ready\n- interact: Execute when the user interact with the element. See the [whenInteract API documentation](/api/@coffeekraken.sugar.js.dom.detect.whenInteract).\n- idle: Execute when no other task is running",
                "namespace": "@coffeekraken.s-conductor.s-duration",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import SConductor from '@coffeekraken/s-conductor';\nawait SConductor.when($elm, 'interact');\nawait SConductor.when($elm, ['interact', 'inViewport']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SConductor.ts",
                "extension": "ts",
                "relPath": "src/js/SConductor.ts",
                "children": {
                    "defaultinstance": {
                        "id": "d4753324c04ebfc11accfcb933686eb53450005586f36e55df25a4a8980c0b2d",
                        "name": "defaultInstance",
                        "type": {
                            "types": [
                                {
                                    "type": "SConductor"
                                }
                            ]
                        },
                        "description": "Access the default instance of the SConductor class",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "when": {
                        "id": "ae51a70ccb6af68ef4cf5d3ceb17f336c722b2c6176ad284b634319447b36950",
                        "name": "when",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to register a task to execute at a specific time in the \"default\" conductor instance.",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "setup": {
                        "id": "00cbff23860494ccb84bee1e23571dec3b5067ed43d8f307bf1c4a8b6e9d968a",
                        "name": "setup",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This static method allows you to setup the \"default\" SConductor instance created when you use the static methods like \"when\", etc...",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "conductorsettings": {
                        "id": "419fb2bb62d17be083a4070419533de423665a2c4c550c8b7a2e610493787e85",
                        "name": "conductorSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISConductorSettings"
                                }
                            ]
                        },
                        "description": "Access the settings of the conductor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "id": "2ec1eb0b75c3d998c2688ffbf03f92d0487e9a5bd2cd5e533b16e00b2266f575",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-conductor.js.interface.SConductorSettingsInterface": {
                "id": "@coffeekraken.s-conductor.js.interface.SConductorSettingsInterface",
                "name": "SConductorSettingsInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the SConductor settings.",
                "namespace": "@coffeekraken.s-conductor.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SConductorSettingsInterface",
                    "description": "",
                    "definition": {
                        "idleTimeout": {
                            "description": "Specify after how many milliseconds of inactity the SConductor has to be considered as idle ",
                            "type": "Number",
                            "default": 500
                        },
                        "logTimeout": {
                            "description": "Specify after how many milliseconds of inactity the SConductor has to log the small analysis",
                            "type": "Number",
                            "default": 2000
                        },
                        "log": {
                            "description": "Specify if you want to log the small analysis when the SConductor is idle",
                            "type": "Boolean",
                            "default": false
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SConductorSettingsInterface.ts",
                "extension": "ts",
                "relPath": "src/js/interface/SConductorSettingsInterface.ts",
                "children": {}
            }
        }
    }
}
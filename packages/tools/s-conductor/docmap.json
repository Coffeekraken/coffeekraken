{
    "map": {},
    "extends": [],
    "generated": {
        "map": {
            "@coffeekraken.s-conductor.doc.README": {
                "id": "@coffeekraken.s-conductor.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-conductor.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md.twig",
                "extension": "md",
                "relPath": "src/doc/README.md.twig",
                "children": {}
            },
            "@coffeekraken.s-conductor.s-duration.SConductor": {
                "id": "@coffeekraken.s-conductor.s-duration.SConductor",
                "name": "SConductor",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to use",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent the conductor for your UI. With it you can register some \"task\" to execute\nat a specific time. The \"times\" available are these ones:\n\n- direct: Execute directly the task\n- directly: Execute directly the task\n- inViewport: Execute when the element enter the viewport\n- nearViewport: Execute when the element is near the viewport\n- outOfViewport: Execute when the element is out of the viewport\n- domReady: Execute when the DOM is ready\n- visible: Execute when the element became visible\n- stylesheetsReady: Execute when the stylesheets are ready\n- interact: Execute when the user interact with the element. See the [whenInteract API documentation](/api/@coffeekraken.sugar.js.dom.detect.whenInteract).\n- idle: Execute when no other task is running",
                "namespace": "@coffeekraken.s-conductor.s-duration",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SConductor from '@coffeekraken/s-conductor';\nawait SConductor.when($elm, 'interact');\nawait SConductor.when($elm, ['interact', 'inViewport']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SConductor.ts",
                "extension": "ts",
                "relPath": "src/js/SConductor.ts",
                "children": {
                    "defaultinstance": {
                        "id": "sd4753324c04ebfc11accfcb933686eb53450005586f36e55df25a4a8980c0b2d",
                        "name": "defaultInstance",
                        "type": {
                            "types": [
                                {
                                    "type": "SConductor"
                                }
                            ],
                            "raw": "SConductor"
                        },
                        "description": "Access the default instance of the SConductor class",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "when": {
                        "id": "sae51a70ccb6af68ef4cf5d3ceb17f336c722b2c6176ad284b634319447b36950",
                        "name": "when",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "time": {
                                "name": "time",
                                "type": {
                                    "types": [
                                        {
                                            "type": "array",
                                            "of": [
                                                "TSConductorTrigger"
                                            ]
                                        }
                                    ],
                                    "raw": "TSConductorTrigger[]"
                                },
                                "description": "The time to execute the task. Can be multiple times and the first reached will be the one used",
                                "defaultStr": ""
                            },
                            "$elm": {
                                "name": "$elm",
                                "type": {
                                    "types": [
                                        {
                                            "type": "HTMLElement"
                                        }
                                    ],
                                    "raw": "HTMLElement"
                                },
                                "description": "The element to watch. Optional depending on the time listened",
                                "default": null,
                                "defaultStr": "null"
                            },
                            "task": {
                                "name": "task",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Function"
                                        }
                                    ],
                                    "raw": "Function"
                                },
                                "description": "The task function to execute",
                                "defaultStr": ""
                            }
                        },
                        "return": {
                            "type": {
                                "types": [
                                    {
                                        "type": "SPromise"
                                    }
                                ],
                                "raw": "SPromise"
                            },
                            "description": "An SPromise instance resolved when one of the passed time(s) is/are reached"
                        },
                        "description": "This method allows you to register a task to execute at a specific time in the \"default\" conductor instance.",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "setup": {
                        "id": "s00cbff23860494ccb84bee1e23571dec3b5067ed43d8f307bf1c4a8b6e9d968a",
                        "name": "setup",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "ISConductorSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<ISConductorSettings>"
                                },
                                "description": "The settings to use",
                                "defaultStr": ""
                            }
                        },
                        "description": "This static method allows you to setup the \"default\" SConductor instance created when you use the static methods like \"when\", etc...",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "id": "s2ec1eb0b75c3d998c2688ffbf03f92d0487e9a5bd2cd5e533b16e00b2266f575",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.s-conductor.js.interface.SConductorSettingsInterface": {
                "id": "@coffeekraken.s-conductor.js.interface.SConductorSettingsInterface",
                "name": "SConductorSettingsInterface",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the SConductor settings.",
                "namespace": "@coffeekraken.s-conductor.js.interface",
                "status": "beta",
                "interface": {
                    "name": "SConductorSettingsInterface",
                    "description": "",
                    "definition": {
                        "idleTimeout": {
                            "description": "Specify after how many milliseconds of inactity the SConductor has to be considered as idle ",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            },
                            "default": 5000
                        },
                        "logTimeout": {
                            "description": "Specify after how many milliseconds of inactity the SConductor has to log the small analysis",
                            "type": {
                                "types": [
                                    {
                                        "type": "Number"
                                    }
                                ],
                                "raw": "Number"
                            },
                            "default": 2000
                        },
                        "log": {
                            "description": "Specify if you want to log the small analysis when the SConductor is idle",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": false
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SConductorSettingsInterface.ts",
                "extension": "ts",
                "relPath": "src/js/interface/SConductorSettingsInterface.ts",
                "children": {}
            }
        }
    }
}
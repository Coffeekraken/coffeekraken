{
    "map": {},
    "extends": [],
    "generated": {
        "extends": [
            "coco",
            "@coffeekraken/both",
            "@coffeekraken/cjs",
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/esm",
            "@coffeekraken/prettier-plugin-coffeekraken",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-riotjs-plugin-postcss-preprocessor",
            "@coffeekraken/s-scroll-to-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer-data-handler-js",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-plugin-postcss",
            "@coffeekraken/s-vite-plugin-riotjs",
            "@coffeekraken/s-vite-plugin-sugar",
            "@coffeekraken/s-vite",
            "@coffeekraken/sugar"
        ],
        "map": {
            "@coffeekraken.s-glob.doc.README": {
                "name": "README",
                "type": "Markdown",
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.s-glob.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md",
                "extension": "md",
                "relPath": "src/doc/README.md",
                "children": {}
            },
            "@coffeekraken.s-glob.node.SGlob": {
                "name": "SGlob",
                "type": "Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent a glob pattern and can be used to resolve some globs and get back\nan array of SFile instances or to extract some part of the pattern, etc...",
                "namespace": "@coffeekraken.s-glob.node",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import SGlob from '@coffeekraken/sugar/node/glob/SGlob';\nconst glob = new SGlob('my/cool/glob/.js');\nconst files = glob.resolve();\nSGlob.resolve('my/cool/glob/.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGlob.ts",
                "extension": "ts",
                "relPath": "src/node/SGlob.ts",
                "children": {
                    "isglob": {
                        "name": "isGlob",
                        "type": "Function",
                        "description": "Alias to the ```isGlob``` function available in sugar under \"shared.is.isGlob\" namespace",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "resolve": {
                        "name": "resolve",
                        "type": "Function",
                        "description": "Alias to the ```resolveGlob``` function available in sugar under \"node.glob.resolveGlob\"",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "match": {
                        "name": "match",
                        "type": "Function",
                        "description": "Check if the passed string match the passed glob pattern(s).\nThis make use of the AWESOME micromatch library.",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "extractglob": {
                        "name": "extractGlob",
                        "type": "Function",
                        "description": "This function simply return you the glob part of the glob(s) passed in constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "extractnoneglob": {
                        "name": "extractNoneGlob",
                        "type": "Function",
                        "description": "This function simply return you the none glob part of the glob(s) passed in constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.s-glob.node.interface.SGlobSettingsInterface": {
                "name": "SGlobSettingsInterface",
                "type": ".                      Class",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This interface represent the SGlob settings.",
                "namespace": "@coffeekraken.s-glob.node.interface",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGlobSettingsInterface.ts",
                "extension": "ts",
                "relPath": "src/node/interface/SGlobSettingsInterface.ts",
                "children": {}
            }
        }
    }
}
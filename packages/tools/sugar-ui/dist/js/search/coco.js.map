{
  "version": 3,
  "sources": ["../../../src/js/search/coco.js"],
  "sourcesContent": ["/* coco.svelte generated by Svelte v3.35.0 */\nimport {\n\tSvelteElement,\n\tattribute_to_object,\n\tdispatch_dev,\n\tglobals,\n\tinit,\n\tinsert_dev,\n\tnoop,\n\tsafe_not_equal,\n\tvalidate_slots\n} from \"svelte/internal\";\n\nconst { console: console_1 } = globals;\nconst file = \"coco.svelte\";\n\nfunction create_fragment(ctx) {\n\tconst block = {\n\t\tc: function create() {\n\t\t\tthis.c = noop;\n\t\t},\n\t\tl: function claim(nodes) {\n\t\t\tthrow new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n\t\t},\n\t\tm: noop,\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td: noop\n\t};\n\n\tdispatch_dev(\"SvelteRegisterBlock\", {\n\t\tblock,\n\t\tid: create_fragment.name,\n\t\ttype: \"component\",\n\t\tsource: \"\",\n\t\tctx\n\t});\n\n\treturn block;\n}\n\nfunction instance($$self, $$props) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tvalidate_slots(\"my-element\", slots, []);\n\tconsole.log(\"ploefefep\");\n\tconst writable_props = [];\n\n\tObject.keys($$props).forEach(key => {\n\t\tif (!~writable_props.indexOf(key) && key.slice(0, 2) !== \"$$\") console_1.warn(`<my-element> was created with unknown prop '${key}'`);\n\t});\n\n\treturn [];\n}\n\nclass Coco extends SvelteElement {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\ttarget: this.shadowRoot,\n\t\t\t\tprops: attribute_to_object(this.attributes),\n\t\t\t\tcustomElement: true\n\t\t\t},\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{}\n\t\t);\n\n\t\tif (options) {\n\t\t\tif (options.target) {\n\t\t\t\tinsert_dev(options.target, this, options.anchor);\n\t\t\t}\n\t\t}\n\t}\n}\n\ncustomElements.define(\"my-element\", Coco);\nexport default Coco;"],
  "mappings": ";AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,MAAM,CAAE,SAAS,aAAc;AAC/B,MAAM,OAAO;AAEb,yBAAyB,KAAK;AAC7B,QAAM,QAAQ;AAAA,IACb,GAAG,kBAAkB;AACpB,WAAK,IAAI;AAAA;AAAA,IAEV,GAAG,eAAe,OAAO;AACxB,YAAM,IAAI,MAAM;AAAA;AAAA,IAEjB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA;AAGJ,eAAa,uBAAuB;AAAA,IACnC;AAAA,IACA,IAAI,gBAAgB;AAAA,IACpB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR;AAAA;AAGD,SAAO;AAAA;AAGR,kBAAkB,QAAQ,SAAS;AAClC,MAAI,CAAE,SAAS,QAAQ,IAAI,WAAY;AACvC,iBAAe,cAAc,OAAO;AACpC,UAAQ,IAAI;AACZ,QAAM,iBAAiB;AAEvB,SAAO,KAAK,SAAS,QAAQ,SAAO;AACnC,QAAI,CAAC,CAAC,eAAe,QAAQ,QAAQ,IAAI,MAAM,GAAG,OAAO;AAAM,gBAAU,KAAK,+CAA+C;AAAA;AAG9H,SAAO;AAAA;AAGR,mBAAmB,cAAc;AAAA,EAChC,YAAY,SAAS;AACpB;AAEA,SACC,MACA;AAAA,MACC,QAAQ,KAAK;AAAA,MACb,OAAO,oBAAoB,KAAK;AAAA,MAChC,eAAe;AAAA,OAEhB,UACA,iBACA,gBACA;AAGD,QAAI,SAAS;AACZ,UAAI,QAAQ,QAAQ;AACnB,mBAAW,QAAQ,QAAQ,MAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAM7C,eAAe,OAAO,cAAc;AACpC,IAAO,eAAQ;",
  "names": []
}

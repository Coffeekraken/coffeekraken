{
  "version": 3,
  "sources": ["../../../src/js/webcomponents/SSugarUiWebComponent.js"],
  "sourcesContent": ["import __deepMerge from '@coffeekraken/sugar/js/object/deepMerge';\nimport __SRequest from '@coffeekraken/sugar/js/http/SRequest';\nimport __hotkey from '@coffeekraken/sugar/js/keyboard/hotkey';\nimport __SLitHtmlWebComponent from '@coffeekraken/sugar/js/webcomponent/SLitHtmlWebComponent';\n\nimport __SFiltrableInputWebComponent from '@coffeekraken/s-filtrable-input';\n__SFiltrableInputWebComponent.define({\n  name: 'SSugarUiInputNavigation'\n});\n\n/**\n * @name                SSugarUiWebComponent\n * @namespace           sugar-ui.js.webcomponents\n * @type                Webcomponent\n *\n * Represent the search based navigation in the sugar ui\n *\n * @prop        {String}            [docMapApiUrl='docMap']             Specify the docMap api url to reach\n *\n * @example             html\n * <input is=\"s-sugar-ui-search-navigation\" />\n *\n * @since               2.0.0\n * @author                 Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default class SSugarUiWebComponent extends __SLitHtmlWebComponent() {\n  static componentName = 'SSugarUi';\n\n  /**\n   * @name            props\n   * @type            Object\n   * @static\n   *\n   * Store all the properties definitions\n   *\n   * @since           2.0.0\n   * @author                 Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static props = {\n    docMapApiUrl: {\n      type: 'String',\n      description:\n        'Specify the docMap api url to reach in order to get the docMap JSON',\n      default: 'docMap'\n    }\n  };\n\n  static template = function (props, settings, lit) {\n    return lit.html`\n      <div class=\"${this.selector('main')}\">\n        <a class=\"${this.selector(\n          'logo'\n        )}\" href=\"https://coffeekraken.io\" target=\"_blank\">\n          <i class=\"${this.selector('coffeekraken-logo')}\"></i>\n        </a>\n        <div class=\"${this.selector('nav')}\">\n          <input type=\"text\" is=\"s-sugar-ui-input-navigation\" class=\"${this.selector(\n            'nav-input'\n          )}\" placeholder=\"Search and navigation\" id=\"nav\" no-item-text=\"MOBILE\" />\n        </div>\n        <div class=\"${this.selector('utils')}\">\n          <a href=\"https://github.com/coffeekraken\" target=\"_blank\">\n            <i class=\"icon-github\"></i>\n          </a>\n        </div>\n      </div>`;\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @since           2.0.0\n   * @author                 Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(__deepMerge({}, settings));\n\n    this._navigationStack = [this._main];\n\n    this.on('ready', (e) => {\n      this.$nav.setSettings({\n        props: {\n          closeOnSelect: false,\n          closeOnEscape: false\n        },\n        template: {\n          item: function (itemObj, settings, lit) {\n            switch (itemObj.type) {\n              case 'main':\n                return lit.html`\n                    <i class=\"icon-${itemObj.icon}\"></i> ${this.highlightFilter(\n                  itemObj.title\n                )}\n                `;\n                break;\n              case 'api':\n                return lit.html`\n                  <div class=\"seach-navigation__item-api\">\n                    ${\n                      itemObj.icon\n                        ? lit.html`\n                      <i class=\"icon-${itemObj.icon}\"></i> \n                    `\n                        : ''\n                    }\n                    <p class=\"${this.selector(\n                      'list-item-title'\n                    )}\"><span class=\"${this.selector(\n                  'list-item-extension'\n                )}\" extension=\"${itemObj.extension}\">${\n                  itemObj.extension\n                }</span> ${this.highlightFilter(itemObj.title)}</p>\n                    <p class=\"${this.selector(\n                      'list-item-description'\n                    )}\">${this.highlightFilter(itemObj.description)}</p>\n                  </div>\n                `;\n                break;\n              default:\n                return settings.template.item;\n                break;\n            }\n          }\n        }\n      });\n\n      this._main();\n      this._initShortcuts();\n    });\n  }\n\n  _initShortcuts() {\n    __hotkey('ctrl+p').on('press', (e) => {\n      // put focus in the field\n      this.$nav.focus();\n    });\n    __hotkey('escape').on('press', (e) => {\n      if (this._navigationStack.length <= 1) {\n        this.$nav.escape();\n        return;\n      }\n      // pop in the stack\n      this._navigationStack.pop();\n      // load the resulting navigation\n      this._navigationStack[this._navigationStack.length - 1].call(this);\n    });\n  }\n\n  _main() {\n    const items = [\n      {\n        title: 'Get Started',\n        icon: 'start',\n        type: 'main'\n      },\n      {\n        title: 'Sugar Toolkit',\n        icon: 'toolkit',\n        type: 'main',\n        onSelect: this._sugarToolkit.bind(this)\n      },\n      {\n        title: 'Webcomponents',\n        icon: 'component',\n        type: 'main',\n        onSelect: this._webcomponents.bind(this)\n      },\n      {\n        title: 'API References',\n        icon: 'api',\n        type: 'main',\n        onSelect: this._apiReferences.bind(this)\n      },\n      {\n        title: 'Community',\n        icon: 'community',\n        type: 'main',\n        onSelect: this._community.bind(this)\n      }\n    ];\n    this.$nav.props.items = items;\n  }\n\n  async _sugarToolkit() {\n    this._navigationStack.push(this._sugarToolkit);\n    const items = [\n      {\n        title: 'What is Sugar?',\n        icon: 'what',\n        type: 'main',\n        href: '/sugar/what-is-sugar'\n      },\n      {\n        title: 'Get Started',\n        icon: 'start',\n        type: 'main',\n        href: '/sugar/get-started'\n      },\n      {\n        title: 'API References',\n        icon: 'api',\n        type: 'main',\n        href: '/sugar/api-references'\n      }\n    ];\n    this.$nav.props.items = items;\n  }\n\n  async _webcomponents() {\n    this._navigationStack.push(this._webcomponents);\n    const items = [\n      {\n        title: 'What are Webcomponents?',\n        icon: 'what',\n        type: 'main',\n        href: '/webcomponents/what-are-webcomponents'\n      },\n      {\n        title: 'Build your own',\n        icon: 'build',\n        type: 'main',\n        href: '/webcomponents/build-your-own'\n      },\n      {\n        title: 'API References',\n        icon: 'api',\n        type: 'main',\n        href: '/webcomponents/api-references'\n      }\n    ];\n    this.$nav.props.items = items;\n  }\n\n  async _apiReferences() {\n    this._navigationStack.push(this._apiReferences);\n\n    // cache\n    if (this._apiReferencesItems) {\n      this.$nav.props.items = this._apiReferencesItems;\n      return;\n    }\n\n    // put the input in loading mode\n    this.$nav.props.loading = true;\n    const request = new __SRequest({\n      url: this.props.docMapApiUrl,\n      method: 'GET'\n    });\n    const json = await request.send();\n\n    // add the items in the navigation\n    let items = Object.keys(json.data).map((key) => {\n      const itemObj = json.data[key];\n      return {\n        title: key,\n        description: itemObj.description,\n        type: 'api',\n        extension: itemObj.extension\n      };\n    });\n    this._apiReferencesItems = items;\n\n    this.$nav.props.loading = false;\n    this.$nav.props.items = items;\n  }\n\n  async _community() {\n    this._navigationStack.push(this._community);\n\n    const items = [\n      {\n        title: 'Github',\n        type: 'main',\n        href: 'https://github.com/coffeekraken'\n      },\n      {\n        title: 'Facebook',\n        type: 'main',\n        href: 'https://facebook.com/coffeekraken'\n      }\n    ];\n    this.$nav.props.items = items;\n  }\n}\n"],
  "mappings": "AAAA;AACA;AACA;AACA;AAEA;AACA,8BAA8B,OAAO;AAAA,EACnC,MAAM;AAAA;AAkBR,mCAAkD,yBAAyB;AAAA,SAClE,gBAAgB;AAAA,SAYhB,QAAQ;AAAA,IACb,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,aACE;AAAA,MACF,SAAS;AAAA;AAAA;AAAA,SAIN,WAAW,SAAU,OAAO,UAAU,KAAK;AAChD,WAAO,IAAI;AAAA,oBACK,KAAK,SAAS;AAAA,oBACd,KAAK,SACf;AAAA,sBAEY,KAAK,SAAS;AAAA;AAAA,sBAEd,KAAK,SAAS;AAAA,uEACmC,KAAK,SAChE;AAAA;AAAA,sBAGU,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBlC,YAAY,WAAW,IAAI;AACzB,UAAM,YAAY,IAAI;AAEtB,SAAK,mBAAmB,CAAC,KAAK;AAE9B,SAAK,GAAG,SAAS,CAAC,MAAM;AACtB,WAAK,KAAK,YAAY;AAAA,QACpB,OAAO;AAAA,UACL,eAAe;AAAA,UACf,eAAe;AAAA;AAAA,QAEjB,UAAU;AAAA,UACR,MAAM,SAAU,SAAS,WAAU,KAAK;AACtC,oBAAQ,QAAQ;AAAA,mBACT;AACH,uBAAO,IAAI;AAAA,qCACU,QAAQ,cAAc,KAAK,gBAC9C,QAAQ;AAAA;AAGV;AAAA,mBACG;AACH,uBAAO,IAAI;AAAA;AAAA,sBAGL,QAAQ,OACJ,IAAI;AAAA,uCACS,QAAQ;AAAA,wBAErB;AAAA,gCAEM,KAAK,SACf,oCACiB,KAAK,SAC1B,sCACe,QAAQ,cACvB,QAAQ,oBACC,KAAK,gBAAgB,QAAQ;AAAA,gCACxB,KAAK,SACf,6BACI,KAAK,gBAAgB,QAAQ;AAAA;AAAA;AAGvC;AAAA;AAEA,uBAAO,UAAS,SAAS;AACzB;AAAA;AAAA;AAAA;AAAA;AAMV,WAAK;AACL,WAAK;AAAA;AAAA;AAAA,EAIT,iBAAiB;AACf,aAAS,UAAU,GAAG,SAAS,CAAC,MAAM;AAEpC,WAAK,KAAK;AAAA;AAEZ,aAAS,UAAU,GAAG,SAAS,CAAC,MAAM;AACpC,UAAI,KAAK,iBAAiB,UAAU,GAAG;AACrC,aAAK,KAAK;AACV;AAAA;AAGF,WAAK,iBAAiB;AAEtB,WAAK,iBAAiB,KAAK,iBAAiB,SAAS,GAAG,KAAK;AAAA;AAAA;AAAA,EAIjE,QAAQ;AACN,UAAM,QAAQ;AAAA,MACZ;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU,KAAK,cAAc,KAAK;AAAA;AAAA,MAEpC;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU,KAAK,eAAe,KAAK;AAAA;AAAA,MAErC;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU,KAAK,eAAe,KAAK;AAAA;AAAA,MAErC;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU,KAAK,WAAW,KAAK;AAAA;AAAA;AAGnC,SAAK,KAAK,MAAM,QAAQ;AAAA;AAAA,QAGpB,gBAAgB;AACpB,SAAK,iBAAiB,KAAK,KAAK;AAChC,UAAM,QAAQ;AAAA,MACZ;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAGV,SAAK,KAAK,MAAM,QAAQ;AAAA;AAAA,QAGpB,iBAAiB;AACrB,SAAK,iBAAiB,KAAK,KAAK;AAChC,UAAM,QAAQ;AAAA,MACZ;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAGV,SAAK,KAAK,MAAM,QAAQ;AAAA;AAAA,QAGpB,iBAAiB;AACrB,SAAK,iBAAiB,KAAK,KAAK;AAGhC,QAAI,KAAK,qBAAqB;AAC5B,WAAK,KAAK,MAAM,QAAQ,KAAK;AAC7B;AAAA;AAIF,SAAK,KAAK,MAAM,UAAU;AAC1B,UAAM,UAAU,IAAI,WAAW;AAAA,MAC7B,KAAK,KAAK,MAAM;AAAA,MAChB,QAAQ;AAAA;AAEV,UAAM,OAAO,MAAM,QAAQ;AAG3B,QAAI,QAAQ,OAAO,KAAK,KAAK,MAAM,IAAI,CAAC,QAAQ;AAC9C,YAAM,UAAU,KAAK,KAAK;AAC1B,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa,QAAQ;AAAA,QACrB,MAAM;AAAA,QACN,WAAW,QAAQ;AAAA;AAAA;AAGvB,SAAK,sBAAsB;AAE3B,SAAK,KAAK,MAAM,UAAU;AAC1B,SAAK,KAAK,MAAM,QAAQ;AAAA;AAAA,QAGpB,aAAa;AACjB,SAAK,iBAAiB,KAAK,KAAK;AAEhC,UAAM,QAAQ;AAAA,MACZ;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA;AAAA;AAGV,SAAK,KAAK,MAAM,QAAQ;AAAA;AAAA;",
  "names": []
}

/**
*
* @name    filter-map
* @namespace            scss.map.function
* @type      function
*
* Take a filter as parameter and parse it to return the {Map} corresponding
* The $filter parameter can be either a registered filter name or a filter formated like `filterName(filterValue)`
*
* @param 			{List}<String> 			$filter 			The registered filter name or the filter string to transform into map
* @return 			{Map} 										The corresponding filter map properties
*
* @example
* // register a filter
* \@include Sugar.setup((
* 		filters : (
* 			myCoolFilter : box-shadow(#000 0 0 10px) blur(30px),
* 			// other filters...
* 		)
* ));
*
* // registered filter
* Sugar.filter-map(myCoolFilter);
* // {
* // 	box-shadow : #000 0 0 10px,
* // 	blur : 30px
* // }
*
* // custom filter
* Sugar.filter-map(blur(10px));
* // {
* // 	blur : 10px
* // }
*
* @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)

*/
/**
*
* @name      transition-map
* @namespace            scss.core.transition.function
* @type    function
*
* Take a transition as parameter and parse it to return the {Map} corresponding
* The $transition parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s
* The $transition argument will be parsed with the [./_parse-properties.scss] function.
*
* @param 			{List} 				$transition 			The registered transition name or the transition string to transform into map
* @return 			{Map} 										The corresponding transition map properties
*
* @example     scss
* // register a transition
* \@include Sugar.setup((
* 		transitions : (
* 			fast : all .2s ease-in-out,
* 			// other transitions...
* 		)
* ));
*
* // registered transition
* Sugar.transition-map(fast);
* // {
* // 	property : all,
* // 	duration : .2s,
* // 	ease : ease-in-out
* // }
*
* // custom transition
* Sugar.transition-map(fast -delay .5s);
* // {
* // 	property : all,
* // 	duration : .2s,
* // 	ease : ease-in-out,
* // 	delay : .5s
* // }
*
* @since       1.0.0
* @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)

*/
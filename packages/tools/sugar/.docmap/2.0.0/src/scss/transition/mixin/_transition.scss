/**
*
* @name    transition
* @namespace            scss.core.transition.mixin
* @type      mixin
*
* Take a transition as parameter and print the corresponding transition property
* The $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s
* The $transitions argument will be parsed with the [./_parse-properties.scss] function.
*
* @param 			{List} 				$transitions 			The registered transition(s) name(s) or the transition(s) strings(s) to transform into list
* @return 			{List} 										The corresponding transition list properties
*
* @example     scss
* // register a transition
* \@include Sugar.setup((
* 		transitions : (
* 			fast : all .2s ease-in-out 0s,
* 			// other transitions...
* 		)
* ));
*
* // registered transition
* .my-cool-element {
* 		\@include Sugar.transition(fast);
* 		// transition : all .2s ease-in-out 0s;
* }
*
* // custom transition
* .my-cool-element {
* 		\@include Sugar.transition(fast -delay .5s, fast width ease-in);
*  	// transition : all .2s ease-in-out .5s, width .2s ease-in 0s;
* }
*
* @since       1.0.0
* @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)

*/
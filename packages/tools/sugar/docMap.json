{
    "sugar.js.cache.cacheAdapters.SCacheAdapter": {
        "name": "SCacheAdapter",
        "namespace": "sugar.js.cache.cacheAdapters",
        "filename": "SCacheAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/cache/adapters/SCacheAdapter.ts",
        "directory": "src/node/cache/adapters",
        "type": "Class",
        "description": "Base class for SCache adapters",
        "since": "2.0.0"
    },
    "sugar.js.cache.adapters.SCacheFsAdapter": {
        "name": "SCacheFsAdapter",
        "namespace": "sugar.js.cache.adapters",
        "filename": "SCacheLsAdapter.ts",
        "extension": "ts",
        "relPath": "src/js/cache/adapters/SCacheLsAdapter.ts",
        "directory": "src/js/cache/adapters",
        "type": "Class",
        "description": "A filesystem SCache adapter that allows you to store your cache items on the user system",
        "since": "2.0.0"
    },
    "sugar.js.config.adapters.SConfigAdapter": {
        "name": "SConfigAdapter",
        "namespace": "sugar.js.config.adapters",
        "filename": "SConfigAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/config/adapters/SConfigAdapter.ts",
        "directory": "src/node/config/adapters",
        "type": "Class",
        "description": "Base class for SCache adapters",
        "since": "2.0.0"
    },
    "sugar.js.config.adapters.SConfigLsAdapter": {
        "name": "SConfigLsAdapter",
        "namespace": "sugar.js.config.adapters",
        "filename": "SConfigLsAdapter.ts",
        "extension": "ts",
        "relPath": "src/js/config/adapters/SConfigLsAdapter.ts",
        "directory": "src/js/config/adapters",
        "type": "Class",
        "description": "This Local Storage adapter for the SConfig class let you define a name for your config and then you can just\nlet the SConfig class do the work for you..."
    },
    "sugar.js.convert.undefined": {
        "namespace": "sugar.js.convert",
        "filename": "htmlFromDocblocks.ts",
        "extension": "ts",
        "relPath": "src/node/convert/html/htmlFromDocblocks.ts",
        "directory": "src/node/convert/html",
        "type": "Function",
        "description": "Take a markdown string as input and convert it to HTML.",
        "since": "2.0.0"
    },
    "sugar.js.convert.htmlFromMarkdown": {
        "name": "htmlFromMarkdown",
        "namespace": "sugar.js.convert",
        "filename": "htmlFromMarkdown.ts",
        "extension": "ts",
        "relPath": "src/node/convert/html/htmlFromMarkdown.ts",
        "directory": "src/node/convert/html",
        "type": "Function",
        "description": "Take a markdown string as input and convert it to HTML.",
        "since": "2.0.0"
    },
    "sugar.js.descriptor.rules.maxRule": {
        "name": "maxRule",
        "namespace": "sugar.js.descriptor.rules",
        "filename": "maxRule.ts",
        "extension": "ts",
        "relPath": "src/node/descriptor/rules/maxRule.ts",
        "directory": "src/node/descriptor/rules",
        "type": "ISDescriptorRule",
        "description": "This rule allows you to make sure a value is not under a certain value",
        "since": "2.0.0"
    },
    "sugar.js.descriptor.rules.minRule": {
        "name": "minRule",
        "namespace": "sugar.js.descriptor.rules",
        "filename": "minRule.ts",
        "extension": "ts",
        "relPath": "src/node/descriptor/rules/minRule.ts",
        "directory": "src/node/descriptor/rules",
        "type": "ISDescriptorRule",
        "description": "This rule allows you to make sure a value is not under a certain value",
        "since": "2.0.0"
    },
    "sugar.js.descriptor.rules.requiredRule": {
        "name": "requiredRule",
        "namespace": "sugar.js.descriptor.rules",
        "filename": "requiredRule.ts",
        "extension": "ts",
        "relPath": "src/node/descriptor/rules/requiredRule.ts",
        "directory": "src/node/descriptor/rules",
        "type": "ISDescriptorRule",
        "description": "This rule allows you to make sure that your value is not ```undefined```\nor a nullish value like ```null``` or ```''```.",
        "since": "2.0.0"
    },
    "sugar.js.descriptor.rules.sFileRule": {
        "name": "sFileRule",
        "namespace": "sugar.js.descriptor.rules",
        "filename": "sFileRule.ts",
        "extension": "ts",
        "relPath": "src/node/descriptor/rules/sFileRule.ts",
        "directory": "src/node/descriptor/rules",
        "type": "ISDescriptorRule",
        "description": "This rule allows you to make sure that your value is not ```undefined```\nor a nullish value like ```null``` or ```''```.",
        "since": "2.0.0"
    },
    "sugar.js.descriptor.rules.typeRule": {
        "name": "typeRule",
        "namespace": "sugar.js.descriptor.rules",
        "filename": "typeRule.ts",
        "extension": "ts",
        "relPath": "src/node/descriptor/rules/typeRule.ts",
        "directory": "src/node/descriptor/rules",
        "type": "ISDescriptorRule",
        "description": "This rule allows you to make sure a value does match the passed type like:\n- String |Â Array<String>\n- Boolean\n- Number\n- etc...",
        "since": "2.0.0"
    },
    "sugar.js.docblock.outputs.SDocblockHtmlOutput": {
        "name": "SDocblockHtmlOutput",
        "namespace": "sugar.js.docblock.outputs",
        "filename": "SDocblockHtmlOutput.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/outputs/SDocblockHtmlOutput.ts",
        "directory": "src/node/docblock/outputs",
        "type": "Class",
        "description": "This class represent an SDocblock output like \"html\", \"html\", etc...\nSupported docblock tags:\n- @type\n- @namespace\n- @name\n- @static\n- @get\n- @set\n- @since\n- @description\n- @param\n- @example\n- @author",
        "since": "2.0.0"
    },
    "sugar.js.docblock.outputs.SDocblockMarkdownOutput": {
        "name": "SDocblockMarkdownOutput",
        "namespace": "sugar.js.docblock.outputs",
        "filename": "SDocblockMarkdownOutput.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/outputs/SDocblockMarkdownOutput.ts",
        "directory": "src/node/docblock/outputs",
        "type": "Class",
        "description": "This class represent an SDocblock output like \"markdown\", \"html\", etc...\nSupported docblock tags:\n- @type\n- @namespace\n- @name\n- @static\n- @get\n- @set\n- @since\n- @description\n- @param\n- @example\n- @author",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.author": {
        "name": "author",
        "namespace": "sugar.js.docblock.tags",
        "filename": "author.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/author.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the author tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.description": {
        "name": "description",
        "namespace": "sugar.js.docblock.tags",
        "filename": "description.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/description.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the description tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.example": {
        "name": "example",
        "namespace": "sugar.js.docblock.tags",
        "filename": "example.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/example.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the example tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.param": {
        "name": "param",
        "namespace": "sugar.js.docblock.tags",
        "filename": "param.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/param.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the param tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.return": {
        "name": "return",
        "namespace": "sugar.js.docblock.tags",
        "filename": "return.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/return.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the return tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.simpleValue": {
        "name": "simpleValue",
        "namespace": "sugar.js.docblock.tags",
        "filename": "simpleValue.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/simpleValue.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the simpleValue tag",
        "since": "2.0.0"
    },
    "sugar.js.docblock.tags.snippet": {
        "name": "snippet",
        "namespace": "sugar.js.docblock.tags",
        "filename": "snippet.ts",
        "extension": "ts",
        "relPath": "src/node/docblock/tags/snippet.ts",
        "directory": "src/node/docblock/tags",
        "type": "Function",
        "description": "Parse the snippet tag",
        "since": "2.0.0"
    },
    "sugar.js.log.SLogConsoleAdapter": {
        "name": "SLogConsoleAdapter",
        "namespace": "sugar.js.log",
        "filename": "SLogConsoleAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/log/adapters/SLogConsoleAdapter.ts",
        "directory": "src/node/log/adapters",
        "type": "Class",
        "description": "This class allows you to log your messages, errors, etc... easily through some adapters that cover some targets like \"console\" of course,\n\"mail\", \"slack\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.log.SLogMailAdapter": {
        "name": "SLogMailAdapter",
        "namespace": "sugar.js.log",
        "filename": "SLogMailAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/log/adapters/SLogMailAdapter.ts",
        "directory": "src/node/log/adapters",
        "type": "Class",
        "description": "This class allows you to log your messages, errors, etc... easily through some adapters that cover some targets like \"console\" of course,\n\"mail\", \"slack\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.log.htmlPresets.console": {
        "name": "console",
        "namespace": "sugar.js.log.htmlPresets",
        "filename": "console.ts",
        "extension": "ts",
        "relPath": "src/node/log/htmlPresets/console.ts",
        "directory": "src/node/log/htmlPresets",
        "type": "Function",
        "description": "Replace all the \"log\" html tags like \"<red>\", \"<bold>\", etc... with the corresponding syntax for the terminal",
        "since": "2.0.0"
    },
    "sugar.js.log.htmlPresets.files": {
        "name": "files",
        "namespace": "sugar.js.log.htmlPresets",
        "filename": "files.ts",
        "extension": "ts",
        "relPath": "src/node/log/htmlPresets/files.ts",
        "directory": "src/node/log/htmlPresets",
        "type": "Function",
        "description": "Replace all the \"log\" html tags like \"<red>\", \"<bold>\", etc... with the corresponding syntax for the files",
        "since": "2.0.0"
    },
    "sugar.js.log.htmlPresets.mail": {
        "name": "mail",
        "namespace": "sugar.js.log.htmlPresets",
        "filename": "mail.ts",
        "extension": "ts",
        "relPath": "src/node/log/htmlPresets/mail.ts",
        "directory": "src/node/log/htmlPresets",
        "type": "Function",
        "description": "Replace all the \"log\" html tags like \"<red>\", \"<bold>\", etc... with the corresponding syntax for mail formating",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.arrayTypeDescriptor": {
        "name": "arrayTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "arrayTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/arrayTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"array\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.bigintTypeDescriptor": {
        "name": "bigintTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "bigintTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/bigintTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"bigint\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.booleanTypeDescriptor": {
        "name": "booleanTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "booleanTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/booleanTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"boolean\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.classTypeDescriptor": {
        "name": "classTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "classTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/classTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"class\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.dateTypeDescriptor": {
        "name": "dateTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "dateTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/dateTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"date\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.functionTypeDescriptor": {
        "name": "functionTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "functionTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/functionTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"function\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.integerTypeDescriptor": {
        "name": "integerTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "integerTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/integerTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"integer\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.mapTypeDescriptor": {
        "name": "mapTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "setTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/setTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"set\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.nullTypeDescriptor": {
        "name": "nullTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "nullTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/nullTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"null\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.numberTypeDescriptor": {
        "name": "numberTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "numberTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/numberTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"number\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.objectTypeDescriptor": {
        "name": "objectTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "objectTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/objectTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"object\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.stringTypeDescriptor": {
        "name": "stringTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "stringTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/stringTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"string\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.symbolTypeDescriptor": {
        "name": "symbolTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "symbolTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/symbolTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"symbol\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.undefinedTypeDescriptor": {
        "name": "undefinedTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "undefinedTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/undefinedTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"undefined\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.weakmapTypeDescriptor": {
        "name": "weakmapTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "weakmapTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/weakmapTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"map\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.weaksetTypeDescriptor": {
        "name": "weaksetTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "weaksetTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/weaksetTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"WeakSet\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.js.code.SCodeSplitter": {
        "name": "SCodeSplitter",
        "namespace": "sugar.js.code",
        "filename": "SCodeSplitter.ts",
        "extension": "ts",
        "relPath": "src/node/__thinking__/code/SCodeSplitter.ts",
        "directory": "src/node/__thinking__/code",
        "type": "Class",
        "description": "This class allows you to specify some \"splitters\" that will be used to split the code accordingly.\nA \"splitter\" is an object of these properties:\n- type (null) {String}: A simple word used as \"type\" to define the splitted blocks\n- prefix (null) {Regex}: A regex used to detect the start of a block\n- suffix (null) {Regex}: A regex used to detect what can be after the block\n- open ('{') {String}: A 1 character string that specify the opening of a code block like \"{\", etc...\n- close ('}') {String}: A 1 character string that specify the closing of a code block like \"}\", etc...\n- exclude (null) {Array<Regex>}: An array of regex used to exclude some previously matched blocks of this splitter",
        "since": "2.0.0"
    },
    "sugar.node.ui.sugar.SSugarApp": {
        "name": "SSugarApp",
        "namespace": "sugar.node.ui.sugar",
        "filename": "SSugarApp.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarApp.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the main sugar ui one. His work it to:\n- Aggregate all the wanted modules registered through the ```sugar-app.config.js``` file\n- Instantiate all the modules like frontend server, build scss, etc...\n- Configure the frontend server to serve all the needed files like js or css ones, etc...\n- Open a socket connection to allow the front modules parts to talk with the back parts easily",
        "extends": "SPromise",
        "since": "2.0.0"
    },
    "sugar.node.ui.sugar.SSugarAppModule": {
        "name": "SSugarAppModule",
        "namespace": "sugar.node.ui.sugar",
        "filename": "SSugarAppModule.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarAppModule.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the process that expose every registered \"modules\"\nthrough through a socket connection and handle the talk between\nthe backend parts with the frontend parts of each modules.",
        "extends": "SPromise",
        "since": "2.0.0"
    },
    "sugar.node.app.sugar.SSugarAppModuleTerminalUi": {
        "name": "SSugarAppModuleTerminalUi",
        "namespace": "sugar.node.app.sugar",
        "filename": "SSugarAppModuleTerminalUi.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarAppModuleTerminalUi.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the main one to create some UI that fit in the SSugarAppTerminalUi\nbased terminal interface",
        "extends": "SBlessedComponent",
        "since": "2.0.0"
    },
    "sugar.node.ui.sugar.SSugarAppProcess": {
        "name": "SSugarAppProcess",
        "namespace": "sugar.node.ui.sugar",
        "filename": "SSugarAppProcess.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarAppProcess.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the process that expose every registered \"modules\"\nthrough through a socket connection and handle the talk between\nthe backend parts with the frontend parts of each modules.",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.app.sugar.SSugarAppProcessModule": {
        "name": "SSugarAppProcessModule",
        "namespace": "sugar.node.app.sugar",
        "filename": "SSugarAppProcessModule.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarAppProcessModule.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the simple process module for the Sugar UI.",
        "extends": "SSugarAppModule",
        "since": "2.0.0"
    },
    "sugar.node.ui.sugar.SSugarAppTerminalUi": {
        "name": "SSugarAppTerminalUi",
        "namespace": "sugar.node.ui.sugar",
        "filename": "SSugarAppTerminalUi.ts",
        "extension": "ts",
        "relPath": "src/node/app/sugar/SSugarAppTerminalUi.ts",
        "directory": "src/node/app/sugar",
        "type": "Class",
        "description": "This class represent the Sugar UI interface in the terminal.",
        "extends": "SBlessedComponent",
        "since": "2.0.0"
    },
    "sugar.node.babel.ast.isAtTopLevel": {
        "name": "isAtTopLevel",
        "namespace": "sugar.node.babel.ast",
        "filename": "isAtTopLevel.ts",
        "extension": "ts",
        "relPath": "src/node/babel/ast/isAtTopLevel.ts",
        "directory": "src/node/babel/ast",
        "type": "Function",
        "description": "Check if the passed path is at top level of the AST or not",
        "since": "2.0.0"
    },
    "sugar.node.blessed.box.SBlessedWindowBox": {
        "name": "SBlessedWindowBox",
        "namespace": "sugar.node.blessed.box",
        "filename": "SWindowBox.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/box/SWindowBox.ts",
        "directory": "src/node/blessed/box",
        "type": "Class",
        "description": "This class gives you the ability to display windowed style boxes with a header, a body and a footer",
        "since": "2.0.0"
    },
    "sugar.node.blessed.input.SBlessedInput": {
        "name": "SBlessedInput",
        "namespace": "sugar.node.blessed.input",
        "filename": "SInput.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/form/SInput.ts",
        "directory": "src/node/blessed/form",
        "type": "Class",
        "description": "This class represent a simple input",
        "since": "2.0.0"
    },
    "sugar.node.blessed.interface.SAppCommandInterface": {
        "name": "SAppCommandInterface",
        "namespace": "sugar.node.blessed.interface",
        "filename": "SAppCommandInterface.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/interface/SAppCommandInterface.ts",
        "directory": "src/node/blessed/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element used as a command in an SCommandPanel instance.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.blessed.interface.SStdioLogInterface": {
        "name": "SStdioLogInterface",
        "namespace": "sugar.node.blessed.interface",
        "filename": "SStdioLogInterface.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/interface/SStdioLogInterface.ts",
        "directory": "src/node/blessed/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element passed to the SStdio ```log``` method.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.blessed.SStdioProcessInterface": {
        "name": "SStdioProcessInterface",
        "namespace": "sugar.node.blessed",
        "filename": "SStdioProcessInterface.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/interface/SStdioProcessInterface.ts",
        "directory": "src/node/blessed/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element passed to the SStdio class constructor.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.blessed.interface.SOutputSourceInterface": {
        "name": "SOutputSourceInterface",
        "namespace": "sugar.node.blessed.interface",
        "filename": "SStdioSourceInterface.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/interface/SStdioSourceInterface.ts",
        "directory": "src/node/blessed/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element passed to the SOutput ```log``` method.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.blessed.list.SBlessedSummaryList": {
        "name": "SBlessedSummaryList",
        "namespace": "sugar.node.blessed.list",
        "filename": "SSummaryList.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/list/SSummaryList.ts",
        "directory": "src/node/blessed/list",
        "type": "Class",
        "description": "This class gives you the ability to display an editable list of informations.\nThis is very useful to display for example a summary of a command to launch, or whatever...",
        "since": "2.0.0"
    },
    "sugar.node.blessed.list.blessedSummaryListPopup": {
        "name": "blessedSummaryListPopup",
        "namespace": "sugar.node.blessed.list",
        "filename": "summaryListPopup.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/list/summaryListPopup.ts",
        "directory": "src/node/blessed/list",
        "type": "Function",
        "description": "This function init and display a summary list popup and return an SPromise instance on which you can subscribe for response, etc...",
        "since": "2.0.0"
    },
    "sugar.node.blessed.notification.SBlessedNotification": {
        "name": "SBlessedNotification",
        "namespace": "sugar.node.blessed.notification",
        "filename": "SNotification.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/notification/SNotification.ts",
        "directory": "src/node/blessed/notification",
        "type": "Class",
        "description": "This class represent a notification that will be in a corner of the terminal\nwith some features like:\n- Timeout\n- On click action\n- and more...",
        "since": "2.0.0"
    },
    "sugar.node.blessed.SCommandPanel": {
        "name": "SCommandPanel",
        "namespace": "sugar.node.blessed",
        "filename": "SCommandPanel.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/panel/SCommandPanel.ts",
        "directory": "src/node/blessed/panel",
        "type": "Class",
        "description": "This class is a simple SPanel extended one that accesp an SCommandPanel instance\nto log the data's from and display an simple UI depending on the SCommandPanel configured keys",
        "since": "2.0.0"
    },
    "sugar.node.blessed.SLogPanel": {
        "name": "SLogPanel",
        "namespace": "sugar.node.blessed",
        "filename": "SLogPanel.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/panel/SLogPanel.ts",
        "directory": "src/node/blessed/panel",
        "type": "Class",
        "description": "This class define a \"panel\" in the terminal that you can easily configure to have the look and feel that you want\nthrough simple settings described bellow.",
        "since": "2.0.0"
    },
    "sugar.node.blessed.popup.SBlessedInputPopup": {
        "name": "SBlessedInputPopup",
        "namespace": "sugar.node.blessed.popup",
        "filename": "SInputPopup.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/popup/SInputPopup.ts",
        "directory": "src/node/blessed/popup",
        "type": "Class",
        "description": "This class represent a simple input in a popup",
        "extends": "SBlessedPopup",
        "since": "2.0.0"
    },
    "sugar.node.blessed.popup.SBlessedPopup": {
        "name": "SBlessedPopup",
        "namespace": "sugar.node.blessed.popup",
        "filename": "SPopup.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/popup/SPopup.ts",
        "directory": "src/node/blessed/popup",
        "type": "Class",
        "description": "This class is the base one for all the sugar blessed components like input, panel, etc...",
        "since": "2.0.0"
    },
    "sugar.node.blessed.Stdio.SBlessedStdio": {
        "name": "SBlessedStdio",
        "namespace": "sugar.node.blessed.Stdio",
        "filename": "SBlessedStdio.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/stdio/SBlessedStdio.ts",
        "directory": "src/node/blessed/stdio",
        "type": "Class",
        "description": "This class is a simple SPanel extended one that accesp an SStdio instance\nto log the data's from and display an simple UI depending on the SStdio configured keys",
        "since": "2.0.0"
    },
    "sugar.node.blessed.Stdio.SBlessedStdioComponent": {
        "name": "SBlessedStdioComponent",
        "namespace": "sugar.node.blessed.Stdio",
        "filename": "SBlessedStdioComponent.ts",
        "extension": "ts",
        "relPath": "src/node/blessed/stdio/SBlessedStdioComponent.ts",
        "directory": "src/node/blessed/stdio",
        "type": "Class",
        "description": "This represent the base class that all the \"Stdio components\" classes MUST extends",
        "extends": "SBlessedComponent",
        "since": "2.0.0"
    },
    "sugar.node.fs.cacheAdapters.SCacheFsAdapter": {
        "name": "SCacheFsAdapter",
        "namespace": "sugar.node.fs.cacheAdapters",
        "filename": "SCacheFsAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/cache/adapters/SCacheFsAdapter.ts",
        "directory": "src/node/cache/adapters",
        "type": "Class",
        "description": "A filesystem SCache adapter that allows you to store your cache items on the user system",
        "since": "2.0.0"
    },
    "sugar.node.blessed.interface.SCliInterface": {
        "name": "SCliInterface",
        "namespace": "sugar.node.blessed.interface",
        "filename": "SCliInterface.ts",
        "extension": "ts",
        "relPath": "src/node/cli/interface/SCliInterface.ts",
        "directory": "src/node/cli/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element passed to the SOutput ```log``` method.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.config.adapters.SConfigFolderAdapter": {
        "name": "SConfigFolderAdapter",
        "namespace": "sugar.node.config.adapters",
        "filename": "SConfigFolderAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/config/adapters/SConfigFolderAdapter.ts",
        "directory": "src/node/config/adapters",
        "type": "Class",
        "description": "This adapter let you specify a folder in which to put all the config files and access it normaly as you would with the SConfig system.\nEach file in the folder will be the first level of the final config object like for example the file \"colors.config.js\" will be stored\nin the final object under ```{ colors: ... }```.",
        "since": "2.0.0"
    },
    "sugar.node.config.adapters.SConfigFsAdapter": {
        "name": "SConfigFsAdapter",
        "namespace": "sugar.node.config.adapters",
        "filename": "SConfigFsAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/config/adapters/SConfigFsAdapter.ts",
        "directory": "src/node/config/adapters",
        "type": "Class",
        "description": "The JSON data adapter for the SConfig class that let you define a filename where you want to save your configs, how you want to encrypt/decrypt it\nand then you just have to use the SConfig class and that's it...",
        "since": "2.0.0"
    },
    "sugar.node.deamon.fs.SFsDeamon": {
        "name": "SFsDeamon",
        "namespace": "sugar.node.deamon.fs",
        "filename": "SFsDeamon.ts",
        "extension": "ts",
        "relPath": "src/node/deamon/fs/SFsDeamon.ts",
        "directory": "src/node/deamon/fs",
        "type": "Class",
        "description": "This class is a wrapper of the SFsDeamonCli and the SFsDeamonProcess to allows you to\nstart quickly some watch processes and kill them with ease",
        "extends": "SDeamon",
        "since": "2.0.0"
    },
    "sugar.node.deamon.fs.SFsDeamonProcess": {
        "name": "SFsDeamonProcess",
        "namespace": "sugar.node.deamon.fs",
        "filename": "SFsDeamonProcess.ts",
        "extension": "ts",
        "relPath": "src/node/deamon/fs/SFsDeamonProcess.ts",
        "directory": "src/node/deamon/fs",
        "type": "Class",
        "description": "This class allows you to simply launch some watch processes in order to be notified when some files are\nupdated, deleted or created on the filesystem.",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.deamon.interface.SDeamonInterface": {
        "name": "SDeamonInterface",
        "namespace": "sugar.node.deamon.interface",
        "filename": "SDeamonInterface.ts",
        "extension": "ts",
        "relPath": "src/node/deamon/interface/SDeamonInterface.ts",
        "directory": "src/node/deamon/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for an element that is capable of \"watching\" some events/actions, and respond\nto it by launching function, or whatever you want.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.build.docMap.actions.SDocMapStreamActions": {
        "name": "SDocMapStreamActions",
        "namespace": "sugar.node.build.docMap.actions",
        "filename": "SDocMapStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/docMap/actions/SDocMapStreamAction.ts",
        "directory": "src/node/docMap/actions",
        "type": "Class",
        "description": "This function is responsible of generating the docMap.json file at the root of the documentation directory",
        "extends": "SActionsStreamAction"
    },
    "sugar.node.build.docMap.interface.SBuildDocMapInterface": {
        "name": "SBuildDocMapInterface",
        "namespace": "sugar.node.build.docMap.interface",
        "filename": "SBuildDocMapInterface.ts",
        "extension": "ts",
        "relPath": "src/node/docMap/interface/SBuildDocMapInterface.ts",
        "directory": "src/node/docMap/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded to build the docMap.json file",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.build.frontspec.SBuildFrontspecActionsStream": {
        "name": "SBuildFrontspecActionsStream",
        "namespace": "sugar.node.build.frontspec",
        "filename": "SBuildFrontspecActionsStream.ts",
        "extension": "ts",
        "relPath": "src/node/frontspec/build/SBuildFrontspecActionsStream.ts",
        "directory": "src/node/frontspec/build",
        "type": "Class",
        "description": "This class represent a pre-configured action stream to build easily frontspec files",
        "extends": "SActionsStream",
        "since": "2.0.0"
    },
    "sugar.node.build.frontspec.SBuildFrontspecProcess": {
        "name": "SBuildFrontspecProcess",
        "namespace": "sugar.node.build.frontspec",
        "filename": "SBuildFrontspecProcess.ts",
        "extension": "ts",
        "relPath": "src/node/frontspec/build/SBuildFrontspecProcess.ts",
        "directory": "src/node/frontspec/build",
        "type": "Class",
        "description": "This class represent the process that build the frontspec.json file",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.build.scss.SBuildFrontspecSugarAppModule": {
        "name": "SBuildFrontspecSugarAppModule",
        "namespace": "sugar.node.build.scss",
        "filename": "SBuildFrontspecSugarAppModule.ts",
        "extension": "ts",
        "relPath": "src/node/frontspec/build/SBuildFrontspecSugarAppModule.ts",
        "directory": "src/node/frontspec/build",
        "type": "Class",
        "description": "This class represent the build SCSS module for the Sugar UI.",
        "extends": "SSugarAppModule",
        "since": "2.0.0"
    },
    "sugar.node.build.frontspec.SBuildFrontspecSugarAppTerminalUi": {
        "name": "SBuildFrontspecSugarAppTerminalUi",
        "namespace": "sugar.node.build.frontspec",
        "filename": "SBuildFrontspecSugarAppTerminalUi.ts",
        "extension": "ts",
        "relPath": "src/node/frontspec/build/SBuildFrontspecSugarAppTerminalUi.ts",
        "directory": "src/node/frontspec/build",
        "type": "Class",
        "description": "This class represent the display of the build js module for the terminal",
        "extends": "SSugarAppModuleTerminalUi",
        "since": "2.0.0"
    },
    "sugar.node.fs.interface.SFsFileInterface": {
        "name": "SFsFileInterface",
        "namespace": "sugar.node.fs.interface",
        "filename": "SFileInterface.ts",
        "extension": "ts",
        "relPath": "src/node/fs/interface/SFileInterface.ts",
        "directory": "src/node/fs/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for a \"file\" descriptor element",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.fs.interface.SFsFileSettingsInterface": {
        "name": "SFsFileSettingsInterface",
        "namespace": "sugar.node.fs.interface",
        "filename": "SFileSettingsInterface.ts",
        "extension": "ts",
        "relPath": "src/node/fs/interface/SFileSettingsInterface.ts",
        "directory": "src/node/fs/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for a \"file\" descriptor element",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.build.js.SBuildJsActionsStream": {
        "name": "SBuildJsActionsStream",
        "namespace": "sugar.node.build.js",
        "filename": "SBuildJsActionsStream.ts",
        "extension": "ts",
        "relPath": "src/node/js/build/SBuildJsActionsStream.ts",
        "directory": "src/node/js/build",
        "type": "Class",
        "description": "This class represent a pre-configured action stream to build easily some javascript files",
        "extends": "SActionsStream",
        "since": "2.0.0"
    },
    "sugar.node.build.js.SBuildJsProcess": {
        "name": "SBuildJsProcess",
        "namespace": "sugar.node.build.js",
        "filename": "SBuildJsProcess.ts",
        "extension": "ts",
        "relPath": "src/node/js/build/SBuildJsProcess.ts",
        "directory": "src/node/js/build",
        "type": "Class",
        "description": "This class represent the process that build the JS files",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.build.js.SBuildJsSugarAppModule": {
        "name": "SBuildJsSugarAppModule",
        "namespace": "sugar.node.build.js",
        "filename": "SBuildJsSugarAppModule.ts",
        "extension": "ts",
        "relPath": "src/node/js/build/SBuildJsSugarAppModule.ts",
        "directory": "src/node/js/build",
        "type": "Class",
        "description": "This class represent the build JS module for the Sugar App.",
        "extends": "SSugarAppModule",
        "since": "2.0.0"
    },
    "sugar.node.build.js.SBuildJsSugarAppTerminalUi": {
        "name": "SBuildJsSugarAppTerminalUi",
        "namespace": "sugar.node.build.js",
        "filename": "SBuildJsSugarAppTerminalUi.ts",
        "extension": "ts",
        "relPath": "src/node/js/build/SBuildJsSugarAppTerminalUi.ts",
        "directory": "src/node/js/build",
        "type": "Class",
        "description": "This class represent the display of the build js module for the terminal",
        "extends": "SSugarAppModuleTerminalUi",
        "since": "2.0.0"
    },
    "js.log.SLogFilesAdapter": {
        "name": "SLogFilesAdapter",
        "namespace": "js.log",
        "filename": "SLogFilesAdapter.ts",
        "extension": "ts",
        "relPath": "src/node/log/adapters/SLogFilesAdapter.ts",
        "directory": "src/node/log/adapters",
        "type": "Class",
        "description": "This class allows you to log your messages, errors, etc... easily and store them in some files where you want on your file system.",
        "since": "2.0.0"
    },
    "sugar.node.process.exitCleanup": {
        "name": "exitCleanup",
        "namespace": "sugar.node.process",
        "filename": "exitCleanup.ts",
        "extension": "ts",
        "relPath": "src/node/process/__old__/exitCleanup.ts",
        "directory": "src/node/process/__old__",
        "type": "Function",
        "description": "This function register a handler on process exit and try to clean all the child process, etc...",
        "since": "2.0.0"
    },
    "sugar.node.process.interface.SProcessDeamonSettingInterface": {
        "name": "SProcessDeamonSettingInterface",
        "namespace": "sugar.node.process.interface",
        "filename": "SProcessDeamonSettingInterface.ts",
        "extension": "ts",
        "relPath": "src/node/process/interface/SProcessDeamonSettingInterface.ts",
        "directory": "src/node/process/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for the passed \"deamon\" setting in a process",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.process.interface.SProcessInterface": {
        "name": "SProcessInterface",
        "namespace": "sugar.node.process.interface",
        "filename": "SProcessInterface.ts",
        "extension": "ts",
        "relPath": "src/node/process/interface/SProcessInterface.ts",
        "directory": "src/node/process/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for a process instance usable across the toolkit like in an SCli instance, etc...",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.process.interface.SProcessManagerInterface": {
        "name": "SProcessManagerInterface",
        "namespace": "sugar.node.process.interface",
        "filename": "SProcessManagerInterface.ts",
        "extension": "ts",
        "relPath": "src/node/process/interface/SProcessManagerInterface.ts",
        "directory": "src/node/process/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the minimum requirement\nneeded for a process instance usable across the toolkit like in an SCli instance, etc...",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.process.SProcessStdio": {
        "name": "SProcessStdio",
        "namespace": "sugar.node.process",
        "filename": "SProcessStdio.ts",
        "extension": "ts",
        "relPath": "src/node/process/stdio/SProcessStdio.ts",
        "directory": "src/node/process/stdio",
        "type": "Class",
        "description": "This class represent the base one for all the process \"Stdio\"\ncompatible setting.",
        "since": "2.0.0"
    },
    "sugar.node.build.scss.SBuildScssActionsStream": {
        "name": "SBuildScssActionsStream",
        "namespace": "sugar.node.build.scss",
        "filename": "SBuildScssActionsStream.ts",
        "extension": "ts",
        "relPath": "src/node/scss/build/SBuildScssActionsStream.ts",
        "directory": "src/node/scss/build",
        "type": "Class",
        "description": "This class represent a pre-configured action stream to build easily some javascript files",
        "extends": "SActionsStream",
        "since": "2.0.0"
    },
    "sugar.node.build.scss.SBuildScssProcess": {
        "name": "SBuildScssProcess",
        "namespace": "sugar.node.build.scss",
        "filename": "SBuildScssProcess.ts",
        "extension": "ts",
        "relPath": "src/node/scss/build/SBuildScssProcess.ts",
        "directory": "src/node/scss/build",
        "type": "Class",
        "description": "This class represent the process that build the SCSS files into CSS",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.build.scss.SBuildScssSugarAppModule": {
        "name": "SBuildScssSugarAppModule",
        "namespace": "sugar.node.build.scss",
        "filename": "SBuildScssSugarAppModule.ts",
        "extension": "ts",
        "relPath": "src/node/scss/build/SBuildScssSugarAppModule.ts",
        "directory": "src/node/scss/build",
        "type": "Class",
        "description": "This class represent the build SCSS module for the Sugar UI.",
        "extends": "SSugarAppModule",
        "since": "2.0.0"
    },
    "sugar.node.build.scss.SBuildScssSugarAppTerminalUi": {
        "name": "SBuildScssSugarAppTerminalUi",
        "namespace": "sugar.node.build.scss",
        "filename": "SBuildScssSugarAppTerminalUi.ts",
        "extension": "ts",
        "relPath": "src/node/scss/build/SBuildScssSugarAppTerminalUi.ts",
        "directory": "src/node/scss/build",
        "type": "Class",
        "description": "This class represent the display of the build js module for the terminal",
        "extends": "SSugarAppModuleTerminalUi",
        "since": "2.0.0"
    },
    "sugar.node.search.handlers.search": {
        "name": "search",
        "namespace": "sugar.node.search.handlers",
        "filename": "docMap.ts",
        "extension": "ts",
        "relPath": "src/node/search/handlers/docMap.ts",
        "directory": "src/node/search/handlers",
        "type": "Function",
        "description": "This function is responsible of handling the docMap search\nby filtering the docMap and send back the serch result json.",
        "since": "2.0.0"
    },
    "sugar.node.server.frontend.express": {
        "name": "express",
        "namespace": "sugar.node.server.frontend",
        "filename": "frontend.ts",
        "extension": "ts",
        "relPath": "src/node/server/frontend/frontend.ts",
        "directory": "src/node/server/frontend",
        "type": "Function",
        "description": "This function take care of starting a frontend express based server",
        "since": "2.0.0"
    },
    "sugar.node.server.frontend.SFrontendServerProcess": {
        "name": "SFrontendServerProcess",
        "namespace": "sugar.node.server.frontend",
        "filename": "SFrontendServerProcess.ts",
        "extension": "ts",
        "relPath": "src/node/server/frontend/SFrontendServerProcess.ts",
        "directory": "src/node/server/frontend",
        "type": "Class",
        "description": "This class represent the frontend server Cli based on the express server one",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.server.frontend.SFrontendServerSugarAppModule": {
        "name": "SFrontendServerSugarAppModule",
        "namespace": "sugar.node.server.frontend",
        "filename": "SFrontendServerSugarAppModule.ts",
        "extension": "ts",
        "relPath": "src/node/server/frontend/SFrontendServerSugarAppModule.ts",
        "directory": "src/node/server/frontend",
        "type": "Class",
        "description": "This class represent the frontend server module for the Sugar UI.",
        "extends": "SSugarAppModule",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SExtractDocblocksIntoFiles": {
        "name": "SExtractDocblocksIntoFiles",
        "namespace": "sugar.node.stream.actions",
        "filename": "SExtractDocblocksIntoFilesStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SExtractDocblocksIntoFilesStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This actions allows you to extract the docblocks into separated files depending on their \"namespace\" tag",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SExtractStreamAction": {
        "name": "SExtractStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SExtractStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SExtractStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This actions allows you to extract some data from the specified streamObj property using custom comments syntax like \"/* extract:propName *\\/ ... /* extract *\\/\".\nThis \"propName\" specify in which streamObj property you want to save the extracted content.",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFrontspecJsStreamAction": {
        "name": "SFrontspecJsStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFrontspecJsStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFrontspecJsStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This action take care of integrating the previous finded \"frontspec.json\" files\ninto the actual codebase handled by this stream action.",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFrontspecScssStreamAction": {
        "name": "SFrontspecScssStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFrontspecScssStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFrontspecScssStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This action take care of integrating the previous finded \"frontspec.json\" files\ninto the actual codebase handled by this stream action.",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFsCacheStreamAction": {
        "name": "SFsCacheStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFsCacheStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsCacheStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This action allows you to make profit of the filesystem cache.\nYou can specify which streamObj property will be the cache id as well as\nin which condition you want to bypass the cached value.\nBy default the cached value will be regenerated if the \"input\" property is a file and that this file has been saved after the cached value.",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFsCopyStreamAction": {
        "name": "SFsCopyStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFsCopyStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsCopyStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you to copy some files or folders from one location to another",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "node.stream.actions.SFindInFileStreamAction": {
        "name": "SFindInFileStreamAction",
        "namespace": "node.stream.actions",
        "filename": "SFsFilesResolverStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsFilesResolverStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you search inside files for a certain string/pattern\nAnd get back the list of founded files.",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFsOutputStreamAction": {
        "name": "SFsOutputStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFsOutputStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsOutputStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you to save file(s) to the filesystem",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFsReadFileStreamAction": {
        "name": "SFsReadFileStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFsReadFileStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsReadFileStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you to read file(s) to the filesystem",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SFsUnlinkStreamAction": {
        "name": "SFsUnlinkStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SFsUnlinkStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SFsUnlinkStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is an action that allows you to delete some files / folders depending on the \"unlink\" property of the streamObj.\nYou can specify some glob patterns if you want",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SGlobResolverStreamAction": {
        "name": "SGlobResolverStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SGlobResolverStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SGlobResolverStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you resolve glob pattern by specifying the streamObj property that\nis one. It will then return an array of streamObj handled normally by the SActionsStream instance",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.stream.actions.SJestStreamAction": {
        "name": "SJestStreamAction",
        "namespace": "sugar.node.stream.actions",
        "filename": "SJestStreamAction.ts",
        "extension": "ts",
        "relPath": "src/node/stream/actions/SJestStreamAction.ts",
        "directory": "src/node/stream/actions",
        "type": "Class",
        "description": "This class is a stream action that allows you execute attached jest tests ([filename.test.js|__tests__/[filename].test.js])",
        "extends": "SActionsStreamAction",
        "since": "2.0.0"
    },
    "sugar.node.template.dataHandlers.js": {
        "name": "js",
        "namespace": "sugar.node.template.dataHandlers",
        "filename": "js.ts",
        "extension": "ts",
        "relPath": "src/node/template/dataHandlers/js.ts",
        "directory": "src/node/template/dataHandlers",
        "type": "Function",
        "description": "This function simply take the .data.js file path and return\nthe resulting object",
        "since": "2.0.0"
    },
    "sugar.node.template.dataHandlers.json": {
        "name": "json",
        "namespace": "sugar.node.template.dataHandlers",
        "filename": "json.ts",
        "extension": "ts",
        "relPath": "src/node/template/dataHandlers/json.ts",
        "directory": "src/node/template/dataHandlers",
        "type": "Function",
        "description": "This function simply take the .data.json file path and return\nthe resulting object",
        "since": "2.0.0"
    },
    "sugar.node.template.engines.SBladeTemplateEngine": {
        "name": "SBladeTemplateEngine",
        "namespace": "sugar.node.template.engines",
        "filename": "SBladeTemplateEngine.ts",
        "extension": "ts",
        "relPath": "src/node/template/engines/SBladeTemplateEngine.ts",
        "directory": "src/node/template/engines",
        "type": "Class",
        "description": "This class represent the blade php template engine that you can use by itself through this class, or through the ```STemplate``` class\nthat take care of a lot of works for you...",
        "since": "2.0.0"
    },
    "sugar.node.template.engines.STemplateEngine": {
        "name": "STemplateEngine",
        "namespace": "sugar.node.template.engines",
        "filename": "STemplateEngine.ts",
        "extension": "ts",
        "relPath": "src/node/template/engines/STemplateEngine.ts",
        "directory": "src/node/template/engines",
        "type": "Class",
        "description": "This class represent the base for a compatible ```STemplate``` engine\nA template engine class MUST have some basic methods like:\n- ```input```: A simple static property that tells if your template engine work with a \"path\" as input, or with a \"string\" (templateString) either...\n- ```canRender```: A simple static method that take the template string as parameter and must return true if it can handle it and false if not\n- ```render```: The main method that take as parameter either the view path to render, either directly the template string depending on his exposed static property ```input``` that can be either ```path``` or ```string``` as well as a data object to use for rendering process\n-",
        "since": "2.0.0"
    },
    "sugar.node.test.interface.STestInterface": {
        "name": "STestInterface",
        "namespace": "sugar.node.test.interface",
        "filename": "STestInterface.ts",
        "extension": "ts",
        "relPath": "src/node/test/interface/STestInterface.ts",
        "directory": "src/node/test/interface",
        "type": "Class",
        "description": "This class represent the interface that describe the cli parameters for the\ntest process.",
        "extends": "SInterface",
        "since": "2.0.0"
    },
    "sugar.node.test.jest.STestJestCli": {
        "name": "STestJestCli",
        "namespace": "sugar.node.test.jest",
        "filename": "STestJestCli.ts",
        "extension": "ts",
        "relPath": "src/node/test/jest/STestJestCli.ts",
        "directory": "src/node/test/jest",
        "type": "Class",
        "description": "This class represent the tests jest cli",
        "extends": "SCli",
        "since": "2.0.0"
    },
    "sugar.node.test.jest.STestJestProcess": {
        "name": "STestJestProcess",
        "namespace": "sugar.node.test.jest",
        "filename": "STestJestProcessManager.ts",
        "extension": "ts",
        "relPath": "src/node/test/jest/STestJestProcessManager.ts",
        "directory": "src/node/test/jest",
        "type": "Class",
        "description": "This class represent the process that launch the tests on javascript files",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.js.type.descriptor.fileTypeDescriptor": {
        "name": "fileTypeDescriptor",
        "namespace": "sugar.js.type.descriptor",
        "filename": "fileTypeDescriptor.ts",
        "extension": "ts",
        "relPath": "src/node/type/descriptors/fileTypeDescriptor.ts",
        "directory": "src/node/type/descriptors",
        "type": "ISTypeDescriptor",
        "description": "Describe the type \"file\" with some utilities methods like \"is\", \"cast\", etc...",
        "since": "2.0.0"
    },
    "sugar.node.typescript.compile.compileTs": {
        "name": "compileTs",
        "namespace": "sugar.node.typescript.compile",
        "filename": "tsCompile.old",
        "extension": "old",
        "relPath": "src/node/typescript/compile/tsCompile.old",
        "directory": "src/node/typescript/compile",
        "type": "Function",
        "description": "This function allows you to compile some typescript using the native tsc compiler",
        "since": "2.0.0"
    },
    "sugar.node.typescript.STypescriptToJsProcess": {
        "name": "STypescriptToJsProcess",
        "namespace": "sugar.node.typescript",
        "filename": "SCompileTsProcess.ts",
        "extension": "ts",
        "relPath": "src/node/typescript/compile/SCompileTsProcess.ts",
        "directory": "src/node/typescript/compile",
        "type": "Class",
        "description": "This class represent the tsc compilation process to compile typescript to js",
        "extends": "SProcess",
        "since": "2.0.0"
    },
    "sugar.node.typescript.compile.transpileAndSave": {
        "name": "transpileAndSave",
        "namespace": "sugar.node.typescript.compile",
        "filename": "transpileAndSave.ts",
        "extension": "ts",
        "relPath": "src/node/typescript/compile/transpileAndSave.ts",
        "directory": "src/node/typescript/compile",
        "type": "Function",
        "description": "This function simply take a file path and an object representing the \"compilerOptions\"\nof your tsconfig.json file and transpile the code in javascript. Then it save the file at the same\nplace the source one was founded and replace the extension to .js",
        "since": "2.0.0"
    },
    "sugar.node.typescript.compile.transpileOnly": {
        "name": "transpileOnly",
        "namespace": "sugar.node.typescript.compile",
        "filename": "transpileOnly.ts",
        "extension": "ts",
        "relPath": "src/node/typescript/compile/transpileOnly.ts",
        "directory": "src/node/typescript/compile",
        "type": "Function",
        "description": "This function simply take a file path (or some code directly) and an object representing the \"compilerOptions\"\nof your tsconfig.json file and transpile the code in javascript.",
        "since": "2.0.0"
    },
    "sugar.scss.animation.mixin.animation": {
        "name": "animation",
        "namespace": "sugar.scss.animation.mixin",
        "filename": "_animation.scss",
        "extension": "scss",
        "relPath": "src/scss/animation/mixin/_animation.scss",
        "directory": "src/scss/animation/mixin",
        "type": "mixin",
        "description": "Print out the animation property calculated with the passed arguments\nThis mixin support all the standard css animation properties like name, duration, delay, ease, direction and fill-mode.\nThe $animations argument will be parsed with the [../functions/_s-parse-properties.scss] function.\nIf you specify multiple animations at a time, this mixin will take care\nof the delay calculation for each animations and make them play one after another"
    },
    "sugar.scss.coffeekraken.mixin.coffeekraken-logo": {
        "name": "coffeekraken-logo",
        "namespace": "sugar.scss.coffeekraken.mixin",
        "filename": "_coffeekraken-logo.scss",
        "extension": "scss",
        "relPath": "src/scss/coffeekraken/mixin/_coffeekraken-logo.scss",
        "directory": "src/scss/coffeekraken/mixin",
        "type": "mixin",
        "description": "Display a coffeekraken logo with two specified colors",
        "since": "1.0.0"
    },
    "sugar.scss.color.class.color-classes": {
        "name": "color-classes",
        "namespace": "sugar.scss.color.class",
        "filename": "_color.scss",
        "extension": "scss",
        "relPath": "src/scss/color/class/_color.scss",
        "directory": "src/scss/color/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"color\" related classes.",
        "since": "2.0.0"
    },
    "sugar.scss.colo.class.#{$cls}": {
        "name": "#{$cls}",
        "namespace": "sugar.scss.colo.class",
        "filename": "_color.scss",
        "extension": "scss",
        "relPath": "src/scss/color/class/_color.scss",
        "directory": "src/scss/color/class",
        "type": "Classname",
        "description": "Specify the color to **#{$name}**",
        "since": "1.0.0"
    },
    "sugar.scss.color.class.#{$cls}": {
        "name": "#{$cls}",
        "namespace": "sugar.scss.color.class",
        "filename": "_color.scss",
        "extension": "scss",
        "relPath": "src/scss/color/class/_color.scss",
        "directory": "src/scss/color/class",
        "type": "class",
        "description": "Specify the background color to **#{$name}--#{$mod-name}**",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color-hue": {
        "name": "color-hue",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-hue.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-hue.scss",
        "directory": "src/scss/color/function",
        "type": "Function",
        "description": "Return the hue of the passed color",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color-lightness": {
        "name": "color-lightness",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-lightness.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-lightness.scss",
        "directory": "src/scss/color/function",
        "type": "Function",
        "description": "Return the lightness of the passed color",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color-modifier": {
        "name": "color-modifier",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-modifier.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-modifier.scss",
        "directory": "src/scss/color/function",
        "type": "function",
        "description": "Return the color in a modifier list"
    },
    "sugar.scss.core.color.color-opacity": {
        "name": "color-opacity",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-opacity.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-opacity.scss",
        "directory": "src/scss/color/function",
        "type": "Function",
        "description": "Return the opacity of the passed color",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color-saturation": {
        "name": "color-saturation",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-saturation.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-saturation.scss",
        "directory": "src/scss/color/function",
        "type": "Function",
        "description": "Return the saturation of the passed color",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color-schema": {
        "name": "color-schema",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-schema.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-schema.scss",
        "directory": "src/scss/color/function",
        "type": "mixin",
        "description": "Print out the scoped color schema css"
    },
    "sugar.scss.core.color.color-transparentize": {
        "name": "color-transparentize",
        "namespace": "sugar.scss.core.color",
        "filename": "_color-transparentize.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color-transparentize.scss",
        "directory": "src/scss/color/function",
        "type": "Function",
        "description": "Makes $color more transparent.\nThe $amount must be a number between 0 and 1 (inclusive). Decreases the alpha channel of $color by that amount.",
        "since": "1.0.0"
    },
    "sugar.scss.core.color.color": {
        "name": "color",
        "namespace": "sugar.scss.core.color",
        "filename": "_color.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_color.scss",
        "directory": "src/scss/color/function",
        "type": "function",
        "description": "Get a registered color by name or wrap a new color into a sugar.color call\nto manipulate it with ease.\nSupported actions :\n- hue {Deg}\n- lighten {Percent}\n- darken {Percent}\n- saturate {Percent}\n- desaturate {Percent}\n- grayscale {Boolean}\n- complement {Boolean}\n- invert {Boolean}\n- opacity {Percent}\n- mix {Color}\n- lightness {Percent}\n- saturation {Percent}"
    },
    "sugar.scss.core.color.has-color": {
        "name": "has-color",
        "namespace": "sugar.scss.core.color",
        "filename": "_has-color.scss",
        "extension": "scss",
        "relPath": "src/scss/color/function/_has-color.scss",
        "directory": "src/scss/color/function",
        "type": "function",
        "description": "Check if the provided color is a registered one or not"
    },
    "sugar.scss.core.color.docblock-colors": {
        "name": "docblock-colors",
        "namespace": "sugar.scss.core.color",
        "filename": "_docblock-colors.scss",
        "extension": "scss",
        "relPath": "src/scss/color/mixin/_docblock-colors.scss",
        "directory": "src/scss/color/mixin",
        "type": "mixin",
        "description": "Print the styleguide docblocks for the registered sugar colors"
    },
    "#{$namespace}.#{$name}": {
        "name": "#{$name}",
        "namespace": "#{$namespace}",
        "filename": "_docblock-colors.scss",
        "extension": "scss",
        "relPath": "src/scss/color/mixin/_docblock-colors.scss",
        "directory": "src/scss/color/mixin",
        "type": "color",
        "description": "This is the ```#{$name}``` registered color"
    },
    "#{$namespace}.#{$name}--#{$mod-name}": {
        "name": "#{$name}--#{$mod-name}",
        "namespace": "#{$namespace}",
        "filename": "_docblock-colors.scss",
        "extension": "scss",
        "relPath": "src/scss/color/mixin/_docblock-colors.scss",
        "directory": "src/scss/color/mixin",
        "type": "color",
        "description": "This is the ```#{$name}--${$mod-name}``` registered color"
    },
    "sugar.scss.component.mixin.card-classes": {
        "name": "card-classes",
        "namespace": "sugar.scss.component.mixin",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the css needed to display properly some cards.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.card.card-bare-classes": {
        "name": "card-bare-classes",
        "namespace": "sugar.scss.component.mixin.card",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the bare classes depending on the parameters you set.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.card.card-style-classes": {
        "name": "card-style-classes",
        "namespace": "sugar.scss.component.mixin.card",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the style classes depending on the parameters you set.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.card.card": {
        "name": "card",
        "namespace": "sugar.scss.component.mixin.card",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the properties for a button depending on the parameters you set.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.card.card-bare": {
        "name": "card-bare",
        "namespace": "sugar.scss.component.mixin.card",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the bare properties for a button depending on the parameters you set.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.card.card-style": {
        "name": "card-style",
        "namespace": "sugar.scss.component.mixin.card",
        "filename": "_card.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_card.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin generate all the style properties for a button depending on the parameters you set.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.inline-bar": {
        "name": "inline-bar",
        "namespace": "sugar.scss.component.mixin",
        "filename": "_inline-bar.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_inline-bar.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin allows you to display an inline styled bar.\nPretty simple you may think but this is very usefull for somple displays like\nshields display, links, etc...\nTheir's also the mixin ```inline-bar-bare``` and ```inline-bar-style``` that you\ncan use if you need more controls.",
        "since": "2.0.0"
    },
    "sugar.scss.component.mixin.user-avatar": {
        "name": "user-avatar",
        "namespace": "sugar.scss.component.mixin",
        "filename": "_user-avatar.scss",
        "extension": "scss",
        "relPath": "src/scss/component/mixin/_user-avatar.scss",
        "directory": "src/scss/component/mixin",
        "type": "Mixin",
        "description": "This mixin display a user-avatar with a name and an image.\nTheir's also the mixin ```user-avatar-bare``` and ```user-avatar-style``` that you\ncan use if you need more controls.",
        "since": "2.0.0"
    },
    "sugar.scss.core.class.classes": {
        "name": "classes",
        "namespace": "sugar.scss.core.class",
        "filename": "_classes.scss",
        "extension": "scss",
        "relPath": "src/scss/core/class/_classes.scss",
        "directory": "src/scss/core/class",
        "type": "mixin",
        "description": "Print out all wanted registered classes like padding helpers, margin helpers, font helpers, etc..."
    },
    "sugar.scss.core.class.scope": {
        "name": "scope",
        "namespace": "sugar.scss.core.class",
        "filename": "_scope.scss",
        "extension": "scss",
        "relPath": "src/scss/core/class/_scope.scss",
        "directory": "src/scss/core/class",
        "type": "mixin",
        "description": "This mixin allows you to wrap css code and specify which scope it refers to.\nThis will allows you to generate only the css scope you want like \"bare\", \"style\" or \"all\"",
        "since": "2.0.0"
    },
    "sugar.scss.core.var.var-define": {
        "name": "var-define",
        "namespace": "sugar.scss.core.var",
        "filename": "_define.scss",
        "extension": "scss",
        "relPath": "src/scss/core/var/_define.scss",
        "directory": "src/scss/core/var",
        "type": "Function",
        "description": "This mixin simply take a variable name (or doted path) and generate the css code to define this variable",
        "since": "2.0.0"
    },
    "sugar.scss.core.var.var-name": {
        "name": "var-name",
        "namespace": "sugar.scss.core.var",
        "filename": "_name.scss",
        "extension": "scss",
        "relPath": "src/scss/core/var/_name.scss",
        "directory": "src/scss/core/var",
        "type": "Function",
        "description": "This function simply take a variable name (or doted path) and generate the sugar scope name for it",
        "since": "2.0.0"
    },
    "sugar.scss.core.var.var-output": {
        "name": "var-output",
        "namespace": "sugar.scss.core.var",
        "filename": "_output.scss",
        "extension": "scss",
        "relPath": "src/scss/core/var/_output.scss",
        "directory": "src/scss/core/var",
        "type": "Mixin",
        "description": "This mixin simply print out the variables that you have defined in your project",
        "since": "2.0.0"
    },
    "sugar.scss.effect.mixin.effect-bubble": {
        "name": "effect-bubble",
        "namespace": "sugar.scss.effect.mixin",
        "filename": "_effect-bubble.scss",
        "extension": "scss",
        "relPath": "src/scss/effect/mixin/_effect-bubble.scss",
        "directory": "src/scss/effect/mixin",
        "type": "mixin",
        "description": "Create an arrow bubble effect",
        "since": "1.0.0"
    },
    "sugar.scss.effect.mixin.effect-depth": {
        "name": "effect-depth",
        "namespace": "sugar.scss.effect.mixin",
        "filename": "_effect-depth.scss",
        "extension": "scss",
        "relPath": "src/scss/effect/mixin/_effect-depth.scss",
        "directory": "src/scss/effect/mixin",
        "type": "mixin",
        "description": "Generate a drop shadow depending on the depth specified",
        "since": "1.0.0"
    },
    "sugar.scss.effect.mixin.effect-hey": {
        "name": "effect-hey",
        "namespace": "sugar.scss.effect.mixin",
        "filename": "_effect-hey.scss",
        "extension": "scss",
        "relPath": "src/scss/effect/mixin/_effect-hey.scss",
        "directory": "src/scss/effect/mixin",
        "type": "mixin",
        "description": "Create a poping dot effect to catch user attention on a particular item\nThis mixin affect the :before and :after pseudo selector of the item",
        "since": "1.0.0"
    },
    "sugar.scss.effect.mixin.effect-long-shadow": {
        "name": "effect-long-shadow",
        "namespace": "sugar.scss.effect.mixin",
        "filename": "_effect-long-shadow.scss",
        "extension": "scss",
        "relPath": "src/scss/effect/mixin/_effect-long-shadow.scss",
        "directory": "src/scss/effect/mixin",
        "type": "mixin",
        "description": "Generate a long shadow effect like [this](https://www.google.ch/search?q=long+shadow&espv=2&biw=2560&bih=1316&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjjne6x49LPAhVBHRQKHat8AW8Q_AUIBigB)",
        "since": "1.0.0"
    },
    "sugar.scss.effect.mixin.effect-side-lined": {
        "name": "effect-side-lined",
        "namespace": "sugar.scss.effect.mixin",
        "filename": "_effect-side-lined.scss",
        "extension": "scss",
        "relPath": "src/scss/effect/mixin/_effect-side-lined.scss",
        "directory": "src/scss/effect/mixin",
        "type": "mixin",
        "description": "Create side lines around an item",
        "since": "1.0.0"
    },
    "sugar.scss.filter.class.filter-classes": {
        "name": "filter-classes",
        "namespace": "sugar.scss.filter.class",
        "filename": "_filter.scss",
        "extension": "scss",
        "relPath": "src/scss/filter/class/_filter.scss",
        "directory": "src/scss/filter/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"filter\" related classes.",
        "since": "2.0.0"
    },
    "sugar.scss.filter.class.#{sel(fi-#{$name})}": {
        "name": "#{sel(fi-#{$name})}",
        "namespace": "sugar.scss.filter.class",
        "filename": "_filter.scss",
        "extension": "scss",
        "relPath": "src/scss/filter/class/_filter.scss",
        "directory": "src/scss/filter/class",
        "type": "Classname",
        "description": "Apply the filter **#{$name}**",
        "since": "1.0.0"
    },
    "sugar.scss.map.function.filter-map": {
        "name": "filter-map",
        "namespace": "sugar.scss.map.function",
        "filename": "_filter-map.scss",
        "extension": "scss",
        "relPath": "src/scss/filter/function/_filter-map.scss",
        "directory": "src/scss/filter/function",
        "type": "function",
        "description": "Take a filter as parameter and parse it to return the {Map} corresponding\nThe $filter parameter can be either a registered filter name or a filter formated like `filterName(filterValue)`"
    },
    "sugar.scss.filter.function.filter": {
        "name": "filter",
        "namespace": "sugar.scss.filter.function",
        "filename": "_filter.scss",
        "extension": "scss",
        "relPath": "src/scss/filter/function/_filter.scss",
        "directory": "src/scss/filter/function",
        "type": "function",
        "description": "Return a list with all the filters that are passed as argument\nThis will use the [./_s-filter-map.scss] function to parse the filters"
    },
    "sugar.scss.filter.mixin.filter": {
        "name": "filter",
        "namespace": "sugar.scss.filter.mixin",
        "filename": "_filter.scss",
        "extension": "scss",
        "relPath": "src/scss/filter/mixin/_filter.scss",
        "directory": "src/scss/filter/mixin",
        "type": "mixin",
        "description": "Print out a list with all the filters that are passed as argument\nThis will use the [../functions/_filter-map.scss] function to parse the filters"
    },
    "sugar.scss.font.class.font-classes": {
        "name": "font-classes",
        "namespace": "sugar.scss.font.class",
        "filename": "_font.scss",
        "extension": "scss",
        "relPath": "src/scss/font/class/_font.scss",
        "directory": "src/scss/font/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"font\" related classes.",
        "since": "2.0.0"
    },
    "sugar.scss.font.class.#{sel(font-#{$name})}": {
        "name": "#{sel(font-#{$name})}",
        "namespace": "sugar.scss.font.class",
        "filename": "_font.scss",
        "extension": "scss",
        "relPath": "src/scss/font/class/_font.scss",
        "directory": "src/scss/font/class",
        "type": "Classname",
        "description": "Apply the font size **#{$name}** (**#{$size}**)",
        "since": "1.0.0"
    },
    "sugar.scss.font.function.font-family": {
        "name": "font-family",
        "namespace": "sugar.scss.font.function",
        "filename": "_font-family.scss",
        "extension": "scss",
        "relPath": "src/scss/font/function/_font-family.scss",
        "directory": "src/scss/font/function",
        "type": "function",
        "description": "Return the font-family string or a registered font"
    },
    "sugar.scss.font.function.font": {
        "name": "font",
        "namespace": "sugar.scss.font.function",
        "filename": "_font.scss",
        "extension": "scss",
        "relPath": "src/scss/font/function/_font.scss",
        "directory": "src/scss/font/function",
        "type": "function",
        "description": "Return the font {Map} that correspond to the passed arguments"
    },
    "sugar.scss.font.mixin.font-face": {
        "name": "font-face",
        "namespace": "sugar.scss.font.mixin",
        "filename": "_font-face.scss",
        "extension": "scss",
        "relPath": "src/scss/font/mixin/_font-face.scss",
        "directory": "src/scss/font/mixin",
        "type": "mixin",
        "description": "Helper to print a font-face"
    },
    "sugar.scss.font.mixin.font": {
        "name": "font",
        "namespace": "sugar.scss.font.mixin",
        "filename": "_font.scss",
        "extension": "scss",
        "relPath": "src/scss/font/mixin/_font.scss",
        "directory": "src/scss/font/mixin",
        "type": "mixin",
        "description": "Print all the fonts properties that correspond to the passed arguments"
    },
    "sugar.scss.form.mixin.input-placeholder": {
        "name": "input-placeholder",
        "namespace": "sugar.scss.form.mixin",
        "filename": "_input-placeholder.scss",
        "extension": "scss",
        "relPath": "src/scss/form/mixin/_input-placeholder.scss",
        "directory": "src/scss/form/mixin",
        "type": "mixin",
        "description": "Set the placeholder style for inputs, etc...",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-block-classes": {
        "name": "helper-block-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_block.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_block.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"block\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(block-center)}": {
        "name": "#{sel(block-center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_block.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_block.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Set the element to as ```display:block``` and center it",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-border-classes": {
        "name": "helper-border-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_border.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_border.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"border\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{$cls}": {
        "name": "#{$cls}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_border.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_border.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Remove the y (top and bottom) borders",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-clear-classes": {
        "name": "helper-clear-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clear.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clear.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"clear\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear-left)}": {
        "name": "#{sel(clear-left)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clear.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clear.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Clear the left float on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear-right)}": {
        "name": "#{sel(clear-right)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clear.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clear.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Clear the right float on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear)}": {
        "name": "#{sel(clear)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clear.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clear.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Clear both float on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-clearfix-classes": {
        "name": "helper-clearfix-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"clearfix\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(clearfix)}": {
        "name": "#{sel(clearfix)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the micro clearfix on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clearfix-float)}": {
        "name": "#{sel(clearfix-float)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the float clearfix on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clearfix-micro)}": {
        "name": "#{sel(clearfix-micro)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the micro clearfix on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clearfix-overflow)}": {
        "name": "#{sel(clearfix-overflow)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the overflow clearfix on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clearfix-facebook)}": {
        "name": "#{sel(clearfix-facebook)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_clearfix.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the facebook clearfix on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-display-classes": {
        "name": "helper-display-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"display\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(block)}": {
        "name": "#{sel(block)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element as ```block```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(inline)}": {
        "name": "#{sel(inline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element as ```inline```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(inline-block)}": {
        "name": "#{sel(inline-block)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element as ```inline-block```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(show)}": {
        "name": "#{sel(show)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element as ```block```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(show-inline)}": {
        "name": "#{sel(show-inline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element as ```inline-block```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(hidden)}": {
        "name": "#{sel(hidden)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Hide the element by setting the display to ```none```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(hide)}": {
        "name": "#{sel(hide)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Hide the element by setting the display to ```none```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(visible)}": {
        "name": "#{sel(visible)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element by setting the visibility to ```visible```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(invisible)}": {
        "name": "#{sel(invisible)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Display the element by setting the visibility to ```hidden```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(visually-hidden)}": {
        "name": "#{sel(visually-hidden)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_display.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_display.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Hide the element from display but not for SEO.\nThis class use some tricks to make the element dissapear without using some ```display:none;```, etc...",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-flex-classes": {
        "name": "helper-flex-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"flex\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex)}": {
        "name": "#{sel(flex)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the display flex styling to the element",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-inline)}": {
        "name": "#{sel(flex-inline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the display flex-inline styling to the element",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-justify-start)}": {
        "name": "#{sel(flex-justify-start)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```justify-content``` to **start**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-justify-end)}": {
        "name": "#{sel(flex-justify-end)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```justify-content``` to **end**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-justify-center)}": {
        "name": "#{sel(flex-justify-center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```justify-content``` to **center**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-justify-between)}": {
        "name": "#{sel(flex-justify-between)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```justify-content``` to **space-between**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-justify-around)}": {
        "name": "#{sel(flex-justify-around)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```justify-content``` to **space-around**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-start)}": {
        "name": "#{sel(flex-align-start)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-items``` to **flex-start**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-end)}": {
        "name": "#{sel(flex-align-end)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-items``` to **flex-end**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-center)}": {
        "name": "#{sel(flex-align-center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-items``` to **center**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-baseline)}": {
        "name": "#{sel(flex-align-baseline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-items``` to **baseline**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-stretch)}": {
        "name": "#{sel(flex-align-stretch)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-items``` to **stretch**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-self-start)}": {
        "name": "#{sel(flex-align-self-start)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-self``` to **flex-start**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-self-end)}": {
        "name": "#{sel(flex-align-self-end)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-self``` to **flex-end**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-self-center)}": {
        "name": "#{sel(flex-align-self-center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-self``` to **flex-center**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-self-baseline)}": {
        "name": "#{sel(flex-align-self-baseline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-self``` to **flex-baseline**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-align-self-stretch)}": {
        "name": "#{sel(flex-align-self-stretch)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the property ```align-self``` to **flex-stretch**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-nowrap)}": {
        "name": "#{sel(flex-nowrap)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the ```flex-wrap``` property to **nowrap**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-wrap)}": {
        "name": "#{sel(flex-wrap)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the ```flex-wrap``` property to **wrap**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-wrap-reverse)}": {
        "name": "#{sel(flex-wrap-reverse)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Apply the ```flex-wrap``` property to **wrap-reverse**",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(flex-order-#{i})}": {
        "name": "#{sel(flex-order-#{i})}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_flex.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_flex.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Set the order on a specific flex item.\nYou will have <primary>#{$ordersCount}</primary> available. This can be\nchanged by updating the *config.scss.helpers.flex.order-count** configuration.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-link-classes": {
        "name": "helper-link-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_link.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_link.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"link\" related helper classes.",
        "since": "2.0.0"
    },
    ")}            sugar.scss.helper.class.#{sel(link-stretched": {
        "name": "#{sel(link-stretched",
        "namespace": ")}            sugar.scss.helper.class",
        "filename": "_link.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_link.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Make a link become the size of it's parent (absolute, relative)\nbut only using the :after pseudo class so visually it will stay the same...",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-margin-classes": {
        "name": "helper-margin-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"margin\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.core.class.#{$cname}": {
        "name": "#{$cname}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set the **top and bottom** padding to the **#{$name}**",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-m)}": {
        "name": "#{sel(no-m)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset all margins",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-top)}": {
        "name": "#{sel(no-margin-top)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **top** margin",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-right)}": {
        "name": "#{sel(no-margin-right)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **right** margin",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-bottom)}": {
        "name": "#{sel(no-margin-bottom)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **bottom** margin",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-left)}": {
        "name": "#{sel(no-margin-left)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **left** margin",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-x)}": {
        "name": "#{sel(no-margin-x)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **left** and **right** margins",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-margin-y)}": {
        "name": "#{sel(no-margin-y)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_margin.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_margin.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **top** and **bottom** margins",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-media-classes": {
        "name": "helper-media-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_media-object.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_media-object.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"media object\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(media-object)} #{sel(media-object--center)} #{sel(media-object__content)}": {
        "name": "#{sel(media-object)} #{sel(media-object--center)} #{sel(media-object__content)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_media-object.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_media-object.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Famous media object class",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-overflow-classes": {
        "name": "helper-overflow-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_overflow.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_overflow.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"overflow\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(overflow-hidden)}": {
        "name": "#{sel(overflow-hidden)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_overflow.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_overflow.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set the overflow to hidden",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(overflow-auto)}": {
        "name": "#{sel(overflow-auto)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_overflow.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_overflow.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set the overflow to auto",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-padding-classes": {
        "name": "helper-padding-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"padding\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p)}": {
        "name": "#{sel(no-p)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Reset **all** paddings",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-t)}": {
        "name": "#{sel(no-p-t)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Reset **top** padding",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-r)}": {
        "name": "#{sel(no-p-r)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Reset **right** padding",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-b)}": {
        "name": "#{sel(no-p-b)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **bottom** padding",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-l)}": {
        "name": "#{sel(no-p-l)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **left** padding",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-s)}": {
        "name": "#{sel(no-p-s)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **left** and **right** paddings",
        "since": "1.0.0"
    },
    "sugar.scss.core.class.#{sel(no-p-y)}": {
        "name": "#{sel(no-p-y)}",
        "namespace": "sugar.scss.core.class",
        "filename": "_padding.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_padding.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Reset **top** and **bottom** paddings",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-pointer-classes": {
        "name": "helper-pointer-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pointer.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pointer.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"pointer\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(pointer-events-none)}": {
        "name": "#{sel(pointer-events-none)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pointer.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pointer.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable any pointer events",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(pointer-events-all)}": {
        "name": "#{sel(pointer-events-all)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pointer.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pointer.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Enable any pointer events",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-position-classes": {
        "name": "helper-position-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"position\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(relative)}": {
        "name": "#{sel(relative)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```relative```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(absolute)}": {
        "name": "#{sel(absolute)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```absolute```",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(fixed)}": {
        "name": "#{sel(fixed)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```fixed```",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(fixed-top)}": {
        "name": "#{sel(fixed-top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```fixed``` top",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(fixed-bottom)}": {
        "name": "#{sel(fixed-bottom)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```fixed``` bottom",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(sticky)}": {
        "name": "#{sel(sticky)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```sticky```",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(sticky-top)}": {
        "name": "#{sel(sticky-top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_position.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set an element position as ```sticky``` top",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-pull-classes": {
        "name": "helper-pull-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pull.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pull.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"pull\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(pull-left)}": {
        "name": "#{sel(pull-left)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pull.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pull.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Allows you to pull an element to the left side",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(pull-right)}": {
        "name": "#{sel(pull-right)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pull.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pull.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Allows you to pull an element to the right side",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(pull-none)}": {
        "name": "#{sel(pull-none)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_pull.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_pull.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Reset the pull (float) styling on the element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-ratio-classes": {
        "name": "helper-ratio-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_ratio.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_ratio.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"ratio\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{$cname}": {
        "name": "#{$cname}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_ratio.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_ratio.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set the **ratio** to the **#{$name}**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-screen-reader-classes": {
        "name": "helper-screen-reader-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_screen-reader.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_screen-reader.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"screen-reader\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(screen-reader-only)}": {
        "name": "#{sel(screen-reader-only)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_screen-reader.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_screen-reader.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Display the element only on screen readers",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-size-classes": {
        "name": "helper-size-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"size\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover)}": {
        "name": "#{sel(abs-cover)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set a size that will cover the entire parent surface by positionning it in absolute",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--top)}": {
        "name": "#{sel(abs-cover--top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the top",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--middle)}": {
        "name": "#{sel(abs-cover--middle)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the middle",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--bottom)}": {
        "name": "#{sel(abs-cover--bottom)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the bottom",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--left)}": {
        "name": "#{sel(abs-cover--left)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the left",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--center)}": {
        "name": "#{sel(abs-cover--center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the center",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-cover--right)}": {
        "name": "#{sel(abs-cover--right)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-cover\" content to the right",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain)}": {
        "name": "#{sel(abs-contain)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set a size that will contain the entire parent surface by positionning it in absolute",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--top)}": {
        "name": "#{sel(abs-contain--top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the top",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--middle)}": {
        "name": "#{sel(abs-contain--middle)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the middle",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--bottom)}": {
        "name": "#{sel(abs-contain--bottom)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the bottom",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--left)}": {
        "name": "#{sel(abs-contain--left)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the left",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--center)}": {
        "name": "#{sel(abs-contain--center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the center",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-contain--right)}": {
        "name": "#{sel(abs-contain--right)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "This will align an \"abs-contain\" content to the right",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(abs-fit)}": {
        "name": "#{sel(abs-fit)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_size.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set a size that will fit the entire parent surface by positionning it in absolute",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-text-classes": {
        "name": "helper-text-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"text\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-#{$size})}": {
        "name": "#{sel(t-#{$size})}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "class",
        "description": "Set the size **#{$size}** relative to the root element",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-#{$size}-rel)}": {
        "name": "#{sel(t-#{$size}-rel)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Set the size **#{$size}** relative to my parent",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-hidden)}": {
        "name": "#{sel(t-hidden)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Hide the text",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-truncate)}": {
        "name": "#{sel(t-truncate)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Truncate the text",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-left)}": {
        "name": "#{sel(t-left)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align the text to the left",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-right)}": {
        "name": "#{sel(t-right)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align the text to the right",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-center)}": {
        "name": "#{sel(t-center)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align the text to the center",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-justify)}": {
        "name": "#{sel(t-justify)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text justified",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-lowercase)}": {
        "name": "#{sel(t-lowercase)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Transform the text to lowercase",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-uppercase)}": {
        "name": "#{sel(t-uppercase)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Transform the text to uppercase",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-capitalize)}": {
        "name": "#{sel(t-capitalize)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Capizalize the words",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-bold)}": {
        "name": "#{sel(t-bold)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text bold",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-bolder)}": {
        "name": "#{sel(t-bolder)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text bolder",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-normal)}": {
        "name": "#{sel(t-normal)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text normal",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-light)}": {
        "name": "#{sel(t-light)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text light",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-lighter)}": {
        "name": "#{sel(t-lighter)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text lighter",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-italic)}": {
        "name": "#{sel(t-italic)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Make the text italic",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-#{$name})}": {
        "name": "#{sel(t-#{$name})}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Apply the font \"#{$name}\"",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-reset)}": {
        "name": "#{sel(t-reset)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Reset the text (font-weight, family, color, etc...)",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-decoration-none)}": {
        "name": "#{sel(t-decoration-none)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Remove the text decoration",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-underline)}": {
        "name": "#{sel(t-underline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Apply the decoration underline",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-line-through)}": {
        "name": "#{sel(t-line-through)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Apply the decoration line-through",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(t-overline)}": {
        "name": "#{sel(t-overline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_text.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_text.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Apply the decoration overline",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-transmation-classes": {
        "name": "helper-transmation-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"transmation\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(no-transition)}": {
        "name": "#{sel(no-transition)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the transitions **only on the element**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear-transition)}": {
        "name": "#{sel(clear-transition)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the transitions **on the element and all his children**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(no-animation)}": {
        "name": "#{sel(no-animation)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the animations **only on the element**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear-animation)}": {
        "name": "#{sel(clear-animation)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the transitions **on the element and all his children**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(no-transmation)}": {
        "name": "#{sel(no-transmation)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the animations and transitions **only on the element**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(clear-transmation)}": {
        "name": "#{sel(clear-transmation)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_transmation.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_transmation.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the animations and transitions **on the element and all his children**",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.helper-user-select-classes": {
        "name": "helper-user-select-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_user-select.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_user-select.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"user-select\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(user-select-none)}": {
        "name": "#{sel(user-select-none)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_user-select.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_user-select.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Disable the selection for this element",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(user-select-all)}": {
        "name": "#{sel(user-select-all)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_user-select.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_user-select.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Enable the selection for this element",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.#{sel(user-select-text)}": {
        "name": "#{sel(user-select-text)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_user-select.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_user-select.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "The text can be selected only",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class.helper-vertical-align-classes": {
        "name": "helper-vertical-align-classes",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"vertical-align\" related helper classes.",
        "since": "2.0.0"
    },
    "sugar.scss.helper.class..#{sel(align-top)}": {
        "name": ".#{sel(align-top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically top",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class..#{sel(align-bottom)}": {
        "name": ".#{sel(align-bottom)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically bottom",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class..#{sel(align-middle)}": {
        "name": ".#{sel(align-middle)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically middle",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class..#{sel(align-baseline)}": {
        "name": ".#{sel(align-baseline)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically baseline",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(align-text-top)}": {
        "name": "#{sel(align-text-top)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically text-top",
        "since": "1.0.0"
    },
    "sugar.scss.helper.class.#{sel(align-text-bottom)}": {
        "name": "#{sel(align-text-bottom)}",
        "namespace": "sugar.scss.helper.class",
        "filename": "_vertical-align.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/class/_vertical-align.scss",
        "directory": "src/scss/helper/class",
        "type": "Classname",
        "description": "Align vertically text-bottom",
        "since": "1.0.0"
    },
    "sugar.scss.helper.function.is": {
        "name": "is",
        "namespace": "sugar.scss.helper.function",
        "filename": "_is.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/function/_is.scss",
        "directory": "src/scss/helper/function",
        "type": "function",
        "description": "Check if the passed value is of a certain type\n\nHere's the available types that you can check\n- mixed => mean anything\n- null\n- url\n- px\n- pt\n- rem\n- em\n- percent |Â %\n- vw\n- vh\n- ex\n- ch\n- cm\n- mm\n- in\n- pc\n- s |Â second\n- boolean |Â bool\n- function\n- number\n- int |Â integer\n- string\n- color\n- list\n- map\n- deg |Â degree\n- list-{type} => check if is a list of the specified type\n- map-{type} => check if is a map of the specified type",
        "since": "1.0.0"
    },
    "sugar.scss.helper.function.type-of": {
        "name": "type-of",
        "namespace": "sugar.scss.helper.function",
        "filename": "_type-of.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/function/_type-of.scss",
        "directory": "src/scss/helper/function",
        "type": "function",
        "description": "Get the type of the passed variable",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.border-radius": {
        "name": "border-radius",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_border-radius.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_border-radius.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Apply some border radius",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.center-block": {
        "name": "center-block",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_center-block.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_center-block.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Center a block element using margins etc...",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.clearfix": {
        "name": "clearfix",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_clearfix.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_clearfix.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Apply a clearfix on the element.\nSupported methods:\n- micro\n- facebook\n- float\n- micro",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.corner": {
        "name": "corner",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_corner.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_corner.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Apply some border radius",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.fit": {
        "name": "fit",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_fit.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_fit.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Make the element fit his container.",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.normalize": {
        "name": "normalize",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_normalize.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_normalize.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Print out a normalize css",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.position": {
        "name": "position",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_position.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_position.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Set a complexe position styling like position:absolute; top:0; left:100%; etc...\nThis mixin gives you some shortcuts to align your element top, bottom, middle, center, etc...",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.reset": {
        "name": "reset",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_reset.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_reset.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Print out a reset css",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.sanitize": {
        "name": "sanitize",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_sanitize.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_sanitize.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Print out a sanitize css",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.size": {
        "name": "size",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_size.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_size.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Quicky and easily set simple or complexe size to any element",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.translate": {
        "name": "translate",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_translate.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_translate.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Quicky set some translates",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.vertical-aligner": {
        "name": "vertical-aligner",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_vertical-aligner.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_vertical-aligner.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Vertically align content by using the inline-block middle trick",
        "since": "1.0.0"
    },
    "sugar.scss.helper.mixin.visually-hidden": {
        "name": "visually-hidden",
        "namespace": "sugar.scss.helper.mixin",
        "filename": "_visually-hidden.scss",
        "extension": "scss",
        "relPath": "src/scss/helper/mixin/_visually-hidden.scss",
        "directory": "src/scss/helper/mixin",
        "type": "mixin",
        "description": "Hide an element only visually. This ensure that the element is still correctly displayed in the page for SEO\nbut will not being visible to the user",
        "since": "1.0.0"
    },
    "sugar.scss.image.mixin.background": {
        "name": "background",
        "namespace": "sugar.scss.image.mixin",
        "filename": "_background.scss",
        "extension": "scss",
        "relPath": "src/scss/image/mixin/_background.scss",
        "directory": "src/scss/image/mixin",
        "type": "mixin",
        "description": "Helper mixin to set a background image",
        "since": "1.0.0"
    },
    "sugar.scss.image.mixin.image-rendering": {
        "name": "image-rendering",
        "namespace": "sugar.scss.image.mixin",
        "filename": "_image-rendering.scss",
        "extension": "scss",
        "relPath": "src/scss/image/mixin/_image-rendering.scss",
        "directory": "src/scss/image/mixin",
        "type": "mixin",
        "description": "Set how to render the image",
        "since": "1.0.0"
    },
    "sugar.scss.layout.function.columns-map": {
        "name": "columns-map",
        "namespace": "sugar.scss.layout.function",
        "filename": "_columns-map.scss",
        "extension": "scss",
        "relPath": "src/scss/layout/function/_columns-map.scss",
        "directory": "src/scss/layout/function",
        "type": "function",
        "description": "Return the Map representation of a columns properties",
        "since": "1.0.0"
    },
    "sugar.scss.layout.mixin.columns": {
        "name": "columns",
        "namespace": "sugar.scss.layout.mixin",
        "filename": "_columns.scss",
        "extension": "scss",
        "relPath": "src/scss/layout/mixin/_columns.scss",
        "directory": "src/scss/layout/mixin",
        "type": "mixin",
        "description": "Create a column layout my setting each columns properties at once",
        "since": "1.0.0"
    },
    "sugar.scss.layout.mixin.ratio": {
        "name": "ratio",
        "namespace": "sugar.scss.layout.mixin",
        "filename": "_ratio.scss",
        "extension": "scss",
        "relPath": "src/scss/layout/mixin/_ratio.scss",
        "directory": "src/scss/layout/mixin",
        "type": "mixin",
        "description": "Apply a ratio css styling. This will apply a before or after content that will make the element keep the specified ratio.\nThe content need to be displayed as absolute top left and fit in size.",
        "since": "1.0.0"
    },
    "sugar.scss.link.mixin.link-stretched": {
        "name": "link-stretched",
        "namespace": "sugar.scss.link.mixin",
        "filename": "_link-stretched.scss",
        "extension": "scss",
        "relPath": "src/scss/link/mixin/_link-stretched.scss",
        "directory": "src/scss/link/mixin",
        "type": "Mixin",
        "description": "Make a link become the size of it's parent (absolute, relative)\nbut only using the :after pseudo class so visually it will stay the same...",
        "since": "2.0.0"
    },
    "sugar.scss.list.mixin.list-bullet": {
        "name": "list-bullet",
        "namespace": "sugar.scss.list.mixin",
        "filename": "_list-bullet.scss",
        "extension": "scss",
        "relPath": "src/scss/list/mixin/_list-bullet.scss",
        "directory": "src/scss/list/mixin",
        "type": "mixin",
        "description": "Set how the list bullet has to be displayed.",
        "since": "1.0.0"
    },
    "sugar.scss.list.mixin.list-start": {
        "name": "list-start",
        "namespace": "sugar.scss.list.mixin",
        "filename": "_list-start.scss",
        "extension": "scss",
        "relPath": "src/scss/list/mixin/_list-start.scss",
        "directory": "src/scss/list/mixin",
        "type": "mixin",
        "description": "Start a new list",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-bars": {
        "name": "loader-bars",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-bars.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-bars.scss",
        "directory": "src/scss/loader/mixin",
        "type": "function",
        "description": "Generate a full animated, single element, bars loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-circle": {
        "name": "loader-circle",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-circle.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-circle.scss",
        "directory": "src/scss/loader/mixin",
        "type": "Mixin",
        "description": "Generate a full animated, single element, circle loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-couch-potato": {
        "name": "loader-couch-potato",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-couch-potato.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-couch-potato.scss",
        "directory": "src/scss/loader/mixin",
        "type": "function",
        "description": "Generate a full animated, single element, couch-potato style loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-flip-ball": {
        "name": "loader-flip-ball",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-flip-ball.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-flip-ball.scss",
        "directory": "src/scss/loader/mixin",
        "type": "Mixin",
        "description": "Generate a full animated, single element, flip ball style loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-grid": {
        "name": "loader-grid",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-grid.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-grid.scss",
        "directory": "src/scss/loader/mixin",
        "type": "function",
        "description": "Generate a grid style loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-radial": {
        "name": "loader-radial",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-radial.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-radial.scss",
        "directory": "src/scss/loader/mixin",
        "type": "function",
        "description": "Generate a radial styled loader",
        "since": "1.0.0"
    },
    "sugar.scss.loader.mixin.loader-spinner": {
        "name": "loader-spinner",
        "namespace": "sugar.scss.loader.mixin",
        "filename": "_loader-spinner.scss",
        "extension": "scss",
        "relPath": "src/scss/loader/mixin/_loader-spinner.scss",
        "directory": "src/scss/loader/mixin",
        "type": "function",
        "description": "Generate a spinner loader",
        "since": "1.0.0"
    },
    "sugar.scss.core.look-and-feel.lnf": {
        "name": "lnf",
        "namespace": "sugar.scss.core.look-and-feel",
        "filename": "_lnf.scss",
        "extension": "scss",
        "relPath": "src/scss/look-and-feel/function/_lnf.scss",
        "directory": "src/scss/look-and-feel/function",
        "type": "function",
        "description": "Alias to the [./_look-and-feel.scss] function\n\nReturn a settings.look-and-feel stack value"
    },
    "sugar.scss.core.look-and-feel.look-and-feel": {
        "name": "look-and-feel",
        "namespace": "sugar.scss.core.look-and-feel",
        "filename": "_look-and-feel.scss",
        "extension": "scss",
        "relPath": "src/scss/look-and-feel/function/_look-and-feel.scss",
        "directory": "src/scss/look-and-feel/function",
        "type": "function",
        "description": "Return a settings.look-and-feel stack value"
    },
    "sugar.scss.meta.function.to-base64-url": {
        "name": "to-base64-url",
        "namespace": "sugar.scss.meta.function",
        "filename": "_to-base64-url.scss",
        "extension": "scss",
        "relPath": "src/scss/meta/function/_to-base64-url.scss",
        "directory": "src/scss/meta/function",
        "type": "function",
        "description": "Convert the passed svg code to an embadable base64 url",
        "since": "1.0.0"
    },
    "sugar.scss.meta.function.to-base64": {
        "name": "to-base64",
        "namespace": "sugar.scss.meta.function",
        "filename": "_to-base64.scss",
        "extension": "scss",
        "relPath": "src/scss/meta/function/_to-base64.scss",
        "directory": "src/scss/meta/function",
        "type": "function",
        "description": "Convert the passed svg code to base64 embedable url",
        "since": "1.0.0"
    },
    "sugar.scss.responsive.function.mediaQueryString": {
        "name": "mediaQueryString",
        "namespace": "sugar.scss.responsive.function",
        "filename": "_mediaQueryString.scss",
        "extension": "scss",
        "relPath": "src/scss/responsive/function/_mediaQueryString.scss",
        "directory": "src/scss/responsive/function",
        "type": "Function",
        "description": "This function return the media query string depending on the query asked.\nThe queries are defined in the config.media.queries configuration.",
        "since": "2.0.0"
    },
    "sugar.scss.responsive.mixin.init-body-media-queries": {
        "name": "init-body-media-queries",
        "namespace": "sugar.scss.responsive.mixin",
        "filename": "_initBodyMediaQueries.scss",
        "extension": "scss",
        "relPath": "src/scss/responsive/mixin/_initBodyMediaQueries.scss",
        "directory": "src/scss/responsive/mixin",
        "type": "Mixin",
        "description": "This mixin apply on the body all the media queries defines in the @config.media.queries configuration.\nThis mixin apply an animation that do nothing but will dispatch the animationEnd event catchable by javascript\nSo it will be easy to use the \"mediaQuery\" function that you can find in the \"@coffeekraken/sugar/js/responsive/mediaQuery\"\nnamespace.",
        "since": "2.0.0"
    },
    "sugar.scss.responsive.media": {
        "name": "media",
        "namespace": "sugar.scss.responsive",
        "filename": "_media.old.scss",
        "extension": "old",
        "relPath": "src/scss/responsive/mixin/_media.old.scss",
        "directory": "src/scss/responsive/mixin",
        "type": "mixin",
        "description": "Easy to use media query mixin that support cssua classes to target specific browsers"
    },
    "sugar.scss.responsive.mixin.mediaQuery": {
        "name": "mediaQuery",
        "namespace": "sugar.scss.responsive.mixin",
        "filename": "_mediaQuery.scss",
        "extension": "scss",
        "relPath": "src/scss/responsive/mixin/_mediaQuery.scss",
        "directory": "src/scss/responsive/mixin",
        "type": "Mixin",
        "description": "This mixin allows you to specify easily which media (defined in the media.config.js file) has to be targeted.\nYou can specify multiple medias if needed and specify how you want to target the specific media.\nCheck out the examples for more info.\nBy default, the Sugar toolkit offer these medias to be targeted:\n- mobile\n- mobile-portrait\n- mobile-landscape\n- tablet\n- tablet-portrait\n- tablet-landscape\n- desktop\n\nYou can use some \"actions\" to specify your target. The available actions are:\n- '>': Greater than...\n- '<': Lower than...\n- '=': Equal...\n- '>=': Greater or equal...\n- '>=': Lower or equal...\n\nYour media queries can be something like this: '<tablet', '>mobile <desktop', '=tablet-landscape'.\nIf you don't specicy any action in your queries, by default the \"defaultAction\" property in the media.config.js file will\nbe applied and this default action is setted to \">=\". This is setted like this to work in \"mobile first\" schema by default.",
        "since": "2.0.0"
    },
    "sugar.scss.screen-reader.mixin.screen-reader-only": {
        "name": "screen-reader-only",
        "namespace": "sugar.scss.screen-reader.mixin",
        "filename": "_screen-reader-only.scss",
        "extension": "scss",
        "relPath": "src/scss/screen-reader/mixin/_screen-reader-only.scss",
        "directory": "src/scss/screen-reader/mixin",
        "type": "Mixin",
        "description": "Make the element visible only for the screen readers",
        "since": "2.0.0"
    },
    "sugar.scss.core.selector.function._": {
        "name": "_",
        "namespace": "sugar.scss.core.selector.function",
        "filename": "_sel.scss",
        "extension": "scss",
        "relPath": "src/scss/selector/function/_sel.scss",
        "directory": "src/scss/selector/function",
        "type": "function",
        "description": "Selector wrapper to be able to simply generate all of your classes with a prefix for example.\nThis mixin take his settings from @config.classes.generate.prefix"
    },
    "sugar.scss.core.selector.function.selector": {
        "name": "selector",
        "namespace": "sugar.scss.core.selector.function",
        "filename": "_selector.scss",
        "extension": "scss",
        "relPath": "src/scss/selector/function/_selector.scss",
        "directory": "src/scss/selector/function",
        "type": "function",
        "description": "Process selector to avoid having --default, etc..."
    },
    "sugar.scss.shape.mixin.round-overflow": {
        "name": "round-overflow",
        "namespace": "sugar.scss.shape.mixin",
        "filename": "_round-overflow.scss",
        "extension": "scss",
        "relPath": "src/scss/shape/mixin/_round-overflow.scss",
        "directory": "src/scss/shape/mixin",
        "type": "mixin",
        "description": "Apply some css to have a rounded element with already an overflow on it",
        "since": "1.0.0"
    },
    "sugar.scss.shape.mixin.triangle": {
        "name": "triangle",
        "namespace": "sugar.scss.shape.mixin",
        "filename": "_triangle.scss",
        "extension": "scss",
        "relPath": "src/scss/shape/mixin/_triangle.scss",
        "directory": "src/scss/shape/mixin",
        "type": "mixin",
        "description": "Generate a triangle shape",
        "since": "1.0.0"
    },
    "sugar.scss.transition.class.transition-classes": {
        "name": "transition-classes",
        "namespace": "sugar.scss.transition.class",
        "filename": "_transition.scss",
        "extension": "scss",
        "relPath": "src/scss/transition/class/_transition.scss",
        "directory": "src/scss/transition/class",
        "type": "Mixin",
        "description": "This mixin generate all the \"transition\" related classes.",
        "since": "2.0.0"
    },
    "sugar.scss.transition.class.#{sel(tr-#{$name})}": {
        "name": "#{sel(tr-#{$name})}",
        "namespace": "sugar.scss.transition.class",
        "filename": "_transition.scss",
        "extension": "scss",
        "relPath": "src/scss/transition/class/_transition.scss",
        "directory": "src/scss/transition/class",
        "type": "Classname",
        "description": "Apply the transition **#{$name}**",
        "since": "1.0.0"
    },
    "sugar.scss.core.transition.function.transition-map": {
        "name": "transition-map",
        "namespace": "sugar.scss.core.transition.function",
        "filename": "_transition-map.scss",
        "extension": "scss",
        "relPath": "src/scss/transition/function/_transition-map.scss",
        "directory": "src/scss/transition/function",
        "type": "function",
        "description": "Take a transition as parameter and parse it to return the {Map} corresponding\nThe $transition parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transition argument will be parsed with the [./_parse-properties.scss] function.",
        "since": "1.0.0"
    },
    "sugar.scss.core.transition.function.transition": {
        "name": "transition",
        "namespace": "sugar.scss.core.transition.function",
        "filename": "_transition.scss",
        "extension": "scss",
        "relPath": "src/scss/transition/function/_transition.scss",
        "directory": "src/scss/transition/function",
        "type": "function",
        "description": "Take a transition as parameter and parse it to return the {List} corresponding\nThe $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transitions argument will be parsed with the [./_parse-properties.scss] function.",
        "since": "1.0.0"
    },
    "sugar.scss.core.transition.mixin.transition": {
        "name": "transition",
        "namespace": "sugar.scss.core.transition.mixin",
        "filename": "_transition.scss",
        "extension": "scss",
        "relPath": "src/scss/transition/mixin/_transition.scss",
        "directory": "src/scss/transition/mixin",
        "type": "mixin",
        "description": "Take a transition as parameter and print the corresponding transition property\nThe $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transitions argument will be parsed with the [./_parse-properties.scss] function.",
        "since": "1.0.0"
    },
    "sugar.scss.typography.function.rhythm-width": {
        "name": "rhythm-width",
        "namespace": "sugar.scss.typography.function",
        "filename": "_rhythm-width.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/function/_rhythm-width.scss",
        "directory": "src/scss/typography/function",
        "type": "function",
        "description": "Return the Map properties representation for the rhythme width\nThe rhythme width is the width of an element that target a certain number of letters by line",
        "since": "1.0.0"
    },
    "sugar.scss.typography.function.tf-class": {
        "name": "tf-class",
        "namespace": "sugar.scss.typography.function",
        "filename": "_tf-class.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/function/_tf-class.scss",
        "directory": "src/scss/typography/function",
        "type": "function",
        "description": "Return the text-format setting scope class",
        "since": "1.0.0"
    },
    "sugar.scss.typography.function.vr-class": {
        "name": "vr-class",
        "namespace": "sugar.scss.typography.function",
        "filename": "_vr-class.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/function/_vr-class.scss",
        "directory": "src/scss/typography/function",
        "type": "function",
        "description": "Return the vertical-rhythm setting scope class",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.rhythm-width": {
        "name": "rhythm-width",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_rhythm-width.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_rhythm-width.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Print out the css on a container that will make the lines displays a maximum number of characters.",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.selection": {
        "name": "selection",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_selection.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_selection.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Set the user selection styling with ease",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.show-vr": {
        "name": "show-vr",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_show-vr.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_show-vr.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Display the vertical rhythme",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.text-ellipsis": {
        "name": "text-ellipsis",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_text-ellipsis.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_text-ellipsis.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Crop the text on 1 line if needed",
        "since": "2.0.0"
    },
    "sugar.scss.typography.mixin.text-hide": {
        "name": "text-hide",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_text-hide.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_text-hide.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Hide the contained text",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.text-truncate": {
        "name": "text-truncate",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_text-truncate.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_text-truncate.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Print out the style to truncate the text if needed",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.tf-scope": {
        "name": "tf-scope",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_tf-scope.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_tf-scope.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Scope the content inside the `settings.typography.tf-scope-class` class",
        "since": "1.0.0"
    },
    "sugar.scss.typography.mixin.vr-scope": {
        "name": "vr-scope",
        "namespace": "sugar.scss.typography.mixin",
        "filename": "_vr-scope.scss",
        "extension": "scss",
        "relPath": "src/scss/typography/mixin/_vr-scope.scss",
        "directory": "src/scss/typography/mixin",
        "type": "mixin",
        "description": "Scope the content inside the `settings.typography.vr-class` class",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.convert": {
        "name": "convert",
        "namespace": "sugar.scss.unit.function",
        "filename": "_convert.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_convert.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert a passed value to the wanted unit\nThe conversion between some units that depends on a font-size will take the settings.typography.font-size value as reference.\n\nAvailable conversions\n- from px\n- to em\n- to rem\n- to pt\n- to %\n\n- from em\n- to rem\n- to px\n- to pt\n- to %\n\n- from pt\n- to em\n- to rem\n- to px\n- to pt\n- to %\n\n- from rem\n- to em\n- to px\n- to pt\n- to %",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.is-unitless": {
        "name": "is-unitless",
        "namespace": "sugar.scss.unit.function",
        "filename": "_is-unitless.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_is-unitless.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Check if the passed variable is unitless or not",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.strip-units": {
        "name": "strip-units",
        "namespace": "sugar.scss.unit.function",
        "filename": "_strip-units.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_strip-units.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Return a number without any units",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.to-em": {
        "name": "to-em",
        "namespace": "sugar.scss.unit.function",
        "filename": "_to-em.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_to-em.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert the passed value to em",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.to-percent": {
        "name": "to-percent",
        "namespace": "sugar.scss.unit.function",
        "filename": "_to-percent.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_to-percent.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert the passed value to %",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.to-pt": {
        "name": "to-pt",
        "namespace": "sugar.scss.unit.function",
        "filename": "_to-pt.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_to-pt.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert the passed value to pt",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.to-px": {
        "name": "to-px",
        "namespace": "sugar.scss.unit.function",
        "filename": "_to-px.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_to-px.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert the passed value to px",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.to-rem": {
        "name": "to-rem",
        "namespace": "sugar.scss.unit.function",
        "filename": "_to-rem.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_to-rem.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Convert the passed value to rem",
        "since": "1.0.0"
    },
    "sugar.scss.unit.function.unit": {
        "name": "unit",
        "namespace": "sugar.scss.unit.function",
        "filename": "_unit.scss",
        "extension": "scss",
        "relPath": "src/scss/unit/function/_unit.scss",
        "directory": "src/scss/unit/function",
        "type": "function",
        "description": "Return the unit of the passed number",
        "since": "1.0.0"
    },
    "sugar.scss.util.function.border-map": {
        "name": "border-map",
        "namespace": "sugar.scss.util.function",
        "filename": "_border-map.scss",
        "extension": "scss",
        "relPath": "src/scss/util/function/_border-map.scss",
        "directory": "src/scss/util/function",
        "type": "function",
        "description": "Parse and return the Map respresentation of a border property\nThe $border argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function.",
        "since": "1.0.0"
    },
    "sugar.scss.util.function.margin-map": {
        "name": "margin-map",
        "namespace": "sugar.scss.util.function",
        "filename": "_margin-map.scss",
        "extension": "scss",
        "relPath": "src/scss/util/function/_margin-map.scss",
        "directory": "src/scss/util/function",
        "type": "function",
        "description": "Parse and return the Map respresentation of a margin property\nThe $margin argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function.",
        "since": "1.0.0"
    },
    "sugar.scss.util.function.position-map": {
        "name": "position-map",
        "namespace": "sugar.scss.util.function",
        "filename": "_position-map.scss",
        "extension": "scss",
        "relPath": "src/scss/util/function/_position-map.scss",
        "directory": "src/scss/util/function",
        "type": "function",
        "description": "Return the representation of a position styling like position:absolute; top:0; left:100%; etc...\nThis function gives you some shortcuts to align your element top, bottom, middle, center, etc...",
        "since": "1.0.0"
    },
    "sugar.scss.util.function.translate-map": {
        "name": "translate-map",
        "namespace": "sugar.scss.util.function",
        "filename": "_translate-map.scss",
        "extension": "scss",
        "relPath": "src/scss/util/function/_translate-map.scss",
        "directory": "src/scss/util/function",
        "type": "function",
        "description": "Return the Map properties representation of a translate x,y and z",
        "since": "1.0.0"
    }
}
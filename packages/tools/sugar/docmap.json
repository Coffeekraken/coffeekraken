{
    "map": {},
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-coffeekraken-theme",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-config-explorer-component",
            "@coffeekraken/s-config",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-request",
            "@coffeekraken/s-riotjs-plugin-postcss-preprocessor",
            "@coffeekraken/s-side-panel-component",
            "@coffeekraken/s-sitemap",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-plugin-postcss",
            "@coffeekraken/s-vite-plugin-riotjs",
            "@coffeekraken/s-vite-plugin-sugar",
            "@coffeekraken/s-vite"
        ],
        "map": {
            "@coffeekraken.sugar.doc.rEADME": {
                "name": "README",
                "type": "Markdown",
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "README",
                "relPath": "src/README",
                "children": {}
            },
            "@coffeekraken.sugar.node.index": {
                "name": "index",
                "description": "This file is the \"initialisation\" one for the sugar node toolkit.\nIt's optional to include it but if you do, you will get these features \"for free\":\n- Logging: Get the powerfull options of the SLog class without any change in your codebase",
                "namespace": "@coffeekraken.sugar.node",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "index.ts",
                "extension": "ts",
                "relPath": "src/node/index.ts",
                "children": {}
            },
            "@coffeekraken.sugar.drawer-webcomponent.drawerWebcomponent": {
                "name": "DrawerWebcomponent",
                "type": "Class",
                "description": "Simple webcomponent to create fully customizable drawers.\nFeatures:\n1. Fully customizable\n2. Support all sides (top, right, bottom and left)\n3. Support 3 animation types (push, slide and reveal)",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "example": [
                    {
                        "language": "scss",
                        "code": "@use 'node_modules/@coffeekraken/drawer-webcomponent/index' as drawer-webcomponent;\n\\@include drawer-webcomponent.classes(\n\t$name : menu,\n\t$side : right\n);\n\\@include drawer-webcomponent.element(drawer) {\n\tbackground-color: black;\n\tpadding: 20px;\n}\n\\@include drawer-webcomponent.element(overlay) {\n\tbackground-color: rgba(0,0,0,.5);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.open": {
                "name": "open",
                "type": "Function",
                "description": "Open the drawer",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.close": {
                "name": "close",
                "type": "Function",
                "description": "Close the drawer",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.isOpen": {
                "name": "isOpen",
                "type": "Function",
                "description": "Check if is opened",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.copy": {
                "name": "copy",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to copy to the clipboard the passed text",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __copy from '@coffeekraken/sugar/js/clipboard/copy';\n__copy('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.read": {
                "name": "read",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the content of the clipboard",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __read from '@coffeekraken/sugar/js/clipboard/read';\nawait __read();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.adoptStyleInShadowRoot": {
                "name": "adoptStyleInShadowRoot",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to make a shadowRoot element adopt his host context styles",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __adoptStyleInShadowRoot from '@coffeekraken/sugar/js/css/adoptStyleInShadowRoot';\nconst myShadowRoot = $myElement.shadowRoot;\nawait __adoptStyleInShadowRoot(myShadowRoot);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "adoptStyleInShadowRoot.ts",
                "extension": "ts",
                "relPath": "src/js/css/adoptStyleInShadowRoot.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.injectStyle": {
                "name": "injectStyle",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Inject a passed style string in the DOM",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import injectStyle from '@coffeekraken/sugar/js/css/injectStyle';\ninjectStyle('a { color: red; }');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "injectStyle.ts",
                "extension": "ts",
                "relPath": "src/js/css/injectStyle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.stylesheetToString": {
                "name": "stylesheetToString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function take a StyleSheet instance and convert it to a simple string",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import stylesheetToString from '@coffeekraken/sugar/js/css/stylesheetToString';\nstylesheetToString(document.stylesheets); // => body { ... }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stylesheetToString.ts",
                "extension": "ts",
                "relPath": "src/js/css/stylesheetToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.emit": {
                "name": "emit",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function can ben used to emit an event globally.\nYou can subscribe to these events using the \"sugar.js.event.subscribe\" function",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emit from '@coffeekraken/sugar/js/event/emit';\nemit('something', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "emit.ts",
                "extension": "ts",
                "relPath": "src/js/event/emit.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.on": {
                "name": "on",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to subscribe to global events triggered by the \"sugar.js.event.dispatch\" function\nIt use under the hood an SPromise instance",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import on from '@coffeekraken/sugar/js/event/on';\non('something', () => {\n   // do something\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "on.ts",
                "extension": "ts",
                "relPath": "src/js/event/on.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.sEvent": {
                "name": "SEvent",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Proxy class to create custom events that can be dispatched\nthrough the standard dispatch method on any HTMLElement",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "let myEvent = new SEvent('myCoolEvent', {\n\t\tcancelable : true,\n\t\tbubbles : false,\n\t\tdetail : {\n\t\t\t// some datas to send with the event\n\t\t}\n});\n// dispatch the event from an HTMLElement\nmyHTMLElement.dispatch(myEvent);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SEvent.ts",
                "extension": "ts",
                "relPath": "src/js/event/SEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLazySrcAttribute": {
                "name": "imagesLazySrcAttribute",
                "type": "Feature",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `img` elements.\nThe video `src` attribute will be populated when the `img` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLazySrcAttribute from '@coffeekraken/sugar/js/feature/imagesLazySrcAttribute';\nimagesLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<img lazy-src=\"my-cool-image.jpg\" />"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "imagesLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLoadedAttribute": {
                "name": "imagesLoadedAttribute",
                "type": "Feature",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add on every images the attribute \"loaded\" when it has been fully loaded. This is useful\nfor styling purposes and for others thinks as well.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLoadedAttribute from '@coffeekraken/sugar/js/feature/imagesLoadedAttribute';\nimagesLoadedAttribute();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "imagesLoadedAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLoadedAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.handleInputAttributes": {
                "name": "handleInputAttributes",
                "type": "Feature",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add some events on some DOM Elements. Here's the list:\n- enter (onenter): Triggered when user tap ```enter``` on his keyboard from a *input*** or **textarea** element\n- escape (onescape): Triggered when user tap ```escape``` on his keyboard from a *input*** or **textarea** element",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inputAdditionalEvents from '@coffeekraken/sugar/js/feature/inputAdditionalEvents';\ninputAdditionalEvents();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "inputAdditionalEvents.ts",
                "extension": "ts",
                "relPath": "src/js/feature/inputAdditionalEvents.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.linksStateAttributes": {
                "name": "linksStateAttributes",
                "type": "Feature",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This feature simply add some special attributes on links like \"actual\" when the link correspond to the actual visited page url,\n\"actual-child\" when the link point to a child page, and maybe some more depending on needs",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linksStateAttributes from '@coffeekraken/sugar/js/feature/linksStateAttributes';\nlinksStateAttributes();"
                    },
                    {
                        "language": "html",
                        "code": "<!-- page url: /something -->\n<a href=\"/something\" actual>Hello</a>\n<a href=\"/something/cool\" actual-child>World</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "linksStateAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/feature/linksStateAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScroll": {
                "name": "smoothScroll",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This feature enable some underhood features like the automatic scroll on anchor links as well as\nthe smooth scroll on page load.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScroll from '@coffeekraken/sugar/js/smoothScroll'\nsmoothScroll()"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "smoothScroll.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScroll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnAnchorLinks": {
                "name": "smoothScrollOnAnchorLinks",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Listen for links contains an hash to init them for scroll to target on click",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnAnchorLinks from '@coffeekraken/sugar/js/smoothScrollOnAnchorLinks'\nsmoothScrollOnAnchorLinks();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "smoothScrollOnAnchorLinks.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnAnchorLinks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnHashChange": {
                "name": "smoothScrollOnHashChange",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on hash changes",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnHashChange from '@coffeekraken/sugar/js/smoothScrollOnHashChange'\nsmoothScrollOnHashChange();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "smoothScrollOnHashChange.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnHashChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnPageLoad": {
                "name": "smoothScrollOnPageLoad",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on page load if an hash exists in the url",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnPageLoad from '@coffeekraken/sugar/js/smoothScrollOnPageLoad'\nsmoothScrollOnPageLoad();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "smoothScrollOnPageLoad.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnPageLoad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.videoLazySrcAttribute": {
                "name": "videoLazySrcAttribute",
                "type": "Feature",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `video` elements.\nThe video `src` attribute will be populated when the `video` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import videoLazySrcAttribute from '@coffeekraken/sugar/js/feature/videoLazySrcAttribute';\nvideoLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<video lazy-src=\"my-cool-video.mp4\"></video>"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "videosLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/videosLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.filter.sGooeySvgFilter": {
                "name": "SGooeySvgFilter",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This class allows you to create with ease some complexe SVG filters and to apply it on any HTMLElement that you want\nby extending this class like so",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "class MyBlurFilter extends SSvgFilter {\n\n\t\tconstructor(amount = 8) {\n\t\t\tsuper(`\n\t\t\t\t<feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"${amount}\" result=\"blur\" />\n\t\t\t`);\n\t\t}\n}\n\n// using your filter\nconst myFilter = new MyBlurFilter(10);\nmyFilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SSvgFilter.ts",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "applyTo": {
                        "name": "applyTo",
                        "type": "Function",
                        "description": "Apply the filter to an element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "unapplyFrom": {
                        "name": "unapplyFrom",
                        "type": "Function",
                        "description": "Unapply from",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "destroy": {
                        "name": "destroy",
                        "type": "Function",
                        "description": "Destroy the filter",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.sGradientSvgFilter": {
                "name": "SGradientSvgFilter",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SGradientSvgFilter();\nfilter.linear(['red','blue','green']);\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SGradientSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SGradientSvgFilter.ts",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "linear": {
                        "name": "linear",
                        "type": "Function",
                        "description": "Linear gradient",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "radial": {
                        "name": "radial",
                        "type": "Function",
                        "description": "Radial gradient",
                        "example": [
                            {
                                "language": "js",
                                "code": "myFilter.radial(['#ff0000', '#00ffff], {\n   width: 300,\n   height: 300\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "applyTo": {
                        "name": "applyTo",
                        "type": "Function",
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "unapplyFrom": {
                        "name": "unapplyFrom",
                        "type": "Function",
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.sMotionblurSvgFilter": {
                "name": "SMotionblurSvgFilter",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This class represent a motion blur svg filter that will blur your\nelement depending on his movements, direction and speed",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SMotionblurSvgFilter();\nfilter.applyTo(myCoolHTMLElement);\n// now when your element will move, it will be blured accordingly"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SMotionblurSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SMotionblurSvgFilter.ts",
                "children": {
                    "amount": {
                        "name": "amount",
                        "type": "Number",
                        "default": "0.5",
                        "description": "Store the amount of motion blur to apply",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "applyTo": {
                        "name": "applyTo",
                        "type": "Function",
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "unapplyFrom": {
                        "name": "unapplyFrom",
                        "type": "Function",
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "destroy": {
                        "name": "destroy",
                        "type": "Function",
                        "description": "Destroy the filter",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.sOutlineSvgFilter": {
                "name": "SOutlineSvgFilter",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This class represent an outline filter that can be applied on any HTMLElement.",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SOutlineSvgFilter();\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SOutlineSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SOutlineSvgFilter.ts",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "radius": {
                        "name": "radius",
                        "type": "Number",
                        "description": "Get/Set the radius to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.string.decodeHtmlEntities": {
                "name": "decodeHtmlEntities",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Decode an htmlentities encoded string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import decodeHtmlEntities from '@coffeekraken/sugar/js/string/decodeHtmlEntities';\ndecodeHtmlEntities('&#111;&#108;&#105;&#118;&#105;&#101;&#114;&#046;&#098;&#111;&#115;&#115;&#101;&#108;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;');\n// return => olivier.bossel@gmail.com"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "decodeHtmlEntities.ts",
                "extension": "ts",
                "relPath": "src/js/html/decodeHtmlEntities.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.expandPleasantCssClassnamesLive": {
                "name": "expandPleasantCssClassnamesLive",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...\nThis function do this live when detecting a new node in the page, etc...\nThis function does not transform content of \"template\" and \"code\" tags.",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassnamesLive from '@coffeekraken/sugar/js/html/expandPleasantCssClassnamesLive';\nexpandPleasantCssClassnamesLive();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "expandPleasantCssClassnamesLive.ts",
                "extension": "ts",
                "relPath": "src/js/html/expandPleasantCssClassnamesLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.getHtmlClassFromTagName": {
                "name": "getHtmlClassFromTagName",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function simply return the HTML{name}Element class depending on the passed\ntag name like \"p\", \"input\", \"textarea\", etc...",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getHtmlClassFromTagName from '@coffeekraken/sugar/js/html/getHtmlClassFromTagName';\ngetHtmlClassFromTagName('a'); // => HTMLAnchorElement"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getHtmlClassFromTagName.ts",
                "extension": "ts",
                "relPath": "src/js/html/getHtmlClassFromTagName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.getHtmlhtmlClassFromHtmlClass": {
                "name": "getHtmlhtmlClassFromHtmlClass",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function simply return the tagname depending on the passed HTML class\nlike HTMLAnchorElement, HTMLLinkElement, etc...",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getHtmlhtmlClassFromHtmlClass from '@coffeekraken/sugar/js/html/getHtmlhtmlClassFromHtmlClass';\ngetHtmlhtmlClassFromHtmlClass(HTMLAnchorElement); // => 'a'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getTagNameFromHtmlClass.ts",
                "extension": "ts",
                "relPath": "src/js/html/getTagNameFromHtmlClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.htmlTagToHtmlClassMap": {
                "name": "HtmlTagToHtmlClassMap",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This export an object mapping the HTML tag name to his corresponding HTML class (object not css class)",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import HtmlTagToHtmlClassMap from '@coffeekraken/sugar/js/html/HtmlTagToHtmlClassMap';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "htmlTagToHtmlClassMap.ts",
                "extension": "ts",
                "relPath": "src/js/html/htmlTagToHtmlClassMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.strToHtml": {
                "name": "strToHtml",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the html (dom) version of a string",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import strToHtml from '@coffeekraken/sugar/js/html/strToHtml'\nconst myString = '<p>Hello World</p>'\nstrToHtml(myString) // <p>Hello World</p>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "strToHtml.ts",
                "extension": "ts",
                "relPath": "src/js/html/strToHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.toString": {
                "name": "toString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the string version of a dom node or the dom node and his children",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toString from '@coffeekraken/sugar/js/string/toString'\nconst myDomNode = document.querySelector('.my-dom-node')\ntoString(myDomNode, false) // <div class=\"my-dom-node\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toString.ts",
                "extension": "ts",
                "relPath": "src/js/html/toString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isChrome": {
                "name": "isChrome",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is chrome",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isChrome from '@coffeekraken/sugar/js/is/chrome'\nif (isChrome()) {\n  // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "chrome.ts",
                "extension": "ts",
                "relPath": "src/js/is/chrome.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEdge": {
                "name": "isEdge",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is edge",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEdge from '@coffeekraken/sugar/js/is/edge'\nif (isEdge()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "edge.ts",
                "extension": "ts",
                "relPath": "src/js/is/edge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isFirefox": {
                "name": "isFirefox",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is firefox",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFirefox from '@coffeekraken/sugar/js/is/firefox'\nif (isFirefox()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "firefox.ts",
                "extension": "ts",
                "relPath": "src/js/is/firefox.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isIe": {
                "name": "isIe",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is ie (internet explorer)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isIe from '@coffeekraken/sugar/js/is/ie'\nif (isIe()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ie.ts",
                "extension": "ts",
                "relPath": "src/js/is/ie.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMobile": {
                "name": "isMobile",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is a mobile device (phone or tablet)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMobile from 'coffeekraken-sugar/js/is/mobile'\nif (isMobile()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "mobile.ts",
                "extension": "ts",
                "relPath": "src/js/is/mobile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isOpera": {
                "name": "isOpera",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is opera",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOpera from '@coffeekraken/sugar/js/is/opera'\nif (isOpera()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "opera.ts",
                "extension": "ts",
                "relPath": "src/js/is/opera.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isPhone": {
                "name": "isPhone",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is a phone device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPhone from '@coffeekraken/sugar/js/is/phone'\nif (isPhone()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "phone.ts",
                "extension": "ts",
                "relPath": "src/js/is/phone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSafari": {
                "name": "isSafari",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is safari",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSafari from '@coffeekraken/sugar/js/is/safari'\nif (isSafari()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "safari.ts",
                "extension": "ts",
                "relPath": "src/js/is/safari.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSamsumgBrowser": {
                "name": "isSamsumgBrowser",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is the samsung stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSamsumgBrowser from '@coffeekraken/sugar/js/is/samsungBrowser'\nif (isSamsumgBrowser()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "samsungBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/samsungBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isTablet": {
                "name": "isTablet",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is a tablet device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTablet from '@coffeekraken/sugar/js/is/tablet'\nif (isTablet()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "tablet.ts",
                "extension": "ts",
                "relPath": "src/js/is/tablet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isUcBrowser": {
                "name": "isUcBrowser",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect if is the UC stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isUcBrowser from '@coffeekraken/sugar/js/is/ucBrowser'\nif (isUcBrowser()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ucBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/ucBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.keyboard.hotkey": {
                "name": "hotkey",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Simple function to add a hotkey like \"ctrl+a\" and an handler function that will be called when the hotkey has been pressed\nThe following keys are supported:\n- shift, option, alt, ctrl, control, command\n- backspace, tab, clear, enter, return, esc, escape, space, up, down, left, right, home, end, pageup, pagedown, del, delete\n- from f1 to f19\n- all the letters keys\n\nYou can pass an option object to your hotkey function call.",
                "namespace": "@coffeekraken.sugar.js.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hotkey from '@coffeekraken/sugar/js/keyboard/hotkey'\nconst promise = hotkey('ctrl+a');\npromise.on('press', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/js/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.responsive.sMediaQuery": {
                "name": "SMediaQuery",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This class expose some nice and easy methods to get the active media query defined in the config.media.queries configuration\nstack, as well as register to some events list \"match\" or \"unmatch\".",
                "namespace": "@coffeekraken.sugar.js.responsive",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SMediaQuery from '@coffeekraken/sugar/js/responsive/SMediaQuery';\nconst mediaQuery = new SMediaQuery('mobile');\nmediaQuery.on('match', media => {\n     // do something\n});\nSMediaQuery.getActiveMedia(); // => mobile"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SMediaQuery.ts",
                "extension": "ts",
                "relPath": "src/js/responsive/SMediaQuery.ts",
                "children": {
                    "this.ActiveMedia": {
                        "name": "this._activeMedia",
                        "type": "String",
                        "description": "Store the active media name",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "startListener": {
                        "name": "startListener",
                        "type": "Function",
                        "description": "Add the global listener based on the \"init-body-media-queries\" scss mixin",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.webcomponent.sLitHtmlWebComponent": {
                "name": "SLitHtmlWebComponent",
                "type": "Class",
                "description": "// TODO: example\n\nBase class that you can extends to create some SWebComponent with Lit Html rendering capabilities",
                "namespace": "@coffeekraken.sugar.js.webcomponent",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SLitHtmlWebComponent from '@coffeekraken/sugar/js/webcomponent/SLitHtmlWebComponent';\nclass MyCoolComponent extends SLitHtmlWebComponent {\n\n   constructor(settings = {}) {\n     super(settings);\n   }\n\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SLitHtmlWebComponent.ts",
                "extension": "ts",
                "relPath": "src/js/webcomponent/SLitHtmlWebComponent.ts",
                "children": {
                    "template": {
                        "name": "template",
                        "type": "Function",
                        "description": "This static variable store a function that has as parameter the state object\nof your component and the lit-html ```html``` function that you can use in your template.\nThis function MUST return a template string representing your component HTML depending on the state\nobject at this point.",
                        "static": "true",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "lit": {
                        "name": "lit",
                        "type": "Object",
                        "description": "Store all the litHtml functions that you may need",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "$root": {
                        "name": "$root",
                        "type": "Function",
                        "description": "Access the root element of the webcomponent from which the requests like ```$``` and ```$$``` will be executed",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "update": {
                        "name": "update",
                        "type": "Function",
                        "description": "This method allows you to update your componment manually if needed.\n- call the ```render``` method of this class\n- call the ```update``` method of the SWebComponent parent class",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "render": {
                        "name": "render",
                        "type": "Function",
                        "description": "This method is called every time an update has been made in the state object",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.webcomponent.sWebComponent": {
                "name": "SWebComponent",
                "type": "Class",
                "description": "// TODO: example\n\nBase class that allows you to create easily new webcomponents and handle things like attributes updates,\nbase css (scss) importing, etc... Here's a list a features that this class covers:\n- Listen for attributes changes\n- Mount the component at a certain point in time (inViewport, visible, etc...)\n- *Automatically cast the attributes** to their proper js variable types (Array, Object, String, etc...)\n- *Physical props** : Specify some props that will ALWAYS be present as attribute on the component for styling purpose\n- Define some *default CSS** that will be injected in the head automatically\n- Specify some *required props**\n- *Full lifecycle management** through \"events\":\n- attach: Dispatched when the component is attached to the DOM\n- detach: Dispatched when the component is detached from the DOM\n- mounting: Dispatched when the component starts to mount itself (before mountWhen and mountDependencies execution)\n- mounted: Dispatched when the component has be mounted properly\n- prop|prop.{name}: Dispatched when a property has been updated, removed or added\n- The object format sended with the event is this one:\n- { prop: 'propName', action: 'update|remove|add', value: 'Something', previousValue: 'Other' }\n- *Mount dependencies** : This will allows you to set some promises that have to be resolved before mounting the component",
                "namespace": "@coffeekraken.sugar.js.webcomponent",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SWebComponent from '@coffeekraken/sugar/js/webcomponent/SWebComponent';\nclass MyCoolComponent extends SWebComponent {\n\n   constructor() {\n     super();\n   }\n\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SWebComponent.ts",
                "extension": "ts",
                "relPath": "src/js/webcomponent/SWebComponent.ts",
                "children": {
                    "observedAttributes": {
                        "name": "observedAttributes",
                        "type": "Function",
                        "description": "This medhod simply return the list of props that will be\nobserved by the customElements under the hood system.",
                        "static": "true",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "componentName": {
                        "name": "componentName",
                        "type": "String",
                        "description": "Store the name of the component in camelcase",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "getComponentMetas": {
                        "name": "getComponentMetas",
                        "type": "Function",
                        "description": "This static method return the component metas information like:\n- name: The camelcase component name\n- dashName: The component name in dash case\n- class: The component class\n- extends: The HTML class that the component extends\n- settings: An object of settings",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "define": {
                        "name": "define",
                        "type": "Function",
                        "description": "This method allows you to define your component as a webcomponent recognized by the browser",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "settings": {
                        "name": "settings",
                        "type": "Function",
                        "description": "Get the settings object",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "$root": {
                        "name": "$root",
                        "type": "Function",
                        "description": "Access the root element of the webcomponent from which the requests like ```$``` and ```$$``` will be executed",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "update": {
                        "name": "update",
                        "type": "Function",
                        "description": "This method allows you to update your component manually if needed",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "$": {
                        "name": "$",
                        "type": "Function",
                        "description": "This method is a shortcut to the ```querySelector``` function",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "$$": {
                        "name": "$$",
                        "type": "Function",
                        "description": "This method is a shortcut to the ```querySelectorAll``` function",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "registerContext": {
                        "name": "registerContext",
                        "type": "Function",
                        "description": "This method allows you to register some additional contexts that \"this\"\nfor the component to be able to find expressions like ```:on-select=\"doSometing\"```\nIt is used by all the SWebComponent instances to find their parent components for example",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "setProp": {
                        "name": "setProp",
                        "type": "Function",
                        "description": "This method allows you to set a prop and specify the \"media\" for which you want to set this value\nThe media parameter can be one of the media queries defined in the configuration config.media.queries",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "getProp": {
                        "name": "getProp",
                        "type": "Function",
                        "description": "This method allows you to get a prop and specify the \"media\" for which you want to get this value\nThe media parameter can be one of the media queries defined in the configuration config.media.queries",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "setSettings": {
                        "name": "setSettings",
                        "type": "Function",
                        "description": "This method allows you to set some settings by merging the actual once with your new once",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "addClass": {
                        "name": "addClass",
                        "type": "Function",
                        "description": "This method can be used to add class(es) to an element in the component.\nThis will take care of adding the pcomponent name prefix as well as the ```cssName```prefix\nif needed",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "removeClass": {
                        "name": "removeClass",
                        "type": "Function",
                        "description": "This method can be used to remove class(es) to an element in the component.\nThis will take care of adding the component name prefix as well as the ```cssName```prefix\nif needed",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "metas": {
                        "name": "metas",
                        "type": "Object",
                        "description": "This property store all the component metas informations like the name,\nthe type, what it is extending, etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "on": {
                        "name": "on",
                        "type": "Function",
                        "description": "Method used to subscribe to the \"events\" dispatched\nduring the lifecycle of the component. Here's the list of events:\n- attach: Dispatched when the component is attached to the DOM\n- detach: Dispatched when the component is detached from the DOM\n- mounting: Dispatched when the component starts to mount itself (before mountWhen and mountDependencies execution)\n- mounted: Dispatched when the component has be mounted properly\n- prop|prop.{name}: Dispatched when a property has been updated, removed or added\n- The object format sended with the event is this one:\n- { prop: 'propName', action: 'update|remove|add', value: 'Something', previousValue: 'Other' }",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "off": {
                        "name": "off",
                        "type": "Function",
                        "description": "Method used to unsubscribe to a previously subscribed event",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "connectedCallback": {
                        "name": "connectedCallback",
                        "type": "Function",
                        "description": "Called when the component is attached to the dom",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "disconnectedCallback": {
                        "name": "disconnectedCallback",
                        "type": "Function",
                        "description": "Called when the component is detached from the dom",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "attributeChangedCallback": {
                        "name": "attributeChangedCallback",
                        "type": "Function",
                        "description": "Called when an attribute is removed, added or updated",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "selector": {
                        "name": "selector",
                        "type": "Function",
                        "description": "This method return you a selector generated depending on the\nwebcomponent name",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.node.clipboard.copy": {
                "name": "copy",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to copy things into the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copy from '@coffeekraken/sugar/node/clipboard/copy';\ncopy('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.clipboard.read": {
                "name": "read",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to read things from the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import read from '@coffeekraken/sugar/node/clipboard/read';\nimport copy from '@coffeekraken/sugar/node/clipboard/copy';\ncopy('Hello world');\nread(); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.command.commandExists": {
                "name": "commandExists",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to check if a command exists on the system where the script is running",
                "namespace": "@coffeekraken.sugar.node.command",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import commandExists from '@coffeekraken/sugar/node/command/commandExists';\nawait commandExists('ls'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "commandExists.ts",
                "extension": "ts",
                "relPath": "src/node/command/commandExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.config.loadConfigFile": {
                "name": "loadConfigFile",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply load a config file (usually at your project root) and returns his content\nin object format.\nThis function support these file types:\n- `.js`: Simple javascript files\n- `.json`: Simple JSON files\n- `.yml`: Yaml files",
                "namespace": "@coffeekraken.sugar.node.config",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __loadConfigFile from '@coffeekraken/sugar/node/config/loadConfigFile';\nawait __loadConfigFile('vite.config.js`);\nawait __loadConfigFile(`tsconfig.json`);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "loadConfigFile.ts",
                "extension": "ts",
                "relPath": "src/node/config/loadConfigFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.dependencies.dependenciesHash": {
                "name": "dependenciesHash",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input an object that follows the structure described in the example bellow.\nWith that, if will recursively (for files dependencies) load them, check if they have some dependencies,\nand create a hash depending on all of that.\nHere's the process steps:\n1. Check the files dependencies.\n2. If their's, load recursively these dependencies and start the process over them again\n3. Create a hash for the current dependency with using all non \"files\" dependencies as well as the file updated timestamp\n4. Make this process recursively until all the \"files\" have been processed\n5. Return the final hash for your dependency object",
                "namespace": "@coffeekraken.sugar.node.dependencies",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __dependenciesHash from '@coffeekraken/sugar/node/dependencies/dependenciesHash';\nawait __dependenciesHash({\n     files: [\n         'my-cool-file.js',\n         'my-other-file.jpg'\n     ],\n     data: {\n         something: 'cool',\n         another: 'cool thing'\n     }\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dependenciesHash.ts",
                "extension": "ts",
                "relPath": "src/node/dependencies/dependenciesHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.error.handleError": {
                "name": "handleError",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a thrown error and try to display it the best way possible.\nSimply add the \"uncaughtException\" and the \"unhandledRejection\" listeners on the process object,\npass this function as the handler one and that's it...",
                "namespace": "@coffeekraken.sugar.node.error",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import handleError from '@coffeekraken/sugar/node/error/handleError';\nprocess.on('uncaughtException', handleError);\nprocess.on('unhandledRejection', handleError);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "handleError.ts",
                "extension": "ts",
                "relPath": "src/node/error/handleError.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.esm.require": {
                "name": "require",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an fully functional \"require\" function in\nan ESM context.",
                "namespace": "@coffeekraken.sugar.node.esm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import require from '@coffeekraken/sugar/node/esm/require';\nrequire('something');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "require.ts",
                "extension": "ts",
                "relPath": "src/node/esm/require.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.checkPathWithMultipleExtensions": {
                "name": "checkPathWithMultipleExtensions",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a path and some extensions to check if a file\nexists with one of these particular extensions.\nIf a file exists, the function return the path with the first extensions that matches",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import checkPathWithMultipleExtensions from '@coffeekraken/sugar/node/fs/checkPathWithMultipleExtensions';\ncheckPathWithMultipleExtensions('/my/cool/file.txt', ['txt','js','css']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "checkPathWithMultipleExtensions.ts",
                "extension": "ts",
                "relPath": "src/node/fs/checkPathWithMultipleExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copy": {
                "name": "copy",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copy from '@coffeekraken/node/fs/copy';\ncopy('my/cool/file.jpg', 'my/new/file.jpg').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copySync": {
                "name": "copySync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copySync from '@coffeekraken/node/fs/copySync';\ntry {\n   copySync('my/cool/file.jpg', 'my/new/file.jpg');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "copySync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copySync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.dirname": {
                "name": "dirname",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the dirname the same as the __dirname cjs variable.\nThe only difference is that it's a function and you need to pass the \"import\" variable\nfrom the filename in which you use this...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dirname from '@coffeekraken/sugar/node/fs/dirname';\ndirname(import);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dirname.ts",
                "extension": "ts",
                "relPath": "src/node/fs/dirname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDir": {
                "name": "emptyDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emptyDir from '@coffeekraken/node/fs/emptyDir';\nemptyDir('my/cool/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "emptyDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDirSync": {
                "name": "emptyDirSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emptyDirSync from '@coffeekraken/node/fs/emptyDirSync';\ntry {\n   emptyDirSync('my/cool/directory');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "emptyDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDir": {
                "name": "ensureDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureDir from '@coffeekraken/node/fs/ensureDir';\nensureDir('my/cool/dir').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ensureDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDirSync": {
                "name": "ensureDirSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureDirSync from '@coffeekraken/node/fs/ensureDirSync';\ntry {\n   ensureDirSync('my/cool/dir');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ensureDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFile": {
                "name": "ensureFile",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, it will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureFile from '@coffeekraken/node/fs/ensureFile';\nensureFile('my/cool/file.jpg').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ensureFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFileSync": {
                "name": "ensureFileSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureFileSync from '@coffeekraken/node/fs/ensureFileSync';\ntry {\n   ensureFileSync('my/cool/file.jpg');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ensureFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.exists": {
                "name": "exists",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exists from '@coffeekraken/sugar/fs/exists';\nexists('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "exists.ts",
                "extension": "ts",
                "relPath": "src/node/fs/exists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.existsSync": {
                "name": "existsSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exists from '@coffeekraken/sugar/fs/exists';\nexists('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "existsSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/existsSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.extension": {
                "name": "extension",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the passed file path extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extension from '@coffeekraken/sugar/node/fs/extension';\nextension('hello/world.jpg'); // => jpg"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extension.ts",
                "extension": "ts",
                "relPath": "src/node/fs/extension.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.fileHash": {
                "name": "fileHash",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed file.\nThis mean that if a file returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import fileHash from '@coffeekraken/sugar/node/fs/fileHash';\nfileHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "fileHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/fileHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.filename": {
                "name": "filename",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the filename from the passed path with or without the extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import filename from '@coffeekraken/sugar/node/fs/filename';\nfilename('hello/world.js'); // => world.js"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "filename.ts",
                "extension": "ts",
                "relPath": "src/node/fs/filename.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.findUp": {
                "name": "findUp",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply walk across upper folders to search for a file\nand returns you the first finded",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import findUp from '@coffeekraken/sugar/node/fs/findUp';\nconst file = await findUp('myCoolFile.json', {});\nconsole.log(file.path);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "findUp.ts",
                "extension": "ts",
                "relPath": "src/node/fs/findUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderHash": {
                "name": "folderHash",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed folder.\nThis mean that if a folder returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderHash from '@coffeekraken/sugar/node/fs/folderHash';\nfolderHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "folderHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderPath": {
                "name": "folderPath",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns you the folder path of the file path passed.\nYou can tell the function to check for file existence before getting\nthe folder path with the second parameter.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderPath from '@coffeekraken/sugar/node/fs/folderPath';\nfolderPath('my/cool/path.js'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "folderPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderSize": {
                "name": "folderSize",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Calculate the size of the passed folder and return it through a promise, either in raw format, either in human readdable one...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderSize from '@coffeekraken/sugar/node/fs/folderSize';\nawait folderSize('my/cool/folder');\nawait folderSize('my/cool/folder', false); // no formatting"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "folderSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.formatFileSize": {
                "name": "formatFileSize",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform into human readable string a file size from a number (float or integer) or string.\nThis function use the wonderfull \"filesize\" npm package under the houd.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import formatFilesize from '@coffeekraken/sugar/node/fs/formatFileSize';\nformatFileSize(163931); // => 326.86 KB"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "formatFileSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/formatFileSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.isPath": {
                "name": "isPath",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPath from '@coffeekraken/sugar/node/fs/isPath';\nisPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/isPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.move": {
                "name": "move",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import move from '@coffeekraken/node/fs/move';\nmove('my/cool/dir', 'another/place/for/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "move.ts",
                "extension": "ts",
                "relPath": "src/node/fs/move.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.moveSync": {
                "name": "moveSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import moveSync from '@coffeekraken/node/fs/moveSync';\ntry {\n   moveSync('my/cool/dir', 'another/place/for/directory');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "moveSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/moveSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.pool": {
                "name": "pool",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take as parameter a glob (or array of globs) pattern(s)\nand return an SPromise instance through which you can subscribe to events like:\n- ready: Emitted once the pool is ready\n- file: Emitted for each file founded, added or updated\n- files: Emitted with a list of founded files\n- change: Emitted when a file has been updated (alias to update)\n- update: Emitted when a file has been updated\n- unlink: Emitted when a file has been deleted\n- add: Emitted when a file has been added",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pool from '@coffeekraken/sugar/node/fs/pool';\nconst myPool = pool('/something/cool /', {\n watch: true\n}):\npool.on('file', file => {\n     // do something with each files\n})\npool.on('update', (file) => {\n     // do something with updated files\n});\n// when you want to stop your pool watching process\npool.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "pool.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pool.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJson": {
                "name": "readJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import readJson from '@coffeekraken/sugar/node/fs/readJson';\nawait readJson('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "readJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJsonSync": {
                "name": "readJsonSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import readJsonSync from '@coffeekraken/sugar/node/fs/readJsonSync';\nawait readJsonSync('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "readJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.registerSFileClasses": {
                "name": "registerSFileClasses",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is responsivle to register the SFile classes with their proper\nextensions.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "since": "2.0.0",
                "filename": "registerSFileClasses.ts",
                "extension": "ts",
                "relPath": "src/node/fs/registerSFileClasses.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.remove": {
                "name": "remove",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import remove from '@coffeekraken/node/fs/remove';\nremove('my/cool/file.json').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "remove.ts",
                "extension": "ts",
                "relPath": "src/node/fs/remove.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.removeSync": {
                "name": "removeSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import removeSync from '@coffeekraken/node/fs/removeSync';\ntry {\n   removeSync('my/cool/file.json');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "removeSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/removeSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFile": {
                "name": "writeFile",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "CWrite a file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeFile from '@coffeekraken/node/fs/writeFile';\nwriteFile('my/cool/file.txt', 'Hello World').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFileSync": {
                "name": "writeFileSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeFileSync from '@coffeekraken/node/fs/writeFileSync';\ntry {\n   writeFileSync('my/cool/file.txt', 'Hello World');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJson": {
                "name": "writeJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeJson from '@coffeekraken/node/fs/writeJson';\nwriteJson('my/cool/file.json', { hello: 'world' }).then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJsonSync": {
                "name": "writeJsonSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeJsonSync from '@coffeekraken/node/fs/writeJsonSync';\ntry {\n   writeJsonSync('my/cool/file.json', { hello: 'world' });\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFile": {
                "name": "writeTmpFile",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeTmpFile from '@coffeekraken/node/fs/writeTmpFile';\nwriteTmpFile('Hello World').then((path) => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeTmpFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFileSync": {
                "name": "writeTmpFileSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeTmpFileSync from '@coffeekraken/node/fs/writeTmpFileSync';\nconst path = writeTmpFileSync('Hello World');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "writeTmpFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.github.downloadRepository": {
                "name": "downloadRepository",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to download a github repository\nand unzip it where you want to store it",
                "namespace": "@coffeekraken.sugar.node.github",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __downloadRepository from '@coffeekraken/sugar/node/github/downloadRepository';\nawait __downloadRepository('Coffeekraken/coffeekraken', {\n   dest: 'something/cool/coffeekraken.zip',\n   unzip: true\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "downloadRepository.ts",
                "extension": "ts",
                "relPath": "src/node/github/downloadRepository.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.matchGlob": {
                "name": "matchGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a file path and a glob pattern that can be an extended one (this mean that is support the listed features above).\nThen it check if the passed filepath match the passed glob pattern or not and return true or false depending on the result.",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matchGlob from '@coffeekraken/sugar/node/glob/matchGlob';\nmatchGlob('/something/cool.txt', '\\/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "matchGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/matchGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.resolveGlob": {
                "name": "resolveGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply resolve the passed glob pattern(s) and resolve his promise\nwith an Array of SFile instances to work with",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import resolveGlob from '@coffeekraken/sugar/node/glob/resolveGlob';\nresolveGlob('/my/cool/pattern/.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "resolveGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/resolveGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.childProcess": {
                "name": "childProcess",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running as a child process or not by checking if the ```process.send``` exists, or is the environment variable ```IS_CHILD_PROCESS``` is true.",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isChildProcess from '@coffeekraken/sugar/node/is/childProcess';\nisChildProcess(); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "childProcess.ts",
                "extension": "ts",
                "relPath": "src/node/is/childProcess.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.directory": {
                "name": "directory",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a directory or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isDirectory from '@coffeekraken/sugar/node/is/directory';\nisDirectory('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "directory.ts",
                "extension": "ts",
                "relPath": "src/node/is/directory.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.file": {
                "name": "file",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a file or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFile from '@coffeekraken/sugar/node/is/file';\nisFile('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "file.ts",
                "extension": "ts",
                "relPath": "src/node/is/file.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.folder": {
                "name": "folder",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a folder or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isfolder from '@coffeekraken/sugar/node/is/folder';\nisfolder('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "folder.ts",
                "extension": "ts",
                "relPath": "src/node/is/folder.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.inPackage": {
                "name": "inPackage",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the we are in (one of) the package(s) passed as parameter",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInPackage from '@coffeekraken/sugar/node/is/inPackage';\nisInPackage('@coffeekraken/sugar'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "inPackage.ts",
                "extension": "ts",
                "relPath": "src/node/is/inPackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.path": {
                "name": "path",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPath from '@coffeekraken/sugar/js/is/path';\nisPath('hello/world'); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "path.ts",
                "extension": "ts",
                "relPath": "src/shared/is/path.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.symlink": {
                "name": "symlink",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a sySlink or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSymlink from '@coffeekraken/sugar/node/is/symlink';\nisSymlink('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "symlink.ts",
                "extension": "ts",
                "relPath": "src/node/is/symlink.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.keyboard.hotkey": {
                "name": "hotkey",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add keyboard listening process and subscribe to some sequences\nusing the SPromise instance returned.",
                "namespace": "@coffeekraken.sugar.node.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hotkey from '@coffeekraken/sugar/node/keyboard/hotkey';\nconst promise = hotkey('ctrl+a').on('key', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/node/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.buildInNodeModules": {
                "name": "buildInNodeModules",
                "type": "Object",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This object store the list of built-in node module\nwith a polyfill property for each that point to some\npolyfill depending on the context wanted. It can be \"browser\"\nor some others to come depending on the needs...",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import builtInNodeModules from '@coffeekraken/sugar/node/module/builtInNodeModules';\n// {\n//   os: {\n//     polyfill: {\n//        browser: 'os-browserify'\n//     }\n//   },\n//   ...\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "buildInNodeModules.ts",
                "extension": "ts",
                "relPath": "src/node/module/buildInNodeModules.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyList": {
                "name": "dependencyList",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function make use of the ```dependencyTree``` one and returns the result into a simple array of file pathes",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dependencyList from '@coffeekraken/sugar/node/module/dependencyList';\nawait dependencyList('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dependencyList.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyList.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyTree": {
                "name": "dependencyTree",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Async wrapper around the amazing dependency-tree module made by mrjoelkemp.\nThis wrapper add some capabilities like caching already parsed dependencies.",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dependencyTree from '@coffeekraken/sugar/node/module/dependencyTree';\nawait dependencyTree('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dependencyTree.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyTree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.extractImport": {
                "name": "extractImport",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply parse a file content or a passed string directly and\nbuild the list of finded \"import ... from ...\" as well as commonjs \"require(...)\".\nYou will get back an array of object containing all the imformations about each\nimport and require statements",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractImports from '@coffeekraken/sugar/node/module/extractImport';\nextractImport('/something/cool.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extractImport.ts",
                "extension": "ts",
                "relPath": "src/node/module/extractImport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.monorepo.findPackages": {
                "name": "findPackages",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply let you search for packages (that are not dependencies) inside\nthe passed folder and returns a object with relative paths as keys and package.json\ncontent value",
                "namespace": "@coffeekraken.sugar.node.monorepo",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import findPackages from '@coffeekraken/sugar/node/monorepo/findPackages';\nconst packages = await findPackages();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "findPackages.ts",
                "extension": "ts",
                "relPath": "src/node/monorepo/findPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.monorepo.linkPackages": {
                "name": "linkPackages",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check all the packages available in the monorepo\nand link then together using symbolic links in each node_modules folders",
                "namespace": "@coffeekraken.sugar.node.monorepo",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linkPackages from '@coffeekraken/sugar/node/monorepo/linkPackages';\nawait linkPackages();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "linkPackages.ts",
                "extension": "ts",
                "relPath": "src/node/monorepo/linkPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.install": {
                "name": "install",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to install the node packages using npm or yarn depending\non your settings.",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import install from '@coffeekraken/sugar/node/npm/install';\nawait install();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "install.ts",
                "extension": "ts",
                "relPath": "src/node/npm/install.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.sNpmUnusedProcess": {
                "name": "SNpmUnusedProcess",
                "type": "Class",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This process is used to check npm unused dependencies, remove unsused once, etc...\nIt use under the hood the amazing depcheck package made by @rumpl and @lijunle",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SNpmUnusedProcess.ts",
                "extension": "ts",
                "relPath": "src/node/npm/SNpmUnusedProcess.ts",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "process": {
                        "name": "process",
                        "type": "Function",
                        "description": "Actual process execution",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.node.og.scrapeUrl": {
                "name": "scrapeUrl",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to scrape a url and get back the open graph metadata\nlike \"ogTitle\", \"ogDescription\", etc...",
                "namespace": "@coffeekraken.sugar.node.og",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrapeUrl from '@coffeekraken/sugar/node/og/scrapeUrl';\nawait scrapeUrl('https://www.npmjs.com/package/open-graph-scraper');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "scrapeUrl.ts",
                "extension": "ts",
                "relPath": "src/node/og/scrapeUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.json": {
                "name": "json",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the current working package into object format",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/json';\njson();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "json.ts",
                "extension": "ts",
                "relPath": "src/node/package/json.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.jsonSync": {
                "name": "jsonSync",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the current working package into object format",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/json';\njson();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "jsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/package/jsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.namespace": {
                "name": "namespace",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string as parameter like a path, or a doted string like \"something.cool\" and return you\na proper namespace build using the package name, your passed string sanitized, etc...",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import namespace from '@coffeekraken/sugar/node/package/namespace';\nnamespace('something.cool'); => // coffeekraken.sugar.something.cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "namespace.ts",
                "extension": "ts",
                "relPath": "src/node/package/namespace.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePackageJsonTokens": {
                "name": "replacePackageJsonTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to replace packageJson tokens like %packageJson.name, etc... with\nreal package.json values",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replacePackageJsonTokens from '@coffeekraken/sugar/node/path/replacePackageJsonTokens';\nreplacePackageJsonTokens('Hello %packageJson.name'); // => Hello @coffeekraken/sugar"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replacePackageJsonTokens.ts",
                "extension": "ts",
                "relPath": "src/node/package/replacePackageJsonTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.rootPath": {
                "name": "rootPath",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return the absolute path of your current working package",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/rootPath';\nrootPath(); => // /something/cool/myCoolPackage'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "rootPath.ts",
                "extension": "ts",
                "relPath": "src/node/package/rootPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.absolute": {
                "name": "absolute",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a string or an array of string and transform the pathes to absolute\ndepending on the second argument which is the \"from\" one.",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import relative from '@coffeekraken/sugar/js/path/absolute';\nabsolute([\n 'path'\n], '/my/cool'); => ['/my/cool/path']"
                    }
                ],
                "since": "2.0.0",
                "author": null,
                "filename": "absolute.ts",
                "extension": "ts",
                "relPath": "src/node/path/absolute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distCssDir": {
                "name": "distCssDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distCssDir from '@coffeekraken/node/fs/distCssDir';\ndistCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distDocDir": {
                "name": "distDocDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import DistDocDir from '@coffeekraken/node/fs/DistDocDir';\nDistDocDir(); // => '/somethign/dist/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distFontsDir": {
                "name": "distFontsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distFontsDir from '@coffeekraken/node/fs/distFontsDir';\ndistFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distIconsDir": {
                "name": "distIconsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distIconsDir from '@coffeekraken/node/fs/distIconsDir';\ndistIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distImgDir": {
                "name": "distImgDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distImgDir from '@coffeekraken/node/fs/distImgDir';\ndistImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distJsDir": {
                "name": "distJsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distJsDir from '@coffeekraken/node/fs/distJsDir';\ndistJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distNodeDir": {
                "name": "distNodeDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distNodeDir from '@coffeekraken/node/fs/distNodeDir';\ndistNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distRootDir": {
                "name": "distRootDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distRootDir from '@coffeekraken/node/fs/distRootDir';\ndistRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distViewsDir": {
                "name": "distViewsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distViewsDir from '@coffeekraken/node/fs/distViewsDir';\ndistViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.excludeGlobs": {
                "name": "excludeGlobs",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the array of exclude globs",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import excludeGlobs from '@coffeekraken/node/fs/excludeGlobs';\nexcludeGlobs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "excludeGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/path/excludeGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.isInPackage": {
                "name": "isInPackage",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInPackage from '@coffeekraken/sugar/node/path/isInPackage';\nconst root = isInPackage();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "isInPackage.ts",
                "extension": "ts",
                "relPath": "src/node/path/isInPackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.matchExcludeGlobs": {
                "name": "matchExcludeGlobs",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed path match one or more exclude globs specified in the config \"storage.exclude\"",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matchExcludeGlobs from '@coffeekraken/sugar/node/path/matchExcludeGlobs';\nif (matchExcludeGlobs('something/cool.js')) {\n     // ...\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "matchExcludeGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/path/matchExcludeGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageCacheDir": {
                "name": "packageCacheDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package cache directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageCacheDir from '@coffeekraken/node/fs/packageCacheDir';\npackageCacheDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageCacheDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageCacheDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.packageLocalDir": {
                "name": "packageLocalDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the .local directory path",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageLocalDir from '@coffeekraken/node/path/packageLocalDir';\npackageLocalDir(); // => '/my/cool/path/.local'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageLocalDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageLocalDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageRoot": {
                "name": "packageRoot",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageRoot from '@coffeekraken/sugar/node/path/packageRoot';\nconst root = packageRoot();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageRoot.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageRoot.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageRootDir": {
                "name": "packageRootDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package root directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageRootDir from '@coffeekraken/node/fs/packageRootDir';\npackageRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageTmpDir": {
                "name": "packageTmpDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageTmpDir from '@coffeekraken/node/fs/packageTmpDir';\npackageTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.relative": {
                "name": "relative",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a string or an array of string and transform the pathes to relative\ndepending on the second argument which is the \"from\" one.",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import relative from '@coffeekraken/sugar/js/path/relative';\nrelative([\n '/my/cool/path'\n], '/my/cool'); => ['path']"
                    }
                ],
                "since": "2.0.0",
                "author": null,
                "filename": "relative.ts",
                "extension": "ts",
                "relPath": "src/node/path/relative.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePathTokens": {
                "name": "replacePathTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as parameter either a path string, or an array of paths\nand return the according value type with the tokens (%tmpDir, %packageCacheDir, etc...) replaced",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replacePathTokens from '@coffeekraken/sugar/node/path/replacePathTokens';\nreplacePathTokens('%packageCacheDir/something.txt'); // => /path/to/cache/directory/something.txt'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replacePathTokens.ts",
                "extension": "ts",
                "relPath": "src/node/path/replacePathTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcCssDir": {
                "name": "srcCssDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcCssDir from '@coffeekraken/node/fs/srcCssDir';\nsrcCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcDocDir": {
                "name": "srcDocDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcDocDir from '@coffeekraken/node/fs/srcDocDir';\nsrcDocDir(); // => '/somethign/src/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcFontsDir": {
                "name": "srcFontsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcFontsDir from '@coffeekraken/node/fs/srcFontsDir';\nsrcFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcIconsDir": {
                "name": "srcIconsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcIconsDir from '@coffeekraken/node/fs/srcIconsDir';\nsrcIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcImgDir": {
                "name": "srcImgDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcImgDir from '@coffeekraken/node/fs/srcImgDir';\nsrcImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcJsDir": {
                "name": "srcJsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcJsDir from '@coffeekraken/node/fs/srcJsDir';\nsrcJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcNodeDir": {
                "name": "srcNodeDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcNodeDir from '@coffeekraken/node/fs/srcNodeDir';\nsrcNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcRootDir": {
                "name": "srcRootDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcRootDir from '@coffeekraken/node/fs/srcRootDir';\nsrcRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcViewsDir": {
                "name": "srcViewsDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcViewsDir from '@coffeekraken/node/fs/srcViewsDir';\nsrcViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "srcViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.sugarRootDir": {
                "name": "sugarRootDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the sugar package directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sugarRootDir from '@coffeekraken/node/fs/sugarRootDir';\nsugarRootDir(); // => '/something/node_modules/@coffeekraken/sugar'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sugarDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/sugarDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.systemTmpDir": {
                "name": "systemTmpDir",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the system temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import systemTmpDir from '@coffeekraken/node/fs/systemTmpDir';\nsystemTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "systemTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/systemTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.php.execPhp": {
                "name": "execPhp",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to execute quickly and efficiently some php\nfrom nodejs.\nNote that you MUST have php installed on your system and available a global command.",
                "namespace": "@coffeekraken.sugar.node.php",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "execPhp.ts",
                "extension": "ts",
                "relPath": "src/node/php/execPhp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.exitCleanup": {
                "name": "exitCleanup",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply cleanup all the processes and other things that stay alive after that\nthe main process has been terminated",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import exitCleanup from '@coffeekraken/sugar/node/process/exitCleanup';\nawait exitCleanup();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "exitCleanup.ts",
                "extension": "ts",
                "relPath": "src/node/process/exitCleanup.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.kill": {
                "name": "kill",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to kill a process by id or by port.\nThis is just a proxy to the awesome fkill package",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import kill from '@coffeekraken/sugar/node/process/kill';\nawait kill(':8888'); // port\nawait kill(8765); // id"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "kill.ts",
                "extension": "ts",
                "relPath": "src/node/process/kill.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.onProcessExit222": {
                "name": "onProcessExit222",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to register a callback to execute when the process\nis exiting by one of these events:\n- exit: when app is closing\n- SIGINT: on ctrl+c\n- SIGUSR1, SIGUSR2: catches \"kill pid\"\n- uncaughtException: catches uncaught exceptions",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onProcessExit from '@coffeekraken/sugar/node/process/onProcessExit';\nonProcessExit(() => {\n     // do something\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "onProcessExit.ts",
                "extension": "ts",
                "relPath": "src/node/process/onProcessExit.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.spawn": {
                "name": "spawn",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to spawn a new child process just like the native ```spawn``` node function\nbut add the support for SEventEmitter communication layers",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import spawn from '@coffeekraken/sugar/node/process/spawn';\nconst pro = spawn('echo \"hello world\");\npro.on('close', () => {\n  console.log('closed');\n});\nconsole.log(await pro);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "spawn.ts",
                "extension": "ts",
                "relPath": "src/node/process/spawn.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.tokens.replaceTokens": {
                "name": "replaceTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function take as input a string and replace some tokens using these functions:\n- replacePathTokens: Replace path tokens like %packageRootDir, %distJsDir, etc...\n- replacePackageJsonTokens: Replace tokens like %packageJson.name, %packageJson.version, etc... with package.json values",
                "namespace": "@coffeekraken.sugar.node.tokens",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/node/token/replaceTokens';\nreplaceTokens('Hello %packageJson.name, hope you are doing well (%packageRootDir)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/node/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.zip.unzip": {
                "name": "unzip",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unzip quickly a zip file\nto a particular destination.\nNote that the zip filename will be used as folder name",
                "namespace": "@coffeekraken.sugar.node.zip",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __unzip from '@coffeekraken/sugar/node/zip/unzip';\nawait __unzip('my/cool/file.zip');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "unzip.ts",
                "extension": "ts",
                "relPath": "src/node/zip/unzip.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.array.deepMerge": {
                "name": "deepMerge",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and merge them deeply by keeping distinct\nproperty keys.",
                "namespace": "@coffeekraken.sugar.php.array",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\merge_deep([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], [\n   'prop1' => 'Plop'\n]);\n// [\n//   'prop1' => 'Plop',\n//   'prop2' => 'World'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepMerge.php",
                "extension": "php",
                "relPath": "src/php/array/deepMerge.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.html.expandPleasantCssClassnames": {
                "name": "expandPleasantCssClassnames",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method will look for classes like something:cool and transform it into\nsomething like this: something something--cool",
                "namespace": "@coffeekraken.sugar.php.html",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\html\\expandPleasantCssClassnames('...html');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "expandPleasantCssClassnames.php",
                "extension": "php",
                "relPath": "src/php/html/expandPleasantCssClassnames.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.absolutePath": {
                "name": "absolutePath",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method simply check if the passed path is absolute or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\absolutePath('my/cool/path'); // => false\nSugar\\is\\absolutePath('http://something.com/my/cool/path'); // => true\nSugar\\is\\absolutePath('/my/cool/path'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "absolutePath.php",
                "extension": "php",
                "relPath": "src/php/is/absolutePath.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.url": {
                "name": "url",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed string a an url or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\url('something'); // => false\nSugar\\is\\url('http://hello.com'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "url.php",
                "extension": "php",
                "relPath": "src/php/is/url.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.network.ipAddress": {
                "name": "ipAddress",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get either your \"local\" ip in the local network, either\nyour public ip address on the internet.",
                "namespace": "@coffeekraken.sugar.php.network",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\network\\ipAddress(); // => 192.168.1.23\nSugar\\network\\ipAddress('external'); // => 23.45.322.67"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ipAddress.php",
                "extension": "php",
                "relPath": "src/php/network/ipAddress.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.generateRandomString": {
                "name": "generateRandomString",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate a random string using the characters and the wanted length\nspecified in the params",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\generateRandomString(10); // => ak93mdkaod"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "generateRandomString.php",
                "extension": "php",
                "relPath": "src/php/string/generateRandomString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.idCompliant": {
                "name": "idCompliant",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "idCompliant.php",
                "extension": "php",
                "relPath": "src/php/string/idCompliant.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.replaceTokens": {
                "name": "replaceTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take care of replacing some tokens like \"%serverIp\", \"%clientIp\", etc...\nHere's the list of supported tokens: (this list can be updated with new tokens)\n- %serverIp: Server ip address\n- %clientIp: Client ip address",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\replaceTokens('Hello %serverIp, how are you?'); // => Hello 156.436.56.75, how are you?"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replaceTokens.php",
                "extension": "php",
                "relPath": "src/php/string/replaceTokens.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.simplifySpecialChars": {
                "name": "simplifySpecialChars",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\simplifySpecialChars('Hellô world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "simplifySpecialChars.php",
                "extension": "php",
                "relPath": "src/php/string/simplifySpecialChars.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.url.currentUrl": {
                "name": "currentUrl",
                "type": "Function",
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Return the current url",
                "namespace": "@coffeekraken.sugar.php.url",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\url\\currentUrl();\n// https://coffeekraken.io/hello/world?query=string"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "currentUrl.php",
                "extension": "php",
                "relPath": "src/php/url/currentUrl.php",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.mixin.setup": {
                "name": "setup",
                "type": "mixin",
                "description": "Setup sugar toolkit by overriding the default [settings](../_settings.scss)\nThis has to be called *BEFORE** the [s-init mixin](./_s-init.scss)",
                "namespace": "@coffeekraken.sugar.scss.core.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.setup((\n\t\ttypo : (\n\t\t\tfont-size : 12px\n\t\t),\n\t\tsizes : (\n\t\t\tsmall : 0.5,\n\t\t\tbig : 1.5\n\t\t)\n));\n// this mixin can be called as many times as you need\n// this allows you to separate your configs setup into multiple\n// files..."
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_setup.scss",
                "extension": "scss",
                "relPath": "src/scss/core/_setup.scss",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.asyncForEach": {
                "name": "asyncForEach",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to make some async foreach on your arrays",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import asyncForEach from '@coffeekraken/sugar/js/array/asyncForEach';\nconst waitFor = (ms) => new Promise(r => setTimeout(r, ms));\nasyncForEach([0,1,2,3], async (item) => {\n   await waitWor(50);\n   console.log(item);\n});\n// 0\n// 1\n// 2\n// 3"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "asyncForEach.ts",
                "extension": "ts",
                "relPath": "src/shared/array/asyncForEach.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.keysFirst": {
                "name": "keysFirst",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array start with the passed keys",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import keysFirst from '@coffeekraken/sugar/js/array/keysFirst'\nkeysFirst(['a','b','d','g','c'], ['d','g'])\n// ['d','g','a','b','c']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "keysFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.keysLast": {
                "name": "keysLast",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array ends with the passed keys",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import keysLast from '@coffeekraken/sugar/js/array/keysLast'\nkeysLast(['a','b','d','g','c'], ['d','g'])\n// ['a','b','c','d','g']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "keysLast.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysLast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.pickRandom": {
                "name": "pickRandom",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pick a random item in the passed array",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pickRandom from '@coffeekraken/sugar/shared/array/pickRandom';\nconst array = ['hello','world'];\npickRandom(array); // => 'world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "pickRandom.ts",
                "extension": "ts",
                "relPath": "src/shared/array/pickRandom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.proxy": {
                "name": "proxy",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function override the passed array prototype to intercept changes made through",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import proxy from '@coffeekraken/sugar/js/array/proxy';\nconst myArray = proxy([1,2,3]);\nmyArray.watch(['push','pop'], (watchObj) => {\n   // check the watchObj action\n   switch (watchObj.action) {\n     case 'push':\n       // do something...\n     break;\n   }\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "proxy.ts",
                "extension": "ts",
                "relPath": "src/shared/array/proxy.ts",
                "children": {
                    "watch": {
                        "name": "watch",
                        "type": "Function",
                        "description": "This method allows you to specify which Array methods you want to watch by passing an array of methods names like ['push','pop'].\nYou can also specify the handler function that will be called on each array updates, etc...",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myProxiedArray.watch(['push', 'pop'], (watchObj) => {\n   // do something...\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "unwatch": {
                        "name": "unwatch",
                        "type": "Function",
                        "description": "This methods allows you to unwatch a process started with the \"watch\" method.\nYou have to pass as parameter the watchId that the \"watch\" method has returned you.",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myArray.watch('push', (obj) => //...);\nmyArray.unwatch(watchId);"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.array.sameItems": {
                "name": "sameItems",
                "type": "Function",
                "description": "This function take two arrays and return all the items that are the same.\nYou can specify if you want only comparing by reference for object, etc... or if\nyou want to transform items in hashes and compare that instead.",
                "namespace": "@coffeekraken.sugar.shared.array",
                "example": [
                    {
                        "language": "js",
                        "code": "import sameItems from '@coffeekraken/sugar/shared/array/sameItems';\nsameItems([1,2,3,4], [1,3,5]); // => [1,3]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sameItems.ts",
                "extension": "ts",
                "relPath": "src/shared/array/sameItems.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.splitEvery": {
                "name": "splitEvery",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split an array every N items",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitEvery from '@coffeekraken/sugar/js/array/splitEvery';\nsplitEvery([1,2,3,4,5,6,7,8,9], 3);\n// [[1,2,3],[4,5,6],[7,8,9]]"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/array/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.unique": {
                "name": "unique",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an array as parameter and return a new one\nwith all the duplicates values removed.",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import unique from '@coffeekraken/sugar/js/array/unique';\nunique(['hello','world','hello','world']); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "unique.ts",
                "extension": "ts",
                "relPath": "src/shared/array/unique.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.ascii.sugarBanner": {
                "name": "sugarBanner",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns an ascii version of the sugar logo",
                "namespace": "@coffeekraken.sugar.shared.ascii",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sugarBanner from '@coffeekraken/sugar/js/ascii/sugarBanner';\nsugarBanner();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sugarBanner.ts",
                "extension": "ts",
                "relPath": "src/shared/ascii/sugarBanner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.argsToString": {
                "name": "argsToString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a simple object, a definition object and return you the string version that you can pass\ndirectly to the command line interface",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import argsToString from '@coffeekraken/sugar/shared/cli/argsToString';\nargsToString({\n   arg1: 'Hello',\n   myOtherArg: 'World'\n});\n// => -a Hello --myOtherArg World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "argsToString.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/argsToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.buildCommandLine": {
                "name": "buildCommandLine",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameters a command line (with tokens), an arguments object and a definition object to\ngenerate the final command line string to launch.\nA token is simply a string that begin with \"[\" and end with \"]\" like so: \"[mytoken]\".\nEach arguments of the definition object can be a token. If you have an argument called \"hostname\", the corresponding token will be \"[hostname]\".\nA special token called \"[arguments]\" is needed if you want the passed arguments to be integrated to the builded command line.",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import buildCommandLine from '@coffeekraken/sugar/js/cli/buildCommandLine';\nbuildCommandLine('php [hostname]:[port] [rootDir] [arguments]', {\n   hostname: {\n     type: 'String',\n     description: 'Server hostname',\n     default: 'localhost'\n   },\n   port: {\n     type: 'Number',\n     description: 'Server port',\n     default: 8080\n   },\n   rootDir: {\n     type: 'String',\n     description: 'Root directory',\n     default: '.'\n   },\n   arg1: {\n     type: 'Boolean',\n     alias: 'a',\n     description: 'Argument 1',\n     default: true\n   }\n}, {\n   port: 8888\n});\n// => php localhost:8888 . -a"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "buildCommandLine.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/buildCommandLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.parseArgs": {
                "name": "parseArgs",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string to find the provided arguments into the list and return a corresponding object.",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseArgs from '@coffeekraken/sugar/js/string/parseArgs';\nparseArgs('hello -w 10 yop \"hello world\" -b --hello.world Nelson --help \"coco yep\" #blop', {\n   param1: { type: 'String', alias: 'p' },\n   world: { type: 'Array', alias: 'w', validator: value => {\n     return Array.isArray(value);\n   }},\n   bool: { type: 'Boolean', alias: 'b', default: false, required: true },\n   'hello.world': { type: 'String' },\n   help: { type: 'String', alias: 'h' },\n   id: { type: 'String', alias: 'i', regexp: /^#([\\S]+)$/ }\n}, {\n   treatDotsAsObject: true,\n   handleOrphanOptions: true\n});\n{\n   param1: 'hello',\n   world: [10, 'yop', 'hello world'],\n   bool: true,\n   hello: {\n     world: 'Nelson'\n   },\n   help: 'coco yep',\n   id: '#blop'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parseArgs.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/parseArgs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.convert": {
                "name": "convert",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input any color format like rgba Object, hsl Object, hsv Object, hex String, rgba String, hsl String or hsv String\nand convert it into the wanted format like \"rgba\", \"hsl\", \"hsv\", \"hex\", \"rgbaString\", \"hslString\" or \"hsvString\"",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/color/convert';\nconvert('rgba(10,20,30,100)', 'rgba'); // => { r: 10, g: 20, b: 30, a: 100 }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/color/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.hex2rgba": {
                "name": "hex2rgba",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Hex to RGBA",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hex2rgba from '@coffeekraken/sugar/js/color/hex2rgba';\nhex2rgba('#ff00ff');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "hex2rgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hex2rgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.hsl2rgba": {
                "name": "hsl2rgba",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSL to RGBA",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hsl2rgba from '@coffeekraken/sugar/js/color/hsl2rgba';\nhsla2rgba(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "hsla2rgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hsla2rgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.parseHsla": {
                "name": "parseHsla",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse HSL",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseHsl from '@coffeekraken/sugar/color/parseHsl';\nparseHsl('hsl(20,20,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parseHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseHsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.parseRgba": {
                "name": "parseRgba",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse RGBA string and return an object",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseRgba from '@coffeekraken/sugar/js/color/parseRgba';\nparseRgba('rgba(20,10,100,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parseRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseRgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.rgba2hex": {
                "name": "rgba2hex",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HEX",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rgba2hex from '@coffeekraken/sugar/js/color/rgba2hex';\nrgba2hex(10,20,30,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "rgba2hex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgba2hex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.rgba2hsla": {
                "name": "rgba2hsla",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HSL",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rgba2hsla from '@coffeekraken/sugar/js/color/rgba2hsla';\nrgba2hsla(10,20,50,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "rgba2hsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgba2hsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.console.parseHtml": {
                "name": "parseHtml",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse the simple html tags to format the console message",
                "namespace": "@coffeekraken.sugar.js.console",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parseHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/console/parseHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.core.activeSpace": {
                "name": "activeSpace",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This object expose some functions that are usefull to manage the \"active\" space of your application.\nAn active space is represented by a string formated like so \"something.cool.hello\". This mean that your app is\nin the \"something.cool.hello\" space and depending on that, you can enable or disable some features like for example\nkeypress that have to be active only in certain \"space\" of your application.\nThe exposed functions are these ones:\n- set: This allows you to set the active space\n- get: This allows you to get the current active space\n- is: This allows you to check if the passed active space string is in the current active space\n- previous: This allows you to go back 1 activeSpace in the stack\n- on: This allows you to register callbacks attached to an activeSpace\n- append: This allows you to append an activeSpace string to the current one",
                "namespace": "@coffeekraken.sugar.js.core",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import activeSpace from '@coffeekraken/sugar/core/activeSpace';\nactiveSpace.set('hello.world');\nactiveSpace.get(); // => hello.world\nactiveSpace.is('hello'); // => false\nactiveSpace.is('hello.world.coco'); // => false\nactiveSpace.is('hello.*'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "activeSpace.ts",
                "extension": "ts",
                "relPath": "src/shared/core/activeSpace.ts",
                "children": {
                    "get": {
                        "name": "get",
                        "type": "Function",
                        "description": "This function allows you to get the current active space",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "set": {
                        "name": "set",
                        "type": "Function",
                        "description": "This function allows you to set the current active space",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "append": {
                        "name": "append",
                        "type": "Function",
                        "description": "This function take the current activeSpace string and add the passed one to set the new activeSpace string",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "remove": {
                        "name": "remove",
                        "type": "Function",
                        "description": "This function simply remove the passed string from the activeSpace stack",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "previous": {
                        "name": "previous",
                        "type": "Function",
                        "description": "This function simply go back by 1 in the activeSpace stack",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "is": {
                        "name": "is",
                        "type": "Function",
                        "description": "This function allows you to check if the active space string that you pass match with the current active space or not.\nThe checking process is done using the \"minimatch\" package that let you use cool features like \"\", \"**\", etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "on": {
                        "name": "on",
                        "type": "Function",
                        "description": "This function allows you to register a callback linked with an activeSpace string\nthat will be called once the activeSpace is matched",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.aes": {
                "name": "aes",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the aes algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "aes.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/aes.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.base64": {
                "name": "base64",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the base64 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/base64.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.md5": {
                "name": "md5",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/md5.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.object": {
                "name": "object",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the object algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/object.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.sha256": {
                "name": "sha256",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha256 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sha256.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/sha256.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.sha512": {
                "name": "sha512",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha512 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sha512.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/sha512.ts",
                "children": {
                    "encrypt": {
                        "name": "encrypt",
                        "type": "Function",
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    },
                    "decrypt": {
                        "name": "decrypt",
                        "type": "Function",
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.css.isValidUnitValue": {
                "name": "isValidUnitValue",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function tells you if the passed value is a valid css unit based one like 10px, 20em, etc...",
                "namespace": "@coffeekraken.sugar.shared.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isValidUnitValue from '@coffeekraken/sugar/shared/css/isValidUnitValue';\nisValidUnitValue('10px'); // => true\nisValidUnitValue('default'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "isValidUnitValue.ts",
                "extension": "ts",
                "relPath": "src/shared/css/isValidUnitValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.stripCssComments": {
                "name": "stripCssComments",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply remove all the css comments like:\n- Multiline blocks css comments begining with / *, ending with\n/\n- Single line comments begining with //",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripCssComments from '@coffeekraken/sugar/js/css/stripCssComments';\nstripCssComments(`\n// something cool\nbody { background-color: red; }\n`);\n// body { background-color: red }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stripCssComments.ts",
                "extension": "ts",
                "relPath": "src/shared/css/stripCssComments.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.date.utcTime": {
                "name": "utcTime",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method allows you to display easily the time in UTC format like \"10:20:32\"",
                "namespace": "@coffeekraken.sugar.shared.date",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import utcTime from '@coffeekraken/sugar/shared/date/utcTime';\nutcTime(); // => 10:20:32\nutcTime(true, true, false); // => 10:20"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "utcTime.ts",
                "extension": "ts",
                "relPath": "src/shared/date/utcTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.availableEasingsArray": {
                "name": "availableEasingsArray",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return back an array of all the available easings function in the sugar toolkit",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "availableEasingsArray.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/availableEasingsArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInCubic": {
                "name": "easeInCubic",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutCubic": {
                "name": "easeInOutCubic",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuad": {
                "name": "easeInOutQuad",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuart": {
                "name": "easeInOutQuart",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuint": {
                "name": "easeInOutQuint",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuad": {
                "name": "easeInQuad",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuart": {
                "name": "easeInQuart",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuint": {
                "name": "easeInQuint",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeInQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutCubic": {
                "name": "easeOutCubic",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuad": {
                "name": "easeOutQuad",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuart": {
                "name": "easeOutQuart",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuint": {
                "name": "easeOutQuint",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "easeOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.linear": {
                "name": "linear",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease linear function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "linear.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/linear.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.env.env": {
                "name": "env",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to access environment variables through the same method in node and javascript",
                "namespace": "@coffeekraken.sugar.js.env",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import env from '@coffeekraken/sugar/js/dev/env';\nconsole.log(env('node_env')); // => production\nenv('something.cool', { hello: 'world' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "env.ts",
                "extension": "ts",
                "relPath": "src/shared/env/env.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.es6.sEs6Import": {
                "name": "SEs6Import",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent an es6 import statement with properties like:\n- path {String}: The import path\n- default {String}: The default import name\n- star {String}: The start import name \"import\nas something from ...\"\n- named {Array<Object>}: THe named imports\n- raw {String}: The raw import statement",
                "namespace": "@coffeekraken.sugar.js.es6",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import SEs6Import from '@coffeekraken/sugar/js/es6/SEs6Import';\nconst import = new SEs6Import('import coco from \"something\";');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SEs6Import.ts",
                "extension": "ts",
                "relPath": "src/shared/es6/SEs6Import.ts",
                "children": {
                    "parseCode": {
                        "name": "parseCode",
                        "type": "Function",
                        "description": "This function simply parse the passed code and return an array of all the\nfounded es6 imports",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "raw": {
                        "name": "raw",
                        "type": "String",
                        "description": "Store the raw statement string",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "path": {
                        "name": "path",
                        "type": "String",
                        "description": "Store the statement path",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "default": {
                        "name": "default",
                        "type": "String",
                        "description": "Store the statement default import name",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "star": {
                        "name": "star",
                        "type": "String",
                        "description": "Store the statement star name like \"import\nas coco from ...\"",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "named": {
                        "name": "named",
                        "type": "Array<Object>",
                        "description": "Store the statement named imports with these properties:\n- name {String}: The import name\n- as {String}: The import as alias",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "toString": {
                        "name": "toString",
                        "type": "Function",
                        "description": "Return the builded version of the import",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.function.debounce": {
                "name": "debounce",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called only once after\nthe delay passed",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import debounce from '@coffeekraken/sugar/js/function/debounce';\nconst myDebouncedFn = debounce(() => {\n\t\t// my function content that will be\n\t\t// executed only once after the 1 second delay\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my debounced function\n\t\tmyDebouncedFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "debounce.ts",
                "extension": "ts",
                "relPath": "src/shared/function/debounce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.getArgsNames": {
                "name": "getArgsNames",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the arguments names of the passed function. Return an array of the arguments names",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getArgsNames from '@coffeekraken/sugar/shared/function/getArgsNames';\nfunction hello(world, coco, plop) { }\ngetArgsNames(hello); // => ['world', 'coco', 'plop']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getArgsNames.ts",
                "extension": "ts",
                "relPath": "src/shared/function/getArgsNames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.memoize": {
                "name": "memoize",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function can be used to memorize a function call result in order to save memory.\nThis is just a \"proxy\" of the \"memoizee\" package.",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import memoize from '@coffeekraken/sugar/shared/function/memoize';\nconst fn = memoize(function(text) => {\n   return `Hello ${text}`;\n});\nconst result = fn('world'); // first execution. no cache\nconst result1 = fn('plop'); // first execution with this argument, no cache\nconst result2 = fn('world'); // taken from cache"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "memoize.ts",
                "extension": "ts",
                "relPath": "src/shared/function/memoize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.setRecursiveTimeout": {
                "name": "setRecursiveTimeout",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to call a passed function each x time during a certain duration",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import setRecursiveTimeout from '@coffeekraken/sugar/js/function/setRecursiveTimeout';\nsetRecursiveTimeout(() => {\n\t\t// I will be executed 10 times\n}, 1000, 10000);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "setRecursiveTimeout.ts",
                "extension": "ts",
                "relPath": "src/shared/function/setRecursiveTimeout.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.sleep": {
                "name": "sleep",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple sleep function that can be used using \"await\" syntax in an \"async\" function",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sleep from '@coffeekraken/sugar/js/function/sleep';\nasync function() {\n console.log('hello');\n await sleep(2000);\n console.log('World');\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sleep.ts",
                "extension": "ts",
                "relPath": "src/shared/function/sleep.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.throttle": {
                "name": "throttle",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called once each threshhold time",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import throttle from '@coffeekraken/sugar/js/function/throttle';\nconst myThrottledFn = throttle(() => {\n\t\t// my function content that will be\n\t\t// executed only once each second\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my throttled function\n\t\tmyThrottledFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "throttle.ts",
                "extension": "ts",
                "relPath": "src/shared/function/throttle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.geom.2d.circleConstrain": {
                "name": "circleConstrain",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take as parameter a central point, a radius and a points to constrain inside the circle defined by the radius",
                "namespace": "@coffeekraken.sugar.js.geom.2d",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import circleConstrain from '@coffeekraken/sugar/js/geom/2d/circleConstrain'\ncircleConstrain({\n\tx: 10, y: 10\n}, 10, {\n\tx: 10, y: 5\n})"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "circleConstrain.ts",
                "extension": "ts",
                "relPath": "src/shared/geom/circleConstrain.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.geom.2d.distanceBetween": {
                "name": "distanceBetween",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the distance between two points",
                "namespace": "@coffeekraken.sugar.js.geom.2d",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceBetween from '@coffeekraken/sugar/js/geom/2d/distanceBetween'\ndistanceBetween({\n\tx: 10, y: 20\n}, {\n\tx: 10, y: 30\n}) // 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "distanceBetween.ts",
                "extension": "ts",
                "relPath": "src/shared/geom/distanceBetween.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.expandGlob": {
                "name": "expandGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take some extended glob pattern(s) and expand them to standard supported\nglob patterns. With this, you will have access to some syntax sugar like these:\n- /something{2,4}/.ts => **{2,4} = search in level 2 bis level 4",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandGlob from '@coffeekraken/sugar/js/glob/expandGlob';\nexpandGlob('/something{2,4}/.ts');\n// ['/something/ /* /*.ts','/something/* /* /* /*.ts', '/something/* /* /* /* /*.ts']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "expandGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/expandGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.extractGlob": {
                "name": "extractGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the glob part of a passed string",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractGlob from '@coffeekraken/sugar/js/glob/extractGlob';\nextractGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extractGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.extractNoneGlob": {
                "name": "extractNoneGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the none glob part of a passed string",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractNoneGlob from '@coffeekraken/sugar/js/glob/extractNoneGlob';\nextractNoneGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extractNoneGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractNoneGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassname": {
                "name": "expandPleasantCssClassname",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassname from '@coffeekraken/sugar/shared/html/expandPleasantCssClassname';\nexpandPleasantCssClassname('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "expandPleasantCssClassname.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassnames": {
                "name": "expandPleasantCssClassnames",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassnames from '@coffeekraken/sugar/shared/html/expandPleasantCssClassnames';\nexpandPleasantCssClassnames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "expandPleasantCssClassnames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassnames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.replaceTags": {
                "name": "replaceTags",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Replace all the html tags that you specify by something else that you can fully choose",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTags from '@coffeekraken/sugar/js/html/replaceTags';\nreplaceTags('<span>Hello</span> world', {\n   span: (tag, content) => `<div>${content}</div>`; // => <div>Hello</div> world\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replaceTags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/replaceTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.striptags": {
                "name": "striptags",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Strip tags of an html string.\nThis is a simple wrapper of the nice \"striptags\" package that you can find here: https://www.npmjs.com/package/striptags",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import striptags from '@coffeekraken/sugar/js/string/striptags'\nstriptags('<p><span>Hello</span> world</p>', '<span>') // <span>Hello</span> world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "striptags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/striptags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.unescapeHtml": {
                "name": "unescapeHtml",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unescape some html characters like &lt;, etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import unescapeHtml from '@coffeekraken/sugar/shared/html/unescapeHtml';\nunescapeHtml('&lt;s-code-example&gt;'); // => <s-code-example>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "unescapeHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/html/unescapeHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isArray": {
                "name": "isArray",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Array",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isArray from '@coffeekraken/sugar/js/is/array'\nif (isArray([]) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "array.ts",
                "extension": "ts",
                "relPath": "src/shared/is/array.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBase64": {
                "name": "isBase64",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a base 64 string",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBase64 from '@coffeekraken/sugar/js/is/base64'\nif (isBase64(true) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/shared/is/base64.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBoolean": {
                "name": "isBoolean",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Boolean",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBoolean from '@coffeekraken/sugar/js/is/boolean'\nif (isBoolean(true) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "boolean.ts",
                "extension": "ts",
                "relPath": "src/shared/is/boolean.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBrowser": {
                "name": "isBrowser",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the script is running inside a browser or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBrowser from '@coffeekraken/sugar/js/is/browser'\nif (isBrowser() {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "browser.ts",
                "extension": "ts",
                "relPath": "src/shared/is/browser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.class": {
                "name": "class",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed variable (or array of variables) is/are plain variable(s)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isClass = from '@coffeekraken/sugar/js/is/class';\nisClass({ hello: 'world'}); // => false\nconst myCoolClass = class Coco{};\nisClass(myCoolClass); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "class.ts",
                "extension": "ts",
                "relPath": "src/shared/is/class.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isClassInstance": {
                "name": "isClassInstance",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed item is an object class and not a plain object.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isClassInstance from '@coffeekraken/sugar/shared/is/classInstance';\nif (isClassInstance({\n     something: 'hello'\n})); // => false\nclass MyClass {\n     constructor() {}\n}\nif (isClassInstance(new MyClass())); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "classInstance.ts",
                "extension": "ts",
                "relPath": "src/shared/is/classInstance.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isColor": {
                "name": "isColor",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a color",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isColor from '@coffeekraken/sugar/js/is/color';\nisColor('red') => true\nisColor('#fff') => true\nisColor('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "color.ts",
                "extension": "ts",
                "relPath": "src/shared/is/color.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isDdmmyyyyDate": {
                "name": "isDdmmyyyyDate",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid dd.mm.yyyy date\nThis will match : dd.mm.yyyy | dd/mm/yyyy | dd-mm-yyyy | dd mm yyyy",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isDdmmyyyyDate from '@coffeekraken/sugar/js/is/ddmmyyyyDate'\nif (isDdmmyyyyDate('20.12.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ddmmyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/ddmmyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEmail": {
                "name": "isEmail",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid email address",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEmail from '@coffeekraken/sugar/js/is/email';\nisEmail('john.doe@gmail.com') => true\nisEmail('plop@yop.com') => true\nisEmail('hello') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "email.ts",
                "extension": "ts",
                "relPath": "src/shared/is/email.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEven": {
                "name": "isEven",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is even or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEven from '@coffeekraken/sugar/js/is/even'\nisEven(1) // false\nisEven(2) // true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "even.ts",
                "extension": "ts",
                "relPath": "src/shared/is/even.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isFunction": {
                "name": "isFunction",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js function",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFunction from '@coffeekraken/sugar/js/is/function'\nif (isFunction(function() {})) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "function.ts",
                "extension": "ts",
                "relPath": "src/shared/is/function.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isGlob": {
                "name": "isGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid glob pattern or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isGlob from '@coffeekraken/sugar/js/is/js';\nisGlob('something/.js); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "glob.ts",
                "extension": "ts",
                "relPath": "src/shared/is/glob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isInteger": {
                "name": "isInteger",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is an integer",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInteger from '@coffeekraken/sugar/js/is/integer';\nisInteger(10) => true\nisInteger('hello') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "integer.ts",
                "extension": "ts",
                "relPath": "src/shared/is/integer.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isJs": {
                "name": "isJs",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under javascript runtime or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isJs from '@coffeekraken/sugar/js/is/js';\nisJs(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "js.ts",
                "extension": "ts",
                "relPath": "src/shared/is/js.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isJson": {
                "name": "isJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid json",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isJson from '@coffeekraken/sugar/js/is/json'\nif (isJson('[{id:10}]')) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "json.ts",
                "extension": "ts",
                "relPath": "src/shared/is/json.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.linux": {
                "name": "linux",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on linux",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isLinux from '@coffeekraken/sugar/js/is/linux';\nisLinux(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "linux.ts",
                "extension": "ts",
                "relPath": "src/shared/is/linux.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMap": {
                "name": "isMap",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Map",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMap from '@coffeekraken/sugar/js/is/map'\nconst map = new Map();\nif (isMap(map) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/is/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMmddyyyyDate": {
                "name": "isMmddyyyyDate",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid mm.dd.yyyy date\nThis will match : mm.dd.yyyy | mm/dd/yyyy | mm-dd-yyyy | mm dd yyyy",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMmddyyyyDate from '@coffeekraken/sugar/js/is/mmddyyyyDate'\nif (isMmddyyyyDate('12.25.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "mmddyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/mmddyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isNode": {
                "name": "isNode",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under node runtime or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isNode from '@coffeekraken/sugar/js/is/node';\nisNode(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "node.ts",
                "extension": "ts",
                "relPath": "src/shared/is/node.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isNumber": {
                "name": "isNumber",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a number",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isNumber from '@coffeekraken/sugar/js/is/number';\nisNumber(12) => true\nisNumber(22.3) => true\nisNumber('20') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "number.ts",
                "extension": "ts",
                "relPath": "src/shared/is/number.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isObject": {
                "name": "isObject",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js object",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isObject from '@coffeekraken/sugar/js/is/object'\nif (isObject({}) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/is/object.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isOdd": {
                "name": "isOdd",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is odd or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOdd from '@coffeekraken/sugar/js/is/odd'\nisOdd(1) // true\nisOdd(2) // false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "odd.ts",
                "extension": "ts",
                "relPath": "src/shared/is/odd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.ofType": {
                "name": "ofType",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take the value to check and an argument type definition string like \"String\", \"Array<String>\", etc... and return true or false depending\nif the value pass the test or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOfType from '@coffeekraken/sugar/js/is/ofType';\nifOfType(true, 'Boolean'); // => true\nisOfType(12, 'String|Number'); // => true\nisOfType(['hello',true], 'Array<String>'); // => { expected: { type: 'Array<String>' }, received: { type: 'Array<String|Boolean>' }}\nisOfType(['hello',true], 'Array<String|Boolean>'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ofType.ts",
                "extension": "ts",
                "relPath": "src/shared/is/ofType.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.osx": {
                "name": "osx",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOsx from '@coffeekraken/sugar/js/is/osx';\nisOsx(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "osx.ts",
                "extension": "ts",
                "relPath": "src/shared/is/osx.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.plainObject": {
                "name": "plainObject",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed object (or array of objects) is/are plain object(s)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPlainObject from '@coffeekraken/sugar/js/is/plainObject';\nisPlainObject({ hello: 'world'}); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "plainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/plainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isRegexp": {
                "name": "isRegexp",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Regexp",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isRegexp from '@coffeekraken/sugar/js/is/regexp'\nif (isRegexp(/^hello$/g) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "regexp.ts",
                "extension": "ts",
                "relPath": "src/shared/is/regexp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isString": {
                "name": "isString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js String",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isString from '@coffeekraken/sugar/js/is/String'\nif (isString({}) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "string.ts",
                "extension": "ts",
                "relPath": "src/shared/is/string.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isTerminal": {
                "name": "isTerminal",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns if the process runs inside a terminal or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTerminal from '@coffeekraken/sugar/js/is/terminal';\nisTerminal(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "terminal.ts",
                "extension": "ts",
                "relPath": "src/shared/is/terminal.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.testEnv": {
                "name": "testEnv",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current environment is in a test process or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTest from '@coffeekraken/sugar/js/is/testEnv';\nisTest(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "testEnv.ts",
                "extension": "ts",
                "relPath": "src/shared/is/testEnv.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isUrl": {
                "name": "isUrl",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid url",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isUrl from '@coffeekraken/sugar/js/is/url';\nisUrl('http://google.com') => true\nisUrl('ftp://web.coco.com:2222') => true\nisUrl('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "url.ts",
                "extension": "ts",
                "relPath": "src/shared/is/url.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.windows": {
                "name": "windows",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOsx from '@coffeekraken/sugar/js/is/windows';\nisWindows(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "windows.ts",
                "extension": "ts",
                "relPath": "src/shared/is/windows.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isYyyymmddDate": {
                "name": "isYyyymmddDate",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid yyyy.mm.dd date\nThis will match : yyyy.mm.dd | yyyy/mm/dd | yyyy-mm-dd | yyyy mm dd",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isYyyymmddDate from '@coffeekraken/sugar/js/is/yyyymmddDate'\nif (isYyyymmddDate('2018.12.25')) {\n    // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "yyyymmddDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/yyyymmddDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.iterable.map": {
                "name": "map",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an iterable value like an Array, an Object, a Map, a String, an Integer, a Set, etc... and\nsimply iterate over like a forEach.",
                "namespace": "@coffeekraken.sugar.js.iterable",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import map from '@coffeekraken/sugar/js/iterable/map';\nconst myStack = ['hello', 'world'];\nmap(myStack, ({key, value}) => {\n   return `${value} coco`;\n});\n// ['hello coco', 'world coco']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/iterable/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.json.sanitizeJsonString": {
                "name": "sanitizeJsonString",
                "type": "Function",
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function simple take a json string and ensure that it will be valid\nto pass through ```JSON.parse``` function for example.\nIf your string is really messy, if may not work. It take care for things like double quotes in double quotes, etc...",
                "namespace": "@coffeekraken.sugar.shared.json",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __sanitizeJsonString from '@coffeekraken/sugar/shared/json/sanitizeJsonString';\n__sanitizeJsonString('{\"something\": \"\"cool\"\"}'); // => '{\"something\":\"\\\"cool\\\"\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sanitizeJsonString.ts",
                "extension": "ts",
                "relPath": "src/shared/json/sanitizeJsonString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.json.stringify": {
                "name": "stringify",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function do the same as the ```JSON.stringify``` one but add some features.",
                "namespace": "@coffeekraken.sugar.js.json",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stringify from '@coffeekraken/sugar/js/json/stringify';\nstringify({\n   hello: 'world'\n}); // => {\"hello\":\"world\"}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stringify.ts",
                "extension": "ts",
                "relPath": "src/shared/json/stringify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.map.mapToObject": {
                "name": "mapToObject",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a Map object and convert it to a plain object",
                "namespace": "@coffeekraken.sugar.js.map",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import mapToObject from '@coffeekraken/sugar/js/map/mapToObject';\nconst myMap = new Map();\nmyMap.set('hello', 'world');\nmapToObject(myMap);\n// {\n//   hello: 'world'\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "mapToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/map/mapToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.number.constrain": {
                "name": "constrain",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Constrain a value between a min and a max value",
                "namespace": "@coffeekraken.sugar.js.number",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import constrain from '@coffeekraken/sugar/js/numbers/constrain'\nconstrain(100, 0, 50) // 50"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "constrain.ts",
                "extension": "ts",
                "relPath": "src/shared/number/constrain.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.number.pad": {
                "name": "pad",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pad a number n of x 0 or another passed character",
                "namespace": "@coffeekraken.sugar.js.number",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pad from '@coffeekraken/sugar/js/numbers/pad'\npad(123, 4) // 0123"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "pad.ts",
                "extension": "ts",
                "relPath": "src/shared/number/pad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.applyScope": {
                "name": "applyScope",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function allows you to apply a certain scope on the passed object.\nA scope can be for example the environment your object lives in like \"production\",\n\"development\", etc...\nIt can be literally all you want as soon as your object follow the property syntax to define\nscoped values described in the example bellow.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import applyScope from '@coffeekraken/sugar/shared/object/applyScope';\nconst myObject = {\n     myValue: 'Hello',\n     '@dev': {\n         myValue: 'World'\n     },\n     'something@prod': {\n         plop: 'yop'\n     }\n};\n\n// apply the \"env\" scope with the value of \"dev\"\napplyScope(myObject, ['dev']);\n// {\n//   myValue: 'World'\n// }\n\n// apply two scopes\napplyScope(myObject, ['prod']);\n// {\n//   myValue: 'Hello',\n//   something: {\n//       plop: 'yop'\n//   }\n// }\n\n// apply a scope with multiple values\napplyScope(myObject, ['dev','prod']);\n// {\n//   myValue: 'World',\n//   something: {\n//       plop: 'yop'\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "applyScope.ts",
                "extension": "ts",
                "relPath": "src/shared/object/applyScope.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.clone": {
                "name": "clone",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clone an object either at 1 level, or deeply.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import clone from '@coffeekraken/sugar/js/object/clone';\nclone({\n   hello: 'world'\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "clone.ts",
                "extension": "ts",
                "relPath": "src/shared/object/clone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.constructorName": {
                "name": "constructorName",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the constructor name of the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import constructorName from '@coffeekraken/sugar/js/object/constructorName';\nclass MyCoolClass {\n\t\t// class implementation...\n}\nconst myObj = new MyCoolClass();\nconsole.log(constructorName(myObj)); => MyCoolClass"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "constructorName.ts",
                "extension": "ts",
                "relPath": "src/shared/object/constructorName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.decycle": {
                "name": "decycle",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply remove the circular references in the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import decycle from '@coffeekraken/sugar/js/object/decycle';\ndecycle({\n   something: 'cool',\n   with: 'circular references',\n   //..\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "decycle.ts",
                "extension": "ts",
                "relPath": "src/shared/object/decycle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepAssign": {
                "name": "deepAssign",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as first parameter the object you want to assign others to,\nthen others objects you want to assign to the first.\nThe difference with the ```deepMerge``` function is that this one keep the first\npassed object as reference and update it directly. The ```deepMerge``` one create a new\nobject with the merging result",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepAssign from '@coffeekraken/sugar/js/object/deepAssign';\nconst obj1 = { something: 'cool' };\nconst obj2 = { other: true };\nconst obj3 = deepAssign(obj1, obj2);\nobj1 === obj3 // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepAssign.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepAssign.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepFilter": {
                "name": "deepFilter",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function and this through all of the object structure. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepFilter from '@coffeekraken/sugar/js/object/deepFilter';\ndeepFilter({\n   coco: 'hello',\n   plop: true,\n   sub: {\n     property: 'world'\n   }\n}, ({key, item}) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepFilter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepFilter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepize": {
                "name": "deepize",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an object like this one:\n{\n'something.cool': 'hello'\n}\nand convert it to something like this:\n{\nsomething: {\ncool: 'hello'\n}\n}",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepize from '@coffeekraken/sugar/js/object/deepize';\ndeepize({ 'something.cool': 'hello' }); // => { something: { cool: 'hello' } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepize.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepMap": {
                "name": "deepMap",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is the same as the \"map\" one. The only difference is that this one goes deep into the object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepMap from '@coffeekraken/sugar/js/object/deepMap';\ndeepMap({\n   hello: 'world'\n}, ({object, prop, value, path}) => {\n   return '~ ' + value;\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepMap.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepMerge": {
                "name": "deepMerge",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Deep merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepMerge from '@coffeekraken/sugar/node/object/deepMerge';\ndeepMerge({a: {b: {c: 'c', d: 'd'}}}, {a: {b: {e: 'e', f: 'f'}}});\n// => { a: { b: { c: 'c', d: 'd', e: 'e', f: 'f' } } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepMerge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMerge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepProxy": {
                "name": "deepProxy",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add Proxy to an object in deep fashion.\nNormally the Proxy process only the level on which it has been added. Here we add Proxy to all the\nobject levels and to new properties as well.\n\nOn the returned proxied object, you will have access to the ```revoke``` method that you can call to revoke the proxy applied.\nThis method will return you a shallow version of the proxied object that you can use as you want",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepProxy from '@coffeekraken/sugar/js/object/deepProxy';\nconst a = deepProxy({\n   hello: 'world'\n}, (actionObj) => {\n   // do something with the actionObj...\n});\na.hello = 'coco';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "deepProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.delete": {
                "name": "delete",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Delete an object property using a dotPath like \"something.else\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import delete from '@coffeekraken/sugar/js/object/delete';\nconst myObject = {\n   hello: 'world',\n   plop: 'yop'\n};\ndelete(myObject, 'plop');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "delete.ts",
                "extension": "ts",
                "relPath": "src/shared/object/delete.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.diff": {
                "name": "diff",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return an object that contains only what has been changed between the two.\nThis function is a simple wrapper around the nice object-diff package from Thomas Jensen that you can find here: https://www.npmjs.com/package/object-diff",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import diff from '@coffeekraken/sugar/js/object/diff';\nconst myObject1 = {\n   hello: 'world',\n   plop: 'yop'\n};\nconst myObject2 = {\n   coco: 'plop',\n   hello: 'hey!',\n   plop: 'yop'\n};\ndiff(myObject1, myObject2);\n{\n   coco: 'plop',\n   hello: 'hey!'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "diff.ts",
                "extension": "ts",
                "relPath": "src/shared/object/diff.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.ensureExists": {
                "name": "ensureExists",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pass a string like \"my.cool.object\" and the value it has to be and this function will ensure that this deep object exist",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureExists from '@coffeekraken/sugar/js/object/ensureExists';\nconst myObj = { hello: 'world' }«\nensureExists(myObj, 'cool.object', {});\n// { hello: 'world', cool: { object: {} } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ensureExists.ts",
                "extension": "ts",
                "relPath": "src/shared/object/ensureExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.extractValues": {
                "name": "extractValues",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an array of objects and a key name as parameters and return an array containing\nonly the specified object key value.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractValues from '@coffeekraken/sugar/js/object/extractValues';\nextractValues([{\n   hello: 'world',\n   plop: 'Yes'\n}, {\n   hello: 'king',\n   plop: 'something'\n}], 'hello'); // => ['world', 'king']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extractValues.ts",
                "extension": "ts",
                "relPath": "src/shared/object/extractValues.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.filter": {
                "name": "filter",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import filter from '@coffeekraken/sugar/js/object/filter';\nfilter({\n   coco: 'hello',\n   plop: true\n}, (key, item) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "filter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/filter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.flatten": {
                "name": "flatten",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform the passed multiple level object into a single level one",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import flatten from '@coffeekraken/sugar/js/object/flatten';\nflatten({\n   hello: {\n     world: 'Coco'\n   }\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "flatten.ts",
                "extension": "ts",
                "relPath": "src/shared/object/flatten.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.get": {
                "name": "get",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import get from '@coffeekraken/sugar/js/object/get';\nget('myObject.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "get.ts",
                "extension": "ts",
                "relPath": "src/shared/object/get.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.getGlob": {
                "name": "getGlob",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\".\nIt support glob patterns like \"something..id\" and returns you a new object containing\nall values with the path that matches the passed glob pattern.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import get from '@coffeekraken/sugar/js/object/get';\nget('myObject.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.getKeyByValue": {
                "name": "getKeyByValue",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the key that correspond to the passed value in the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getKeyByValue from '@coffeekraken/sugar/js/object/getKeyByValue';\nconsole.log(getKeyByValue({ hello: 'world' }, 'world')); // => hello"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getKeyByValue.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getKeyByValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.map": {
                "name": "map",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is the same function as the \"Array.map\" but for objects. It will iterate over all the properties\nof the passed object and pass the value to your process function. It will then save the property\nwith your processed value",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import map from '@coffeekraken/sugar/js/object/map';\nconst myObject = {\n   hello: 'world',\n   cat: 'Nelson'\n};\nmap(myObject, ({value, prop}) => {\n   return prop === 'hello' ? 'universe' : value;\n});\n{\n   hello: 'universe',\n   cat: 'Nelson'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/object/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.objectHash": {
                "name": "objectHash",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash passed object.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import objectHash from '@coffeekraken/sugar/node/fs/objectHash';\nobjectHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "objectHash.ts",
                "extension": "ts",
                "relPath": "src/shared/object/objectHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.propertyProxy": {
                "name": "propertyProxy",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a proxy for and object property.\nThis gives you the possibility to process the data of the property\nwhen it is getted or setted.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import propertyProxy from '@coffeekraken/sugar/js/object/propertyProxy';\nconst myObject = {\n\t\ttitle : 'World'\n};\n// create the proxy\npropertyProxy(myObject, 'title', {\n\t\tget : (value) => {\n\t\t\treturn `Hello ${value}`;\n\t\t},\n\t\tset : (value) => {\n\t\t\treturn `Youhou ${value}`;\n\t\t}\n});\nconsole.log(myObject.title) => 'Hello World';\nmyObject.title = 'Universe';\nconsole.log(myObject.title) => 'Hello Youhou Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "propertyProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/propertyProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.resolveTokens": {
                "name": "resolveTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an object and propare it to accept tokens like:\n- '{this.something.else}'\n- etc...",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import resolveTokens from '@coffeekraken/sugar/js/object/resolveTokens';\nconst myObj = resolveTokens({\n   hello: 'world',\n   plop: '{this.hello}\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "resolveTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/object/resolveTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.set": {
                "name": "set",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Set an object value using a dotted object path like \"myObject.myProperty.myValue\" to set his position",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import set from '@coffeekraken/sugar/js/object/set';\nset('myObject.cool.value', 'Hello world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "set.ts",
                "extension": "ts",
                "relPath": "src/shared/object/set.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.sort": {
                "name": "sort",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sortObject from '@coffeekraken/sugar/js/object/sort';\nsortObject({\n   coco: { weight: 10 },\n   lolo: { weight: 2 },\n   plop: { weight: 5 }\n}, (a, b) => {\n  return a.weight - b.weight;\n});\n// {\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n//   coco: { weight: 10 }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sort.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.sWatch": {
                "name": "SWatch",
                "type": "Class",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class allows you to easily monitor some object properties and get the new and old value of it",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "// create the watcher instance\nconst watchedObj = new SWatch({\n\t\ttitle : 'Hello World'\n});\n\n// watch the object\nwatchedObj.on('title:set', watchResult => {\n \t// do something when the title changes\n});\n\n// update the title\nwatchedObj.title = 'Hello Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SWatch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/SWatch.ts",
                "children": {
                    "constructor": {
                        "name": "constructor",
                        "type": "Function",
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://olivierbossel.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.object.toJson": {
                "name": "toJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert class instances to plain JSON object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toJson from '@coffeekraken/sugar/shared/object/toJson';\nclass MyClass {\n     hello = 'world';\n     something() {}\n}\ntoJson(new MyClass()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toJson.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.toQueryString": {
                "name": "toQueryString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform an object (key => pairs) to a query string like \"?var1=value1&var2\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toQueryString from '@coffeekraken/sugar/js/object/toQueryString'\nconsole.log(toQueryString({\n\tvalue1 : 'coco',\n\tvalue1 : 'plop'\n}));\n// => ?value1=coco&value2=plop"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toQueryString.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toQueryString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.object.uid": {
                "name": "uid",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate a uniqid based on the objects you pass as parameters.\nThe uid is hashed into a SHA256 32bits string but you can specify it using the \"format\" parameter described above",
                "namespace": "@coffeekraken.sugar.node.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uid from '@coffeekraken/sugar/node/object/uid';\nuid({ hello: 'world' }, { plop: 'coco' }); // => ijfw89uf98jhw9ef8whef87hw7e8q87wegfh78wgf87gw8fgw8e7fzghwz8efgw8fwzuheihgbweuzf"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "uid.ts",
                "extension": "ts",
                "relPath": "src/shared/object/uid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.watch": {
                "name": "watch",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method is a simple wrapper around the SWatch class that allows you to watch some action on object and arrays",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import watch from '@coffeekraken/sugar/js/object/watch';\nlet myObj = watch({\n   hello: 'world'\n}).on('', watchResult => {\n   // do something...\n});\nmyObj.hello = 'plop';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "watch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/watch.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.autoCast": {
                "name": "autoCast",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Auto cast the string into the correct variable type",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import autoCast from '@coffeekraken/sugar/js/string/autoCast'\nautoCast('12') // => 12\nautoCast('window.HTMLElement') // => HTMLElement\nautoCast('{\"hello\":\"world\"}') // {hello:'world'}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "autoCast.ts",
                "extension": "ts",
                "relPath": "src/shared/string/autoCast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.camelCase": {
                "name": "camelCase",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "camelCase a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import camelCase from '@coffeekraken/sugar/js/string/camelCase';\ncamelCase('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "camelCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.camelize": {
                "name": "camelize",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Camelize a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import camelize from '@coffeekraken/sugar/js/string/camelize';\ncamelize('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "camelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.countLine": {
                "name": "countLine",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many characters their is in the passed line.\nThis function will exclude the characters like the html tags like <red>, etc...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import countLine from '@coffeekraken/sugar/js/string/countLine';\ncountLine('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "countLine.ts",
                "extension": "ts",
                "relPath": "src/shared/string/countLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.crop": {
                "name": "crop",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allows you to crop a string at a certain length (this length take care of the croping characters like \"...\")",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import crop from '@coffeekraken/sugar/js/string/crop';\ncrop('Hello World', 10); // => Hello w..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "crop.ts",
                "extension": "ts",
                "relPath": "src/shared/string/crop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.dashCase": {
                "name": "dashCase",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "dashCase a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dashCase from '@coffeekraken/sugar/js/string/dashCase';\ndashCase('hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dashCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dashCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.dedupe": {
                "name": "dedupe",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simple make sure that you don't have duplicate statements in the passed string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dedupe from '@coffeekraken/sugar/js/string/dedupe';\ndedupe('hello world hello your', 'hello'); // => hello world your"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dedupe.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dedupe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.extractSame": {
                "name": "extractSame",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you what has been find the same in the two passed string.\nIt will return you either an array of same string parts or a simple string\nrepresenting the first same part found.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractSame from '@coffeekraken/sugar/js/string/extractSame';\nextractSame('Hello world', 'Hello plop'); // => 'Hello '"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "extractSame.ts",
                "extension": "ts",
                "relPath": "src/shared/string/extractSame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.idCompliant": {
                "name": "idCompliant",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __idCompliant from '@coffeekraken/sugar/shared/string/idCompliant';\n__idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "idCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/idCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.includes": {
                "name": "includes",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Same as the native String.includes function but accept either an array of items\nor a simple comma separated string like \"something,cool,hello,world\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import includes from '@coffeekraken/sugar/js/string/includes'\nincludes('Hello world', 'world,coco') // ['world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "includes.ts",
                "extension": "ts",
                "relPath": "src/shared/string/includes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.lowerFirst": {
                "name": "lowerFirst",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Lower first letter",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import lowerFirst from '@coffeekraken/sugar/js/string/lowerFirst'\nlowerFirst('Hello world') // hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "lowerFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/lowerFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.ltrim": {
                "name": "ltrim",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim left a specified string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ltrim from '@coffeekraken/sugar/js/string/ltrim'\nltrim('Hello World', 'Hello') // World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "ltrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/ltrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.namespaceCompliant": {
                "name": "namespaceCompliant",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nas a namespace with just dots and non special characters.",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __namespaceCompliant from '@coffeekraken/sugar/shared/string/namespaceCompliant';\n__namespaceCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "namespaceCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/namespaceCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.paramCase": {
                "name": "paramCase",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function transform a string into a param case one like so \"something-cool\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import paramCase from '@coffeekraken/sugar/js/string/paramCase';\nparamCase('some thoing cool'); // => some-thing-cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "paramCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/paramCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.parse": {
                "name": "parse",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string and convert it into his native data type like date, number, boolean, etc...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parse from '@coffeekraken/sugar/js/string/parse';\nparse('10'); // => 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parse.ts",
                "extension": "ts",
                "relPath": "src/shared/string/parse.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.printf": {
                "name": "printf",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "printf php equavalent",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import printf from '@coffeekraken/sugar/js/string/printf';\nprintf('Hello %s', 'world'); // => Hello world\nprintf('Hello %s, I\\'m %s', 'world', 'John Doe'); // Hello world, I'm John Doe\nprintf('Hello %(first)s, I\\'m %(name)s', { first : 'world', name : 'John Doe'}); // Hello world, I'm John Doe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "printf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/printf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.replaceTokens": {
                "name": "replaceTokens",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameter a tokened string like \"something [cool]\", an object\nof arguments/values and return the processed string with the tokens replaced by the arguments values.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/js/string/replaceTokens';\nreplaceTokens('hello [world]', { world: 'Coco' }); // => hello Coco"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/string/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.rtrim": {
                "name": "rtrim",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim right a specified string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rtrim from '@coffeekraken/sugar/js/string/rtrim'\nrtrim('Hello World', 'ld') // Hello Wor"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "rtrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/rtrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.simply": {
                "name": "simply",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string with accents, etc and convert it to a more simply\nversion like \"éàddö\" to \"eaddo\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import simplify from '@coffeekraken/sugar/js/string/simplify';\nsimplify('éàddö'); // => eaddo"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "João Filipe Ventura Coelho",
                    "email": "joaoventura93@outlook.com"
                },
                "filename": "simplify.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.simplifySpecialChars": {
                "name": "simplifySpecialChars",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\simplifySpecialChars('Hellô world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "simplifySpecialChars.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplifySpecialChars.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.splitEvery": {
                "name": "splitEvery",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split a string every n chars either by taking care of not spliting the words, or by simply spliting without any attention to that...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitEvery from '@coffeekraken/node/string/splitEvery';\nsplitEvery('Hello World', 2, true); // => ['He','ll','o ','Wo','rl','d']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/string/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.sprintf": {
                "name": "sprintf",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Javascript implementation of the sprintf php function.\n>For more infos, check [this github repository](https://github.com/alexei/sprintf.js)",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sprintf from '@coffeekraken/sugar/js/string/sprintf'\nsprintf('Hello %s', 'world') // Hello World\nconst user = { name: 'Dolly' }\nsprintf('Hello %(name)s', user) // Hello Dolly"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sprintf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/sprintf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.stripAnsi": {
                "name": "stripAnsi",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply strip all the ansi characters in a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripAnsi from '@coffeekraken/sugar/js/string/stripAnsi';\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007'); // => Click"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stripAnsi.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripAnsi.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripDocblocks": {
                "name": "stripDocblocks",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all docblocks",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __stripDocblocks from '@coffeekraken/sugar/shared/string/stripDocblocks';\n__stripDocblocks('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stripDocblocks.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripDocblocks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripSourcemap": {
                "name": "stripSourcemap",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all sourcemap",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __stripSourcemap from '@coffeekraken/sugar/shared/string/stripSourcemap';\n__stripSourcemap('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stripSourcemap.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripSourcemap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.toString": {
                "name": "toString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert passed value to a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toString from '@coffeekraken/sugar/js/string/toString'\ntoString({\n\tid:'hello'\n}) // '{\"id\":\"hello\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toString.ts",
                "extension": "ts",
                "relPath": "src/shared/string/toString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.trimLines": {
                "name": "trimLines",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and trim each lines",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import trimLines from '@coffeekraken/sugar/js/string/trimLines';\ntrimLines(`my cool lines\n     that have some lines to trim\nand some not...`);\n// my cool lines\n// that have some lines to trim\n// and some not..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "trimLines.ts",
                "extension": "ts",
                "relPath": "src/shared/string/trimLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.uncamelize": {
                "name": "uncamelize",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Uncamelize a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uncamelize from '@coffeekraken/sugar/js/string/uncamelize'\nuncamelize('helloWorldAndUniverse') // hello-world-and-universe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "uncamelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uncamelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.uniqid": {
                "name": "uniqid",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Generate a uniqid string of 8 bytes. Work using the [uniqid](https://www.npmjs.com/package/uniqid) npm package under the hood.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uniqid from '@coffeekraken/sugar/js/string/uniqid';\nconsole.log(uniqid()); // => 1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "uniqid.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uniqid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.unquote": {
                "name": "unquote",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Remove the quotes of a string\nTypes of quotes removed :\n- `\"`, `'`, `”`, '`'",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import unquote from '@coffeekraken/sugar/js/string/unquote'\nunquote(\"'Hello world'\") // \"Hello world\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "unquote.ts",
                "extension": "ts",
                "relPath": "src/shared/string/unquote.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.upperFirst": {
                "name": "upperFirst",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Upper first",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import upperFirst from '@coffeekraken/sugar/js/string/upperFirst'\nupperFirst('hello world') // Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "upperFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/upperFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.urlCompliant": {
                "name": "urlCompliant",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin url for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __urlCompliant from '@coffeekraken/sugar/shared/string/urlCompliant';\n__urlCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "urlCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/urlCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.sugar.sanitizeSugarJson": {
                "name": "sanitizeSugarJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to sanitize a sugarJson JSON to be sure you'll get\nthe same structure everytime",
                "namespace": "@coffeekraken.sugar.node.sugar",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sanitizeSugarJson from '@coffeekraken/sugar/node/sugar/sanitizeSugarJson';\nsanitizeSugarJson({\n     extends: 'something',\n     // ...\n}); // => { extends: ['something'], ... }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sanitizeSugarJson.ts",
                "extension": "ts",
                "relPath": "src/shared/sugar/sanitizeSugarJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.time.convert": {
                "name": "convert",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert time like seconds, ms, hours, minutes, etc... from one format to another",
                "namespace": "@coffeekraken.sugar.js.time",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/time/convert';\nconvert('10s', 'ms'); // => 10000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/time/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.time.wait": {
                "name": "wait",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is a simple \"setTimeout\" wrapper inside a promise.",
                "namespace": "@coffeekraken.sugar.js.time",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wait from '@coffeekraken/sugar/js/time/wait';\nawait wait(2000);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "wait.ts",
                "extension": "ts",
                "relPath": "src/shared/time/wait.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.convert": {
                "name": "convert",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert a passed unit to the wanted one. If the passed unit is a number and not a string like \"10rem\", the unit is take as pixels",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/unit/convert';\nconvert('2rem', 'px');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.em2px": {
                "name": "em2px",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import em2px from '@coffeekraken/sugar/js/unit/em2px';\nem2px(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "em2px.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/em2px.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.px2em": {
                "name": "px2em",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import px2em from '@coffeekraken/sugar/js/unit/px2em';\npx2em(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "px2em.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/px2em.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.px2rem": {
                "name": "px2rem",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import px2rem from '@coffeekraken/sugar/js/unit/px2rem';\npx2rem(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "px2rem.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/px2rem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.rem2px": {
                "name": "rem2px",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rem2px from '@coffeekraken/sugar/js/unit/rem2px';\nrem2px(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "rem2px.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/rem2px.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.gravatarUrl": {
                "name": "gravatarUrl",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return a gravatar url depending on the passed user email and size",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import gravatarUrl from '@coffeekraken/sugar/js/util/gravatarUrl';\nconsole.log(gravatarUrl('olivier.bossel@gmail.com')); // https://www.gravatar.com/avatar/b5df60055b6287bb7c90c0078ce20a5f"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "gravatarUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/url/gravatarUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.parseSchema": {
                "name": "parseSchema",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two arguments. The first one is the url to parse and the second is a schema to scan the url with.\nThe schema describe the pathname of an url and tell's how to analyze it.\nHere's a little description with some example of schemas:\n- \"{param1}/{param2}/{param3}\": This schema describe that your Url must have 3 \"values\" named param1, param2 and param3\n- If my Url is \"something.com/hello/world/plop\", my schema is respected and I can have access to the values through the \"schema.params.param1\", \"schema.params.param2\", etc...\n- \"{hello:string}/{world:number}/{?idx:number}\": This schema describe that the Url can have 3 \"values\" but the last one is optional\n- If my Url is \"something.com/plop/3/1\", my schema is respected\n- If my Url is \"something.com/plop/2\", my schema is respected\n- If my Url is \"something.com/plop/hello/2\", my schema is not respected due to the fact that the param named \"world\" has to be a number",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseSchema from '@coffeekraken/sugar/js/url/parseSchema';\nparseSchema('https://github.com/myApp/master/3', '{project:string}/{?branch:string}/{?idx:number}');\n// {\n//   url: 'https://github.com/myApp/master/3',\n//   schema: '{project:string}/{?branch:string}/{?idx:number}',\n//   match: true,\n//   errors: null,\n//   params: {\n//     project: {\n//       optional: false,\n//       raw: '{project:string}',\n//       type: 'string',\n//       value: 'myApp'\n//     },\n//     branch: {\n//       optional: true,\n//       raw: '{?branch:string},\n//       type: 'string',\n//       value: 'master'\n//     },\n//     idx: {\n//       optional: true,\n//       raw: '{?idx:number}',\n//       type: 'number',\n//       value: 3\n//     }\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "parseSchema.ts",
                "extension": "ts",
                "relPath": "src/shared/url/parseSchema.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.queryStringToObject": {
                "name": "queryStringToObject",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform a query string into his object (key => pairs) representation",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import queryStringToObject from '@coffeekraken/sugar/js/string/queryStringToObject'\nqueryStringToObject('?var1=value1&var2=value2') // { var1: 'value1', var2: 'value2' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "queryStringToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/url/queryStringToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.urlFromString": {
                "name": "urlFromString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function that take a string as parameter and returns you a valid\nurl ready one",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import urlFromString from '@coffeekraken/sugar/shared/url/urlFromString';\nurlFromString('Sir James Paul McCartney MBE is an English singer-songwriter');\n// sir-james-paul-mc-cartney-mbe-is-an-english-singer-songwriter"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "urlFromString.ts",
                "extension": "ts",
                "relPath": "src/shared/url/urlFromString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.value.typeDefinitionArrayObjectToString": {
                "name": "typeDefinitionArrayObjectToString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as parameter a type definition object like this one:\n{\ntype: [{\ntype: 'Array',\nof: [{\ntype: 'Boolean'\n}]\n}]\n}\nan transform it to a string like so \"Array<Boolean>\"",
                "namespace": "@coffeekraken.sugar.js.value",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import typeDefinitionArrayObjToString from '@coffeekraken/sugar/js/value/typeDefinitionArrayObjectToString'\ntypeDefinitionArrayObjToString([{\n   type: [{\n     type: 'Array',\n     of: [{\n       type: 'Boolean'\n     }]\n   }]\n}]); // => Array<Boolean>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "typeDefinitionArrayObjectToString.ts",
                "extension": "ts",
                "relPath": "src/shared/value/typeDefinitionArrayObjectToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.value.typeof": {
                "name": "typeof",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return the correct type of the passed value.\nIt support the recognition of arrays and return 'Array' as property type.\nYou can olso ask the function to gives you the \"of\" types of the passed value. This mean that if you\npass an Array like so \"[10,'Hello',true]\" and that you ask for \"of\" types, it will returns you\n\"Array<Integer|String|Boolean>\".\nAnother feature is to ask the result as an object like so:\n{\ntype: 'Array',\nof: ['Integer','String','Boolean']\n}\nYou can ask also the typeof function to returns you the actual class name if the passed value is an instance\nof an custom class.",
                "namespace": "@coffeekraken.sugar.js.value",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import typeof from '@coffeekraken/sugar/js/value/typeof';\ntypeof(true); // => Boolean\ntypeof(10); // => Integer\ntypeof(12.4); // => Number\ntypeof(['Hello']); // => Array\ntypeof(['Hello',true], { of: true }); // => Array<String|Boolean>\n\nclass MyCoolClass {\n   // ...\n}\nconst myInstance = new MyCoolClass();\ntypeof(myInstance, { customClass: true }); // => MyCoolClass"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "typeof.ts",
                "extension": "ts",
                "relPath": "src/shared/value/typeof.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.animation.innerHtml": {
                "name": "innerHtml",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Change the content of a Node with the possibility to animate the change using one of these animations:\n- fade\n- fadeUp\n- fadeDown\n- fadeLeft\n- fadeRight\nYou can also choose between 3 actions which are: replace, append and prepend",
                "namespace": "@coffeekraken.sugar.js.dom.animation",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import innerHtml from '@coffeekraken/sugar/js/dom/innerHtml'\ninnerHtml(myCoolNode, 'Hello World', {\n   action: 'replace', // replace, append, prepend\n   animIn: 'fade', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animOut: 'fadeUp', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animInDuration: 600, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animOutDuration: 300, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animInDistance: 25, // in px\n   animOutDistance: 25, // in px\n   animInEasing: 'ease-in-out',\n   animOutEasing: 'ease-in-out'\n}).then(() => {\n   // do something when the change has been made...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "innerHtml.ts",
                "extension": "ts",
                "relPath": "src/js/dom/animation/innerHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.addAnimationClass": {
                "name": "addAnimationClass",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add a class that trigger an animation and remove it at the end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addAnimationClass from '@coffeekraken/sugar/js/dom/addAnimationClass'\naddAnimationClass(myElm, 'my-cool-class').then($elm => {\n   // do something at the animation end...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "addAnimationClass.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/addAnimationClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.removeClassOnAnimationEnd": {
                "name": "removeClassOnAnimationEnd",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Remove some class on animation end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import removeClassOnAnimationEnd from '@coffeekraken/sugar/js/dom/removeClassOnAnimationEnd'\nremoveClassOnAnimationEnd(myCoolElm, 'my-class');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "removeClassOnAnimationEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/removeClassOnAnimationEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.data.dataset": {
                "name": "dataset",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get or set a value on the passed element with the passed name",
                "namespace": "@coffeekraken.sugar.js.dom.data",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import dataset from '@coffeekraken/sugar/js/dom/dataset';\ndataset(myCoolElement, 'hello', 'world'); // => 'world';"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dataset.ts",
                "extension": "ts",
                "relPath": "src/js/dom/data/dataset.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detection.detectInOutDirection": {
                "name": "detectInOutDirection",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect the mouse direction when entered on the passed element. The direction can be up, down, left or right and will be passed to the two callbacks available.\nThe first one is the `onIn` callback, and the second one is the `onOut`.",
                "namespace": "@coffeekraken.sugar.js.dom.detection",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import detectInOutDirection from '@coffeekraken/sugar/js/dom/detectInOutDirection'\nconst detect = detectInOutDirection(myElm).in(direction => {\n   // do something...\n}).out(direction => {\n   // do something...\n}).then(value => {\n   // do something\n   console.log(value); // => { action: 'in', direction: 'up' };\n});\n\n// cancel the detection process\ndetect.cancel();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "detectInOutDirection.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/detectInOutDirection.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detection.domReady": {
                "name": "domReady",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wait that the dom is ready before resolving the promise",
                "namespace": "@coffeekraken.sugar.js.dom.detection",
                "example": [
                    {
                        "language": "js",
                        "code": "import domReady from '@coffeekraken/sugar/js/dom/domReady'\n// using callback\ndomReady(() => {\n\t\t// do something\n});\n// using promise\ndomReady().then(() => {\n\t\t// do something\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "domready.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/domready.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.inViewportStatusChange": {
                "name": "inViewportStatusChange",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Monitor when the passed element enter or exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewportStatusChange from '@coffeekraken/sugar/js/dom/inViewportStatusChange';\ninViewportStatusChange(myElm).on('enter', $elm => {\n   // do something...\n}).on('exit', $elm => {\n   // do something...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "inViewportStatusChange.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/inViewportStatusChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onScrollEnd": {
                "name": "onScrollEnd",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function simply listen for scroll on the passed element and call the passed callback\nwhen reaching the end of it.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onScrollEnd from '@coffeekraken/sugar/js/dom/detect/onScrollEnd';\nonScrollEnd($elm, () => {\n     // do something\n}, {\n   offset: 50\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "onScrollEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onScrollEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onSwipe": {
                "name": "onSwipe",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect swipes gestures on touch devices.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onSwipe from '@coffeekraken/sugar/js/dom/onSwipe'\nonSwipe(myCoolElm, (swipe) => {\n\t// check the swipe direction\n\tif (swipe.left) {\n\t\t// do something...\n\t}\n\t// support : left, right, up, down\n\t// etc...\n}, {\n\tthreshold : 50\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "onSwipe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onSwipe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.stylesheetsReady": {
                "name": "stylesheetsReady",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wait until all the HTMLLinkElement's are properly loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stylesheetsReady from '@coffeekraken/sugar/js/dom/stylesheetsReady'\nstylesheetsReady([\n\t\tmyHTMLLinkElement1,\n\t\tmyHTMLLinkElement2\n]).then(() => {\n\t\t// do something when all the links are loaded\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stylesheetsReady.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/stylesheetsReady.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenAttribute": {
                "name": "whenAttribute",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Resolve a promise when the wanted attribute on the passed HTMLElement exist or pass the check function provided",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenAttribute from '@coffeekraken/sugar/js/dom/whenAttribute'\nwhenAttribute(myCoolHTMLElement, 'value').then((value) => {\n\t\t// the value attribute exist on the element\n});\n// with a checkFn\nwhenAttribute(myCoolHTMLElement, 'value', (newVal, oldVal) => {\n\t\t// make sure the value is a number\n\t\treturn typeof(newVal) === 'number';\n}).then((value) => {\n\t\t// do something with your number value...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInteract": {
                "name": "whenInteract",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wait that an interaction is made with the passed element like \"focus\", \"focusIn\", \"mouseover\", etc...",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenInteract from '@coffeekraken/sugar/js/dom/detect/whenInteract'\nawait whenInteract(myCoolElement, {\n focus: true,\n touch: false,\n mouse: true\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenInteract.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInteract.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInViewport": {
                "name": "whenInViewport",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenInViewport from '@coffeekraken/sugar/js/dom/whenInViewport'\nwhenInViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenInViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenOutOfViewport": {
                "name": "whenOutOfViewport",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenOutOfViewport from '@coffeekraken/sugar/js/dom/whenOutOfViewport'\nwhenOutOfViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has exit the viewport...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenOutOfViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenOutOfViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenTransitionEnd": {
                "name": "whenTransitionEnd",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when his transition has ended",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenTransitionEnd from '@coffeekraken/sugar/js/dom/whenTransitionEnd'\nwhenTransitionEnd(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element transition has ended...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenTransitionEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenTransitionEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenVisible": {
                "name": "whenVisible",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is visible",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenVisible from '@coffeekraken/sugar/js/dom/whenVisible'\nwhenVisible(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that is now visible\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "whenVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportBottom": {
                "name": "fromElementTopToViewportBottom",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport bottom in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceFromElementTopToViewportBottom from '@coffeekraken/sugar/js/dom/distance/fromElementTopToViewportBottom';\ndistanceFromElementTopViewportBottom(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "fromElementTopToViewportBottom.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/fromElementTopToViewportBottom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportTop": {
                "name": "fromElementTopToViewportTop",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport top in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceFromElementTopToViewportTop from '@coffeekraken/sugar/js/dom/distance/fromElementTopToViewportTop';\ndistanceFromElementTopViewportBottom(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "fromElementTopToViewportTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/fromElementTopToViewportTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.scrollLeft": {
                "name": "scrollLeft",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the amount of scroll left",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollLeft from '@coffeekraken/sugar/js/dom/scrollLeft'\nscrollLeft() // 40"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivier.bossel@gmail.com"
                },
                "filename": "scrollLeft.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/scrollLeft.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListener": {
                "name": "addEventListener",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add an event listener on an element and return the function to remove the event listener",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addEventListener from '@coffeekraken/sugar/js/dom/addEventListener'\nconst listener = addEventListener($myCoolElm, 'click', (event) => {\n   // event.type; // => click\n});\n// remove the event listener\nlistener.cancel();\n\n// listen for more than one event at a time\naddEventListener($myCoolElm, 'click,mouseover,mouseout', (event) => {\n   // do something depending on the event.type property\n}).on('mouseover', (event) => {\n   // do something when the event is the mouseover one\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "addEventListener.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListener.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListenerOnce": {
                "name": "addEventListenerOnce",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Add an event listener that will be trigerred only once",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addEventListenerOnce from '@coffeekraken/sugar/js/dom/addEventListenerOnce'\naddEventListenerOnce(myElm, 'click', (e) => {\n    // do something on click\n});\naddEventListenerOnce(myElm, 'click').on('click', (e) => {\n\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "addEventListenerOnce.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListenerOnce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.dispatchEvent": {
                "name": "dispatchEvent",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Helper to quickly display an event with some optional data attached to it",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import dispatchEvent from '@coffeekraken/sugar/js/dom/dispatchEvent'\ndispatchEvent(myCoolHTMLElement, 'myCoolEventName', {\n\t\tvar1 : 'value1'\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dispatchEvent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/dispatchEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.form.sendForm": {
                "name": "sendForm",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Send a form through an ajax call and return back a promise resolved with the server response",
                "namespace": "@coffeekraken.sugar.js.dom.form",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import sendForm from '@coffeekraken/sugar/js/dom/sendForm'\nconst myCoolForm = document.querySelector('.my-cool-form')\nsentForm(myCoolForm).then((response) => {\n\t// do something with the response\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "sendForm.ts",
                "extension": "ts",
                "relPath": "src/js/dom/form/sendForm.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.focus": {
                "name": "focus",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is focus the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFocus from '@coffeekraken/sugar/js/dom/is/focus'\nconst $myElm = document.querySelector('.my-elm')\nif (isFocus($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "focus.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/focus.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.focusWithin": {
                "name": "focusWithin",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is focusWithin the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFocusWithin from '@coffeekraken/sugar/js/dom/is/focusWithin'\nconst $myElm = document.querySelector('.my-elm')\nif (isFocusWithin($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "focusWithin.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/focusWithin.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.hover": {
                "name": "hover",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is hover the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hover from '@coffeekraken/sugar/js/dom/is/hover'\nconst $myElm = document.querySelector('.my-elm')\nif (hover($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "hover.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/hover.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.inIframe": {
                "name": "inIframe",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the page is loaded inside an iframe",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inIframe from '@coffeekraken/sugar/js/dom/is/inIframe'\nif (inIframe()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "inIframe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/inIframe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.inViewport": {
                "name": "inViewport",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is in the viewport or not",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewport from '@coffeekraken/sugar/js/dom/is/inViewport'\nif (inViewport(myCoolHTMLElement) {\n\t\t// i'm in the viewport\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "inViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/inViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.visible": {
                "name": "visible",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is visible or not.\nVisible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import visible from '@coffeekraken/sugar/js/dom/is/visible'\nif (visible(myCoolHTMLElement) {\n\t\t// i'm visible\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "visible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/visible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.backgroundImageLoaded": {
                "name": "backgroundImageLoaded",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect when a background image has been loaded on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import backgroundImageLoaded from '@coffeekraken/sugar/js/dom/backgroundImageLoaded'\nbackgroundImageLoaded($myElm).then(() => {\n  // do something when loaded\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "backgroundImageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/backgroundImageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.imageLoaded": {
                "name": "imageLoaded",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed image is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imageLoaded from '@coffeekraken/sugar/js/dom/imageLoaded'\nimageLoaded(myCoolHTMLImageElement).then(($img) => {\n\t\t// do something when the image is loaded\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "imageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/imageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.imagesLoaded": {
                "name": "imagesLoaded",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect when some images are loaded. This function take advantage of the SPromise class\nand trigger an event called \"img.loaded\" that will be triggered on each loaded images and another called \"loaded\" once all the images are loaded.\nSee in the example bellow.",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLoaded from '@coffeekraken/sugar/js/dom/imagesLoaded'\nimagesLoaded([\n\t$img1, $img2, $img3\n]).on('loaded', $img => {\n   // do something with the loaded image\n}).then(() => {\n  // do something here\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "imagesLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/imagesLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.linkLoaded": {
                "name": "linkLoaded",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed HTMLLinkElement is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linkLoaded from '@coffeekraken/sugar/js/dom/linkLoaded'\nlinkLoaded(myCoolHTMLLinlElement).then((link) => {\n\t\t// do something when the link is loaded\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "linkLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/linkLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.scriptLoaded": {
                "name": "scriptLoaded",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Detect when a script has been fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scriptLoaded from '@coffeekraken/sugar/js/dom/scriptLoaded'\nscriptLoaded($script).then(($script) => {\n  // do something here\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "scriptLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/scriptLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.emptyNode": {
                "name": "emptyNode",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Empty a node by removing each childs one after the other",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "emptyNode.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/emptyNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.insertAfter": {
                "name": "insertAfter",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Insert an HTMLElement after another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import insertAfter from '@coffeekraken/sugar/js/dom/insertAfter'\ninsertAfter(myElementToInsert, theReferenceElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "insertAfter.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/insertAfter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.prependChild": {
                "name": "prependChild",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Prepend an HTMLElement into another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import prependChild from '@coffeekraken/sugar/js/dom/prependChild'\nprependChild(myElementToInsert, theReferenceElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "prependChild.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/prependChild.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.stripTags": {
                "name": "stripTags",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Strip the tags of the passed text",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripTags from '@coffeekraken/sugar/js/dom/stripTags'\nstripTags('<h1>Hello World</h1>') // => Hello World"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "stripTags.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/stripTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.toDomNodes": {
                "name": "toDomNodes",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return a usable nodeTree from a variable source like selector, an html string, an html template tag or a node that will be cloned.",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import toDomNodes from '@coffeekraken/sugar/js/dom/toDomNodes';\ntoDomNodes('<span>Hello World</span>');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toDomNodes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/toDomNodes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrap": {
                "name": "wrap",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wrap an HTMLElement inside another `$wrapper` one",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wrap from '@coffeekraken/sugar/js/dom/wrap'\nconst $wrapper = document.createElement('div')\n// assuming:\n// <div>\n//   <span class=\"wrap\">Hello World</span>\n// </div>\nwrap(document.querySelector('.wrap'), $wrapper)\n// output:\n// <div>\n//   <div>\n//     <span class=\"wrap\">Hello World</span>\n//   </div>\n// </div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "wrap.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrapInner": {
                "name": "wrapInner",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Wrap the content of the passed `$parent` inside a the passed HTMLElement `$wrapper`",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wrapInner from '@coffeekraken/sugar/js/dom/wrapInner'\nconst $myWrapper = document.createElement('div')\n// assuming\n// <div class=\"container\">\n//   <span>Hello World</span>\n// </div>\nwrapInner(document.querySelector('.container'), $myWrapper)\n// return\n// <div class=\"container\">\n//   <div>\n//     <span>Hello World</span>\n//   </div>\n// </div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel@gmail.com"
                },
                "filename": "wrapInner.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrapInner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.observe.observeAttributes": {
                "name": "observeAttributes",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Observe attributes on an HTMLElement and get mutations through the SPromise instance",
                "namespace": "@coffeekraken.sugar.js.dom.observe",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import observeAttributes from 'sugarcss/js/dom/observeAttributes'\nconst observer = observeAttributes(myCoolHTMLElement).then(mutation => {\n\t\t// do something with the mutation\n});\n/ the observer\nobserve();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "observeAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/observe/observeAttributes.ts",
                "children": {
                    "attributes": {
                        "name": "attributes",
                        "type": "{Array}",
                        "default": "null",
                        "description": "List of attributes to observe"
                    }
                }
            },
            "@coffeekraken.sugar.js.dom.observe.observeMutations": {
                "name": "observeMutations",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Observe mutations on an HTMLElement and get them through the observable subscription.\nYou can pass the mutation observer settings through the second argument. By default, here's his values:\n- attributes: true,\n- childList: false,\n- subtree: false",
                "namespace": "@coffeekraken.sugar.js.dom.observe",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import observeMutations from '@coffeekraken/sugar/js/dom/observeMutations'\nconst promise = observeMutations(myElement).then(mutation => {\n   // do something with the mutation\n});\n// stop listening for mutations\npromise.cancel();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "observeMutations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/observe/observeMutations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offset": {
                "name": "offset",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from the document top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import offset from '@coffeekraken/sugar/js/dom/offset'\nconst offsetElm = offset(myCoolElement);\n// output : { top : 200, left : 300 }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "offset.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offset.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offsetParent": {
                "name": "offsetParent",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from his parent top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import offsetParent from '@coffeekraken/sugar/js/dom/offsetParent'\nconst offsetParentElm = offsetParent(myCoolElement);\n// output : { top : 200, left : 300 }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "offsetParent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offsetParent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closest": {
                "name": "closest",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import closest from '@coffeekraken/sugar/js/dom/closest'\nconst closestElm = closest(myCoolElement, '.my-cool-class');\nif (closestElm) {\n\t\t// we have found en element that matches the selector\n}\n// the selector param can be a function that need to return either true or false like so:\nclosest(myCoolElement, (elm) => {\n  return elm.hasAttribute('my-cool-attribute')\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "closest.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closest.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closestNotVisible": {
                "name": "closestNotVisible",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that is not visible.\nNot visible mean that has either an opacity to 0, a visibility to hidden or a display to none",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import closestNotVisible from 'sugarcss/js/dom/closestNotVisible'\nconst closestElm = closestNotVisible(myCoolElement);\nif (closestElm) {\n\t\t// we have found en element that is not visible\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "closestNotVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closestNotVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.matches": {
                "name": "matches",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Polyfill for the Element.matches function",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matches from '@coffeekraken/sugar/js/dom/matches'\nif (matches(myCoolHTMLElement, '.my-cool-css-selector')) {\n\t\t// the element match the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "matches.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/matches.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.next": {
                "name": "next",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element next siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import next from '@coffeekraken/sugar/js/dom/next'\nconst nextElm = next(myCoolElement, '.my-cool-class');\nif (nextElm) {\n\t\t// we have found en element that matches the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "next.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/next.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.previous": {
                "name": "previous",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element previous siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import previous from '@coffeekraken/sugar/js/dom/previous'\nconst previousElm = previous(myCoolElement, '.my-cool-class');\nif (previousElm) {\n\t\t// we have found en element that matches the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "previous.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/previous.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelector": {
                "name": "querySelector",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelector function that let you specify\nif you want an element that is visible, or even that is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelector from '@coffeekraken/sugar/js/dom/querySelector';\n// simple query\nconst elm = querySelector('.a-cool-css-selector');\n\n// get an element that is in the viewport\nconst elm = querySelector('.a-cool-css-selector', {\n\t\tinViewport : true\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "querySelector.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelector.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorAll": {
                "name": "querySelectorAll",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelectorAll function that let you specify\nif you want elements that are visible, or even that are in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelectorAll from '@coffeekraken/sugar/js/dom/querySelectorAll';\n// simple query\nconst elms = querySelectorAll('.a-cool-css-selector');\n\n// get elements that are in the viewport\nconst elms = querySelectorAll('.a-cool-css-selector', {\n\t\tinViewport : true\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "querySelectorAll.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorAll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorLive": {
                "name": "querySelectorLive",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Observe the dom to get all the elements that matches a passed css selector at any point in time.\nBe warned that this use the mutation observer API and will monitor all the document for new nodes. Make sure to use it\nwhen you don't have the chance to use the custom elements API instead",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelectorLive from '@coffeekraken/sugar/js/dom/querySelectorLive'\nquerySelectorLive('.my-cool-item', (node, clearFn) => {\n\t// do something here with the detected node\n // call clearFn if you want to stop listening for this selector\n clearFn();\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "querySelectorLive.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollTo": {
                "name": "scrollTo",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Function that let you make a smooth page scroll to a specific element in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollTop from '@coffeekraken/sugar/js/dom/scrollTo'\nimport easeInOutQuad from '@coffeekraken/sugar/js/easings/easeInOutQuad'\nscrollTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "scrollTo.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollTo.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollToLocationHash": {
                "name": "scrollToLocationHash",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Scroll to the location hash if an hash is present.\nThis function will try to get the target element from the hash and scroll to it",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __scrollToLocationHash from '@coffeekraken/sugar/js/dom/scrollToLocationHash'\n__scrollToLocationHash(500, 0)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "scrollToLocationHash.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollToLocationHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollTop": {
                "name": "scrollTop",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the amount of scroll top that the user as made in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollTop from '@coffeekraken/sugar/js/dom/scrollTop';\nscrollTop();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "scrollTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.size.realHeight": {
                "name": "realHeight",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the full height of an element that has maybe a max-height, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.size",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import realHeight from '@coffeekraken/sugar/js/dom/realHeight';\nrealHeight(myCoolHtmlElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "realHeight.ts",
                "extension": "ts",
                "relPath": "src/js/dom/size/realHeight.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getAnimationProperties": {
                "name": "getAnimationProperties",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the css animation properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getAnimationProperties from '@coffeekraken/sugar/js/dom/getAnimationProperties'\nconst props = getAnimationProperties(myCoolHTMLElement);\n// output format\n// {\n// \tname : ['animation1'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \titerationCount : [1],\n// \tdirection : ['forward'],\n// \ttotalDuration : 200\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getAnimationProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getAnimationProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getStyleProperty": {
                "name": "getStyleProperty",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get a style property on the passed element through the computed style.\nThis function try to store the actual style to not trigger more that 1 redraw\neach js execution loop.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getStyleProperty from '@coffeekraken/sugar/js/dom/getStyleProperty'\nconst opacity = getStyleProperty(myCoolHTMLElement, 'opacity');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getStyleProperty.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getStyleProperty.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTransitionProperties": {
                "name": "getTransitionProperties",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the css transition properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTransitionProperties from '@coffeekraken/sugar/js/dom/getTransitionProperties'\nconst props = getTransitionProperties(myCoolHTMLElement);\n// output format\n// {\n// \tproperty : ['all'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \ttotalDuration : 200\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getTransitionProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTransitionProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTranslateProperties": {
                "name": "getTranslateProperties",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get a translate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTranslateProperties from '@coffeekraken/sugar/js/dom/getTranslateProperties'\nconst props = getTranslateProperties(myCoolHTMLElement);\n// output format\n// {\n// \tx : 100,\n// \ty : 0,\n// \tz : 0\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getTranslateProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTranslateProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.style": {
                "name": "style",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Set or remove a css style property on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import style from '@coffeekraken/sugar/js/dom/style'\nstyle(myCoolHTMLElement, {\n\t\tpaddingLeft : 20,\n\t\tdisplay : null\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "style.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/style.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.styleObject2String": {
                "name": "styleObject2String",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Transform a style object to inline string separated by ;",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import styleObject2String from '@coffeekraken/sugar/js/dom/styleObject2String'\nconst styleString = styleObject2String({\n\t\tpaddingLeft : '20px',\n\t\tdisplay : 'block'\n});\n// output => padding-left:20px; display:block;"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "styleObject2String.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/styleObject2String.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.styleString2Object": {
                "name": "styleString2Object",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Transform a style string to an object representation",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import styleString2Object from '@coffeekraken/sugar/js/dom/styleString2Object'\nconst styleString = styleString2Object('padding-left:20px; display:block;');\n// output => {\n//\t\tpaddingLeft : '20px',\n// \t\tdisplay : 'block'\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "styleString2Object.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/styleString2Object.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.tag.appendScriptTag": {
                "name": "appendScriptTag",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Append a script tag either to the head or the body",
                "namespace": "@coffeekraken.sugar.js.dom.tag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendScriptTag from '@coffeekraken/sugar/js/dom/appendScriptTag'\nappendScriptTag('dist/js/app.js')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "appendScriptTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendScriptTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.tag.appendStylesheetLinkTag": {
                "name": "appendStylesheetLinkTag",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Append a stylesheet link to the page head",
                "namespace": "@coffeekraken.sugar.js.dom.tag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendStylesheetLink from '@coffeekraken/sugar/js/dom/appendStylesheetLink'\nappendStylesheetLink('/dist/css/style.css')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "appendStylesheetLinkTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendStylesheetLinkTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.appendStyleTag": {
                "name": "appendStyleTag",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Append a style tag either to the head or the body",
                "namespace": "@coffeekraken.sugar.js.dom",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendStyleTag from '@coffeekraken/sugar/js/dom/appendStyleTag'\nappendStyleTag('dist/js/app.js')"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "appendStyleTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendStyleTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.canHaveChildren": {
                "name": "canHaveChildren",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a tagName String like \"img\", \"div\", etc... or an HTMLElement node\nand return true or false depending if this element is supposed to have children or not.",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import canHaveChildren from '@coffeekraken/sugar/js/dom/canHaveChildren';\ncanHaveChildren('img'); // => false\ncanHaveChildren('div'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "canHaveChildren.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/canHaveChildren.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.exitFullscreen": {
                "name": "exitFullscreen",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Exit the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exitFullscreen from '@coffeekraken/sugar/js/dom/exitFullscreen'\nexitFullscreen()"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "exitFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/exitFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.forceRedraw": {
                "name": "forceRedraw",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Force the element to be painted again in case of visual issues",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import forceRedraw from '@coffeekraken/sugar/js/dom/forceRedraw'\nforceRedraw($elm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "forceRedraw.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/forceRedraw.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.inViewportPercentage": {
                "name": "inViewportPercentage",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return how many percent the passed element is visible in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewportPercentage from '@coffeekraken/sugar/js/dom/inViewportPercentage'\nconst percentage = inViewportPercentage(myCoolHTMLElement);\n// 20"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "inViewportPercentage.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/inViewportPercentage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.nodeIndex": {
                "name": "nodeIndex",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Return the inde of the passed node inside the html",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import nodeIndex from '@coffeekraken/sugar/js/dom/nodeIndex'\n// assuming:\n// <li>item #1</li>\n// <li class=\"match\">item #2</li>\n// <li>item #3</li>\nnodeIndex(document.querySelector('.match')) // 1"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "nodeIndex.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/nodeIndex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestAnimationFrame": {
                "name": "requestAnimationFrame",
                "type": "Function",
                "description": "Proxy for the window.requestAnimationFrame function",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "requestAnimationFrame.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/requestAnimationFrame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestFullscreen": {
                "name": "requestFullscreen",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Request fullscreen on the passed DOM element",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import requestFullscreen from '@coffeekraken/sugar/js/dom/requestFullscreen'\nrequestFullscreen(myDomElm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "requestFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/requestFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLetters": {
                "name": "splitLetters",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Split each letters inside an HTMLElement by scoping them inside multiple tags.\nHere's an result sample for : Hello World\n```html\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">H</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">e</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">&nbsp;</span>\n</span>\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">W</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">r</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">d</span>\n</span>\n</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __splitLetters from '@coffeekraken/sugar/js/dom/splitLetters'\nconst myCoolElement = document.querySelector('.my-cool-element');\n__splitLetters(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "splitLetters.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitLetters.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLines": {
                "name": "splitLines",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Split each lines inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello\nWorld\n\n```html\n<p class=\"s-split-lines\">Hello</p>\n<p class=\"s-split-lines\">World</p>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitLines from '@coffeekraken/sugar/js/dom/splitLines'\nconst myCoolElement = document.querySelector('.my-cool-element');\nsplitLines(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "splitLines.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitWords": {
                "name": "splitWords",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Split each words inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello World\n\n```html\n<span class=\"s-split-words\">Hello</span>\n<span class=\"s-split-words\">World</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitWords from '@coffeekraken/sugar/js/dom/splitLines'\nconst myCoolElement = document.querySelector('.my-cool-element');\nsplitWords(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "splitWords.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitWords.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.textWidth": {
                "name": "textWidth",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Get the text width in px of a passed string or the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import textWidth from '@coffeekraken/sugar/js/dom/textWidth'\n// text of an HTMLElement\nconst width = textWidth(myCoolHTMLElement);\n\n// text directly (no font-size management so it's less accurate...)\nconst width = textWidth('Hello World');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "textWidth.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/textWidth.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.toggleFullscreen": {
                "name": "toggleFullscreen",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Toggle the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toggleFullscreen from '@coffeekraken/sugar/js/dom/toggleFullscreen'\ntoggleFullscreen(myDomElm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "toggleFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/toggleFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.sApp": {
                "name": "SApp",
                "type": "Class",
                "description": "This class represent an application route class. This mean that you can create an application class that extend this one\nand your instance will have access to a whole package of data like the application name taken from the package.json file, the version,\nthe description, the author(s), the contributor(s), etc...",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "import SApp = from ''@coffeekraken/sugar/js/class/SApp';\nclass MyCoolApp extends SApp {\n   // your app class here...\n}\nconst myApp = new MyCoolApp();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.js.class.SApp.config": {
                "name": "config",
                "type": "Function",
                "description": "Get a configuration value from the backend using an ajax call",
                "namespace": "@coffeekraken.sugar.js.class.SApp",
                "example": [
                    {
                        "language": "js",
                        "code": "const host = await myApp.config('log.frontend.mail.host');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.js.class.SApp.meta": {
                "name": "meta",
                "type": "Function",
                "description": "Usefull function that give you back an application meta taken depending on your passed dotted object path",
                "namespace": "@coffeekraken.sugar.js.class.SApp",
                "example": [
                    {
                        "language": "js",
                        "code": "const name = await myApp.meta('name');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.squid.js.log.log": {
                "name": "log",
                "type": "Function",
                "description": "Log a message using the transports log system.",
                "namespace": "@coffeekraken.sugar.squid.js.log",
                "example": [
                    {
                        "language": "js",
                        "code": "Squid.log('Hello world', 'error').then(() => {\n   // do something if needed...\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.sBind": {
                "name": "SBind",
                "type": "Class",
                "description": "This class allows to bind properties between objects, object to HTMLElement attribute and vice versa.",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "const binder = new SBind();\n\n// keep in sync the myObject2.title with the myObject1.title property\nbinder.bindObjectPath2ObjectPath(myObject1, 'title', myObject2, 'title');\n\n// update and HTMLElement attribute when the myObject1.title is updated\nbinder.bindObjectPath2ElementAttribute(myObject1, 'title', myHTMLElement, 'title');\n\n// and more..."
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SBind.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SBind.ts",
                "children": {
                    "bind": {
                        "name": "bind",
                        "type": "Function",
                        "description": "This method allows you to bind an Object|HTMLElement property to another Object|HTMLElement property\nThis mean that when the property of the first passed element is updated, the same property on the second\nelement will be updated as well",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.class.sLocalStorageFonts": {
                "name": "SLocalStorageFonts",
                "type": "Class",
                "description": "This class allows to easily store and load custom fonts from the localStorage",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "new SLocalStorageFonts({\n \tjson_path : '/fonts/fonts.json#v1'\n});\n\n// the fonts.json file looks like this\n{\n\t\t\"fonts\" : [{\n  \t\t\"font-family\" : \"Open Sans\",\n    \t\"font-weight\" : 300,\n     \t\"src\" : \"url(data:application/font-woff;base64,d09GRgA...\"\n     }]\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SLocalStorageFonts.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SLocalStorageFonts.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.socket.syncDom": {
                "name": "syncDom",
                "type": "Function",
                "description": "Simply connect to a backend socket.io server and listen for specifics messages from it to refresh automatically the DOM.\nThe messages that are listened are:\n- 'SSocketDom.html': Used to send some html to \"inject/replace\" in the current page HTML\n- 'SSocketDom.script': Used to add a script tag to the page\n- 'SSocketDom.style': Used to add a style tag to the page",
                "namespace": "@coffeekraken.sugar.js.socket",
                "status": "wip",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.settings.node": {
                "name": "settings.node",
                "type": "HTMLElement",
                "default": "document.body",
                "description": "The root node where the html contents will be injected if no node is passed with the event",
                "namespace": "@coffeekraken.sugar.js.class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js-class.settings.action": {
                "name": "settings.action",
                "type": "String",
                "default": "'replace'",
                "description": "Specify which action will be executed if no one is passed with the event.\nIt can be one of these:\n- 'append': Will append the HTML content to the existing one\n- 'replace': Will replace the HTML content with the new one\n- 'prepend': Will inject the HTML content before the existing one",
                "namespace": "@coffeekraken.sugar.js-class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.settings.events": {
                "name": "settings.events",
                "type": "Object",
                "default": "{}",
                "description": "Save the events scoped settings objects",
                "namespace": "@coffeekraken.sugar.js.class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.emit": {
                "name": "emit",
                "type": "Function",
                "description": "Emit an event with an object containing some values to pass to the server",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "myCoolSocketDomInstance.emit('coco', { hello: 'world' });"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.registerEvent": {
                "name": "registerEvent",
                "type": "Function",
                "description": "Register a new event with an handler function that will handle the event content",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "myCoolSocketDomInstance.registerEvent('hello', (data, settings) => {\n   // do something with the event content and the settings\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.http.getFreePort": {
                "name": "getFreePort",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns you a free port.\nYou can pass a port to check as parameter and if it is free, you will get it back as result",
                "namespace": "@coffeekraken.sugar.node.http",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getFreePort from '@coffeekraken/sugar/node/network/utils/getFreePort';\nawait getFreePort(); // => 22343"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "getFreePort.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/getFreePort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.network.ipAddress": {
                "name": "ipAddress",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get your ip address",
                "namespace": "@coffeekraken.sugar.node.network",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ipAddress from '@coffeekraken/sugar/node/network/utils/ipAddress';\nipAddress(); // => 192.168.10.45"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "ipAddress.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/ipAddress.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.http.isPortFree": {
                "name": "isPortFree",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed port is free or not",
                "namespace": "@coffeekraken.sugar.node.http",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPortFree from '@coffeekraken/sugar/node/network/utils/isPortFree';\nawait isPortFree(22000); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "isPortFree.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/isPortFree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.utils.listNodeModulesPackages": {
                "name": "listNodeModulesPackages",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function list all the packages that are installed in the node_modules folder(s).\nYou can specify that you want either the current package node_modules folder listed,\nand the root node_modules folder for monorepo as well.",
                "namespace": "@coffeekraken.sugar.node.npm.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import listNodeModulesPackages from '@coffeekraken/sugar/node/npm/utils/listNodeModulesPackages';\nlistNodeModulesPackages();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "listNodeModulesPackages.ts",
                "extension": "ts",
                "relPath": "src/node/npm/utils/listNodeModulesPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.utils.packageJson": {
                "name": "packageJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\npackage.json JSON content",
                "namespace": "@coffeekraken.sugar.node.npm.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageJson from '@coffeekraken/sugar/node/npm/utils/packageJson`;\npackagrJson('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "packageJson.ts",
                "extension": "ts",
                "relPath": "src/node/npm/utils/packageJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.scss.animation.mixin.animation": {
                "name": "animation",
                "type": "mixin",
                "description": "Print out the animation property calculated with the passed arguments\nThis mixin support all the standard css animation properties like name, duration, delay, ease, direction and fill-mode.\nThe $animations argument will be parsed with the [../functions/_s-parse-properties.scss] function.\nIf you specify multiple animations at a time, this mixin will take care\nof the delay calculation for each animations and make them play one after another",
                "namespace": "@coffeekraken.sugar.scss.animation.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t\t@include Sugar.animation(my-animation 1s ease-in-out, another-animation 4s);\n\t\t// animation : my-animation 1s 0s ease-in-out 1 normal forwards, another-animation 4s 1s ease-in-out 1 normal forwards;\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_animation.scss",
                "extension": "scss",
                "relPath": "src/scss/animation/mixin/_animation.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.coffeekraken.mixin.coffeekrakenLogo": {
                "name": "coffeekraken-logo",
                "type": "mixin",
                "description": "Display a coffeekraken logo with two specified colors",
                "namespace": "@coffeekraken.sugar.scss.coffeekraken.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-coffeekraken-logo {\n\t@include Sugar.coffeekraken-logo();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_coffeekraken-logo.scss",
                "extension": "scss",
                "relPath": "src/scss/coffeekraken/mixin/_coffeekraken-logo.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.color.class.colorClasses": {
                "name": "color-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"color\" related classes.",
                "namespace": "@coffeekraken.sugar.scss.color.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color.scss",
                "extension": "scss",
                "relPath": "src/scss/color/class/_color.scss"
            },
            "@coffeekraken.sugar.scss.colo.class.-cls": {
                "name": "#{$cls}",
                "type": "Classname",
                "description": "Specify the color to **#{$name}**",
                "namespace": "@coffeekraken.sugar.scss.colo.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{$cls}\">\n\tI'm in \"#{$name}\" color\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color.scss",
                "extension": "scss",
                "relPath": "src/scss/color/class/_color.scss"
            },
            "@coffeekraken.sugar.scss.color.class.-cls": {
                "name": "#{$cls}",
                "type": "class",
                "description": "Specify the background color to **#{$name}--#{$mod-name}**",
                "namespace": "@coffeekraken.sugar.scss.color.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{$cls} p\" style=\"color:white\">\n\tMy background color is \"#{$name}--#{$mod-name}\"\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color.scss",
                "extension": "scss",
                "relPath": "src/scss/color/class/_color.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorHue": {
                "name": "color-hue",
                "type": "Function",
                "description": "Return the hue of the passed color",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.color-hue(#e1d7d2); // => 20deg"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-hue.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-hue.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorLightness": {
                "name": "color-lightness",
                "type": "Function",
                "description": "Return the lightness of the passed color",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.color-lightness(#e1d7d2); // => 85.2941176471%"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-lightness.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-lightness.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorModifier": {
                "name": "color-modifier",
                "type": "function",
                "description": "Return the color in a modifier list",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": true,
                        "code": "$my-color : Sugar.color-modifier(outline primary); // => primary"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-modifier.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-modifier.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorOpacity": {
                "name": "color-opacity",
                "type": "Function",
                "description": "Return the opacity of the passed color",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.color-opacity(#e1d7d2); // => 1"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-opacity.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-opacity.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorSaturation": {
                "name": "color-saturation",
                "type": "Function",
                "description": "Return the saturation of the passed color",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.color-saturation(#e1d7d2); // => 20%"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-saturation.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-saturation.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorSchema": {
                "name": "color-schema",
                "type": "mixin",
                "description": "Print out the scoped color schema css",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.color-schema(light) {\n\t\th1, h2 {\n\t\t\tcolor : white;\n\t\t}\n}\n// will print\n.cs-light h1,\n.cs-light h2 {\n\t\tcolor : white;\n}\n\nh1, h2 {\n\t\t\\@include Sugar.color-schema(light) {\n\t\t\tcolor : white;\n\t\t}\n}\n// will print\n.cs-light h1, h1.cs-light,\n.cs-light h2, h2.cs-light {\n\t\tcolor : white;\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-schema.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-schema.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorTransparentize": {
                "name": "color-transparentize",
                "type": "Function",
                "description": "Makes $color more transparent.\nThe $amount must be a number between 0 and 1 (inclusive). Decreases the alpha channel of $color by that amount.",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.color-transparentize(rgba(#036, 0.3), 0.3); // => rgba(0, 51, 102, 0)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-transparentize.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-transparentize.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.colorVar": {
                "name": "color-var",
                "type": "function",
                "description": "Get a registered color by name or wrap a new color into a sugar.color call\nto manipulate it with ease.\nSupported modifier :\n- hue {Deg}\n- lighten {Percent}\n- darken {Percent}\n- saturate {Percent}\n- desaturate {Percent}\n- grayscale {Boolean}\n- complement {Boolean}\n- invert {Boolean}\n- opacity {Percent}\n- mix {Color}\n- lightness {Percent}\n- saturation {Percent}",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "// default color (settings.colors.default)\n$myColor : Sugar.color-var(default);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color-var.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color-var.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.color": {
                "name": "color",
                "type": "function",
                "description": "Get a registered color by name or wrap a new color into a sugar.color call\nto manipulate it with ease.\nSupported actions :\n- hue {Deg}\n- lighten {Percent}\n- darken {Percent}\n- saturate {Percent}\n- desaturate {Percent}\n- grayscale {Boolean}\n- complement {Boolean}\n- invert {Boolean}\n- opacity {Percent}\n- mix {Color}\n- lightness {Percent}\n- saturation {Percent}",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "// default color (settings.colors.default)\n$myColor : Sugar.color(default);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_color.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_color.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.hasColor": {
                "name": "has-color",
                "type": "function",
                "description": "Check if the provided color is a registered one or not",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.has-color(primary); // => true"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_has-color.scss",
                "extension": "scss",
                "relPath": "src/scss/color/function/_has-color.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.color.mixin.defineColorVariables": {
                "name": "define-color-variables",
                "type": "Mixin",
                "description": "This mixin simply define correctly the color variables",
                "namespace": "@coffeekraken.sugar.scss.color.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_define-color-variables.scss",
                "extension": "scss",
                "relPath": "src/scss/color/mixin/_define-color-variables.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.color.docblockColors": {
                "name": "docblock-colors",
                "type": "mixin",
                "description": "Print the styleguide docblocks for the registered sugar colors",
                "namespace": "@coffeekraken.sugar.scss.core.color",
                "example": [],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_docblock-colors.scss",
                "extension": "scss",
                "relPath": "src/scss/color/mixin/_docblock-colors.scss"
            },
            "@coffeekraken.sugar.namespace.-name": {
                "name": "#{$name}",
                "type": "color",
                "description": "This is the ```#{$name}``` registered color",
                "namespace": "@coffeekraken.sugar.namespace",
                "filename": "_docblock-colors.scss",
                "extension": "scss",
                "relPath": "src/scss/color/mixin/_docblock-colors.scss"
            },
            "@coffeekraken.sugar.namespace.-name-modName": {
                "name": "#{$name}--#{$mod-name}",
                "type": "color",
                "description": "This is the ```#{$name}--${$mod-name}``` registered color",
                "namespace": "@coffeekraken.sugar.namespace",
                "filename": "_docblock-colors.scss",
                "extension": "scss",
                "relPath": "src/scss/color/mixin/_docblock-colors.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.mixin.cardClasses": {
                "name": "card-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some cards.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"s-card\">\n   <div class=\"s-card__media\">\n      <img class=\"s-card__img\" src=\"https://picsum.photos/500\" />\n   </div>\n   <div class=\"s-card__body\">\n      <p class=\"s-p\">Diam cum est tellus tristique enim magna duis aliquam, libero cursus inceptos donec lacinia arcu varius dictumst sodales, mauris volutpat accumsan erat penatibus orci vulputate.</p>\n   </div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss"
            },
            "@coffeekraken.sugar.scss.component.mixin.card.cardBareClasses": {
                "name": "card-bare-classes",
                "type": "Mixin",
                "description": "This mixin generate all the bare classes depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss"
            },
            "@coffeekraken.sugar.scss.component.mixin.card.cardStyleClasses": {
                "name": "card-style-classes",
                "type": "Mixin",
                "description": "This mixin generate all the style classes depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss"
            },
            "@coffeekraken.sugar.scss.component.mixin.card.card": {
                "name": "card",
                "type": "Mixin",
                "description": "This mixin generate all the properties for a button depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss"
            },
            "@coffeekraken.sugar.scss.component.mixin.card.cardBare": {
                "name": "card-bare",
                "type": "Mixin",
                "description": "This mixin generate all the bare properties for a button depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss"
            },
            "@coffeekraken.sugar.scss.component.mixin.card.cardStyle": {
                "name": "card-style",
                "type": "Mixin",
                "description": "This mixin generate all the style properties for a button depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_card.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_card.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.mixin.inlineBar": {
                "name": "inline-bar",
                "type": "Mixin",
                "description": "This mixin allows you to display an inline styled bar.\nPretty simple you may think but this is very usefull for somple displays like\nshields display, links, etc...\nTheir's also the mixin ```inline-bar-bare``` and ```inline-bar-style``` that you\ncan use if you need more controls.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin",
                "example": [
                    {
                        "language": "html",
                        "code": "<ul class=\"s-inline-bar\">\n  <li class=\"s-inline-bar__item\">Something cool</li>\n  <li class=\"s-inline-bar__item\">\n     <img alt=\"NPM\" src=\"https://img.shields.io/npm/l/@coffeekraken/sugar?style=for-the-badge\">\n  </li>\n  <li class=\"s-inline-bar__item\">Something cool</li>\n</ul>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_inline-bar.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_inline-bar.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.mixin.userAvatar": {
                "name": "user-avatar",
                "type": "Mixin",
                "description": "This mixin display a user-avatar with a name and an image.\nTheir's also the mixin ```user-avatar-bare``` and ```user-avatar-style``` that you\ncan use if you need more controls.",
                "namespace": "@coffeekraken.sugar.scss.component.mixin",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"s-user-avatar\">\n  <a href=\"https://olivierbossel.com\" target=\"_blank\" title=\"Olivier Bossel\">\n    <img class=\"s-user-avatar__img\" src=\"https://www.gravatar.com/avatar/b5df60055b6287bb7c90c0078ce20a5f?s=300\" title=\"Olivier Bossel\">\n    <span class=\"s-user-avatar__name\">\n      Olivier Bossel\n    </span>\n  </a>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_user-avatar.scss",
                "extension": "scss",
                "relPath": "src/scss/component/mixin/_user-avatar.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.class.classes": {
                "name": "classes",
                "type": "mixin",
                "description": "Print out all wanted registered classes like padding helpers, margin helpers, font helpers, etc...",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.classes(); // will print out all the classes\n\\@include Sugar.classes('sugar.font'); // will print all the font classes\n\\@include Sugar.classes('sugar.clearfix' 'sugar.pull'); // the clearfixes and the pull classes\n// etc..."
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_classes.scss",
                "extension": "scss",
                "relPath": "src/scss/core/class/_classes.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.class.scope": {
                "name": "scope",
                "type": "mixin",
                "description": "This mixin allows you to wrap css code and specify which scope it refers to.\nThis will allows you to generate only the css scope you want like \"bare\", \"style\" or \"all\"",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-class {\n   @include Sugar.scope('bare') {\n      width: 200px;\n   }\n   \\@include Sugar.scope('style') {\n      color: red;\n   }\n}\n// etc..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_scope.scss",
                "extension": "scss",
                "relPath": "src/scss/core/class/_scope.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.var.varDefine": {
                "name": "var-define",
                "type": "Function",
                "description": "This mixin simply take a variable name (or doted path) and generate the css code to define this variable",
                "namespace": "@coffeekraken.sugar.scss.core.var",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_define.scss",
                "extension": "scss",
                "relPath": "src/scss/core/var/_define.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.var.varName": {
                "name": "var-name",
                "type": "Function",
                "description": "This function simply take a variable name (or doted path) and generate the sugar scope name for it",
                "namespace": "@coffeekraken.sugar.scss.core.var",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.var-name(my-cool-variable, ());"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_name.scss",
                "extension": "scss",
                "relPath": "src/scss/core/var/_name.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.var.varOutput": {
                "name": "var-output",
                "type": "Mixin",
                "description": "This mixin simply print out the variables that you have defined in your project",
                "namespace": "@coffeekraken.sugar.scss.core.var",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_output.scss",
                "extension": "scss",
                "relPath": "src/scss/core/var/_output.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.effect.mixin.effectBubble": {
                "name": "effect-bubble",
                "type": "mixin",
                "description": "Create an arrow bubble effect",
                "namespace": "@coffeekraken.sugar.scss.effect.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-bubble {\n\t\t@include Sugar.effect-bubble(\n\t\t\t$color : Sugar.color(secondary)\n\t\t);\n\t\tcolor : white;\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_effect-bubble.scss",
                "extension": "scss",
                "relPath": "src/scss/effect/mixin/_effect-bubble.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.effect.mixin.effectDepth": {
                "name": "effect-depth",
                "type": "mixin",
                "description": "Generate a drop shadow depending on the depth specified",
                "namespace": "@coffeekraken.sugar.scss.effect.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t\t@include Sugar.effect-depth(2);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_effect-depth.scss",
                "extension": "scss",
                "relPath": "src/scss/effect/mixin/_effect-depth.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.effect.mixin.effectHey": {
                "name": "effect-hey",
                "type": "mixin",
                "description": "Create a poping dot effect to catch user attention on a particular item\nThis mixin affect the :before and :after pseudo selector of the item",
                "namespace": "@coffeekraken.sugar.scss.effect.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t\t@include Sugar.effect-hey(\n\t\t\t$align : right,\n\t\t\t$color : secondary,\n\t\t\t$size : 10px,\n\t\t\t$offset-top : -10px,\n\t\t\t$offset-right : -10px\n\t\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_effect-hey.scss",
                "extension": "scss",
                "relPath": "src/scss/effect/mixin/_effect-hey.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.effect.mixin.effectLongShadow": {
                "name": "effect-long-shadow",
                "type": "mixin",
                "description": "Generate a long shadow effect like [this](https://www.google.ch/search?q=long+shadow&espv=2&biw=2560&bih=1316&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjjne6x49LPAhVBHRQKHat8AW8Q_AUIBigB)",
                "namespace": "@coffeekraken.sugar.scss.effect.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-title {\n\t\t@include Sugar.effect-long-shadow(\n\t\t\t$depth : 10\n\t\t);\n}\n.my-cool-box {\n\t\t\\@include Sugar.effect-long-shadow(\n\t\t\t$type : box\n\t\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_effect-long-shadow.scss",
                "extension": "scss",
                "relPath": "src/scss/effect/mixin/_effect-long-shadow.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.effect.mixin.effectSideLined": {
                "name": "effect-side-lined",
                "type": "mixin",
                "description": "Create side lines around an item",
                "namespace": "@coffeekraken.sugar.scss.effect.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "h1 {\n\t\t@include Sugar.effect-side-lined(\n\t\t\t$padding : 20px,\n\t\t\t$side : right,\n\t\t\t$width : 100%\n\t\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_effect-side-lined.scss",
                "extension": "scss",
                "relPath": "src/scss/effect/mixin/_effect-side-lined.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.filter.class.filterClasses": {
                "name": "filter-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"filter\" related classes.",
                "namespace": "@coffeekraken.sugar.scss.filter.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_filter.scss",
                "extension": "scss",
                "relPath": "src/scss/filter/class/_filter.scss"
            },
            "@coffeekraken.sugar.scss.filter.class.-sel-fi-name": {
                "name": "#{sel(fi-#{$name})}",
                "type": "Classname",
                "description": "Apply the filter **#{$name}**",
                "namespace": "@coffeekraken.sugar.scss.filter.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(fi-#{$name})}\">\n\tI'm filtered with #{$name}\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_filter.scss",
                "extension": "scss",
                "relPath": "src/scss/filter/class/_filter.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.map.function.filterMap": {
                "name": "filter-map",
                "type": "function",
                "description": "Take a filter as parameter and parse it to return the {Map} corresponding\nThe $filter parameter can be either a registered filter name or a filter formated like `filterName(filterValue)`",
                "namespace": "@coffeekraken.sugar.scss.map.function",
                "example": [
                    {
                        "language": true,
                        "code": "// register a filter\n@include Sugar.setup((\n\t\tfilters : (\n\t\t\tmyCoolFilter : box-shadow(#000 0 0 10px) blur(30px),\n\t\t\t// other filters...\n\t\t)\n));\n\n// registered filter\nSugar.filter-map(myCoolFilter);\n// {\n// \tbox-shadow : #000 0 0 10px,\n// \tblur : 30px\n// }\n\n// custom filter\nSugar.filter-map(blur(10px));\n// {\n// \tblur : 10px\n// }"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_filter-map.scss",
                "extension": "scss",
                "relPath": "src/scss/filter/function/_filter-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.filter.function.filter": {
                "name": "filter",
                "type": "function",
                "description": "Return a list with all the filters that are passed as argument\nThis will use the [./_s-filter-map.scss] function to parse the filters",
                "namespace": "@coffeekraken.sugar.scss.filter.function",
                "example": [
                    {
                        "language": true,
                        "code": "// register a filter\n@include Sugar.setup((\n\t\tfilters : (\n\t\t\tmyCoolFilter : box-shadow(#000 0 0 10px) blur(30px),\n\t\t\t// other filters...\n\t\t)\n));\n\n// registered filter\n.my-cool-elememt {\n\t\tfilter : Sugar.filter(myCoolFilter);\n\t\t// filter : box-shadow(#000 0 0 10px) blur(30px);\n}\n\n// custom filter\n.my-cool-element {\n\t\tfilter : Sugar.filter(myCoolFilter invert(100%));\n\t\t// filter : box-shadow(#000 0 0 10px) blur(30px) invert(100%);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_filter.scss",
                "extension": "scss",
                "relPath": "src/scss/filter/function/_filter.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.filter.mixin.filter": {
                "name": "filter",
                "type": "mixin",
                "description": "Print out a list with all the filters that are passed as argument\nThis will use the [../functions/_filter-map.scss] function to parse the filters",
                "namespace": "@coffeekraken.sugar.scss.filter.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "// register a filter\n@include Sugar.setup((\n\t\tfilters : (\n\t\t\tmyCoolFilter : box-shadow(#000 0 0 10px) blur(30px),\n\t\t\t// other filters...\n\t\t)\n));\n\n// registered filter\n.my-cool-elememt {\n\t\t\\@include Sugar.filter(myCoolFilter);\n\t\t// filter : box-shadow(#000 0 0 10px) blur(30px);\n}\n\n// custom filter\n.my-cool-element {\n\t\t\\@include Sugar.filter(myCoolFilter invert(100%));\n\t\t// filter : box-shadow(#000 0 0 10px) blur(30px) invert(100%);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_filter.scss",
                "extension": "scss",
                "relPath": "src/scss/filter/mixin/_filter.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.font.class.fontClasses": {
                "name": "font-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"font\" related classes.",
                "namespace": "@coffeekraken.sugar.scss.font.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font.scss",
                "extension": "scss",
                "relPath": "src/scss/font/class/_font.scss"
            },
            "@coffeekraken.sugar.scss.font.class.-sel-f-name": {
                "name": "#{sel(f-#{$name})}",
                "type": "Classname",
                "description": "Apply the font size **#{$name}** (**#{$size}**)",
                "namespace": "@coffeekraken.sugar.scss.font.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(f-#{$name})}\">\n\tI have the font size \"#{$name}\" applied\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font.scss",
                "extension": "scss",
                "relPath": "src/scss/font/class/_font.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.font.function.fontFamily": {
                "name": "font-family",
                "type": "function",
                "description": "Return the font-family string or a registered font",
                "namespace": "@coffeekraken.sugar.scss.font.function",
                "example": [
                    {
                        "language": true,
                        "code": "// register a font\n@include Sugar.setup((\n\t\tfonts : (\n\t\t\tmyCoolFont : (\n\t\t\t\tfont-family : 'Helvetica Neue',\n\t\t\t\tfont-weight : 'bold',\n\t\t\t\t// etc...\n\t\t\t),\n\t\t\t// other fonts...\n\t\t)\n));\n\n// apply the font\n.my-cool-element {\n\t\tfont-family : Sugar.font-family(myCoolFont);\n\t\t// 'Helvetica Neue';\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font-family.scss",
                "extension": "scss",
                "relPath": "src/scss/font/function/_font-family.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.font.function.font": {
                "name": "font",
                "type": "function",
                "description": "Return the font {Map} that correspond to the passed arguments",
                "namespace": "@coffeekraken.sugar.scss.font.function",
                "example": [
                    {
                        "language": true,
                        "code": "Sugar.font(\n\t\t$family : 'Helvetica Neue',\n\t\t$size : 12px,\n\t\t$wrap : norwap\n);\n// (\n\t\tfont-family : 'Helvetica Neue',\n\t\tfont-size : 12px,\n\t\tword-wrap : nowrap\n// )"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font.scss",
                "extension": "scss",
                "relPath": "src/scss/font/function/_font.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.font.mixin.fontFace": {
                "name": "font-face",
                "type": "mixin",
                "description": "Helper to print a font-face",
                "namespace": "@coffeekraken.sugar.scss.font.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "// if you have these extensions files : .woff .eot .woff2\n@include Sugar.font-face(\n\t\t$name : my-cool-font,\n\t\t$src : '/fonts/my-font.eot',\n\t\t$extensions : eot woff woff2\n)"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font-face.scss",
                "extension": "scss",
                "relPath": "src/scss/font/mixin/_font-face.scss",
                "children": {
                    "#{$fontFamily}": {
                        "name": "#{$font-family}",
                        "styleguide": "Fonts / Faces"
                    }
                }
            },
            "@coffeekraken.sugar.scss.font.mixin.font": {
                "name": "font",
                "type": "mixin",
                "description": "Print all the fonts properties that correspond to the passed arguments",
                "namespace": "@coffeekraken.sugar.scss.font.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-elememt {\n\t\t@include Sugar.font(\n\t\t\t$family : 'Helvetica Neue',\n\t\t \t$size : 12px,\n\t\t  $wrap : normal\n   );\n   // print\n\t\tfont-family : 'Helvetica Neue',\n\t\tfont-size : 12px,\n\t\tword-wrap : normal\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_font.scss",
                "extension": "scss",
                "relPath": "src/scss/font/mixin/_font.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.form.mixin.inputPlaceholder": {
                "name": "input-placeholder",
                "type": "mixin",
                "description": "Set the placeholder style for inputs, etc...",
                "namespace": "@coffeekraken.sugar.scss.form.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "input, textarea {\n\t@include Sugar.input-placeholder() {\n\t\tcolor : red;\n\t}\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_input-placeholder.scss",
                "extension": "scss",
                "relPath": "src/scss/form/mixin/_input-placeholder.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperBlockClasses": {
                "name": "helper-block-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"block\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_block.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_block.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-blockCenter": {
                "name": "#{sel(block-center)}",
                "type": "class",
                "description": "Set the element to as ```display:block``` and center it",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(block-center)} #{sel(bg-primary)}\" style=\"width:100px;\">\n\tI'm a centered block\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_block.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_block.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperBorderClasses": {
                "name": "helper-border-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"border\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_border.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_border.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-cls": {
                "name": "#{$cls}",
                "type": "class",
                "description": "Remove the y (top and bottom) borders",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} #{$cls} #{sel(ratio-1-1)}\">\n\t<div>Sem iaculis mattis nibh pulvinar molestie lectus</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_border.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_border.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperClearClasses": {
                "name": "helper-clear-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"clear\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clear.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clear.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearLeft": {
                "name": "#{sel(clear-left)}",
                "type": "class",
                "description": "Clear the left float on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear-left)}\">\n\tI clear the left float\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clear.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clear.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearRight": {
                "name": "#{sel(clear-right)}",
                "type": "class",
                "description": "Clear the right float on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear-right)}\">\n\tI clear the right float\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clear.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clear.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clear": {
                "name": "#{sel(clear)}",
                "type": "class",
                "description": "Clear both float on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear)}\">\n\tI clear both floats\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clear.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clear.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperClearfixClasses": {
                "name": "helper-clearfix-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"clearfix\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearfix": {
                "name": "#{sel(clearfix)}",
                "type": "class",
                "description": "Apply the micro clearfix on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clearfix)} #{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled</div>\n</div>\n<div class=\"#{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled without clearfix</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearfixFloat": {
                "name": "#{sel(clearfix-float)}",
                "type": "class",
                "description": "Apply the float clearfix on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clearfix-float)} #{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled</div>\n</div>\n<div class=\"#{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled without clearfix</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearfixMicro": {
                "name": "#{sel(clearfix-micro)}",
                "type": "class",
                "description": "Apply the micro clearfix on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clearfix-micro)} #{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled</div>\n</div>\n<div class=\"#{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled without clearfix</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearfixOverflow": {
                "name": "#{sel(clearfix-overflow)}",
                "type": "class",
                "description": "Apply the overflow clearfix on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clearfix-overflow)} #{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled</div>\n</div>\n<div class=\"#{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled without clearfix</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearfixFacebook": {
                "name": "#{sel(clearfix-facebook)}",
                "type": "class",
                "description": "Apply the facebook clearfix on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clearfix-facebook)} #{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled</div>\n</div>\n<div class=\"#{sel(bg-primary)}\">\n\t<div class=\"#{sel(pull-right)}\">right pulled without clearfix</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_clearfix.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperDisplayClasses": {
                "name": "helper-display-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"display\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-block": {
                "name": "#{sel(block)}",
                "type": "class",
                "description": "Display the element as ```block```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(block)}\">\n\tI'm displayed as block\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-inline": {
                "name": "#{sel(inline)}",
                "type": "class",
                "description": "Display the element as ```inline```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(inline)}\">\n\tI'm displayed as inline\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-inlineBlock": {
                "name": "#{sel(inline-block)}",
                "type": "class",
                "description": "Display the element as ```inline-block```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(inline-block)}\">\n\tI'm displayed as inline-block\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-show": {
                "name": "#{sel(show)}",
                "type": "class",
                "description": "Display the element as ```block```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(show)}\">\n\tI'm displayed\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-showInline": {
                "name": "#{sel(show-inline)}",
                "type": "class",
                "description": "Display the element as ```inline-block```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(show-inline)}\">\n\tI'm inline displayed\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-hidden": {
                "name": "#{sel(hidden)}",
                "type": "class",
                "description": "Hide the element by setting the display to ```none```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(hidden)}\">\n\tI'm hidden\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-hide": {
                "name": "#{sel(hide)}",
                "type": "class",
                "description": "Hide the element by setting the display to ```none```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(hide)}\">\n\tI'm hidden\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-visible": {
                "name": "#{sel(visible)}",
                "type": "class",
                "description": "Display the element by setting the visibility to ```visible```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(visible)}\">\n\tI'm visible\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-invisible": {
                "name": "#{sel(invisible)}",
                "type": "class",
                "description": "Display the element by setting the visibility to ```hidden```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(invisible)}\">\n\tI'm invisible\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-visuallyHidden": {
                "name": "#{sel(visually-hidden)}",
                "type": "class",
                "description": "Hide the element from display but not for SEO.\nThis class use some tricks to make the element dissapear without using some ```display:none;```, etc...",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(visually-hidden)}\">\n\tI'm only visually hidden\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_display.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_display.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperFlexClasses": {
                "name": "helper-flex-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"flex\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flex": {
                "name": "#{sel(flex)}",
                "type": "class",
                "description": "Apply the display flex styling to the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  I'm in an element that has display flex applied\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexInline": {
                "name": "#{sel(flex-inline)}",
                "type": "class",
                "description": "Apply the display flex-inline styling to the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-inline)}\">\n  I'm in an element that has display flex-inline applied\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexJustifyStart": {
                "name": "#{sel(flex-justify-start)}",
                "type": "class",
                "description": "Apply the property ```justify-content``` to **start**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-justify-start)}\">\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexJustifyEnd": {
                "name": "#{sel(flex-justify-end)}",
                "type": "class",
                "description": "Apply the property ```justify-content``` to **end**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-justify-end)}\">\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexJustifyCenter": {
                "name": "#{sel(flex-justify-center)}",
                "type": "class",
                "description": "Apply the property ```justify-content``` to **center**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-justify-center)}\">\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexJustifyBetween": {
                "name": "#{sel(flex-justify-between)}",
                "type": "class",
                "description": "Apply the property ```justify-content``` to **space-between**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-justify-between)}\">\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexJustifyAround": {
                "name": "#{sel(flex-justify-around)}",
                "type": "class",
                "description": "Apply the property ```justify-content``` to **space-around**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-justify-around)}\">\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n  <div>I will be aligned depending on the flex-justify-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignStart": {
                "name": "#{sel(flex-align-start)}",
                "type": "class",
                "description": "Apply the property ```align-items``` to **flex-start**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-align-start)}\">\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignEnd": {
                "name": "#{sel(flex-align-end)}",
                "type": "class",
                "description": "Apply the property ```align-items``` to **flex-end**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-align-end)}\">\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignCenter": {
                "name": "#{sel(flex-align-center)}",
                "type": "class",
                "description": "Apply the property ```align-items``` to **center**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-align-center)}\">\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignBaseline": {
                "name": "#{sel(flex-align-baseline)}",
                "type": "class",
                "description": "Apply the property ```align-items``` to **baseline**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-align-baseline)}\">\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignStretch": {
                "name": "#{sel(flex-align-stretch)}",
                "type": "class",
                "description": "Apply the property ```align-items``` to **stretch**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-align-stretch)}\">\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n  <div>I will be aligned depending on the flex-align-{side} parent class</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignSelfStart": {
                "name": "#{sel(flex-align-self-start)}",
                "type": "class",
                "description": "Apply the property ```align-self``` to **flex-start**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item</div>\n  <div class=\"#{sel(flex-align-self-start)}>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignSelfEnd": {
                "name": "#{sel(flex-align-self-end)}",
                "type": "class",
                "description": "Apply the property ```align-self``` to **flex-end**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item</div>\n  <div class=\"#{sel(flex-align-self-end)}>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignSelfCenter": {
                "name": "#{sel(flex-align-self-center)}",
                "type": "class",
                "description": "Apply the property ```align-self``` to **flex-center**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item</div>\n  <div class=\"#{sel(flex-align-self-center)}>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignSelfBaseline": {
                "name": "#{sel(flex-align-self-baseline)}",
                "type": "class",
                "description": "Apply the property ```align-self``` to **flex-baseline**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item</div>\n  <div class=\"#{sel(flex-align-self-baseline)}>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexAlignSelfStretch": {
                "name": "#{sel(flex-align-self-stretch)}",
                "type": "class",
                "description": "Apply the property ```align-self``` to **flex-stretch**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item</div>\n  <div class=\"#{sel(flex-align-self-stretch)}>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexNowrap": {
                "name": "#{sel(flex-nowrap)}",
                "type": "class",
                "description": "Apply the ```flex-wrap``` property to **nowrap**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-nowrap)}\">\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexWrap": {
                "name": "#{sel(flex-wrap)}",
                "type": "class",
                "description": "Apply the ```flex-wrap``` property to **wrap**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-wrap)}\">\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexWrapReverse": {
                "name": "#{sel(flex-wrap-reverse)}",
                "type": "class",
                "description": "Apply the ```flex-wrap``` property to **wrap-reverse**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex-wrap-reverse)}\">\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n  <div>I'm a flex item</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-flexOrder-i": {
                "name": "#{sel(flex-order-#{i})}",
                "type": "class",
                "description": "Set the order on a specific flex item.\nYou will have <primary>#{$ordersCount}</primary> available. This can be\nchanged by updating the *config.scss.helpers.flex.order-count** configuration.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(flex)}\">\n  <div>I'm a flex item 0</div>\n  <div>I'm a flex item 1</div>\n  <div>I'm a flex item 2</div>\n  <div>I'm a flex item 3</div>\n  <div class=\"#{sel(flex-order-1)}\">I'm a flex item 4</div>\n  <div>I'm a flex item 5</div>\n  <div>I'm a flex item 6</div>\n  <div>I'm a flex item 7</div>\n  <div>I'm a flex item 8</div>\n  <div>I'm a flex item 9</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_flex.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_flex.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperLinkClasses": {
                "name": "helper-link-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"link\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_link.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_link.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-linkStretched": {
                "name": "#{sel(link-stretched",
                "type": "class",
                "description": "Make a link become the size of it's parent (absolute, relative)\nbut only using the :after pseudo class so visually it will stay the same...",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)} #{sel(bg-primary)}\">\n\t<a class=\"#{sel(link-stretche)}d\" href=\"#\">I'm the stretched link</a>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_link.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_link.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperMarginClasses": {
                "name": "helper-margin-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"margin\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-cname": {
                "name": "#{$cname}",
                "type": "Classname",
                "description": "Set the **top and bottom** padding to the **#{$name}**",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{$cname}\" style=\"border:1px solid #{color(primary)}; width:150px; height:150px;\">\n\t<div style=\"background:#{color(secondary)}; width:100%; height:100%\"></div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMar": {
                "name": "#{sel(no-mar)}",
                "type": "class",
                "description": "Reset all margins",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarT": {
                "name": "#{sel(no-mar-t)}",
                "type": "class",
                "description": "Reset **top** margin",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-t)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarR": {
                "name": "#{sel(no-mar-r)}",
                "type": "class",
                "description": "Reset **right** margin",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-r)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarB": {
                "name": "#{sel(no-mar-b)}",
                "type": "class",
                "description": "Reset **bottom** margin",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-b)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarL": {
                "name": "#{sel(no-mar-l)}",
                "type": "class",
                "description": "Reset **left** margin",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-l)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarX": {
                "name": "#{sel(no-mar-x)}",
                "type": "class",
                "description": "Reset **left** and **right** margins",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-x)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noMarY": {
                "name": "#{sel(no-mar-y)}",
                "type": "class",
                "description": "Reset **top** and **bottom** margins",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-mar-y)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_margin.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperMediaClasses": {
                "name": "helper-media-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"media object\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_media-object.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_media-object.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-mediaObject-sel-mediaObject-Center- -sel-mediaObject_content": {
                "name": "#{sel(media-object)} #{sel(media-object--center)} #{sel(media-object__content)}",
                "type": "class",
                "description": "Famous media object class",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(media-object)}\">\n  <div class=\"#{sel(media-object__content)}\">\n    <img src=\"https://source.unsplash.com/random/100x100\" />\n  </div>\n  <div class=\"#{sel(media-object__content)}\">\n    <h2 class=\"#{sel(h3)}\">Hello World</h2>\n    <p class=\"#{sel(p)}\">Phasellus fringilla aliquet justo eget pulvinar. Donec in justo leo.</p>\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_media-object.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_media-object.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperOverflowClasses": {
                "name": "helper-overflow-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"overflow\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_overflow.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_overflow.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-overflowHidden": {
                "name": "#{sel(overflow-hidden)}",
                "type": "Classname",
                "description": "Set the overflow to hidden",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(overflow-hidden)}\" style=\"height:3em;\">\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_overflow.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_overflow.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-overflowAuto": {
                "name": "#{sel(overflow-auto)}",
                "type": "Classname",
                "description": "Set the overflow to auto",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(overflow-auto)}\" style=\"height:3em;\">\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n\t<p>Hello world</p>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_overflow.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_overflow.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperPaddingClasses": {
                "name": "helper-padding-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"padding\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPad": {
                "name": "#{sel(no-pad)}",
                "type": "Classname",
                "description": "Reset **all** paddings",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadT": {
                "name": "#{sel(no-pad-t)}",
                "type": "Classname",
                "description": "Reset **top** padding",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-t)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadR": {
                "name": "#{sel(no-pad-r)}",
                "type": "Classname",
                "description": "Reset **right** padding",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-r)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadB": {
                "name": "#{sel(no-pad-b)}",
                "type": "class",
                "description": "Reset **bottom** padding",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-b)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadL": {
                "name": "#{sel(no-pad-l)}",
                "type": "class",
                "description": "Reset **left** padding",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-l)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadX": {
                "name": "#{sel(no-pad-x)}",
                "type": "class",
                "description": "Reset **left** and **right** paddings",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-s)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss"
            },
            "@coffeekraken.sugar.scss.core.class.-sel-noPadY": {
                "name": "#{sel(no-pad-y)}",
                "type": "class",
                "description": "Reset **top** and **bottom** paddings",
                "namespace": "@coffeekraken.sugar.scss.core.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-pad-y)}\" style=\"display:inline-block; background:#{color(primary)}; width:50px; height:50px;\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_padding.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperPointerClasses": {
                "name": "helper-pointer-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"pointer\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pointer.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pointer.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-pointerEventsNone": {
                "name": "#{sel(pointer-events-none)}",
                "type": "Classname",
                "description": "Disable any pointer events",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(pointer-events-none)}\">\n\tI will not react to any pointer events\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pointer.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pointer.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-pointerEventsAll": {
                "name": "#{sel(pointer-events-all)}",
                "type": "Classname",
                "description": "Enable any pointer events",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(pointer-events-all)}\">\n\tI will react to any pointer events\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pointer.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pointer.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperPositionClasses": {
                "name": "helper-position-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"position\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-relative": {
                "name": "#{sel(relative)}",
                "type": "Classname",
                "description": "Set an element position as ```relative```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(relative)}\">\n\tI'm relative now\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absolute": {
                "name": "#{sel(absolute)}",
                "type": "Classname",
                "description": "Set an element position as ```absolute```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(absolute)}\">\n\tI'm absolute now\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-fixed": {
                "name": "#{sel(fixed)}",
                "type": "Classname",
                "description": "Set an element position as ```fixed```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(fixed)}\">\n\tI'm fixed now\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-fixedTop": {
                "name": "#{sel(fixed-top)}",
                "type": "Classname",
                "description": "Set an element position as ```fixed``` top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(fixed-top)}\">\n\tI'm fixed now\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-fixedBottom": {
                "name": "#{sel(fixed-bottom)}",
                "type": "Classname",
                "description": "Set an element position as ```fixed``` bottom",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(fixed-bottom)}\">\n\tI'm fixed now\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-sticky": {
                "name": "#{sel(sticky)}",
                "type": "Classname",
                "description": "Set an element position as ```sticky```",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(sticky)}\">\n\tI'm sticky now\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-stickyTop": {
                "name": "#{sel(sticky-top)}",
                "type": "Classname",
                "description": "Set an element position as ```sticky``` top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(sticky-top)}\">\n\tI'm sticky on top now\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_position.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperPullClasses": {
                "name": "helper-pull-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"pull\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pull.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pull.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-pullLeft": {
                "name": "#{sel(pull-left)}",
                "type": "Classname",
                "description": "Allows you to pull an element to the left side",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div>\n\t<span class=\"#{sel(pull-left)}\">Hello world</span>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pull.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pull.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-pullRight": {
                "name": "#{sel(pull-right)}",
                "type": "Classname",
                "description": "Allows you to pull an element to the right side",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div>\n\t<span class=\"#{sel(pull-right)}\">Hello world</span>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pull.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pull.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-pullNone": {
                "name": "#{sel(pull-none)}",
                "type": "Classname",
                "description": "Reset the pull (float) styling on the element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div>\n\t<span class=\"#{sel(pull-none)}\">Hello world</span>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_pull.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_pull.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperRatioClasses": {
                "name": "helper-ratio-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"ratio\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ratio.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_ratio.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-cname": {
                "name": "#{$cname}",
                "type": "Classname",
                "description": "Set the **ratio** to the **#{$name}**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{$cname}\">\n  ...\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ratio.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_ratio.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperScreenReaderClasses": {
                "name": "helper-screen-reader-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"screen-reader\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_screen-reader.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_screen-reader.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-screenReaderOnly": {
                "name": "#{sel(screen-reader-only)}",
                "type": "Classname",
                "description": "Display the element only on screen readers",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"ratio-16-9\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"s-abs-cover #{sel(sr-only)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_screen-reader.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_screen-reader.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperSizeClasses": {
                "name": "helper-size-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"size\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover": {
                "name": "#{sel(abs-cover)}",
                "type": "Classname",
                "description": "Set a size that will cover the entire parent surface by positionning it in absolute",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Top": {
                "name": "#{sel(abs-cover--top)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--top)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Middle": {
                "name": "#{sel(abs-cover--middle)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the middle",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--middle)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Bottom": {
                "name": "#{sel(abs-cover--bottom)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the bottom",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--bottom)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Left": {
                "name": "#{sel(abs-cover--left)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the left",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--left)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Center": {
                "name": "#{sel(abs-cover--center)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the center",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--center)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absCover-Right": {
                "name": "#{sel(abs-cover--right)}",
                "type": "Classname",
                "description": "This will align an \"abs-cover\" content to the right",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-cover)} #{sel(abs-cover--right)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain": {
                "name": "#{sel(abs-contain)}",
                "type": "Classname",
                "description": "Set a size that will contain the entire parent surface by positionning it in absolute",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Top": {
                "name": "#{sel(abs-contain--top)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--top)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Middle": {
                "name": "#{sel(abs-contain--middle)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the middle",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--middle)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Bottom": {
                "name": "#{sel(abs-contain--bottom)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the bottom",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--bottom)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Left": {
                "name": "#{sel(abs-contain--left)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the left",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--left)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Center": {
                "name": "#{sel(abs-contain--center)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the center",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--center)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absContain-Right": {
                "name": "#{sel(abs-contain--right)}",
                "type": "Classname",
                "description": "This will align an \"abs-contain\" content to the right",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-contain)} #{sel(abs-contain--right)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-absFit": {
                "name": "#{sel(abs-fit)}",
                "type": "Classname",
                "description": "Set a size that will fit the entire parent surface by positionning it in absolute",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n\t<img src=\"https://source.unsplash.com/random\" class=\"#{sel(abs-fit)}\" />\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_size.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperTextClasses": {
                "name": "helper-text-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"text\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-t-size": {
                "name": "#{sel(t-#{$size})}",
                "type": "class",
                "description": "Set the size **#{$size}** relative to the root element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-#{$size})}\">\n\tI have the size \"#{$size}\" defined\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-t-size-Rel": {
                "name": "#{sel(t-#{$size}-rel)}",
                "type": "Classname",
                "description": "Set the size **#{$size}** relative to my parent",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-#{$size}-rel)}\">\n\tI have the size \"#{$size}\" defined relative to my parent\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tHidden": {
                "name": "#{sel(t-hidden)}",
                "type": "Classname",
                "description": "Hide the text",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-hidden)}\">\n\tI'm not visible\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tTruncate": {
                "name": "#{sel(t-truncate)}",
                "type": "Classname",
                "description": "Truncate the text",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-truncate)}\">\n\tI'm truncated cause I talk a lot too much Nulla mauris eros, finibus ac faucibus et, tempus quis risus. Praesent sit amet nulla vel libero euismod sodales eu nec.\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tLeft": {
                "name": "#{sel(t-left)}",
                "type": "Classname",
                "description": "Align the text to the left",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-left)}\">\n\tI'm left aligned\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tRight": {
                "name": "#{sel(t-right)}",
                "type": "Classname",
                "description": "Align the text to the right",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-right)}\">\n\tI'm right aligned\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tCenter": {
                "name": "#{sel(t-center)}",
                "type": "Classname",
                "description": "Align the text to the center",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-center)}\">\n\tI'm centered\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tJustify": {
                "name": "#{sel(t-justify)}",
                "type": "Classname",
                "description": "Make the text justified",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-justify)}\">\n\tNullam vel feugiat nunc. Phasellus facilisis, nisi sit amet viverra rhoncus, arcu risus volutpat dolor, sed euismod magna tellus ac purus. Praesent augue lorem, ullamcorper ac accumsan nec, suscipit eu.\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tLowercase": {
                "name": "#{sel(t-lowercase)}",
                "type": "Classname",
                "description": "Transform the text to lowercase",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-lowercase)}\">\n\tI'M LOWERCASE\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tUppercase": {
                "name": "#{sel(t-uppercase)}",
                "type": "Classname",
                "description": "Transform the text to uppercase",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-uppercase)}\">\n\tI'm uppercase\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tCapitalize": {
                "name": "#{sel(t-capitalize)}",
                "type": "Classname",
                "description": "Capizalize the words",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-capitalize)}\">\n\tI'm capitalized\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tBold": {
                "name": "#{sel(t-bold)}",
                "type": "Classname",
                "description": "Make the text bold",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-bold)}\">\n\tI'm bold\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tBolder": {
                "name": "#{sel(t-bolder)}",
                "type": "Classname",
                "description": "Make the text bolder",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-bolder)}\">\n\tI'm bolder\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tNormal": {
                "name": "#{sel(t-normal)}",
                "type": "Classname",
                "description": "Make the text normal",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-normal)}\">\n\tI'm normal\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tLight": {
                "name": "#{sel(t-light)}",
                "type": "Classname",
                "description": "Make the text light",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-light)}\">\n\tI'm light\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tLighter": {
                "name": "#{sel(t-lighter)}",
                "type": "Classname",
                "description": "Make the text lighter",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-lighter)}\">\n\tI'm lighter\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tItalic": {
                "name": "#{sel(t-italic)}",
                "type": "Classname",
                "description": "Make the text italic",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-italic)}\">\n\tI'm italic\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-t-name": {
                "name": "#{sel(t-#{$name})}",
                "type": "Classname",
                "description": "Apply the font \"#{$name}\"",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-#{$name})}\">\n\tI'm \"#{$name}\"\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tReset": {
                "name": "#{sel(t-reset)}",
                "type": "Classname",
                "description": "Reset the text (font-weight, family, color, etc...)",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-reset)}\">\n\tI'm reset\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tDecorationNone": {
                "name": "#{sel(t-decoration-none)}",
                "type": "Classname",
                "description": "Remove the text decoration",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-decoration-none)}\">\n\tI don't have any decoration anymore\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tUnderline": {
                "name": "#{sel(t-underline)}",
                "type": "Classname",
                "description": "Apply the decoration underline",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-underline)}\">\n\tI have the decoration underline\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tLineThrough": {
                "name": "#{sel(t-line-through)}",
                "type": "Classname",
                "description": "Apply the decoration line-through",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-line-through)}\">\n\tI have the decoration line-through\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-tOverline": {
                "name": "#{sel(t-overline)}",
                "type": "Classname",
                "description": "Apply the decoration overline",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(t-overline)}\">\n\tI have the decoration overline\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_text.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperTransmationClasses": {
                "name": "helper-transmation-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"transmation\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-noTransition": {
                "name": "#{sel(no-transition)}",
                "type": "Classname",
                "description": "Disable the transitions **only on the element**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-transition)}\">\n\tI have no more transitions\n\t<div>But I have</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearTransition": {
                "name": "#{sel(clear-transition)}",
                "type": "Classname",
                "description": "Disable the transitions **on the element and all his children**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear-transition)}\">\n\tI have no more transitions\n\t<div>Me neither</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-noAnimation": {
                "name": "#{sel(no-animation)}",
                "type": "Classname",
                "description": "Disable the animations **only on the element**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-animation)}\">\n\tI have no more animations\n\t<div>But I have</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearAnimation": {
                "name": "#{sel(clear-animation)}",
                "type": "Classname",
                "description": "Disable the transitions **on the element and all his children**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear-animation)}\">\n\tI have no more animations\n\t<div>Me neither</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-noTransmation": {
                "name": "#{sel(no-transmation)}",
                "type": "Classname",
                "description": "Disable the animations and transitions **only on the element**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(no-transmation)}\">\n\tI have no more animations or transitions\n\t<div>But I have</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-clearTransmation": {
                "name": "#{sel(clear-transmation)}",
                "type": "Classname",
                "description": "Disable the animations and transitions **on the element and all his children**",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(clear-transmation)}\">\n\tI have no more animations or transitions\n\t<div>Me neither</div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transmation.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_transmation.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperUserSelectClasses": {
                "name": "helper-user-select-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"user-select\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_user-select.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_user-select.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-userSelectNone": {
                "name": "#{sel(user-select-none)}",
                "type": "Classname",
                "description": "Disable the selection for this element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<p class=\"#{sel(user-select-none)}\">\n  I cannot be selected\n</p>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_user-select.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_user-select.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-userSelectAll": {
                "name": "#{sel(user-select-all)}",
                "type": "Classname",
                "description": "Enable the selection for this element",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<p class=\"#{sel(user-select-all)}\">\n  I will be all selected in 1 click\n</p>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_user-select.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_user-select.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-userSelectText": {
                "name": "#{sel(user-select-text)}",
                "type": "Classname",
                "description": "The text can be selected only",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<p class=\"#{sel(user-select-text)}\">\n  I cannot be selected\n</p>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_user-select.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_user-select.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.class.helperVerticalAlignClasses": {
                "name": "helper-vertical-align-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"vertical-align\" related helper classes.",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignTop": {
                "name": ".#{sel(align-top)}",
                "type": "Classname",
                "description": "Align vertically top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-top)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignBottom": {
                "name": ".#{sel(align-bottom)}",
                "type": "Classname",
                "description": "Align vertically bottom",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-bottom)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignMiddle": {
                "name": ".#{sel(align-middle)}",
                "type": "Classname",
                "description": "Align vertically middle",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-middle)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignBaseline": {
                "name": ".#{sel(align-baseline)}",
                "type": "Classname",
                "description": "Align vertically baseline",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-baseline)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignTextTop": {
                "name": "#{sel(align-text-top)}",
                "type": "Classname",
                "description": "Align vertically text-top",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-text-top)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss"
            },
            "@coffeekraken.sugar.scss.helper.class.-sel-alignTextBottom": {
                "name": "#{sel(align-text-bottom)}",
                "type": "Classname",
                "description": "Align vertically text-bottom",
                "namespace": "@coffeekraken.sugar.scss.helper.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(border)} style=\"height:200px\">\n  <div class=\"#{sel(align-text-bottom)}\">\n    Hello world\n  </div>\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-align.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/class/_vertical-align.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.function.is": {
                "name": "is",
                "type": "function",
                "description": "Check if the passed value is of a certain type\n\nHere's the available types that you can check\n- mixed => mean anything\n- null\n- url\n- px\n- pt\n- rem\n- em\n- percent | %\n- vw\n- vh\n- ex\n- ch\n- cm\n- mm\n- in\n- pc\n- s | second\n- boolean | bool\n- function\n- number\n- int | integer\n- string\n- color\n- list\n- map\n- deg | degree\n- list-{type} => check if is a list of the specified type\n- map-{type} => check if is a map of the specified type",
                "namespace": "@coffeekraken.sugar.scss.helper.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.is(hello, string) // => true\nSugar.is('hello', string) // => true\nSugar.is(#fff, color) // => true\nSugar.is(hello #fff, list-color) // => false\nSugar.is(#fff #ddd, list-color) // => true\n// etc..."
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_is.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/function/_is.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helpers.function.margin": {
                "name": "margin",
                "type": "Function",
                "description": "This function allows you to get margin values just like the ```margin``` property but using the margins.config values",
                "namespace": "@coffeekraken.sugar.scss.helpers.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "div {\n   margin: Sugar.margin(100);\n   margin: Sugar.margin(50 100);\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/function/_margin.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helpers.function.padding": {
                "name": "padding",
                "type": "Function",
                "description": "This function allows you to get padding values just like the ```padding``` property but using the paddings.config values",
                "namespace": "@coffeekraken.sugar.scss.helpers.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "div {\n   padding: Sugar.padding(100);\n   padding: Sugar.padding(50 100);\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_padding.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/function/_padding.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.function.typeOf": {
                "name": "type-of",
                "type": "function",
                "description": "Get the type of the passed variable",
                "namespace": "@coffeekraken.sugar.scss.helper.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.type-of('hello world'); // => string"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_type-of.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/function/_type-of.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.borderRadius": {
                "name": "border-radius",
                "type": "mixin",
                "description": "Apply some border radius",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-item {\n\t// apply on top left and right corners\n\t@include Sugar.border-radius(\n\t\t$top : 10px;\n\t);\n\t// apply on each corners\n\t\\@include Sugar.border-radius(10px);\n\t// etc...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_border-radius.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_border-radius.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.centerBlock": {
                "name": "center-block",
                "type": "mixin",
                "description": "Center a block element using margins etc...",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-block-element {\n\t@include Sugar.center-block();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_center-block.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_center-block.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.clearfix": {
                "name": "clearfix",
                "type": "mixin",
                "description": "Apply a clearfix on the element.\nSupported methods:\n- micro\n- facebook\n- float\n- micro",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n @include Sugar.clearfix();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_clearfix.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_clearfix.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.corner": {
                "name": "corner",
                "type": "mixin",
                "description": "Apply some border radius",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-item {\n\t// apply on top left and right corners\n\t@include Sugar.corner(\n\t\t$top : 10px;\n\t);\n\t// apply on each corners\n\t\\@include Sugar.corner(10px);\n\t// etc...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_corner.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_corner.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.fit": {
                "name": "fit",
                "type": "mixin",
                "description": "Make the element fit his container.",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t@include Sugar.fit(absolute);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_fit.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_fit.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.position": {
                "name": "position",
                "type": "mixin",
                "description": "Set a complexe position styling like position:absolute; top:0; left:100%; etc...\nThis mixin gives you some shortcuts to align your element top, bottom, middle, center, etc...",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t// absolute top right\n\t@include Sugar.position(absolute, top, right);\n\t// custom right and bottom values\n\t\\@include Sugar.position(absolute,\n\t\t$bottom : 20px,\n\t\t$right : 20px\n\t);\n\t// etc...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_position.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.reset": {
                "name": "reset",
                "type": "mixin",
                "description": "Print out a reset css",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_reset.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_reset.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.size": {
                "name": "size",
                "type": "mixin",
                "description": "Quicky and easily set simple or complexe size to any element",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-image {\n\t@include Sugar.size(cover);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_size.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_size.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.translate": {
                "name": "translate",
                "type": "mixin",
                "description": "Quicky set some translates",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t@include Sugar.translate(50%, 20px);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_translate.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_translate.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.verticalAligner": {
                "name": "vertical-aligner",
                "type": "mixin",
                "description": "Vertically align content by using the inline-block middle trick",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-container {\n\t@include Sugar.vertical-aligner();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vertical-aligner.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_vertical-aligner.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.helper.mixin.visuallyHidden": {
                "name": "visually-hidden",
                "type": "mixin",
                "description": "Hide an element only visually. This ensure that the element is still correctly displayed in the page for SEO\nbut will not being visible to the user",
                "namespace": "@coffeekraken.sugar.scss.helper.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t@include Sugar.visually-hidden();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_visually-hidden.scss",
                "extension": "scss",
                "relPath": "src/scss/helper/mixin/_visually-hidden.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.image.mixin.background": {
                "name": "background",
                "type": "mixin",
                "description": "Helper mixin to set a background image",
                "namespace": "@coffeekraken.sugar.scss.image.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t\t@include Sugar.background(\n\t\t\t$url : 'img/my-cool-image.jpg',\n\t\t\t$size : cover,\n\t\t\t$resolution : 2x 3x 4x\n\t\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_background.scss",
                "extension": "scss",
                "relPath": "src/scss/image/mixin/_background.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.image.mixin.imageRendering": {
                "name": "image-rendering",
                "type": "mixin",
                "description": "Set how to render the image",
                "namespace": "@coffeekraken.sugar.scss.image.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "img {\n\t@include Sugar.image-rendering(crips-edges);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_image-rendering.scss",
                "extension": "scss",
                "relPath": "src/scss/image/mixin/_image-rendering.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.layout.function.columnsMap": {
                "name": "columns-map",
                "type": "function",
                "description": "Return the Map representation of a columns properties",
                "namespace": "@coffeekraken.sugar.scss.layout.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.columns-map(2, 20px);\n// return\n// (\n// \tcolumn-count : 2,\n// \tcolumn-gap : 20px\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_columns-map.scss",
                "extension": "scss",
                "relPath": "src/scss/layout/function/_columns-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.layout.mixin.columns": {
                "name": "columns",
                "type": "mixin",
                "description": "Create a column layout my setting each columns properties at once",
                "namespace": "@coffeekraken.sugar.scss.layout.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-container {\n\t@include Sugar.columns(\n\t\t$count : 3,\n\t\t$gap : 30px,\n\t\t$span : all\n\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_columns.scss",
                "extension": "scss",
                "relPath": "src/scss/layout/mixin/_columns.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.layout.mixin.ratio": {
                "name": "ratio",
                "type": "mixin",
                "description": "Apply a ratio css styling. This will apply a before or after content that will make the element keep the specified ratio.\nThe content need to be displayed as absolute top left and fit in size.",
                "namespace": "@coffeekraken.sugar.scss.layout.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n\t@include Sugar.ratio(16/9);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ratio.scss",
                "extension": "scss",
                "relPath": "src/scss/layout/mixin/_ratio.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.link.mixin.linkStretched": {
                "name": "link-stretched",
                "type": "Mixin",
                "description": "Make a link become the size of it's parent (absolute, relative)\nbut only using the :after pseudo class so visually it will stay the same...",
                "namespace": "@coffeekraken.sugar.scss.link.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_link-stretched.scss",
                "extension": "scss",
                "relPath": "src/scss/link/mixin/_link-stretched.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.list.mixin.listBullet": {
                "name": "list-bullet",
                "type": "mixin",
                "description": "Set how the list bullet has to be displayed.",
                "namespace": "@coffeekraken.sugar.scss.list.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-list__item {\n\t@\\include Sugar.list-bullet(\n\t\t$image : '../img/my-cool-bullet.svg',\n\t\t$offset : 5px 10px,\n\t\t$size : 1em,\n\t\t$space : 2em\n\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-bullet.scss",
                "extension": "scss",
                "relPath": "src/scss/list/mixin/_list-bullet.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.list.mixin.listStart": {
                "name": "list-start",
                "type": "mixin",
                "description": "Start a new list",
                "namespace": "@coffeekraken.sugar.scss.list.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-list {\n   Sugar.list-start();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-start.scss",
                "extension": "scss",
                "relPath": "src/scss/list/mixin/_list-start.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderBars": {
                "name": "loader-bars",
                "type": "function",
                "description": "Generate a full animated, single element, bars loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n\t\t@include Sugar.loader-bars(\n\t\t\t$color : primary,\n\t\t\t$a-offset : .5em\n\t\t);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-bars.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-bars.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderCircle": {
                "name": "loader-circle",
                "type": "Mixin",
                "description": "Generate a full animated, single element, circle loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n   @include Sugar.loader-circle(\n     $color: Sugar.color(primary)\n   );\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-circle.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-circle.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderCouchPotato": {
                "name": "loader-couch-potato",
                "type": "function",
                "description": "Generate a full animated, single element, couch-potato style loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n\t\t@include Sugar.loader-couch-potato();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-couch-potato.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-couch-potato.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderFlipBall": {
                "name": "loader-flip-ball",
                "type": "Mixin",
                "description": "Generate a full animated, single element, flip ball style loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n\t\t@include Sugar.loader-flip-ball();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-flip-ball.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-flip-ball.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderGrid": {
                "name": "loader-grid",
                "type": "function",
                "description": "Generate a grid style loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n   @include Sugar.loader-grid();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-grid.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-grid.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderRadial": {
                "name": "loader-radial",
                "type": "function",
                "description": "Generate a radial styled loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n   @include Sugar.loader-radial();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-radial.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-radial.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.loader.mixin.loaderSpinner": {
                "name": "loader-spinner",
                "type": "function",
                "description": "Generate a spinner loader",
                "namespace": "@coffeekraken.sugar.scss.loader.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-loader {\n   @include Sugar.loader-spinner();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_loader-spinner.scss",
                "extension": "scss",
                "relPath": "src/scss/loader/mixin/_loader-spinner.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.look-and-feel.lnf": {
                "name": "lnf",
                "type": "function",
                "description": "Alias to the [./_look-and-feel.scss] function\n\nReturn a settings.look-and-feel stack value",
                "namespace": "@coffeekraken.sugar.scss.core.look-and-feel",
                "example": [
                    {
                        "language": true,
                        "code": ".my-cool-element {\n\t\tpadding : Sugar.lnf(padding-horizontal) Sugar.lnf(padding-vertical);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_lnf.scss",
                "extension": "scss",
                "relPath": "src/scss/look-and-feel/function/_lnf.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.look-and-feel.lookAndFeel": {
                "name": "look-and-feel",
                "type": "function",
                "description": "Return a settings.look-and-feel stack value",
                "namespace": "@coffeekraken.sugar.scss.core.look-and-feel",
                "example": [
                    {
                        "language": true,
                        "code": ".my-cool-element {\n\t\tpadding : Sugar.look-and-feel(padding-horizontal) Sugar.look-and-feel(padding-vertical);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_look-and-feel.scss",
                "extension": "scss",
                "relPath": "src/scss/look-and-feel/function/_look-and-feel.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.meta.function.toBase64Url": {
                "name": "to-base64-url",
                "type": "function",
                "description": "Convert the passed svg code to an embadable base64 url",
                "namespace": "@coffeekraken.sugar.scss.meta.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-base64-url('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M20.822 18.096c-3.439-.794-6.641-1.49-5.09-4.418 4.719-8.912 1.251-13.678-3.732-13.678-5.081 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-2.979.688-3.178 2.143-3.178 4.663l.005 1.241h10.483l.704-3h1.615l.704 3h10.483l.005-1.241c.001-2.52-.198-3.975-3.177-4.663zm-8.231 1.904h-1.164l-.91-2h2.994l-.92 2z\"/></svg>');\n// url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M20.822 18.096c-3.439-.794-6.641-1.49-5.09-4.418 4.719-8.912 1.251-13.678-3.732-13.678-5.081 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-2.979.688-3.178 2.143-3.178 4.663l.005 1.241h10.483l.704-3h1.615l.704 3h10.483l.005-1.241c.001-2.52-.198-3.975-3.177-4.663zm-8.231 1.904h-1.164l-.91-2h2.994l-.92 2z'/%3E%3C/svg%3E\")"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-base64-url.scss",
                "extension": "scss",
                "relPath": "src/scss/meta/function/_to-base64-url.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.meta.function.toBase64": {
                "name": "to-base64",
                "type": "function",
                "description": "Convert the passed svg code to base64 embedable url",
                "namespace": "@coffeekraken.sugar.scss.meta.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-base64('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M20.822 18.096c-3.439-.794-6.641-1.49-5.09-4.418 4.719-8.912 1.251-13.678-3.732-13.678-5.081 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-2.979.688-3.178 2.143-3.178 4.663l.005 1.241h10.483l.704-3h1.615l.704 3h10.483l.005-1.241c.001-2.52-.198-3.975-3.177-4.663zm-8.231 1.904h-1.164l-.91-2h2.994l-.92 2z\"/></svg>');\n// url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M20.822 18.096c-3.439-.794-6.641-1.49-5.09-4.418 4.719-8.912 1.251-13.678-3.732-13.678-5.081 0-8.464 4.949-3.732 13.678 1.597 2.945-1.725 3.641-5.09 4.418-2.979.688-3.178 2.143-3.178 4.663l.005 1.241h10.483l.704-3h1.615l.704 3h10.483l.005-1.241c.001-2.52-.198-3.975-3.177-4.663zm-8.231 1.904h-1.164l-.91-2h2.994l-.92 2z'/%3E%3C/svg%3E\")"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-base64.scss",
                "extension": "scss",
                "relPath": "src/scss/meta/function/_to-base64.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.responsive.function.mediaQueryString": {
                "name": "mediaQueryString",
                "type": "Function",
                "description": "This function return the media query string depending on the query asked.\nThe queries are defined in the config.media.queries configuration.",
                "namespace": "@coffeekraken.sugar.scss.responsive.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.mediaQueryString(mobile); // => screen and (max-width: 639)"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_mediaQueryString.scss",
                "extension": "scss",
                "relPath": "src/scss/responsive/function/_mediaQueryString.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.responsive.mixin.initBodyMediaQueries": {
                "name": "init-body-media-queries",
                "type": "Mixin",
                "description": "This mixin apply on the body all the media queries defines in the @config.media.queries configuration.\nThis mixin apply an animation that do nothing but will dispatch the animationEnd event catchable by javascript\nSo it will be easy to use the \"mediaQuery\" function that you can find in the \"@coffeekraken/sugar/js/responsive/mediaQuery\"\nnamespace.",
                "namespace": "@coffeekraken.sugar.scss.responsive.mixin",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_initBodyMediaQueries.scss",
                "extension": "scss",
                "relPath": "src/scss/responsive/mixin/_initBodyMediaQueries.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.responsive.media": {
                "name": "media",
                "type": "mixin",
                "description": "Easy to use media query mixin that support cssua classes to target specific browsers",
                "namespace": "@coffeekraken.sugar.scss.responsive",
                "example": [
                    {
                        "language": "scss",
                        "code": "// simple min width\n@include Sugar.media(\n\t$min-width : 200px\n) {\n\t// custom css here...\n}\n\n// target a specific engine\n\\@include Sugar.media(\n\t$engine : gecko webkit\n) {\n\t// custom css here\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_media.old.scss",
                "extension": "old",
                "relPath": "src/scss/responsive/mixin/_media.old.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.responsive.mixin.mediaQuery": {
                "name": "mediaQuery",
                "type": "Mixin",
                "description": "This mixin allows you to specify easily which media (defined in the media.config.js file) has to be targeted.\nYou can specify multiple medias if needed and specify how you want to target the specific media.\nCheck out the examples for more info.\nBy default, the Sugar toolkit offer these medias to be targeted:\n- mobile\n- mobile-portrait\n- mobile-landscape\n- tablet\n- tablet-portrait\n- tablet-landscape\n- desktop\n\nYou can use some \"actions\" to specify your target. The available actions are:\n- '>': Greater than...\n- '<': Lower than...\n- '=': Equal...\n- '>=': Greater or equal...\n- '>=': Lower or equal...\n\nYour media queries can be something like this: '<tablet', '>mobile <desktop', '=tablet-landscape'.\nIf you don't specicy any action in your queries, by default the \"defaultAction\" property in the media.config.js file will\nbe applied and this default action is setted to \">=\". This is setted like this to work in \"mobile first\" schema by default.",
                "namespace": "@coffeekraken.sugar.scss.responsive.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-container {\n   background: red;\n\n   @include Sugar.media(tablet) {\n     background: blue;\n   }\n\n   @include Sugar.media('>=desktop') {\n     background: green;\n   }\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_mediaQuery.scss",
                "extension": "scss",
                "relPath": "src/scss/responsive/mixin/_mediaQuery.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.screen-reader.mixin.screenReaderOnly": {
                "name": "screen-reader-only",
                "type": "Mixin",
                "description": "Make the element visible only for the screen readers",
                "namespace": "@coffeekraken.sugar.scss.screen-reader.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_screen-reader-only.scss",
                "extension": "scss",
                "relPath": "src/scss/screen-reader/mixin/_screen-reader-only.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.selector.function.selector": {
                "name": "selector",
                "type": "function",
                "description": "Process selector to avoid having --default, etc...",
                "namespace": "@coffeekraken.sugar.scss.core.selector.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.selector('.input--default'); // => .input\nSugar.selector('.input-default'); // => .input\nSugar.selector('.input.default'); // => .input"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_selector.scss",
                "extension": "scss",
                "relPath": "src/scss/selector/function/_selector.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.shape.mixin.roundOverflow": {
                "name": "round-overflow",
                "type": "mixin",
                "description": "Apply some css to have a rounded element with already an overflow on it",
                "namespace": "@coffeekraken.sugar.scss.shape.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-image {\n\t@include Sugar.round-overflow(100px);\n\n\timg {\n\t\t\\@include Sugar.size(cover);\n\t}\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_round-overflow.scss",
                "extension": "scss",
                "relPath": "src/scss/shape/mixin/_round-overflow.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.shape.mixin.triangle": {
                "name": "triangle",
                "type": "mixin",
                "description": "Generate a triangle shape",
                "namespace": "@coffeekraken.sugar.scss.shape.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-triangle {\n   @include Sugar.triangle();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_triangle.scss",
                "extension": "scss",
                "relPath": "src/scss/shape/mixin/_triangle.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.transition.class.transitionClasses": {
                "name": "transition-classes",
                "type": "Mixin",
                "description": "This mixin generate all the \"transition\" related classes.",
                "namespace": "@coffeekraken.sugar.scss.transition.class",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transition.scss",
                "extension": "scss",
                "relPath": "src/scss/transition/class/_transition.scss"
            },
            "@coffeekraken.sugar.scss.transition.class.-sel-tr-name": {
                "name": "#{sel(tr-#{$name})}",
                "type": "Classname",
                "description": "Apply the transition **#{$name}**",
                "namespace": "@coffeekraken.sugar.scss.transition.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(tr-#{$name})}\">\n\tI'm transitionned with #{$name}\n</div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transition.scss",
                "extension": "scss",
                "relPath": "src/scss/transition/class/_transition.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.transition.function.transitionMap": {
                "name": "transition-map",
                "type": "function",
                "description": "Take a transition as parameter and parse it to return the {Map} corresponding\nThe $transition parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transition argument will be parsed with the [./_parse-properties.scss] function.",
                "namespace": "@coffeekraken.sugar.scss.core.transition.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// register a transition\n@include Sugar.setup((\n\t\ttransitions : (\n\t\t\tfast : all .2s ease-in-out,\n\t\t\t// other transitions...\n\t\t)\n));\n\n// registered transition\nSugar.transition-map(fast);\n// {\n// \tproperty : all,\n// \tduration : .2s,\n// \tease : ease-in-out\n// }\n\n// custom transition\nSugar.transition-map(fast -delay .5s);\n// {\n// \tproperty : all,\n// \tduration : .2s,\n// \tease : ease-in-out,\n// \tdelay : .5s\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transition-map.scss",
                "extension": "scss",
                "relPath": "src/scss/transition/function/_transition-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.transition.function.transition": {
                "name": "transition",
                "type": "function",
                "description": "Take a transition as parameter and parse it to return the {List} corresponding\nThe $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transitions argument will be parsed with the [./_parse-properties.scss] function.",
                "namespace": "@coffeekraken.sugar.scss.core.transition.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// register a transition\n@include Sugar.setup((\n\t\ttransitions : (\n\t\t\tfast : all .2s ease-in-out 0s,\n\t\t\t// other transitions...\n\t\t)\n));\n\n// registered transition\n.my-cool-element {\n\t\ttransition : Sugar.transition(fast);\n\t\t// transition : all .2s ease-in-out 0s;\n}\n\n// custom transition\n.my-cool-element {\n \ttransition : Sugar.transition(fast -delay .5s, fast width ease-in);\n \t// transition : all .2s ease-in-out .5s, width .2s ease-in 0s;\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transition.scss",
                "extension": "scss",
                "relPath": "src/scss/transition/function/_transition.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.transition.mixin.transition": {
                "name": "transition",
                "type": "mixin",
                "description": "Take a transition as parameter and print the corresponding transition property\nThe $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s\nThe $transitions argument will be parsed with the [./_parse-properties.scss] function.",
                "namespace": "@coffeekraken.sugar.scss.core.transition.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "// register a transition\n@include Sugar.setup((\n\t\ttransitions : (\n\t\t\tfast : all .2s ease-in-out 0s,\n\t\t\t// other transitions...\n\t\t)\n));\n\n// registered transition\n.my-cool-element {\n\t\t\\@include Sugar.transition(fast);\n\t\t// transition : all .2s ease-in-out 0s;\n}\n\n// custom transition\n.my-cool-element {\n\t\t\\@include Sugar.transition(fast -delay .5s, fast width ease-in);\n \t// transition : all .2s ease-in-out .5s, width .2s ease-in 0s;\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_transition.scss",
                "extension": "scss",
                "relPath": "src/scss/transition/mixin/_transition.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.function.rhythmWidth": {
                "name": "rhythm-width",
                "type": "function",
                "description": "Return the Map properties representation for the rhythme width\nThe rhythme width is the width of an element that target a certain number of letters by line",
                "namespace": "@coffeekraken.sugar.scss.typography.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.rhythm-width(50);\n// return\n// (\n// \tdisplay : block,\n// \tmax-width : 50ex\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_rhythm-width.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/function/_rhythm-width.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.function.tfClass": {
                "name": "tf-class",
                "type": "function",
                "description": "Return the text-format setting scope class",
                "namespace": "@coffeekraken.sugar.scss.typography.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.tf-class(); // tf"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_tf-class.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/function/_tf-class.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.function.vrClass": {
                "name": "vr-class",
                "type": "function",
                "description": "Return the vertical-rhythm setting scope class",
                "namespace": "@coffeekraken.sugar.scss.typography.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.vr-class(); // vr"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vr-class.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/function/_vr-class.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.rhythmWidth": {
                "name": "rhythm-width",
                "type": "mixin",
                "description": "Print out the css on a container that will make the lines displays a maximum number of characters.",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "h1 {\n\t@include Sugar.rhythm-width(45);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_rhythm-width.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_rhythm-width.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.selection": {
                "name": "selection",
                "type": "mixin",
                "description": "Set the user selection styling with ease",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.selection() {\n\tbackground: red;\n\tcolor: white;\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_selection.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_selection.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.showVr": {
                "name": "show-vr",
                "type": "mixin",
                "description": "Display the vertical rhythme",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "body {\n\t\t@include Sugar.show-vr();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_show-vr.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_show-vr.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.textEllipsis": {
                "name": "text-ellipsis",
                "type": "mixin",
                "description": "Crop the text on 1 line if needed",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "h2 {\n\t\t@include Sugar.text-ellipsis();\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text-ellipsis.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_text-ellipsis.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.textHide": {
                "name": "text-hide",
                "type": "mixin",
                "description": "Hide the contained text",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-container {\n\t@include Sugar.text-hide();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text-hide.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_text-hide.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.textTruncate": {
                "name": "text-truncate",
                "type": "mixin",
                "description": "Print out the style to truncate the text if needed",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "h1 {\n\t@include Sugar.text-truncate();\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_text-truncate.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_text-truncate.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.tfScope": {
                "name": "tf-scope",
                "type": "mixin",
                "description": "Scope the content inside the `settings.typography.tf-scope-class` class",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-item {\n\t@include Sugar.tf-scope() {\n\t\tmargin-bottom: 2em; // will be applied only if .my-cool-item is in the .vr scope\n\t}\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_tf-scope.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_tf-scope.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.typography.mixin.vrScope": {
                "name": "vr-scope",
                "type": "mixin",
                "description": "Scope the content inside the `settings.typography.vr-class` class",
                "namespace": "@coffeekraken.sugar.scss.typography.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-item {\n\t@include Sugar.vr-scope() {\n\t\tmargin-bottom: 2em; // will be applied only if .my-cool-item is in the .vr scope\n\t}\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_vr-scope.scss",
                "extension": "scss",
                "relPath": "src/scss/typography/mixin/_vr-scope.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.convert": {
                "name": "convert",
                "type": "function",
                "description": "Convert a passed value to the wanted unit\nThe conversion between some units that depends on a font-size will take the settings.typography.font-size value as reference.\n\nAvailable conversions\n- from px\n- to em\n- to rem\n- to pt\n- to %\n\n- from em\n- to rem\n- to px\n- to pt\n- to %\n\n- from pt\n- to em\n- to rem\n- to px\n- to pt\n- to %\n\n- from rem\n- to em\n- to px\n- to pt\n- to %",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// if the settings.typography.font-size === 16px\nSugar.convert(24px, rem) // 1.5rem\nSugar.convert(3rem, pt) // 36pt"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_convert.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_convert.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.isUnitless": {
                "name": "is-unitless",
                "type": "function",
                "description": "Check if the passed variable is unitless or not",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.is-unitless(20); // => true\nSugar.is-unitless(10px); // => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_is-unitless.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_is-unitless.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.stripUnits": {
                "name": "strip-units",
                "type": "function",
                "description": "Return a number without any units",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.strip-units(12px); // => 12\nSugar.strip-units(30rem); // => 30"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_strip-units.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_strip-units.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.toEm": {
                "name": "to-em",
                "type": "function",
                "description": "Convert the passed value to em",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-em(10px);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-em.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_to-em.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.toPercent": {
                "name": "to-percent",
                "type": "function",
                "description": "Convert the passed value to %",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-percent(10px);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-percent.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_to-percent.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.toPt": {
                "name": "to-pt",
                "type": "function",
                "description": "Convert the passed value to pt",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-pt(10px);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-pt.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_to-pt.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.toPx": {
                "name": "to-px",
                "type": "function",
                "description": "Convert the passed value to px",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-px(10rem);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-px.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_to-px.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.toRem": {
                "name": "to-rem",
                "type": "function",
                "description": "Convert the passed value to rem",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.to-rem(10px);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_to-rem.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_to-rem.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.unit.function.unit": {
                "name": "unit",
                "type": "function",
                "description": "Return the unit of the passed number",
                "namespace": "@coffeekraken.sugar.scss.unit.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.unit(10px); // => px"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_unit.scss",
                "extension": "scss",
                "relPath": "src/scss/unit/function/_unit.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.util.function.borderMap": {
                "name": "border-map",
                "type": "function",
                "description": "Parse and return the Map respresentation of a border property\nThe $border argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function.",
                "namespace": "@coffeekraken.sugar.scss.util.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.border-map(1px solid white);\n// return\n// (\n// \twidth : 1px,\n// \tcolor : white,\n// \tstyle : solid\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_border-map.scss",
                "extension": "scss",
                "relPath": "src/scss/util/function/_border-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.util.function.marginMap": {
                "name": "margin-map",
                "type": "function",
                "description": "Parse and return the Map respresentation of a margin property\nThe $margin argument will be parsed with the [s-parse-properties](../core/functions/_s-parse-properties.scss) function.",
                "namespace": "@coffeekraken.sugar.scss.util.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.margin-map(10px); // => ( top:10px, right:10px, bottom:10px, left:10px )\nSugar.margin-map(10px 20px); // => ( top:10px, right:20px, bottom:10px, left:20px )\nSugar.margin-map(5px 10px 15px 20px); // => ( top:5px, right:10px, bottom:15px, left:20px )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_margin-map.scss",
                "extension": "scss",
                "relPath": "src/scss/util/function/_margin-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.util.function.positionMap": {
                "name": "position-map",
                "type": "function",
                "description": "Return the representation of a position styling like position:absolute; top:0; left:100%; etc...\nThis function gives you some shortcuts to align your element top, bottom, middle, center, etc...",
                "namespace": "@coffeekraken.sugar.scss.util.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.position-map(absolute, top, right);\nSugar.position-map(absolute, middle, center);\nSugar.position-map(relative, bottom, right);\nSugar.position-map(absolute, bottom, center);\n// etc..."
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_position-map.scss",
                "extension": "scss",
                "relPath": "src/scss/util/function/_position-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.util.function.translateMap": {
                "name": "translate-map",
                "type": "function",
                "description": "Return the Map properties representation of a translate x,y and z",
                "namespace": "@coffeekraken.sugar.scss.util.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.translate-map(10px,20px);\n// return\n// (\n// \ttransform: translateX(10px) translateY(20px) translateZ(0)\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_translate-map.scss",
                "extension": "scss",
                "relPath": "src/scss/util/function/_translate-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.utils.functionToClass": {
                "name": "functionToClass",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform ES5 Functions to ES6 Classes",
                "namespace": "@coffeekraken.sugar.js.class.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import functionToClass from '@coffeekraken/sugar/js/class/functionToClass';\nfunctionToClass(function coco() {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "functionToClass.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/functionToClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.utils.getExtendsStack": {
                "name": "getExtendsStack",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a class as parameter and return an array of all the class names used to extends this one...",
                "namespace": "@coffeekraken.sugar.shared.class.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getExtendsStack from '@coffeekraken/sugar/shared/class/utils/getExtendsStack';\nclass Coco extends Error {}\nclass Plop extends Coco {}\ngetExtendsStack(Plop); // => {Coco: [class ...], Error: [class ...]};"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getExtendsStack.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/getExtendsStack.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.getMethods": {
                "name": "getMethods",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an instance as parameter and return all the methods in array format",
                "namespace": "@coffeekraken.sugar.js.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getMethods from '@coffeekraken/sugar/js/class/getMethods';\nmyClass {\n constructor() {}\n hello() {}\n world() {}\n}\nconst myInstance = new myClass();\ngetMethods(myInstance); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getMethods.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/getMethods.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.utils.methodExists": {
                "name": "methodExists",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if one or more methods exists on a class instance",
                "namespace": "@coffeekraken.sugar.js.class.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "class Coco {\n   hello() {}\n}\nimport methodExists from '@coffeekraken/sugar/node/class/utils/methodExists';\nconst myInstance = new Coco();\nmethodExists(myInstance, 'hello', 'world'); // => ['world'];"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "methodExists.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/methodExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.utils.multipleExtends": {
                "name": "multipleExtends",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extends your class with multiple other ones.",
                "namespace": "@coffeekraken.sugar.shared.class.utils",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import multipleExtends from '@coffeekraken/sugar/shared/class/utils/multipleExtends';\nclass MyCoolClass extends multipleExtends(Another, AnotherOne) {\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "multipleExtends.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/multipleExtends.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.utils.toPlainObject": {
                "name": "toPlainObject",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a instance as parameter and return a plain object of it",
                "namespace": "@coffeekraken.sugar.shared.class.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toPlainObject from '@coffeekraken/sugar/shared/class/utils/toPlainObject';\nclass Coco {\n   constructor() {\n     this.hello = 'world';\n   }\n}\ntoPlainObject(new Coco()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/class/utils/toPlainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.console.html.tagsMap": {
                "name": "tagsMap",
                "type": "Object",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Store the tag->function map used in ```parseHtml``` function for example",
                "namespace": "@coffeekraken.sugar.js.console.html",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "tagsMap.ts",
                "extension": "ts",
                "relPath": "src/shared/console/html/tagsMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.availableColors": {
                "name": "availableColors",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```colorValue``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import availableColors from '@coffeekraken/sugar/shared/dev/color/availableColors';\navailableColors(); => ['black','white','yellow','green',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "availableColors.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/availableColors.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.colorValue": {
                "name": "colorValue",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```getColor``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import colorValue from '@coffeekraken/sugar/shared/dev/color/colorValue';\ncolorValue('black'); => #000000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "colorValue.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/colorValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.color.getColorFor": {
                "name": "getColorFor",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass anything like an object, a string, etc... and get the same\ncolor back everytime you pass the same value.\nThis if usefull for output logs, etc...",
                "namespace": "@coffeekraken.sugar.shared.dev.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getColorFor from '@coffeekraken/sugar/shared/dev/color/getColorFor';\ngetColorFor('something'); // => cyan\ngetColorFor({\n     else: true\n}); // => magenta\ngetColorFor('something') // => cyan"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "getColorFor.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/getColorFor.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.types.dataTypesArray": {
                "name": "dataTypesArray",
                "type": "Array",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is just a list of data types available in the\ncurrent language (node/js)",
                "namespace": "@coffeekraken.sugar.shared.dev.types",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "dataTypesArray.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/types/dataTypesArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.npm.parseAuthorString": {
                "name": "parseAuthorString",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an author string like \"Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\" and\ntransform it into a plain object with these properties: name, email and url",
                "namespace": "@coffeekraken.sugar.js.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseAuthorString from '@coffeekraken/sugar/js/npm/utils/parseAuthorString';\nparseAuthorString(\"Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\")\n// => {\n  \"name\": \"Olivier Bossel\",\n  \"email\": \"olivier.bossel@gmail.com\",\n  \"url\": \"https://olivierbossel.com\"\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "parseAuthorString.ts",
                "extension": "ts",
                "relPath": "src/shared/npm/utils/parseAuthorString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.npm.standardizeJson": {
                "name": "standardizeJson",
                "type": "Function",
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package.json JSON formatted object and standardize\nsome fields like the \"author\" one to be sure it is an object at the end,\nthe \"contributors\" array the same way as the \"author\" one, etc... Here's the list\nof processed actions:\n1. Transform the string version of the \"author\" field into an object with the properties \"name\", \"email\" and \"url\"\n2. Transform the string version of the \"contributors\" field into an object with the properties \"name\", \"email\" and \"url\"",
                "namespace": "@coffeekraken.sugar.js.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import standardizeJson from '@coffeekraken/sugar/js/npm/utils/standardizeJson';\nstandardizeJson({\n   \"author\": \"Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\"\n}); // => {\n   \"author\": {\n     \"name\": \"Olivier Bossel\",\n     \"email\": \"olivier.bossel@gmail.com\",\n     \"url\": \"https://olivierbossel.com\"\n   }\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "standardizeJson.ts",
                "extension": "ts",
                "relPath": "src/shared/npm/utils/standardizeJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.button.class.buttonClasses": {
                "name": "button-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some buttons.",
                "namespace": "@coffeekraken.sugar.scss.component.button.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<a class=\"#{sel(btn)}\">I'm a cool button</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_button.scss",
                "extension": "scss",
                "relPath": "src/scss/component/button/class/_button.scss"
            },
            "@coffeekraken.sugar.scss.component.button.-sel-name-.-sel-tfClass-Button": {
                "name": ".#{sel($name)}, .#{sel(#{tf-class()})} button",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component",
                "namespace": "@coffeekraken.sugar.scss.component.button",
                "example": [
                    {
                        "language": "html",
                        "code": "<a class=\"#{sel($name)}\">I am a cool button</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_button.scss",
                "extension": "scss",
                "relPath": "src/scss/component/button/class/_button.scss"
            },
            "@coffeekraken.sugar.scss.component.button.-size.-sel-name-size-.-sel-tfClass-Button.-sel-size": {
                "name": ".#{sel(#{$name}--#{$size})}, .#{sel(#{tf-class()})} button.#{sel($size)}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$size}```",
                "namespace": "@coffeekraken.sugar.scss.component.button.-size",
                "example": [
                    {
                        "language": "html",
                        "code": "<a class=\"#{sel($name)} #{sel(#{$name}--#{$size})}\">I am a cool #{$size} button</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_button.scss",
                "extension": "scss",
                "relPath": "src/scss/component/button/class/_button.scss"
            },
            "@coffeekraken.sugar.scss.component.button.-color.-sel-name-color-.-sel-tfClass-Button.-sel-color": {
                "name": ".#{sel(#{$name}--#{$color})}, .#{sel(#{tf-class()})} button.#{sel($color)}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his color to ```#{$color}```",
                "namespace": "@coffeekraken.sugar.scss.component.button.-color",
                "example": [
                    {
                        "language": "html",
                        "code": "<a class=\"#{sel($name)} #{sel(#{$name}--#{$color})}\">I am a cool #{$color} button</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_button.scss",
                "extension": "scss",
                "relPath": "src/scss/component/button/class/_button.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.button.mixin.button": {
                "name": "button",
                "type": "Mixin",
                "description": "This mixin generate all the properties for a button depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.button.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_button.scss",
                "extension": "scss",
                "relPath": "src/scss/component/button/mixin/_button.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.class.icons.-sel-icon-name": {
                "name": "#{sel(icon-#{$name})}",
                "type": "class",
                "description": "```.icon-#{$name}``` icon class",
                "namespace": "@coffeekraken.sugar.scss.core.class.icons",
                "example": [
                    {
                        "language": "html",
                        "code": "<i class=\"#{sel(icon-#{$name})}\" />"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_icons.scss",
                "extension": "scss",
                "relPath": "src/scss/component/icon/class/_icons.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.icon.mixin.icon": {
                "name": "icon",
                "type": "mixin",
                "description": "Apply an icon on the element. This mixin support font-awesome and custom icons systems that have an icon name formated like \"icon-{name}\"\nThe custom icon style if you pass as name \"user\" will extend %icon, %icon-user, .icon and .icon-user classes",
                "namespace": "@coffeekraken.sugar.scss.icon.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-icon {\n\t@include Sugar.icon(fa-user, primary);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_icon.scss",
                "extension": "scss",
                "relPath": "src/scss/component/icon/mixin/_icon.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.icon.mixin.icons": {
                "name": "icons",
                "type": "mixin",
                "description": "Generate some icon classes like .icon-$icon-name",
                "namespace": "@coffeekraken.sugar.scss.icon.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.icons(fa-user fa-bell fa-circle);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_icons.scss",
                "extension": "scss",
                "relPath": "src/scss/component/icon/mixin/_icons.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.icon.mixin.registerSvgIcon": {
                "name": "register-svg-icon",
                "type": "mixin",
                "description": "Register a new icon to be used as base64 encoded url.\nIf you want your icon to be colorable, you need to specify this code on your paths: `style=\"fill:%color\"`",
                "namespace": "@coffeekraken.sugar.scss.icon.mixin",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_register-svg-icon.scss",
                "extension": "scss",
                "relPath": "src/scss/component/icon/mixin/_register-svg-icon.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.ol.class.olClasses": {
                "name": "ol-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some ordered lists.",
                "namespace": "@coffeekraken.sugar.scss.component.ol.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<ol class=\"#{sel(ol)}\">\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n</ol>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ol.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ol/class/_ol.scss"
            },
            "@coffeekraken.sugar.scss.component.-sel-name-size": {
                "name": ".#{sel(#{$name}--#{$size})}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$size}```",
                "namespace": "@coffeekraken.sugar.scss.component",
                "example": [
                    {
                        "language": "html",
                        "code": "<ol class=\"#{sel(#{$name}--#{$size})}\">\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n</ol>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ol.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ol/class/_ol.scss"
            },
            "@coffeekraken.sugar.scss.component.-sel-name-color": {
                "name": ".#{sel(#{$name}--#{$color})}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$color}```",
                "namespace": "@coffeekraken.sugar.scss.component",
                "example": [
                    {
                        "language": "html",
                        "code": "<ol class=\"#{sel(#{$name})} #{sel(#{$name}--#{$color})}\">\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n  <li>I'm a cool ordered list item</li>\n</ol>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ol.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ol/class/_ol.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.ol.mixin.ol": {
                "name": "ol",
                "type": "Mixin",
                "description": "Generate the properties and child css for the ol component",
                "namespace": "@coffeekraken.sugar.scss.component.ol.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ol.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ol/mixin/_ol.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.paragraph.class.paragraphClasses": {
                "name": "paragraph-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some paragraphs.",
                "namespace": "@coffeekraken.sugar.scss.component.paragraph.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<p class=\"#{sel(p)}\">\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec facilisis purus ac rhoncus mollis. Mauris lacinia velit purus, sit amet aliquet odio imperdiet in. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis rhoncus magna et dui bibendum, id suscipit dui consectetur. Nulla facilisi. Vivamus a metus nunc. Pellentesque eu lectus a velit consequat condimentum. Donec ac dolor sed enim posuere fringilla et dapibus metus. Nam id vehicula enim. In hac habitasse platea dictumst. Phasellus ultricies eros et neque blandit pulvinar. Proin nec urna auctor, porttitor ligula eu, fermentum risus. Etiam non eros blandit, pellentesque purus quis, viverra arcu.\n</p>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_paragraph.scss",
                "extension": "scss",
                "relPath": "src/scss/component/paragraph/class/_paragraph.scss"
            },
            "@coffeekraken.sugar.scss.component.-sel-name-n-.-sel-tfClass- -sel-p.-n-Null": {
                "name": ".#{sel(#{$name}--#{$n})}, .#{sel(#{tf-class()})} #{sel('p.#{$n}', null)}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his style",
                "namespace": "@coffeekraken.sugar.scss.component",
                "example": [
                    {
                        "language": "html",
                        "code": "<p class=\"#{sel(p--#{$n})}\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec facilisis purus ac rhoncus mollis. Mauris lacinia velit purus, sit amet aliquet odio imperdiet in. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis rhoncus magna et dui bibendum, id suscipit dui consectetur. Nulla facilisi. Vivamus a metus nunc. Pellentesque eu lectus a velit consequat condimentum. Donec ac dolor sed enim posuere fringilla et dapibus metus. Nam id vehicula enim. In hac habitasse platea dictumst. Phasellus ultricies eros et neque blandit pulvinar. Proin nec urna auctor, porttitor ligula eu, fermentum risus. Etiam non eros blandit, pellentesque purus quis, viverra arcu.</p>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_paragraph.scss",
                "extension": "scss",
                "relPath": "src/scss/component/paragraph/class/_paragraph.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.paragraph.mixin.paragraph": {
                "name": "paragraph",
                "type": "Mixin",
                "description": "This mixin generate all the properties for a paragraph depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.paragraph.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_paragraph.scss",
                "extension": "scss",
                "relPath": "src/scss/component/paragraph/mixin/_paragraph.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.shadow.class.-sel-shadow": {
                "name": "#{sel(shadow)}",
                "type": "class",
                "description": "Apply the default shadow to the element",
                "namespace": "@coffeekraken.sugar.scss.shadow.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n   <div class=\"#{sel(shadow)} ratio-1-1\" style=\"width:33%\">\n\t    I'm a shadowed block\n   </div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_shadow.scss",
                "extension": "scss",
                "relPath": "src/scss/component/shadow/class/_shadow.scss"
            },
            "@coffeekraken.sugar.scss.shadow.class.-sel-shadow-Small": {
                "name": "#{sel(shadow--small)}",
                "type": "class",
                "description": "Apply the small shadow to the element",
                "namespace": "@coffeekraken.sugar.scss.shadow.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n   <div class=\"#{sel(shadow--small)} ratio-1-1\" style=\"width:33%\">\n\t    I'm a shadowed block\n   </div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_shadow.scss",
                "extension": "scss",
                "relPath": "src/scss/component/shadow/class/_shadow.scss"
            },
            "@coffeekraken.sugar.scss.shadow.class.-sel-shadow-Big": {
                "name": "#{sel(shadow--big)}",
                "type": "class",
                "description": "Apply the big shadow to the element",
                "namespace": "@coffeekraken.sugar.scss.shadow.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<div class=\"#{sel(ratio-16-9)}\">\n   <div class=\"#{sel(shadow--big)} ratio-1-1\" style=\"width:33%\">\n\t    I'm a shadowed block\n   </div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_shadow.scss",
                "extension": "scss",
                "relPath": "src/scss/component/shadow/class/_shadow.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.title.titleClasses": {
                "name": "title-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some titles.",
                "namespace": "@coffeekraken.sugar.scss.component.title",
                "example": [
                    {
                        "language": "html",
                        "code": "<h1 class=\"#{sel(h1)}\">My title</h1>\n<h2 class=\"#{sel(h2)}\">My title</h2>\n<h3 class=\"#{sel(h3)}\">My title</h3>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_title.scss",
                "extension": "scss",
                "relPath": "src/scss/component/title/class/_title.scss"
            },
            "@coffeekraken.sugar.scss.component.title.-sel-name-i-.-sel-tfClass-H-i": {
                "name": ".#{sel(#{$name}#{$i})}, .#{sel(#{tf-class()})} h#{$i}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$i}```",
                "namespace": "@coffeekraken.sugar.scss.component.title",
                "example": [
                    {
                        "language": "html",
                        "code": "<h#{$i} class=\"#{sel(#{$name}#{$i})}\">I'm a cool \"#{$i}\" title</h#{$i}>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_title.scss",
                "extension": "scss",
                "relPath": "src/scss/component/title/class/_title.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.title.title": {
                "name": "title",
                "type": "Mixin",
                "description": "This mixin generate all the properties for a title depending on the parameters you set.",
                "namespace": "@coffeekraken.sugar.scss.component.title",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_title.scss",
                "extension": "scss",
                "relPath": "src/scss/component/title/mixin/_title.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.ul.class.ulClasses": {
                "name": "ul-classes",
                "type": "Mixin",
                "description": "This mixin generate all the css needed to display properly some unordered lists.",
                "namespace": "@coffeekraken.sugar.scss.component.ul.class",
                "example": [
                    {
                        "language": "html",
                        "code": "<ul class=\"#{sel(ul)}\">\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n</ul>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ul.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ul/class/_ul.scss"
            },
            "@coffeekraken.sugar.scss.component.ul.size.-size.-sel-name-size": {
                "name": ".#{sel(#{$name}--#{$size})}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$size}```",
                "namespace": "@coffeekraken.sugar.scss.component.ul.size.-size",
                "example": [
                    {
                        "language": "html",
                        "code": "<ol class=\"#{sel(#{$name}--#{$size})}\">\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n</ol>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ul.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ul/class/_ul.scss"
            },
            "@coffeekraken.sugar.scss.component.ul.color.-color.-sel-name-color": {
                "name": ".#{sel(#{$name}--#{$color})}",
                "type": "Classname",
                "description": "This class can be applied on any ```#{$name}``` component to specify his size to ```#{$color}```",
                "namespace": "@coffeekraken.sugar.scss.component.ul.color.-color",
                "example": [
                    {
                        "language": "html",
                        "code": "<ul class=\"#{sel(#{$name})} #{sel(#{$name}--#{$color})}\">\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n  <li>I'm a cool unordered list item</li>\n</ul>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ul.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ul/class/_ul.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.component.ul.mixin.ul": {
                "name": "ul",
                "type": "Mixin",
                "description": "Generate the properties and child css for the ul component",
                "namespace": "@coffeekraken.sugar.scss.component.ul.mixin",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_ul.scss",
                "extension": "scss",
                "relPath": "src/scss/component/ul/mixin/_ul.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.context.function.context": {
                "name": "context",
                "type": "function",
                "namespace": "@coffeekraken.sugar.scss.core.context.function",
                "example": [
                    {
                        "language": true,
                        "code": "// register a context\n@include Sugar.context-setup('my-context', (\n\t\t// override some settings here...\n));\n\nSugar.context('hello') // => 'hello'\n\\@include Sugar.context('my-context') {\n\t\tSugar.context('hello') // => 'my-context'\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_context.scss",
                "extension": "scss",
                "relPath": "src/scss/core/context/function/_context.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.context.mixin.contextSetup": {
                "name": "context-setup",
                "type": "mixin",
                "description": "Register a context with a name to use it later",
                "namespace": "@coffeekraken.sugar.scss.core.context.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "@include Sugar.context-setup(my-cool-context, (\n\t\tlook-and-feel : (\n\t\t\tpadding-vertical : (\n\t\t\t\tdefault : 0.6em\n\t\t\t)\n\t\t)\n));\n\n// using your context\n\\@include Sugar.context(my-cool-context) {\n\t\tSugar.look-and-feel(padding-vertical); // => 0.6em\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_context-setup.scss",
                "extension": "scss",
                "relPath": "src/scss/core/context/mixin/_context-setup.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.context.mixin.context": {
                "name": "context",
                "type": "mixin",
                "description": "Set a context to be used inside the mixin",
                "namespace": "@coffeekraken.sugar.scss.core.context.mixin",
                "example": [
                    {
                        "language": "scss",
                        "code": "// register a context\n@include Sugar.context-setup(my-cool-context, (\n\t\tlook-and-feel : (\n\t\t\tpadding-vertical : (\n\t\t\t\tdefault : 0.6em\n\t\t\t)\n\t\t)\n));\n\n// registered context\n\\@include Sugar.context(my-cool-context) {\n\t\t// your code here...\n}\n\n// inline context\n\\@include Sugar.context((\n\t\tlook-and-feel : (\n\t\t\tpadding-vertical : (\n\t\t\t\tdefault : .3em\n\t\t\t)\n\t\t)\n)) {\n\t\t// your code here...\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_context.scss",
                "extension": "scss",
                "relPath": "src/scss/core/context/mixin/_context.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.dev.testArgument": {
                "name": "test-argument",
                "type": "function",
                "description": "Test an argument passed to a function or a mixin to ensure his type, value, etc...\nIf the argument does not pass the test, an error will be thrown, unless the $check-only argument is true",
                "namespace": "@coffeekraken.sugar.scss.core.dev",
                "example": [
                    {
                        "language": "scss",
                        "code": "@mixin my-cool-mixin($argument1, $argument2) {\n       $argument1 : Sugar.test-argument(my-cool-mixin, argument1, string, $argument1);\n       $argument2 : Sugar.test-argument(my-cool-mixin, argument2, (hello,world,12), $argument2);\n}\n\\@mixin my-cool-mixin(hello, world); // ok\n\\@mixin my-cool-mixin(hello, universe); // throw an error\n\\@mixin my-cool-mixin(12, world); // throw an error"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_test-argument.scss",
                "extension": "scss",
                "relPath": "src/scss/core/dev/function/_test-argument.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listAppend": {
                "name": "list-append",
                "type": "function",
                "description": "Append a value to the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-append(hello world, coco, comma); // hello, world, coco"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-append.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-append.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listFirst": {
                "name": "list-first",
                "type": "function",
                "description": "Return the first element of the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-first(('hello', 'world')); // => 'hello'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-first.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-first.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listImplode": {
                "name": "list-implode",
                "type": "function",
                "description": "Join all the list items using the passed glue and return a string",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-implode(('hello','world'), '-'); // hello-world"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-implode.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-implode.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listIndex": {
                "name": "list-index",
                "type": "function",
                "description": "Return the index of the wanted value in the passed list.",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-index(('hello','world'), 'world'); // => 2"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-index.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-index.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listJoin": {
                "name": "list-join",
                "type": "function",
                "description": "Return a string representing all the list items",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-join(('hello','world'), ('coco'), space); // ('hello' 'world' 'coco')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-join.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-join.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listLastNth": {
                "name": "list-last-nth",
                "type": "function",
                "description": "Return the last item of the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-last-nth(('hello', 'world')); // 'world'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-last-nth.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-last-nth.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listLength": {
                "name": "list-length",
                "type": "function",
                "description": "Return the number of item in the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-length(('hello','world')); // => 2"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-length.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-length.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listNth": {
                "name": "list-nth",
                "type": "function",
                "description": "Return the item of the list at the passed index",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-nth(('hello','world'), 2); // => 'world'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-nth.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-nth.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listPop": {
                "name": "list-pop",
                "type": "function",
                "description": "Remove the last item of the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-pop(('hello', 'world')); // ('hello')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-pop.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-pop.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listPrepend": {
                "name": "list-prepend",
                "type": "function",
                "description": "Prepend a value in the passed list",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-prepend(('hello','world'), 'coco'); // => ('coco','hello','world')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-prepend.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-prepend.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listRemoveNth": {
                "name": "list-remove-nth",
                "type": "function",
                "description": "Remove item from list using an index",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-remove-nth(('hello','world'), 1); // ('hello')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-remove-nth.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-remove-nth.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listSearch": {
                "name": "list-search",
                "type": "function",
                "description": "Search for the passed value in the passed list and return true if exist, false if not",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-search(('hello', 'world'), 'hello'); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-search.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-search.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.list.function.listSetNth": {
                "name": "list-set-nth",
                "type": "function",
                "description": "Set a value in the passed list at the passed index. The original value at the passed index will be replaced with the passed value",
                "namespace": "@coffeekraken.sugar.scss.core.list.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.list-set-nth(('hello','world'), 1, 'coco'); // => ('coco','world')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_list-set-nth.scss",
                "extension": "scss",
                "relPath": "src/scss/core/list/function/_list-set-nth.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.dashToMap": {
                "name": "dash-to-map",
                "type": "function",
                "description": "Transform a dash notation value into a map\nDash notation value is : -key1 value1 -key2 value2",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": true,
                        "code": "$dash : -hello world -coco universe\nSugar.dash-to-map($dash);\n// (\n// \thello : world,\n// \tcoco : universe\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_dash-to-map.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_dash-to-map.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapDeepValues": {
                "name": "map-deep-values",
                "type": "function",
                "description": "Get values of a map even if it is deep",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-deep-values((\n   'hello': 'world',\n   'coco': (\n      'plop': 'youhou'\n   )\n));\n// => ('world', 'youhou')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-deep-values.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-deep-values.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapExtend": {
                "name": "map-extend",
                "type": "function",
                "description": "Extend the passed map with the others passed map(s)",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-extend((\n 'hello': 'world'\n), (\n 'coco': 'plop'\n));\n// returned map:\n(\n 'hello': 'world',\n 'coco': 'plop'\n)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-extend.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-extend.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapFilterByNamespace": {
                "name": "map-filter-by-namespace",
                "type": "function",
                "description": "Return all the map values that have a key that match the passed namespace",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-filter-by-namespace((\n 'hello.world': 'Hello',\n 'coco.world': 'Coco',\n 'hello.that': 'That is cool'\n), 'hello');\n// return that map:\n(\n  'hello.world': 'Hello',\n  'hello.that': 'That is cool'\n)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-filter-by-namespace.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-filter-by-namespace.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapFilter": {
                "name": "map-filter",
                "type": "function",
                "description": "Filter a map by key, value and the passed processor function",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-filter.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-filter.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapFlatten": {
                "name": "map-flatten",
                "type": "Function",
                "description": "This function take a map (that can be a deep one) and returns you a new map with all the\nproperties flatten using the passed \"separator\"",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "$map: (\n   something: (\n      cool: 'Hello world'\n   )\n)\nmap-flatten($map);\n(\n   something-cool: 'Hello world'\n)"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-flatten.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-flatten.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapGet": {
                "name": "map-get",
                "type": "function",
                "description": "Get a value in the passed map using the passed key",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-get((\n hello: 'world'\n), hello); // => 'world'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-get.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-get.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapHasKey": {
                "name": "map-has-key",
                "type": "function",
                "description": "Check if the passed map has the passed key. Return true if has, false if not",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-has-key((\n   'hello': 'world',\n   'coco': 'plop'\n), 'hello'); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-has-key.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-has-key.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapKeys": {
                "name": "map-keys",
                "type": "function",
                "description": "Return a comma separated list of the map keys",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-keys((\n 'hello': 'world',\n 'coco': 'plop'\n)); // => ('hello','coco')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-keys.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-keys.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapMerge": {
                "name": "map-merge",
                "type": "function",
                "description": "Merge the first passed map with the second passed one and return the result",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-merge((\n hello: 'world'\n), (\n coco: 'plop'\n));\n// returned map:\n(\n hello: 'world',\n coco: 'plop'\n)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-merge.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-merge.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapRemove": {
                "name": "map-remove",
                "type": "function",
                "description": "Remove one or multiple keys from the passed map",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.map-remove((\n hello: 'world',\n coco: 'plop'\n), coco);\n// returned map:\n(\n hello: 'world'\n)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-remove.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-remove.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapSet": {
                "name": "map-set",
                "type": "function",
                "description": "Set a map property with the passed value",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "$my-map : Sugar.map-set($my-map, 'coco', 'Something cool');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-set.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-set.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.map.function.mapToCssVariables": {
                "name": "map-to-css-variables",
                "type": "Mixin",
                "description": "THis mixin simply take a single level map and convert it to\ncss variables declarations like ```--my-cool-variable: 10px```",
                "namespace": "@coffeekraken.sugar.scss.core.map.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "$map: (\n  something-cool: 10px\n);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_map-to-css-variables.scss",
                "extension": "scss",
                "relPath": "src/scss/core/map/function/_map-to-css-variables.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathAbs": {
                "name": "math-abs",
                "type": "function",
                "description": "Return the absolute version of the passed number",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-abs(-10); // => 10"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-abs.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-abs.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathAcos": {
                "name": "math-acos",
                "type": "function",
                "description": "Calculate the cosinus inverse of the passed angle",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-acos(1, deg); // 0.0559529097deg"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-acos.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-acos.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathAsin": {
                "name": "math-asin",
                "type": "function",
                "description": "Calculate the sinus inverse",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-asin(1, rad); // => 1.5698197643rad"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-asin.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-asin.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathAtan": {
                "name": "math-atan",
                "type": "function",
                "description": "Calculate the tangent inverse of the passed angle",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-atan(10, deg); // => 84.2988568542deg"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-atan.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-atan.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathCeil": {
                "name": "math-ceil",
                "type": "function",
                "description": "Rounds $number up to the next highest whole number",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-ceil(4.2); // => 5"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-ceil.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-ceil.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathConvertAngle": {
                "name": "math-convert-angle",
                "type": "function",
                "description": "Convert the passed angle into another unit like rad, deg, grad or turn",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-convert-angle()"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-convert-angle.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-convert-angle.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathCos": {
                "name": "math-cos",
                "type": "function",
                "description": "Calculate the cosinus of the passed angle",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-cos(10); // => 6.6645643378"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-cos.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-cos.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathDeg": {
                "name": "math-deg",
                "type": "function",
                "description": "Convert the passed unitless angle to degree",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-deg(10); // => 572.9577951308deg"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-deg.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-deg.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathEven": {
                "name": "math-even",
                "type": "function",
                "description": "Convert the passed value to the closest even value",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-even(9); // => 10"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-even.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-even.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathFact": {
                "name": "math-fact",
                "type": "function",
                "description": "Returns the factorial of desired number",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-fact(5); // => 120"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-fact.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-fact.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathGrad": {
                "name": "math-grad",
                "type": "function",
                "description": "Convert the passed unitless angle to gradian",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-grad(10); // => 636.6197723675grad"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-grad.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-grad.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathOdd": {
                "name": "math-odd",
                "type": "function",
                "description": "Convert the passed value to the closest odd value",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-odd(10); // => 9"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-odd.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-odd.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathPercentage": {
                "name": "math-percentage",
                "type": "function",
                "description": "Converts a unitless $number (usually a decimal between 0 and 1) to a percentage.",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": true,
                        "code": "Sugar.math-percentage(0.2); // => 20%"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-percentage.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-percentage.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathPow": {
                "name": "math-pow",
                "type": "function",
                "description": "Return the calculated power of the passed base using the passed exponent",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math.pow(7, 3); // => 343"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-pow.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-pow.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathRad": {
                "name": "math-rad",
                "type": "function",
                "description": "Convert the passed unitless angle to radian",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-rad(10); // => 10rad"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-rad.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-rad.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathRandom": {
                "name": "math-random",
                "type": "function",
                "description": "If $limit is null, returns a random decimal number between 0 and 1.",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-random(); // => 0.2821251858"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-random.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-random.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.renderRoundEven": {
                "name": "render-round-even",
                "type": "function",
                "description": "Return the passed values in the same unit but that has been even rounded on the corresponding px value\nThis ensure that your passed value will be a round px value for final rander in the viewport",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// if settings.typography.font-size == 16px\nSugar.render-round-even(5.2rem);\n// 1. transform to px values : 5.2\n16px = 83.2px\n// 2. round even the px value : 84px\n// 3. transform to passed unit value : 84px / 16px = 5.25rem"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-render-round-even.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-render-round-even.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.renderRoundOdd": {
                "name": "render-round-odd",
                "type": "function",
                "description": "Return the passed values in the same unit but that has been odd rounded on the corresponding px value\nThis ensure that your passed value will be a round px value for final rander in the viewport",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// if settings.typography.font-size == 16px\nSugar.render-round-odd(5.2rem);\n// 1. transform to px values : 5.2\n16px = 83.2px\n// 2. round odd the px value : 83px\n// 3. transform to passed unit value : 84px / 16px = 5.1875rem"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-render-round-odd.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-render-round-odd.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.renderRound": {
                "name": "render-round",
                "type": "function",
                "description": "Return the passed values in the same unit but that has been rounded on the corresponding px value\nThis ensure that your passed value will be a round px value for final rander in the viewport",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// if settings.typography.font-size == 16px\nSugar.render-round(5.2rem);\n// 1. transform to px values : 5.2\n16px = 83.2px\n// 2. round even the px value : 83px\n// 3. transform to passed unit value : 84px / 16px = 5.1875rem"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-render-round.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-render-round.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathRound": {
                "name": "math-round",
                "type": "function",
                "description": "Rounds $number to the nearest whole number.",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-round(4.2); // => 4"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-round.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-round.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathSin": {
                "name": "math-sin",
                "type": "function",
                "description": "Calculate the sinus of the passed angle",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-sin(10); // => 2.761090926"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-sin.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-sin.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathSqrt": {
                "name": "math-sqrt",
                "type": "function",
                "description": "Return the square root of the passed number",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-sqrt(2); // => 1.41421356237"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-sqrt.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-sqrt.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathTan": {
                "name": "math-tan",
                "type": "function",
                "description": "Calculate the tangent of the passed angle",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-tan(10); // => 0.4142942863"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-tan.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-tan.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.math.function.mathTurn": {
                "name": "math-turn",
                "type": "function",
                "description": "Convert the passed unitless angle to turn",
                "namespace": "@coffeekraken.sugar.scss.core.math.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.math-turn(10); // => 1.5915494309turn"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_math-turn.scss",
                "extension": "scss",
                "relPath": "src/scss/core/math/function/_math-turn.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.setting.function.settingVar": {
                "name": "setting-var",
                "type": "function",
                "description": "Get a settings from the global settings stack and return it in var(...) format",
                "namespace": "@coffeekraken.sugar.scss.core.setting.function",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-element {\n   color: Sugar.setting-var('typography.font-size');\n}\n// etc..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_setting-var.scss",
                "extension": "scss",
                "relPath": "src/scss/core/setting/function/_setting-var.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.setting.function.setting": {
                "name": "setting",
                "type": "function",
                "description": "Get a settings from the global settings stack",
                "namespace": "@coffeekraken.sugar.scss.core.setting.function",
                "example": [
                    {
                        "language": true,
                        "code": "$font-size : Sugar.setting('typography.font-size');\n// etc..."
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_setting.scss",
                "extension": "scss",
                "relPath": "src/scss/core/setting/function/_setting.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.size.function.interpolate": {
                "name": "interpolate",
                "type": "function",
                "description": "Return the specified or calculated value of the given stack and size\ndepending on the settings.sizes ratios stack",
                "namespace": "@coffeekraken.sugar.scss.core.size.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "// settings.sizes\n@include Sugar.setup((\n\t\tsizes : (\n\t\t\tsmall : 0.5,\n\t\t\tdefault : 1, // default is ALWAYS 1\n\t\t\tbig : 1.5\n\t\t)\n));\n\n$myStack : (\n\t\tdefault : 3rem,\n\t\tbig : 6rem\n)\n\nSugar.interpolate($myStack, big) // 6rem cause specified in the $myStack value\nSugar.interpolate($myStack, small) // 1.5rem => calculated like : 3rem\n0.5 = 1.5rem"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_interpolate.scss",
                "extension": "scss",
                "relPath": "src/scss/core/size/function/_interpolate.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.space.function.space": {
                "name": "space",
                "type": "function",
                "description": "Return a value interpolated from the settings.spaces stack",
                "namespace": "@coffeekraken.sugar.scss.core.space.function",
                "example": [
                    {
                        "language": "scss",
                        "code": ".my-cool-section {\n\t\tpadding : Sugar.space(big);\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_space.scss",
                "extension": "scss",
                "relPath": "src/scss/core/space/function/_space.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.parseProperties": {
                "name": "parse-properties",
                "type": "function",
                "description": "Parse a given string/list properties and return the Map corresponding to the Map description",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.parse-properties(10px hello -delay 20s, (\n \tmyNumber : Number,\n \tmyOtherNumber : Number,\n \tmyString : String,\n \tmyCoolVar : String,\n \tdelay : second\n));\n// => (\n//  \tmyNumber : 10px,\n// \tmyString : hello,\n// \tdelay : 20s\n// )"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_parse-properties.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_parse-properties.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.replaceTokens": {
                "name": "replace-tokens",
                "type": "function",
                "description": "Search and replace tokens like colors #primary in a passed string, list or map\nSupported tokens types :\n1. Colors : #{colorName}",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.replace-tokens(12px #primary hello #secondary); // > 12px #ddd hello #fff;"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_replace-tokens.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_replace-tokens.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strIndex": {
                "name": "str-index",
                "type": "function",
                "description": "Returns the first index of $substring in $string, or null if $string doesn’t contain $substring.",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-index('Hello world', 'world'); // => 7"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-index.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-index.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strIsUrl": {
                "name": "str-is-url",
                "type": "function",
                "description": "Check if a string is a url or not",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-is-url('Hello world') // false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-is-url.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-is-url.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strLength": {
                "name": "str-length",
                "type": "function",
                "description": "Return the number of characters in the passed string",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-length('hello'); // => 4"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-length.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-length.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strReplace": {
                "name": "str-replace",
                "type": "function",
                "description": "Replace the passed string with another one in a specific string",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-replace('Hello world', 'world', 'coco'); // 'Hello coco'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-replace.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-replace.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strSlice": {
                "name": "str-slice",
                "type": "function",
                "description": "Returns the slice of $string starting at index $start-at and ending at index $end-at (both inclusive).",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-slice.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-slice.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strSplit": {
                "name": "str-split",
                "type": "function",
                "description": "Split a string using a delimiter",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-split('hello.world', '.'); // ('hello', 'world')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-split.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-split.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strTrim": {
                "name": "str-trim",
                "type": "function",
                "description": "trim the passed string",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-trim('Hello world   '); // 'Hello coco'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-trim.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-trim.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strUniqueId": {
                "name": "str-unique-id",
                "type": "function",
                "description": "Generate a unique id in string format",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-unique-id(); // => uabtrnzug"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-unique-id.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-unique-id.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strUnquote": {
                "name": "str-unquote",
                "type": "function",
                "description": "Return an unquoted version of the passed string",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-unquote('hello world'); // => hello world"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-unquote.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-unquote.scss",
                "children": {}
            },
            "@coffeekraken.sugar.scss.core.string.function.strUrlExt": {
                "name": "str-url-ext",
                "type": "function",
                "description": "Check if a string is a url or not",
                "namespace": "@coffeekraken.sugar.scss.core.string.function",
                "example": [
                    {
                        "language": "scss",
                        "code": "Sugar.str-is-url('Hello world') // false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel.com"
                },
                "filename": "_str-url-ext.scss",
                "extension": "scss",
                "relPath": "src/scss/core/string/function/_str-url-ext.scss",
                "children": {}
            }
        }
    }
}
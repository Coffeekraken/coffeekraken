{
    "map": {},
    "generated": {
        "extends": [
            "@coffeekraken/cli",
            "@coffeekraken/coffeekraken-io",
            "@coffeekraken/s-activate-feature",
            "@coffeekraken/s-bench",
            "@coffeekraken/s-builder",
            "@coffeekraken/s-class",
            "@coffeekraken/s-clipboard-copy-component",
            "@coffeekraken/s-code-example-component",
            "@coffeekraken/s-color-picker-component",
            "@coffeekraken/s-color",
            "@coffeekraken/s-component-utils",
            "@coffeekraken/s-conductor",
            "@coffeekraken/s-config-adapter",
            "@coffeekraken/s-config-folder-adapter",
            "@coffeekraken/s-config-inline-adapter",
            "@coffeekraken/s-config",
            "@coffeekraken/s-css-animation",
            "@coffeekraken/s-dashboard",
            "@coffeekraken/s-data-file-generic",
            "@coffeekraken/s-data-file-js",
            "@coffeekraken/s-data-file-php",
            "@coffeekraken/s-date-picker-component",
            "@coffeekraken/s-descriptor",
            "@coffeekraken/s-docblock",
            "@coffeekraken/s-docmap",
            "@coffeekraken/s-duration",
            "@coffeekraken/s-env",
            "@coffeekraken/s-event-emitter",
            "@coffeekraken/s-favicon-builder",
            "@coffeekraken/s-feature",
            "@coffeekraken/s-file",
            "@coffeekraken/s-filtrable-input-component",
            "@coffeekraken/s-floating-feature",
            "@coffeekraken/s-form-validate-feature",
            "@coffeekraken/s-frontend-checker",
            "@coffeekraken/s-frontend-server",
            "@coffeekraken/s-frontspec",
            "@coffeekraken/s-frontstack",
            "@coffeekraken/s-glob",
            "@coffeekraken/s-handlebars",
            "@coffeekraken/s-images-builder",
            "@coffeekraken/s-interface",
            "@coffeekraken/s-jest-tester",
            "@coffeekraken/s-lit-component",
            "@coffeekraken/s-log",
            "@coffeekraken/s-markdown-builder",
            "@coffeekraken/s-monorepo",
            "@coffeekraken/s-notification",
            "@coffeekraken/s-package",
            "@coffeekraken/s-page-transition-feature",
            "@coffeekraken/s-panel-component",
            "@coffeekraken/s-parallax-feature",
            "@coffeekraken/s-postcss-builder",
            "@coffeekraken/s-postcss-sugar-plugin",
            "@coffeekraken/s-process",
            "@coffeekraken/s-promise",
            "@coffeekraken/s-range-component",
            "@coffeekraken/s-refocus-feature",
            "@coffeekraken/s-request",
            "@coffeekraken/s-scroll-component",
            "@coffeekraken/s-sitemap-builder",
            "@coffeekraken/s-slider-component",
            "@coffeekraken/s-static-builder",
            "@coffeekraken/s-stdio",
            "@coffeekraken/s-sugar-config",
            "@coffeekraken/s-sugar-element",
            "@coffeekraken/s-sugar-feature",
            "@coffeekraken/s-sugar-json",
            "@coffeekraken/s-theme",
            "@coffeekraken/s-timer",
            "@coffeekraken/s-type",
            "@coffeekraken/s-typescript-builder",
            "@coffeekraken/s-url",
            "@coffeekraken/s-view-renderer-engine-blade",
            "@coffeekraken/s-view-renderer-engine-lit",
            "@coffeekraken/s-view-renderer-engine-twig",
            "@coffeekraken/s-view-renderer",
            "@coffeekraken/s-vite-postcss-plugin",
            "@coffeekraken/s-vite-sugar-plugin",
            "@coffeekraken/s-vite"
        ],
        "map": {
            "@coffeekraken.sugar.doc.README": {
                "id": "@coffeekraken.sugar.doc.README",
                "name": "README",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ]
                },
                "menu": {
                    "tree": [
                        "Documentation"
                    ],
                    "slug": "/doc/readme"
                },
                "platform": [
                    {
                        "name": "md",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.doc",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "README.md",
                "extension": "md",
                "relPath": "README.md",
                "children": {}
            },
            "@coffeekraken.sugar.node.index": {
                "id": "@coffeekraken.sugar.node.index",
                "name": "index",
                "description": "This file is the \"initialisation\" one for the sugar node toolkit.\nIt's optional to include it but if you do, you will get these features \"for free\":\n- Logging: Get the powerfull options of the SLog class without any change in your codebase",
                "namespace": "@coffeekraken.sugar.node",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "index.ts",
                "extension": "ts",
                "relPath": "src/node/index.ts",
                "children": {}
            },
            "@coffeekraken.sugar.cli.interface.SRunCommandParamsInterface": {
                "id": "@coffeekraken.sugar.cli.interface.SRunCommandParamsInterface",
                "name": "SRunCommandParamsInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe parameters of the `sugar command.run` command",
                "namespace": "@coffeekraken.sugar.cli.interface",
                "status": "beta",
                "interface": {
                    "name": "SRunCommandParamsInterface",
                    "description": "",
                    "definition": {
                        "command": {
                            "type": "String",
                            "description": "Specify the command you want to execute",
                            "alias": "c"
                        },
                        "directory": {
                            "type": "String",
                            "description": "Specify where you want to execute this command. Can be a glob to execute command into multiple directories at once",
                            "alias": "d"
                        },
                        "verbose": {
                            "type": "Boolean",
                            "description": "Specify if you want each process to log or not",
                            "default": false,
                            "alias": "v"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SRunCommandParamsInterface.ts",
                "extension": "ts",
                "relPath": "src/cli/interface/SRunCommandParamsInterface.ts",
                "children": {}
            },
            "@coffeekraken.sugar.cli.interface.SSugarToolkitParamsInterface": {
                "id": "@coffeekraken.sugar.cli.interface.SSugarToolkitParamsInterface",
                "name": "SSugarToolkitParamsInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe parameters of the `sugar toolkit.add` command",
                "namespace": "@coffeekraken.sugar.cli.interface",
                "status": "beta",
                "interface": {
                    "name": "SSugarToolkitParamsInterface",
                    "description": "",
                    "definition": {}
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SSugarToolkitParamsInterface.ts",
                "extension": "ts",
                "relPath": "src/cli/interface/SSugarToolkitParamsInterface.ts",
                "children": {}
            },
            "@coffeekraken.sugar.drawer-webcomponent.DrawerWebcomponent": {
                "id": "@coffeekraken.sugar.drawer-webcomponent.DrawerWebcomponent",
                "name": "DrawerWebcomponent",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "Simple webcomponent to create fully customizable drawers.\nFeatures:\n1. Fully customizable\n2. Support all sides (top, right, bottom and left)\n3. Support 3 animation types (push, slide and reveal)",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "example": [
                    {
                        "language": "scss",
                        "code": "@use 'node_modules/@coffeekraken/drawer-webcomponent/index' as drawer-webcomponent;\n\\@include drawer-webcomponent.classes(\n\t$name : menu,\n\t$side : right\n);\n\\@include drawer-webcomponent.element(drawer) {\n\tbackground-color: black;\n\tpadding: 20px;\n}\n\\@include drawer-webcomponent.element(overlay) {\n\tbackground-color: rgba(0,0,0,.5);\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.open": {
                "id": "@coffeekraken.sugar.drawer-webcomponent.open",
                "name": "open",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Open the drawer",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.close": {
                "id": "@coffeekraken.sugar.drawer-webcomponent.close",
                "name": "close",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Close the drawer",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts"
            },
            "@coffeekraken.sugar.drawer-webcomponent.isOpen": {
                "id": "@coffeekraken.sugar.drawer-webcomponent.isOpen",
                "name": "isOpen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Check if is opened",
                "namespace": "@coffeekraken.sugar.drawer-webcomponent",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "testing.ts",
                "extension": "ts",
                "relPath": "src/data/tests/testing.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.copy": {
                "id": "@coffeekraken.sugar.js.clipboard.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to copy to the clipboard the passed text",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __copy from '@coffeekraken/sugar/js/clipboard/copy';\n__copy('Hello world');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.read": {
                "id": "@coffeekraken.sugar.js.clipboard.read",
                "name": "read",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the content of the clipboard",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __read from '@coffeekraken/sugar/js/clipboard/read';\nawait __read();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.emit": {
                "id": "@coffeekraken.sugar.js.event.emit",
                "name": "emit",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function can ben used to emit an event globally.\nYou can subscribe to these events using the \"sugar.js.event.subscribe\" function",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emit from '@coffeekraken/sugar/js/event/emit';\nemit('something', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emit.ts",
                "extension": "ts",
                "relPath": "src/js/event/emit.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.on": {
                "id": "@coffeekraken.sugar.js.event.on",
                "name": "on",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to subscribe to global events triggered by the \"sugar.js.event.dispatch\" function\nIt use under the hood an SPromise instance",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import on from '@coffeekraken/sugar/js/event/on';\non('something', () => {\n   // do something\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "on.ts",
                "extension": "ts",
                "relPath": "src/js/event/on.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.event.SEvent": {
                "id": "@coffeekraken.sugar.js.event.SEvent",
                "name": "SEvent",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Proxy class to create custom events that can be dispatched\nthrough the standard dispatch method on any HTMLElement",
                "namespace": "@coffeekraken.sugar.js.event",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "let myEvent = new SEvent('myCoolEvent', {\n\t\tcancelable : true,\n\t\tbubbles : false,\n\t\tdetail : {\n\t\t\t// some datas to send with the event\n\t\t}\n});\n// dispatch the event from an HTMLElement\nmyHTMLElement.dispatch(myEvent);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SEvent.ts",
                "extension": "ts",
                "relPath": "src/js/event/SEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLazySrcAttribute": {
                "id": "@coffeekraken.sugar.js.feature.imagesLazySrcAttribute",
                "name": "imagesLazySrcAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `img` elements.\nThe video `src` attribute will be populated when the `img` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLazySrcAttribute from '@coffeekraken/sugar/js/feature/imagesLazySrcAttribute';\nimagesLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<img lazy-src=\"my-cool-image.jpg\" />"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imagesLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLoadedAttribute": {
                "id": "@coffeekraken.sugar.js.feature.imagesLoadedAttribute",
                "name": "imagesLoadedAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add on every images the attribute \"loaded\" when it has been fully loaded. This is useful\nfor styling purposes and for others thinks as well.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLoadedAttribute from '@coffeekraken/sugar/js/feature/imagesLoadedAttribute';\nimagesLoadedAttribute();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imagesLoadedAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLoadedAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.handleInputAttributes": {
                "id": "@coffeekraken.sugar.js.feature.handleInputAttributes",
                "name": "handleInputAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add some attributes on inputs, textarea and select to help with styling purposes and more.\nHere's the attributes added:\n- `has-value`: When the input has a value in it\n- `empty`: When the input is has no value in it\n- `dirty`: When the input has been touched",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inputAdditionalAttributes from '@coffeekraken/sugar/js/feature/inputAdditionalAttributes';\ninputAdditionalAttributes();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inputAdditionalAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/feature/inputAdditionalAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.linksStateAttributes": {
                "id": "@coffeekraken.sugar.js.feature.linksStateAttributes",
                "name": "linksStateAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply add some special attributes on links like \"actual\" when the link correspond to the actual visited page url,\n\"actual-child\" when the link point to a child page, and maybe some more depending on needs and \"actual-parent\" on the actual link parent node",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linksStateAttributes from '@coffeekraken/sugar/js/feature/linksStateAttributes';\nlinksStateAttributes();"
                    },
                    {
                        "language": "html",
                        "code": "<!-- page url: /something -->\n<a href=\"/something\" actual>Hello</a>\n<a href=\"/something/cool\" actual-child>World</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linksStateAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/feature/linksStateAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScroll": {
                "id": "@coffeekraken.sugar.js.feature.smoothScroll",
                "name": "smoothScroll",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature enable some underhood features like the automatic scroll on anchor links as well as\nthe smooth scroll on page load.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScroll from '@coffeekraken/sugar/js/smoothScroll'\nsmoothScroll()"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScroll.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScroll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnAnchorLinks": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnAnchorLinks",
                "name": "smoothScrollOnAnchorLinks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Listen for links contains an hash to init them for scroll to target on click",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnAnchorLinks from '@coffeekraken/sugar/js/smoothScrollOnAnchorLinks'\nsmoothScrollOnAnchorLinks();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnAnchorLinks.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnAnchorLinks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnHashChange": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnHashChange",
                "name": "smoothScrollOnHashChange",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on hash changes",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnHashChange from '@coffeekraken/sugar/js/smoothScrollOnHashChange'\nsmoothScrollOnHashChange();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnHashChange.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnHashChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnPageLoad": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnPageLoad",
                "name": "smoothScrollOnPageLoad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on page load if an hash exists in the url",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import smoothScrollOnPageLoad from '@coffeekraken/sugar/js/smoothScrollOnPageLoad'\nsmoothScrollOnPageLoad();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnPageLoad.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnPageLoad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.videoLazySrcAttribute": {
                "id": "@coffeekraken.sugar.js.feature.videoLazySrcAttribute",
                "name": "videoLazySrcAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `video` elements.\nThe video `src` attribute will be populated when the `video` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import videoLazySrcAttribute from '@coffeekraken/sugar/js/feature/videoLazySrcAttribute';\nvideoLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<video lazy-src=\"my-cool-video.mp4\"></video>"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "videosLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/videosLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.filter.SGooeySvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SGooeySvgFilter",
                "name": "SGooeySvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent a gooey SVG filter that can be applied on any HTMLElement.\nHere's the values that you can control on it:\n- blur: The amout of blur you want\n- contrast: The amout of contrast you want\n- shrink: The amount of shrink you want\n- amount: The overall amount of effect you want",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SGooeySvgFilter();\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGooeySvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SGooeySvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "a90f73c83b45182b9c76cf0825f7733d81f803d608ad8ce68d9e162df3063f2d",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "blur": {
                        "id": "0d008e859a70a22b17be44fb38bed951dd5e596af2278d116ed5e2be30846eb2",
                        "name": "blur",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "description": "Get/Set the blur amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "contrast": {
                        "id": "80a5d16c651bc68586610e848dec1c352d5196cd14ae2c471b56d145ed19eadf",
                        "name": "contrast",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "description": "Get the contrast amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "shrink": {
                        "id": "fb928f5cadd62df1e0a0368d952412af22fdccdf89689afc85b8216410659f20",
                        "name": "shrink",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "description": "Get the shrink amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "amount": {
                        "id": "da0d9383b7c5913604d6a26ef43618cf0360a6703d12097ff06a2479c7d7bd1b",
                        "name": "amount",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "description": "Set the overall amount of effect to produce",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SGradientSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SGradientSvgFilter",
                "name": "SGradientSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SGradientSvgFilter();\nfilter.linear(['red','blue','green']);\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGradientSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SGradientSvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "bde39a062f8f6f8f587d2fa1efddd894e1baee24b66dc5f6bc45e94887d33d06",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "linear": {
                        "id": "63df70cf78ea753612f39c4194d91751ca7685a5996024bf8b4440c8d470bdf8",
                        "name": "linear",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Linear gradient",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "radial": {
                        "id": "fdfdb1649d2822fc01d64de4ef9f4797b59717dc46006d92b7eefe23866c2bc3",
                        "name": "radial",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Radial gradient",
                        "example": [
                            {
                                "language": "js",
                                "code": "myFilter.radial(['#ff0000', '#00ffff], {\n   width: 300,\n   height: 300\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "applyto": {
                        "id": "456910ceb469d20527899df61566fdd8dbb677efe6835065c4d59fb6472fb823",
                        "name": "applyTo",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unapplyfrom": {
                        "id": "827a5ae30e282d21e2512db7a80f6b08171891bd66937b3e6a7097a4228388c3",
                        "name": "unapplyFrom",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SMotionblurSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SMotionblurSvgFilter",
                "name": "SMotionblurSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent a motion blur svg filter that will blur your\nelement depending on his movements, direction and speed",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SMotionblurSvgFilter();\nfilter.applyTo(myCoolHTMLElement);\n// now when your element will move, it will be blured accordingly"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SMotionblurSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SMotionblurSvgFilter.ts",
                "children": {
                    "amount": {
                        "id": "c1b472d89210eb4478b79ca26cf81e2c9c36bd835bcb497472ee6824aab12cf1",
                        "name": "amount",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "default": "0.5",
                        "description": "Store the amount of motion blur to apply",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "constructor": {
                        "id": "47963561d60c468541e3726665c0e8ab0759b7b26f53c6679f678fd46d72c2a7",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "applyto": {
                        "id": "b297d47ff7fdf6d6dcbde2652b04bee6b70617d57bea161d06e0ee5e145b8012",
                        "name": "applyTo",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unapplyfrom": {
                        "id": "827a5ae30e282d21e2512db7a80f6b08171891bd66937b3e6a7097a4228388c3",
                        "name": "unapplyFrom",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "destroy": {
                        "id": "32d651541de4b05ecf376ec4060b8db764a3bba3c1b866c345538c73a14b6f6b",
                        "name": "destroy",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Destroy the filter",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SOutlineSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SOutlineSvgFilter",
                "name": "SOutlineSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent an outline filter that can be applied on any HTMLElement.",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "const filter = new SOutlineSvgFilter();\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SOutlineSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SOutlineSvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "d100d105b5c71371fb0307992d19a0f43e52c4316db3feb60a316416c7d51880",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "radius": {
                        "id": "06ee447bf68df948c08015f7a9e7bb8946e94d0c867f90cfeaa90e44eba349dd",
                        "name": "radius",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ]
                        },
                        "description": "Get/Set the radius to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.string.decodeHtmlEntities": {
                "id": "@coffeekraken.sugar.js.string.decodeHtmlEntities",
                "name": "decodeHtmlEntities",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Decode an htmlentities encoded string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import decodeHtmlEntities from '@coffeekraken/sugar/js/string/decodeHtmlEntities';\ndecodeHtmlEntities('&#111;&#108;&#105;&#118;&#105;&#101;&#114;&#046;&#098;&#111;&#115;&#115;&#101;&#108;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;');\n// return => olivier.bossel@gmail.com"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "decodeHtmlEntities.ts",
                "extension": "ts",
                "relPath": "src/js/html/decodeHtmlEntities.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.expandPleasantCssClassnamesLive": {
                "id": "@coffeekraken.sugar.js.html.expandPleasantCssClassnamesLive",
                "name": "expandPleasantCssClassnamesLive",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...\nThis function do this live when detecting a new node in the page, etc...\nThis function does not transform content of \"template\" and \"code\" tags.",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassnamesLive from '@coffeekraken/sugar/js/html/expandPleasantCssClassnamesLive';\nexpandPleasantCssClassnamesLive();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnamesLive.ts",
                "extension": "ts",
                "relPath": "src/js/html/expandPleasantCssClassnamesLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.getHtmlClassFromTagName": {
                "id": "@coffeekraken.sugar.js.html.getHtmlClassFromTagName",
                "name": "getHtmlClassFromTagName",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply return the HTML{name}Element class depending on the passed\ntag name like \"p\", \"input\", \"textarea\", etc...",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getHtmlClassFromTagName from '@coffeekraken/sugar/js/html/getHtmlClassFromTagName';\ngetHtmlClassFromTagName('a'); // => HTMLAnchorElement"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getHtmlClassFromTagName.ts",
                "extension": "ts",
                "relPath": "src/js/html/getHtmlClassFromTagName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.getHtmlhtmlClassFromHtmlClass": {
                "id": "@coffeekraken.sugar.js.html.getHtmlhtmlClassFromHtmlClass",
                "name": "getHtmlhtmlClassFromHtmlClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply return the tagname depending on the passed HTML class\nlike HTMLAnchorElement, HTMLLinkElement, etc...",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getHtmlhtmlClassFromHtmlClass from '@coffeekraken/sugar/js/html/getHtmlhtmlClassFromHtmlClass';\ngetHtmlhtmlClassFromHtmlClass(HTMLAnchorElement); // => 'a'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTagNameFromHtmlClass.ts",
                "extension": "ts",
                "relPath": "src/js/html/getTagNameFromHtmlClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.HtmlTagToHtmlClassMap": {
                "id": "@coffeekraken.sugar.js.html.HtmlTagToHtmlClassMap",
                "name": "HtmlTagToHtmlClassMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This export an object mapping the HTML tag name to his corresponding HTML class (object not css class)",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import HtmlTagToHtmlClassMap from '@coffeekraken/sugar/js/html/HtmlTagToHtmlClassMap';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "htmlTagToHtmlClassMap.ts",
                "extension": "ts",
                "relPath": "src/js/html/htmlTagToHtmlClassMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.strToHtml": {
                "id": "@coffeekraken.sugar.js.html.strToHtml",
                "name": "strToHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the html (dom) version of a string",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import strToHtml from '@coffeekraken/sugar/js/html/strToHtml'\nconst myString = '<p>Hello World</p>'\nstrToHtml(myString) // <p>Hello World</p>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "strToHtml.ts",
                "extension": "ts",
                "relPath": "src/js/html/strToHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.toString": {
                "id": "@coffeekraken.sugar.js.html.toString",
                "name": "toString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the string version of a dom node or the dom node and his children",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toString from '@coffeekraken/sugar/js/string/toString'\nconst myDomNode = document.querySelector('.my-dom-node')\ntoString(myDomNode, false) // <div class=\"my-dom-node\"></div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toString.ts",
                "extension": "ts",
                "relPath": "src/js/html/toString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isChrome": {
                "id": "@coffeekraken.sugar.js.is.isChrome",
                "name": "isChrome",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is chrome",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isChrome from '@coffeekraken/sugar/js/is/chrome'\nif (isChrome()) {\n  // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "chrome.ts",
                "extension": "ts",
                "relPath": "src/js/is/chrome.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEdge": {
                "id": "@coffeekraken.sugar.js.is.isEdge",
                "name": "isEdge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is edge",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEdge from '@coffeekraken/sugar/js/is/edge'\nif (isEdge()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "edge.ts",
                "extension": "ts",
                "relPath": "src/js/is/edge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isFirefox": {
                "id": "@coffeekraken.sugar.js.is.isFirefox",
                "name": "isFirefox",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is firefox",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFirefox from '@coffeekraken/sugar/js/is/firefox'\nif (isFirefox()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "firefox.ts",
                "extension": "ts",
                "relPath": "src/js/is/firefox.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isIe": {
                "id": "@coffeekraken.sugar.js.is.isIe",
                "name": "isIe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is ie (internet explorer)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isIe from '@coffeekraken/sugar/js/is/ie'\nif (isIe()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ie.ts",
                "extension": "ts",
                "relPath": "src/js/is/ie.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMobile": {
                "id": "@coffeekraken.sugar.js.is.isMobile",
                "name": "isMobile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a mobile device (phone or tablet)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMobile from 'coffeekraken-sugar/js/is/mobile'\nif (isMobile()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "mobile.ts",
                "extension": "ts",
                "relPath": "src/js/is/mobile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isOpera": {
                "id": "@coffeekraken.sugar.js.is.isOpera",
                "name": "isOpera",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is opera",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOpera from '@coffeekraken/sugar/js/is/opera'\nif (isOpera()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "opera.ts",
                "extension": "ts",
                "relPath": "src/js/is/opera.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isPhone": {
                "id": "@coffeekraken.sugar.js.is.isPhone",
                "name": "isPhone",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a phone device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPhone from '@coffeekraken/sugar/js/is/phone'\nif (isPhone()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "phone.ts",
                "extension": "ts",
                "relPath": "src/js/is/phone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSafari": {
                "id": "@coffeekraken.sugar.js.is.isSafari",
                "name": "isSafari",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is safari",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSafari from '@coffeekraken/sugar/js/is/safari'\nif (isSafari()) {\n  // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "safari.ts",
                "extension": "ts",
                "relPath": "src/js/is/safari.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSamsumgBrowser": {
                "id": "@coffeekraken.sugar.js.is.isSamsumgBrowser",
                "name": "isSamsumgBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is the samsung stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSamsumgBrowser from '@coffeekraken/sugar/js/is/samsungBrowser'\nif (isSamsumgBrowser()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "samsungBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/samsungBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isTablet": {
                "id": "@coffeekraken.sugar.js.is.isTablet",
                "name": "isTablet",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a tablet device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTablet from '@coffeekraken/sugar/js/is/tablet'\nif (isTablet()) {\n  // do something cool...\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "tablet.ts",
                "extension": "ts",
                "relPath": "src/js/is/tablet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isUcBrowser": {
                "id": "@coffeekraken.sugar.js.is.isUcBrowser",
                "name": "isUcBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is the UC stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isUcBrowser from '@coffeekraken/sugar/js/is/ucBrowser'\nif (isUcBrowser()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ucBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/ucBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.keyboard.hotkey": {
                "id": "@coffeekraken.sugar.js.keyboard.hotkey",
                "name": "hotkey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Simple function to add a hotkey like \"ctrl+a\" and an handler function that will be called when the hotkey has been pressed\nThe following keys are supported:\n- shift, option, alt, ctrl, control, command\n- backspace, tab, clear, enter, return, esc, escape, space, up, down, left, right, home, end, pageup, pagedown, del, delete\n- from f1 to f19\n- all the letters keys\n\nYou can pass an option object to your hotkey function call.",
                "namespace": "@coffeekraken.sugar.js.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hotkey from '@coffeekraken/sugar/js/keyboard/hotkey'\nconst promise = hotkey('ctrl+a');\npromise.on('press', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/js/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.responsive.SMediaQuery": {
                "id": "@coffeekraken.sugar.js.responsive.SMediaQuery",
                "name": "SMediaQuery",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class expose some nice and easy methods to get the active media query defined in the config.media.queries configuration\nstack, as well as register to some events list \"match\" or \"unmatch\".",
                "namespace": "@coffeekraken.sugar.js.responsive",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import SMediaQuery from '@coffeekraken/sugar/js/responsive/SMediaQuery';\nconst mediaQuery = new SMediaQuery('mobile');\nmediaQuery.on('match', media => {\n     // do something\n});\nSMediaQuery.getActiveMedia(); // => mobile"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SMediaQuery.ts",
                "extension": "ts",
                "relPath": "src/js/responsive/SMediaQuery.ts",
                "children": {
                    "this._activemedia": {
                        "id": "23ab789004e0c173961c2aa490674a7686bf3eee0330c5dbf9f9cc8354ac3d3d",
                        "name": "this._activeMedia",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the active media name",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "startlistener": {
                        "id": "ad50fc16c73108fb8a4e0b58cd12369c980d54f9fad873df391eb3ff3767167e",
                        "name": "startListener",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Add the global listener based on the \"init-body-media-queries\" scss mixin",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "constructor": {
                        "id": "76c4901ce586f4c22fce1a43df75596833e3a093042170c682cf3d4346df80d6",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.storage.localStorage": {
                "id": "@coffeekraken.sugar.js.storage.localStorage",
                "name": "localStorage",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This localStorage replacement gived you the ability to store large amount of data in indexDB with a similar api that the localStorage one.\nThe only difference is that you can store more data that the localStorage, as well as store directly objects, arrays, etc...\nNote that this API is async due to the nature of indexDB.",
                "namespace": "@coffeekraken.sugar.js.storage",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __localStorage from '@coffeekraken/sugar/js/storage/localStorage';\nawait __localStorage.setItem('my-item', 'wefwef.wef.......');\nawait __localStorage.getItem('my-item');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "localStorage.ts",
                "extension": "ts",
                "relPath": "src/js/storage/localStorage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.token.replaceTokens": {
                "id": "@coffeekraken.sugar.js.token.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a string and replace some tokens using these functions:\n-",
                "namespace": "@coffeekraken.sugar.js.token",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/js/token/replaceTokens';\nreplaceTokens('Current module system is %moduleSystem');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/js/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.clipboard.copy": {
                "id": "@coffeekraken.sugar.node.clipboard.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to copy things into the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copy from '@coffeekraken/sugar/node/clipboard/copy';\ncopy('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.clipboard.read": {
                "id": "@coffeekraken.sugar.node.clipboard.read",
                "name": "read",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to read things from the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import read from '@coffeekraken/sugar/node/clipboard/read';\nimport copy from '@coffeekraken/sugar/node/clipboard/copy';\ncopy('Hello world');\nread(); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.coffeekraken.getCoffeekrakenMetas": {
                "id": "@coffeekraken.sugar.node.coffeekraken.getCoffeekrakenMetas",
                "name": "getCoffeekrakenMetas",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function will returns you the coffeekraken metas object containing things like:\n- version: The version of the coffeekraken stack used",
                "namespace": "@coffeekraken.sugar.node.coffeekraken",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getCoffeekrakenMetas from '@coffeekraken/sugar/node/coffeekraken/getCoffeekrakenMetas';\nawait __getCoffeekrakenMetas();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCoffeekrakenMetas.ts",
                "extension": "ts",
                "relPath": "src/node/coffeekraken/getCoffeekrakenMetas.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.command.commandExists": {
                "id": "@coffeekraken.sugar.node.command.commandExists",
                "name": "commandExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to check if a command exists on the system where the script is running",
                "namespace": "@coffeekraken.sugar.node.command",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import commandExists from '@coffeekraken/sugar/node/command/commandExists';\nawait commandExists('ls'); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commandExists.ts",
                "extension": "ts",
                "relPath": "src/node/command/commandExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.config.loadConfigFile": {
                "id": "@coffeekraken.sugar.node.config.loadConfigFile",
                "name": "loadConfigFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply load a config file (usually at your project root) and returns his content\nin object format.\nThis function support these file types:\n- `.js`: Simple javascript files\n- `.json`: Simple JSON files\n- `.yml`: Yaml files",
                "namespace": "@coffeekraken.sugar.node.config",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __loadConfigFile from '@coffeekraken/sugar/node/config/loadConfigFile';\nawait __loadConfigFile('vite.config.js`);\nawait __loadConfigFile(`tsconfig.json`);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "loadConfigFile.ts",
                "extension": "ts",
                "relPath": "src/node/config/loadConfigFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.dependencies.dependenciesHash": {
                "id": "@coffeekraken.sugar.node.dependencies.dependenciesHash",
                "name": "dependenciesHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input an object that follows the structure described in the example bellow.\nWith that, if will recursively (for files dependencies) load them, check if they have some dependencies,\nand create a hash depending on all of that.\nHere's the process steps:\n1. Check the files dependencies.\n2. If their's, load recursively these dependencies and start the process over them again\n3. Create a hash for the current dependency with using all non \"files\" dependencies as well as the file updated timestamp\n4. Make this process recursively until all the \"files\" have been processed\n5. Return the final hash for your dependency object",
                "namespace": "@coffeekraken.sugar.node.dependencies",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __dependenciesHash from '@coffeekraken/sugar/node/dependencies/dependenciesHash';\nawait __dependenciesHash({\n     files: [\n         'my-cool-file.js',\n         'my-other-file.jpg'\n     ],\n     data: {\n         something: 'cool',\n         another: 'cool thing'\n     }\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dependenciesHash.ts",
                "extension": "ts",
                "relPath": "src/node/dependencies/dependenciesHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.error.handleError": {
                "id": "@coffeekraken.sugar.node.error.handleError",
                "name": "handleError",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a thrown error and try to display it the best way possible.\nSimply add the \"uncaughtException\" and the \"unhandledRejection\" listeners on the process object,\npass this function as the handler one and that's it...",
                "namespace": "@coffeekraken.sugar.node.error",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import handleError from '@coffeekraken/sugar/node/error/handleError';\nprocess.on('uncaughtException', handleError);\nprocess.on('unhandledRejection', handleError);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "handleError.ts",
                "extension": "ts",
                "relPath": "src/node/error/handleError.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.esm.require": {
                "id": "@coffeekraken.sugar.node.esm.require",
                "name": "require",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an fully functional \"require\" function in\nan ESM context.",
                "namespace": "@coffeekraken.sugar.node.esm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import require from '@coffeekraken/sugar/node/esm/require';\nrequire('something');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "require.ts",
                "extension": "ts",
                "relPath": "src/node/esm/require.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.esm.resolvePackagePath": {
                "id": "@coffeekraken.sugar.node.esm.resolvePackagePath",
                "name": "resolvePackagePath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to resolve a passed package name or a folder directory to it's package.json file",
                "namespace": "@coffeekraken.sugar.node.esm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import resolvePackagePath from '@coffeekraken/sugar/node/esm/resolvePackagePath';\nresolvePackagePath('something');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resolvePackagePath.ts",
                "extension": "ts",
                "relPath": "src/node/esm/resolvePackagePath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.appendToFileSync": {
                "id": "@coffeekraken.sugar.node.fs.appendToFileSync",
                "name": "appendToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendToFileSync from '@coffeekraken/sugar/node/fs/appendToFileSync';\nappendToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/appendToFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.checkPathWithMultipleExtensions": {
                "id": "@coffeekraken.sugar.node.fs.checkPathWithMultipleExtensions",
                "name": "checkPathWithMultipleExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a path and some extensions to check if a file\nexists with one of these particular extensions.\nIf a file exists, the function return the path with the first extensions that matches",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import checkPathWithMultipleExtensions from '@coffeekraken/sugar/node/fs/checkPathWithMultipleExtensions';\ncheckPathWithMultipleExtensions('/my/cool/file.txt', ['txt','js','css']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "checkPathWithMultipleExtensions.ts",
                "extension": "ts",
                "relPath": "src/node/fs/checkPathWithMultipleExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copy": {
                "id": "@coffeekraken.sugar.node.fs.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copy from '@coffeekraken/node/fs/copy';\ncopy('my/cool/file.jpg', 'my/new/file.jpg').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copySync": {
                "id": "@coffeekraken.sugar.node.fs.copySync",
                "name": "copySync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import copySync from '@coffeekraken/node/fs/copySync';\ntry {\n   copySync('my/cool/file.jpg', 'my/new/file.jpg');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copySync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copySync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.dirname": {
                "id": "@coffeekraken.sugar.node.fs.dirname",
                "name": "dirname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the dirname the same as the __dirname cjs variable.\nThe only difference is that it's a function and you need to pass the \"import\" variable\nfrom the filename in which you use this...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dirname from '@coffeekraken/sugar/node/fs/dirname';\ndirname(import);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dirname.ts",
                "extension": "ts",
                "relPath": "src/node/fs/dirname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDir": {
                "id": "@coffeekraken.sugar.node.fs.emptyDir",
                "name": "emptyDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emptyDir from '@coffeekraken/node/fs/emptyDir';\nemptyDir('my/cool/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDirSync": {
                "id": "@coffeekraken.sugar.node.fs.emptyDirSync",
                "name": "emptyDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import emptyDirSync from '@coffeekraken/node/fs/emptyDirSync';\ntry {\n   emptyDirSync('my/cool/directory');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDir": {
                "id": "@coffeekraken.sugar.node.fs.ensureDir",
                "name": "ensureDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureDir from '@coffeekraken/node/fs/ensureDir';\nensureDir('my/cool/dir').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDirSync": {
                "id": "@coffeekraken.sugar.node.fs.ensureDirSync",
                "name": "ensureDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureDirSync from '@coffeekraken/node/fs/ensureDirSync';\ntry {\n   ensureDirSync('my/cool/dir');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFile": {
                "id": "@coffeekraken.sugar.node.fs.ensureFile",
                "name": "ensureFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, it will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureFile from '@coffeekraken/node/fs/ensureFile';\nensureFile('my/cool/file.jpg').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFileSync": {
                "id": "@coffeekraken.sugar.node.fs.ensureFileSync",
                "name": "ensureFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureFileSync from '@coffeekraken/node/fs/ensureFileSync';\ntry {\n   ensureFileSync('my/cool/file.jpg');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.exists": {
                "id": "@coffeekraken.sugar.node.fs.exists",
                "name": "exists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exists from '@coffeekraken/sugar/fs/exists';\nexists('/something/cool.txt'); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exists.ts",
                "extension": "ts",
                "relPath": "src/node/fs/exists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.existsSync": {
                "id": "@coffeekraken.sugar.node.fs.existsSync",
                "name": "existsSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exists from '@coffeekraken/sugar/fs/exists';\nexists('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "existsSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/existsSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.extension": {
                "id": "@coffeekraken.sugar.node.fs.extension",
                "name": "extension",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the passed file path extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extension from '@coffeekraken/sugar/node/fs/extension';\nextension('hello/world.jpg'); // => jpg"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extension.ts",
                "extension": "ts",
                "relPath": "src/node/fs/extension.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.fileHash": {
                "id": "@coffeekraken.sugar.node.fs.fileHash",
                "name": "fileHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed file.\nThis mean that if a file returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import fileHash from '@coffeekraken/sugar/node/fs/fileHash';\nfileHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fileHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/fileHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.filename": {
                "id": "@coffeekraken.sugar.node.fs.filename",
                "name": "filename",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the filename from the passed path with or without the extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import filename from '@coffeekraken/sugar/node/fs/filename';\nfilename('hello/world.js'); // => world.js"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filename.ts",
                "extension": "ts",
                "relPath": "src/node/fs/filename.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.findUp": {
                "id": "@coffeekraken.sugar.node.fs.findUp",
                "name": "findUp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply walk across upper folders to search for a file\nand returns you the first finded",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import findUp from '@coffeekraken/sugar/node/fs/findUp';\nconst file = await findUp('myCoolFile.json', {});\nconsole.log(file.path);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "findUp.ts",
                "extension": "ts",
                "relPath": "src/node/fs/findUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderHash": {
                "id": "@coffeekraken.sugar.node.fs.folderHash",
                "name": "folderHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed folder.\nThis mean that if a folder returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderHash from '@coffeekraken/sugar/node/fs/folderHash';\nfolderHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderPath": {
                "id": "@coffeekraken.sugar.node.fs.folderPath",
                "name": "folderPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns you the folder path of the file path passed.\nYou can tell the function to check for file existence before getting\nthe folder path with the second parameter.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderPath from '@coffeekraken/sugar/node/fs/folderPath';\nfolderPath('my/cool/path.js'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderSize": {
                "id": "@coffeekraken.sugar.node.fs.folderSize",
                "name": "folderSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Calculate the size of the passed folder and return it through a promise, either in raw format, either in human readdable one...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import folderSize from '@coffeekraken/sugar/node/fs/folderSize';\nawait folderSize('my/cool/folder');\nawait folderSize('my/cool/folder', false); // no formatting"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.formatFileSize": {
                "id": "@coffeekraken.sugar.node.fs.formatFileSize",
                "name": "formatFileSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform into human readable string a file size from a number (float or integer) or string.\nThis function use the wonderfull \"filesize\" npm package under the houd.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import formatFilesize from '@coffeekraken/sugar/node/fs/formatFileSize';\nformatFileSize(163931); // => 326.86 KB"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatFileSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/formatFileSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.grabFirstExisting": {
                "id": "@coffeekraken.sugar.node.fs.grabFirstExisting",
                "name": "grabFirstExisting",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check every passed paths and return the first existing one.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __grabFirstExisting from '@coffeekraken/sugar/node/fs/grabFirstExisting';\n__grabFirstExisting([\n 'file/1.txt',\n 'file/2.txt\n]); // => 'file/2.txt'\n'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "grabFirstExisting.ts",
                "extension": "ts",
                "relPath": "src/node/fs/grabFirstExisting.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.isPath": {
                "id": "@coffeekraken.sugar.node.fs.isPath",
                "name": "isPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPath from '@coffeekraken/sugar/node/fs/isPath';\nisPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/isPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.move": {
                "id": "@coffeekraken.sugar.node.fs.move",
                "name": "move",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import move from '@coffeekraken/node/fs/move';\nmove('my/cool/dir', 'another/place/for/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "move.ts",
                "extension": "ts",
                "relPath": "src/node/fs/move.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.moveSync": {
                "id": "@coffeekraken.sugar.node.fs.moveSync",
                "name": "moveSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import moveSync from '@coffeekraken/node/fs/moveSync';\ntry {\n   moveSync('my/cool/dir', 'another/place/for/directory');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "moveSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/moveSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.pickOne": {
                "id": "@coffeekraken.sugar.node.fs.pickOne",
                "name": "pickOne",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to specify multiple files to check and pick one of them",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __pickOne from '@coffeekraken/sugar/node/fs/pickOne';\n__pickOne(['myCoolFile.json', 'myCoolFile2.json'], {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickOne.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pickOne.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.pool": {
                "id": "@coffeekraken.sugar.node.fs.pool",
                "name": "pool",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take as parameter a glob (or array of globs) pattern(s)\nand return an SPromise instance through which you can subscribe to events like:\n- ready: Emitted once the pool is ready\n- file: Emitted for each file founded, added or updated\n- files: Emitted with a list of founded files\n- change: Emitted when a file has been updated (alias to update)\n- update: Emitted when a file has been updated\n- unlink: Emitted when a file has been deleted\n- add: Emitted when a file has been added",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pool from '@coffeekraken/sugar/node/fs/pool';\nconst myPool = pool('/something/cool /', {\n watch: true\n}):\npool.on('file', file => {\n     // do something with each files\n})\npool.on('update', (file) => {\n     // do something with updated files\n});\n// when you want to stop your pool watching process\npool.cancel();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pool.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pool.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.prependToFileSync": {
                "id": "@coffeekraken.sugar.node.fs.prependToFileSync",
                "name": "prependToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import prependToFileSync from '@coffeekraken/sugar/node/fs/prependToFileSync';\nprependToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "prependToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/prependToFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJson": {
                "id": "@coffeekraken.sugar.node.fs.readJson",
                "name": "readJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import readJson from '@coffeekraken/sugar/node/fs/readJson';\nawait readJson('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJsonSync": {
                "id": "@coffeekraken.sugar.node.fs.readJsonSync",
                "name": "readJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import readJsonSync from '@coffeekraken/sugar/node/fs/readJsonSync';\nawait readJsonSync('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readXmlSync": {
                "id": "@coffeekraken.sugar.node.fs.readXmlSync",
                "name": "readXmlSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read an xml file and get his content back as JSON",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import readXmlSync from '@coffeekraken/sugar/node/fs/readXmlSync';\nreadXmlSync('my-cool-xml/file.xml');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readXmlSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readXmlSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.registerSFileClasses": {
                "id": "@coffeekraken.sugar.node.fs.registerSFileClasses",
                "name": "registerSFileClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is responsivle to register the SFile classes with their proper\nextensions.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "since": "2.0.0",
                "filename": "registerSFileClasses.ts",
                "extension": "ts",
                "relPath": "src/node/fs/registerSFileClasses.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.remove": {
                "id": "@coffeekraken.sugar.node.fs.remove",
                "name": "remove",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import remove from '@coffeekraken/node/fs/remove';\nremove('my/cool/file.json').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "remove.ts",
                "extension": "ts",
                "relPath": "src/node/fs/remove.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.removeSync": {
                "id": "@coffeekraken.sugar.node.fs.removeSync",
                "name": "removeSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import removeSync from '@coffeekraken/node/fs/removeSync';\ntry {\n   removeSync('my/cool/file.json');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/removeSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFile": {
                "id": "@coffeekraken.sugar.node.fs.writeFile",
                "name": "writeFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "CWrite a file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeFile from '@coffeekraken/node/fs/writeFile';\nwriteFile('my/cool/file.txt', 'Hello World').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFileSync": {
                "id": "@coffeekraken.sugar.node.fs.writeFileSync",
                "name": "writeFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeFileSync from '@coffeekraken/node/fs/writeFileSync';\ntry {\n   writeFileSync('my/cool/file.txt', 'Hello World');\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJson": {
                "id": "@coffeekraken.sugar.node.fs.writeJson",
                "name": "writeJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeJson from '@coffeekraken/node/fs/writeJson';\nwriteJson('my/cool/file.json', { hello: 'world' }).then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJsonSync": {
                "id": "@coffeekraken.sugar.node.fs.writeJsonSync",
                "name": "writeJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeJsonSync from '@coffeekraken/node/fs/writeJsonSync';\ntry {\n   writeJsonSync('my/cool/file.json', { hello: 'world' });\n} catch(e) {}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFile": {
                "id": "@coffeekraken.sugar.node.fs.writeTmpFile",
                "name": "writeTmpFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeTmpFile from '@coffeekraken/node/fs/writeTmpFile';\nwriteTmpFile('Hello World').then((path) => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFileSync": {
                "id": "@coffeekraken.sugar.node.fs.writeTmpFileSync",
                "name": "writeTmpFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import writeTmpFileSync from '@coffeekraken/node/fs/writeTmpFileSync';\nconst path = writeTmpFileSync('Hello World');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.github.downloadRepository": {
                "id": "@coffeekraken.sugar.node.github.downloadRepository",
                "name": "downloadRepository",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to download a github repository\nand unzip it where you want to store it",
                "namespace": "@coffeekraken.sugar.node.github",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __downloadRepository from '@coffeekraken/sugar/node/github/downloadRepository';\nawait __downloadRepository('Coffeekraken/coffeekraken', {\n   dest: 'something/cool/coffeekraken.zip',\n   unzip: true\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "downloadRepository.ts",
                "extension": "ts",
                "relPath": "src/node/github/downloadRepository.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.matchGlob": {
                "id": "@coffeekraken.sugar.node.glob.matchGlob",
                "name": "matchGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a file path and a glob pattern that can be an extended one (this mean that is support the listed features above).\nThen it check if the passed filepath match the passed glob pattern or not and return true or false depending on the result.",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matchGlob from '@coffeekraken/sugar/node/glob/matchGlob';\nmatchGlob('/something/cool.txt', '\\/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matchGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/matchGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.resolveGlob": {
                "id": "@coffeekraken.sugar.node.glob.resolveGlob",
                "name": "resolveGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply resolve the passed glob pattern(s) and resolve his promise\nwith an Array of SFile instances to work with",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import resolveGlob from '@coffeekraken/sugar/node/glob/resolveGlob';\nresolveGlob('/my/cool/pattern/.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resolveGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/resolveGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.childProcess": {
                "id": "@coffeekraken.sugar.node.is.childProcess",
                "name": "childProcess",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running as a child process or not by checking if the ```process.send``` exists, or is the environment variable ```IS_CHILD_PROCESS``` is true.",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isChildProcess from '@coffeekraken/sugar/node/is/childProcess';\nisChildProcess(); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "childProcess.ts",
                "extension": "ts",
                "relPath": "src/node/is/childProcess.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.directory": {
                "id": "@coffeekraken.sugar.node.is.directory",
                "name": "directory",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a directory or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isDirectory from '@coffeekraken/sugar/node/is/directory';\nisDirectory('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "directory.ts",
                "extension": "ts",
                "relPath": "src/node/is/directory.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.file": {
                "id": "@coffeekraken.sugar.node.is.file",
                "name": "file",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a file or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFile from '@coffeekraken/sugar/node/is/file';\nisFile('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "file.ts",
                "extension": "ts",
                "relPath": "src/node/is/file.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.folder": {
                "id": "@coffeekraken.sugar.node.is.folder",
                "name": "folder",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a folder or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isfolder from '@coffeekraken/sugar/node/is/folder';\nisfolder('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folder.ts",
                "extension": "ts",
                "relPath": "src/node/is/folder.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.inPackage": {
                "id": "@coffeekraken.sugar.node.is.inPackage",
                "name": "inPackage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the we are in (one of) the package(s) passed as parameter",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInPackage from '@coffeekraken/sugar/node/is/inPackage';\nisInPackage('@coffeekraken/sugar'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "inPackage.ts",
                "extension": "ts",
                "relPath": "src/node/is/inPackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.path": {
                "id": "@coffeekraken.sugar.node.is.path",
                "name": "path",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPath from '@coffeekraken/sugar/node/is/path';\nisPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "path.ts",
                "extension": "ts",
                "relPath": "src/node/is/path.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.symlink": {
                "id": "@coffeekraken.sugar.node.is.symlink",
                "name": "symlink",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a sySlink or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isSymlink from '@coffeekraken/sugar/node/is/symlink';\nisSymlink('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "symlink.ts",
                "extension": "ts",
                "relPath": "src/node/is/symlink.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.keyboard.hotkey": {
                "id": "@coffeekraken.sugar.node.keyboard.hotkey",
                "name": "hotkey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add keyboard listening process and subscribe to some sequences\nusing the SPromise instance returned.",
                "namespace": "@coffeekraken.sugar.node.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hotkey from '@coffeekraken/sugar/node/keyboard/hotkey';\nconst promise = hotkey('ctrl+a').on('press', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/node/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.buildInNodeModules": {
                "id": "@coffeekraken.sugar.node.module.buildInNodeModules",
                "name": "buildInNodeModules",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This object store the list of built-in node module\nwith a polyfill property for each that point to some\npolyfill depending on the context wanted. It can be \"browser\"\nor some others to come depending on the needs...",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import builtInNodeModules from '@coffeekraken/sugar/node/module/builtInNodeModules';\n// {\n//   os: {\n//     polyfill: {\n//        browser: 'os-browserify'\n//     }\n//   },\n//   ...\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "buildInNodeModules.ts",
                "extension": "ts",
                "relPath": "src/node/module/buildInNodeModules.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyList": {
                "id": "@coffeekraken.sugar.node.module.dependencyList",
                "name": "dependencyList",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function make use of the ```dependencyTree``` one and returns the result into a simple array of file pathes",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dependencyList from '@coffeekraken/sugar/node/module/dependencyList';\nawait dependencyList('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dependencyList.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyList.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyTree": {
                "id": "@coffeekraken.sugar.node.module.dependencyTree",
                "name": "dependencyTree",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Async wrapper around the amazing dependency-tree module made by mrjoelkemp.\nThis wrapper add some capabilities like caching already parsed dependencies.",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dependencyTree from '@coffeekraken/sugar/node/module/dependencyTree';\nawait dependencyTree('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dependencyTree.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyTree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.extractImport": {
                "id": "@coffeekraken.sugar.node.module.extractImport",
                "name": "extractImport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply parse a file content or a passed string directly and\nbuild the list of finded \"import ... from ...\" as well as commonjs \"require(...)\".\nYou will get back an array of object containing all the imformations about each\nimport and require statements",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractImports from '@coffeekraken/sugar/node/module/extractImport';\nextractImport('/something/cool.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractImport.ts",
                "extension": "ts",
                "relPath": "src/node/module/extractImport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.monorepo.findPackages": {
                "id": "@coffeekraken.sugar.node.monorepo.findPackages",
                "name": "findPackages",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply let you search for packages (that are not dependencies) inside\nthe passed folder and returns a object with relative paths as keys and package.json\ncontent value",
                "namespace": "@coffeekraken.sugar.node.monorepo",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import findPackages from '@coffeekraken/sugar/node/monorepo/findPackages';\nconst packages = await findPackages();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "findPackages.ts",
                "extension": "ts",
                "relPath": "src/node/monorepo/findPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.monorepo.linkPackages": {
                "id": "@coffeekraken.sugar.node.monorepo.linkPackages",
                "name": "linkPackages",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check all the packages available in the monorepo\nand link then together using symbolic links in each node_modules folders",
                "namespace": "@coffeekraken.sugar.node.monorepo",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linkPackages from '@coffeekraken/sugar/node/monorepo/linkPackages';\nawait linkPackages();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linkPackages.ts",
                "extension": "ts",
                "relPath": "src/node/monorepo/linkPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.install": {
                "id": "@coffeekraken.sugar.node.npm.install",
                "name": "install",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to install the node packages using npm or yarn depending\non your settings.",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import install from '@coffeekraken/sugar/node/npm/install';\nawait install();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "install.ts",
                "extension": "ts",
                "relPath": "src/node/npm/install.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.listNodeModulesPackages": {
                "id": "@coffeekraken.sugar.node.npm.listNodeModulesPackages",
                "name": "listNodeModulesPackages",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function list all the packages that are installed in the node_modules folder(s).\nYou can specify that you want either the current package node_modules folder listed,\nand the root node_modules folder for monorepo as well.",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import listNodeModulesPackages from '@coffeekraken/sugar/node/npm/listNodeModulesPackages';\nlistNodeModulesPackages();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "listNodeModulesPackages.ts",
                "extension": "ts",
                "relPath": "src/node/npm/listNodeModulesPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.packageJson": {
                "id": "@coffeekraken.sugar.node.npm.packageJson",
                "name": "packageJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\npackage.json JSON content",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageJson from '@coffeekraken/sugar/node/npm/packageJson`;\npackagrJson('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageJson.ts",
                "extension": "ts",
                "relPath": "src/node/npm/packageJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.SNpmUnusedProcess": {
                "id": "@coffeekraken.sugar.node.npm.SNpmUnusedProcess",
                "name": "SNpmUnusedProcess",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This process is used to check npm unused dependencies, remove unsused once, etc...\nIt use under the hood the amazing depcheck package made by @rumpl and @lijunle",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SNpmUnusedProcess.ts",
                "extension": "ts",
                "relPath": "src/node/npm/SNpmUnusedProcess.ts",
                "children": {
                    "constructor": {
                        "id": "90d95c4d6f0f0d206be3f8b6fe5297c7be7416c68b1b0cf54128a67bf660e1da",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "process": {
                        "id": "c6185374c6a3262920cb75092413d59d709304b1c4de574a1086cad6f713975a",
                        "name": "process",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Actual process execution",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.node.og.scrapeUrl": {
                "id": "@coffeekraken.sugar.node.og.scrapeUrl",
                "name": "scrapeUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to scrape a url and get back the open graph metadata\nlike \"ogTitle\", \"ogDescription\", etc...",
                "namespace": "@coffeekraken.sugar.node.og",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrapeUrl from '@coffeekraken/sugar/node/og/scrapeUrl';\nawait scrapeUrl('https://www.npmjs.com/package/open-graph-scraper');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrapeUrl.ts",
                "extension": "ts",
                "relPath": "src/node/og/scrapeUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.json": {
                "id": "@coffeekraken.sugar.node.package.json",
                "name": "json",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the current working package into object format",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/json';\njson();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "json.ts",
                "extension": "ts",
                "relPath": "src/node/package/json.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.jsonSync": {
                "id": "@coffeekraken.sugar.node.package.jsonSync",
                "name": "jsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the current working package into object format",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/json';\njson();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "jsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/package/jsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.namespace": {
                "id": "@coffeekraken.sugar.node.package.namespace",
                "name": "namespace",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string as parameter like a path, or a doted string like \"something.cool\" and return you\na proper namespace build using the package name, your passed string sanitized, etc...",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import namespace from '@coffeekraken/sugar/node/package/namespace';\nnamespace('something.cool'); => // coffeekraken.sugar.something.cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "namespace.ts",
                "extension": "ts",
                "relPath": "src/node/package/namespace.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.renamePackage": {
                "id": "@coffeekraken.sugar.node.package.renamePackage",
                "name": "renamePackage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to rename a package by doing:\n- Rename the package.json \"name\" property",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __renamePackage from '@coffeekraken/sugar/node/package/renamePackage';\n__renamePackage('my-new-package');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "renamePackage.ts",
                "extension": "ts",
                "relPath": "src/node/package/renamePackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePackageJsonTokens": {
                "id": "@coffeekraken.sugar.node.path.replacePackageJsonTokens",
                "name": "replacePackageJsonTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to replace packageJson tokens like %packageJson.name, etc... with\nreal package.json values",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replacePackageJsonTokens from '@coffeekraken/sugar/node/path/replacePackageJsonTokens';\nreplacePackageJsonTokens('Hello %packageJson.name'); // => Hello @coffeekraken/sugar"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replacePackageJsonTokens.ts",
                "extension": "ts",
                "relPath": "src/node/package/replacePackageJsonTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.rootPath": {
                "id": "@coffeekraken.sugar.node.package.rootPath",
                "name": "rootPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return the absolute path of your current working package",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import json from '@coffeekraken/sugar/node/package/rootPath';\nrootPath(); => // /something/cool/myCoolPackage'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "rootPath.ts",
                "extension": "ts",
                "relPath": "src/node/package/rootPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.absolute": {
                "id": "@coffeekraken.sugar.node.path.absolute",
                "name": "absolute",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a string or an array of string and transform the pathes to absolute\ndepending on the second argument which is the \"from\" one.",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import relative from '@coffeekraken/sugar/js/path/absolute';\nabsolute([\n 'path'\n], '/my/cool'); => ['/my/cool/path']"
                    }
                ],
                "since": "2.0.0",
                "author": null,
                "filename": "absolute.ts",
                "extension": "ts",
                "relPath": "src/node/path/absolute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distCssDir": {
                "id": "@coffeekraken.sugar.node.path.distCssDir",
                "name": "distCssDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distCssDir from '@coffeekraken/node/fs/distCssDir';\ndistCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distDocDir": {
                "id": "@coffeekraken.sugar.node.path.distDocDir",
                "name": "distDocDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import DistDocDir from '@coffeekraken/node/fs/DistDocDir';\nDistDocDir(); // => '/somethign/dist/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distFontsDir": {
                "id": "@coffeekraken.sugar.node.path.distFontsDir",
                "name": "distFontsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distFontsDir from '@coffeekraken/node/fs/distFontsDir';\ndistFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distIconsDir": {
                "id": "@coffeekraken.sugar.node.path.distIconsDir",
                "name": "distIconsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distIconsDir from '@coffeekraken/node/fs/distIconsDir';\ndistIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distImgDir": {
                "id": "@coffeekraken.sugar.node.path.distImgDir",
                "name": "distImgDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distImgDir from '@coffeekraken/node/fs/distImgDir';\ndistImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distJsDir": {
                "id": "@coffeekraken.sugar.node.path.distJsDir",
                "name": "distJsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distJsDir from '@coffeekraken/node/fs/distJsDir';\ndistJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distNodeDir": {
                "id": "@coffeekraken.sugar.node.path.distNodeDir",
                "name": "distNodeDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distNodeDir from '@coffeekraken/node/fs/distNodeDir';\ndistNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distRootDir": {
                "id": "@coffeekraken.sugar.node.path.distRootDir",
                "name": "distRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distRootDir from '@coffeekraken/node/fs/distRootDir';\ndistRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distViewsDir": {
                "id": "@coffeekraken.sugar.node.path.distViewsDir",
                "name": "distViewsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distViewsDir from '@coffeekraken/node/fs/distViewsDir';\ndistViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.excludeGlobs": {
                "id": "@coffeekraken.sugar.node.path.excludeGlobs",
                "name": "excludeGlobs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the array of exclude globs",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import excludeGlobs from '@coffeekraken/node/fs/excludeGlobs';\nexcludeGlobs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "excludeGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/path/excludeGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.isInPackage": {
                "id": "@coffeekraken.sugar.node.path.isInPackage",
                "name": "isInPackage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInPackage from '@coffeekraken/sugar/node/path/isInPackage';\nconst root = isInPackage();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInPackage.ts",
                "extension": "ts",
                "relPath": "src/node/path/isInPackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.matchExcludeGlobs": {
                "id": "@coffeekraken.sugar.node.path.matchExcludeGlobs",
                "name": "matchExcludeGlobs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed path match one or more exclude globs specified in the config \"storage.exclude\"",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matchExcludeGlobs from '@coffeekraken/sugar/node/path/matchExcludeGlobs';\nif (matchExcludeGlobs('something/cool.js')) {\n     // ...\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matchExcludeGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/path/matchExcludeGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageCacheDir": {
                "id": "@coffeekraken.sugar.node.path.packageCacheDir",
                "name": "packageCacheDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package cache directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageCacheDir from '@coffeekraken/node/fs/packageCacheDir';\npackageCacheDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageCacheDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageCacheDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.packageLocalDir": {
                "id": "@coffeekraken.sugar.node.fs.packageLocalDir",
                "name": "packageLocalDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the .local directory path",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageLocalDir from '@coffeekraken/node/path/packageLocalDir';\npackageLocalDir(); // => '/my/cool/path/.local'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageLocalDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageLocalDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageRoot": {
                "id": "@coffeekraken.sugar.node.path.packageRoot",
                "name": "packageRoot",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageRoot from '@coffeekraken/sugar/node/path/packageRoot';\nconst root = packageRoot();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageRoot.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageRoot.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageRootDir": {
                "id": "@coffeekraken.sugar.node.path.packageRootDir",
                "name": "packageRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package root directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageRootDir from '@coffeekraken/node/fs/packageRootDir';\npackageRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageTmpDir": {
                "id": "@coffeekraken.sugar.node.path.packageTmpDir",
                "name": "packageTmpDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageTmpDir from '@coffeekraken/node/fs/packageTmpDir';\npackageTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.relative": {
                "id": "@coffeekraken.sugar.node.path.relative",
                "name": "relative",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a string or an array of string and transform the pathes to relative\ndepending on the second argument which is the \"from\" one.",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import relative from '@coffeekraken/sugar/js/path/relative';\nrelative([\n '/my/cool/path'\n], '/my/cool'); => ['path']"
                    }
                ],
                "since": "2.0.0",
                "author": null,
                "filename": "relative.ts",
                "extension": "ts",
                "relPath": "src/node/path/relative.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePathTokens": {
                "id": "@coffeekraken.sugar.node.path.replacePathTokens",
                "name": "replacePathTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as parameter either a path string, or an array of paths\nand return the according value type with the tokens (%tmpDir, %packageCacheDir, etc...) replaced",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replacePathTokens from '@coffeekraken/sugar/node/path/replacePathTokens';\nreplacePathTokens('%packageCacheDir/something.txt'); // => /path/to/cache/directory/something.txt'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replacePathTokens.ts",
                "extension": "ts",
                "relPath": "src/node/path/replacePathTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcCssDir": {
                "id": "@coffeekraken.sugar.node.path.srcCssDir",
                "name": "srcCssDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcCssDir from '@coffeekraken/node/fs/srcCssDir';\nsrcCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcDocDir": {
                "id": "@coffeekraken.sugar.node.path.srcDocDir",
                "name": "srcDocDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcDocDir from '@coffeekraken/node/fs/srcDocDir';\nsrcDocDir(); // => '/somethign/src/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcFontsDir": {
                "id": "@coffeekraken.sugar.node.path.srcFontsDir",
                "name": "srcFontsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcFontsDir from '@coffeekraken/node/fs/srcFontsDir';\nsrcFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcIconsDir": {
                "id": "@coffeekraken.sugar.node.path.srcIconsDir",
                "name": "srcIconsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcIconsDir from '@coffeekraken/node/fs/srcIconsDir';\nsrcIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcImgDir": {
                "id": "@coffeekraken.sugar.node.path.srcImgDir",
                "name": "srcImgDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcImgDir from '@coffeekraken/node/fs/srcImgDir';\nsrcImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcJsDir": {
                "id": "@coffeekraken.sugar.node.path.srcJsDir",
                "name": "srcJsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcJsDir from '@coffeekraken/node/fs/srcJsDir';\nsrcJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcNodeDir": {
                "id": "@coffeekraken.sugar.node.path.srcNodeDir",
                "name": "srcNodeDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcNodeDir from '@coffeekraken/node/fs/srcNodeDir';\nsrcNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcRootDir": {
                "id": "@coffeekraken.sugar.node.path.srcRootDir",
                "name": "srcRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcRootDir from '@coffeekraken/node/fs/srcRootDir';\nsrcRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcViewsDir": {
                "id": "@coffeekraken.sugar.node.path.srcViewsDir",
                "name": "srcViewsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import srcViewsDir from '@coffeekraken/node/fs/srcViewsDir';\nsrcViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.sugarRootDir": {
                "id": "@coffeekraken.sugar.node.path.sugarRootDir",
                "name": "sugarRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the sugar package directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sugarRootDir from '@coffeekraken/node/fs/sugarRootDir';\nsugarRootDir(); // => '/something/node_modules/@coffeekraken/sugar'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sugarDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/sugarDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.systemTmpDir": {
                "id": "@coffeekraken.sugar.node.path.systemTmpDir",
                "name": "systemTmpDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the system temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import systemTmpDir from '@coffeekraken/node/fs/systemTmpDir';\nsystemTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "systemTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/systemTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.php.execPhp": {
                "id": "@coffeekraken.sugar.node.php.execPhp",
                "name": "execPhp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to execute quickly and efficiently some php\nfrom nodejs.\nNote that you MUST have php installed on your system and available a global command.",
                "namespace": "@coffeekraken.sugar.node.php",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "execPhp.ts",
                "extension": "ts",
                "relPath": "src/node/php/execPhp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.exitCleanup": {
                "id": "@coffeekraken.sugar.node.process.exitCleanup",
                "name": "exitCleanup",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply cleanup all the processes and other things that stay alive after that\nthe main process has been terminated",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import exitCleanup from '@coffeekraken/sugar/node/process/exitCleanup';\nawait exitCleanup();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exitCleanup.ts",
                "extension": "ts",
                "relPath": "src/node/process/exitCleanup.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.kill": {
                "id": "@coffeekraken.sugar.node.process.kill",
                "name": "kill",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to kill a process by id or by port.\nThis is just a proxy to the awesome fkill package",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import kill from '@coffeekraken/sugar/node/process/kill';\nawait kill(':8888'); // port\nawait kill(8765); // id"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "kill.ts",
                "extension": "ts",
                "relPath": "src/node/process/kill.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.onProcessExit222": {
                "id": "@coffeekraken.sugar.node.process.onProcessExit222",
                "name": "onProcessExit222",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to register a callback to execute when the process\nis exiting by one of these events:\n- exit: when app is closing\n- SIGINT: on ctrl+c\n- SIGUSR1, SIGUSR2: catches \"kill pid\"\n- uncaughtException: catches uncaught exceptions",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onProcessExit from '@coffeekraken/sugar/node/process/onProcessExit';\nonProcessExit(() => {\n     // do something\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "onProcessExit.ts",
                "extension": "ts",
                "relPath": "src/node/process/onProcessExit.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.spawn": {
                "id": "@coffeekraken.sugar.node.process.spawn",
                "name": "spawn",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to spawn a new child process just like the native ```spawn``` node function\nbut add the support for SEventEmitter communication layers",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import spawn from '@coffeekraken/sugar/node/process/spawn';\nconst pro = spawn('echo \"hello world\");\npro.on('close', () => {\n  console.log('closed');\n});\nconsole.log(await pro);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "spawn.ts",
                "extension": "ts",
                "relPath": "src/node/process/spawn.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.php.detectType": {
                "id": "@coffeekraken.sugar.node.php.detectType",
                "name": "detectType",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to detect the project type like \"next\", \"nuxt\", etc...\nIf the project type is not detected, it will return \"generic\" for the type and \"1.0.0\" for the version.",
                "namespace": "@coffeekraken.sugar.node.php",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "detectType.ts",
                "extension": "ts",
                "relPath": "src/node/project/detectType.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.terminal.countLine": {
                "id": "@coffeekraken.sugar.node.terminal.countLine",
                "name": "countLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many lines the passed string will take in the current terminal",
                "namespace": "@coffeekraken.sugar.node.terminal",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import countLines from '@coffeekraken/sugar/node//countLine';\ncountLines('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "countLines.ts",
                "extension": "ts",
                "relPath": "src/node/terminal/countLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.token.replaceTokens": {
                "id": "@coffeekraken.sugar.node.token.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a string and replace some tokens using these functions:\n- sharedReplaceToken: Replace tokens like %moduleSystem\n- replacePathTokens: Replace path tokens like %packageRootDir, %distJsDir, etc...\n- replacePackageJsonTokens: Replace tokens like %packageJson.name, %packageJson.version, etc... with package.json values",
                "namespace": "@coffeekraken.sugar.node.token",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/node/token/replaceTokens';\nreplaceTokens('Hello %packageJson.name, hope you are doing well (%packageRootDir)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/node/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.type.resolveTypeString": {
                "id": "@coffeekraken.sugar.node.type.resolveTypeString",
                "name": "resolveTypeString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply parse the passed typeString like \"string | number\", or \"string & path\", etc... and return\nan object defining the resolved type with interface if defined, etc...",
                "namespace": "@coffeekraken.sugar.node.type",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __resolveTypeString from '@coffeekraken/sugar/shared/type/resolveTypeString';\nresolveTypeString('string');\n// {\n//    types: [{\n//       type: 'string',\n//       of: undefined,\n//       value: undefined\n//    }],\n//    interface: undefine\n// }"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "resolveTypeString.ts",
                "extension": "ts",
                "relPath": "src/node/type/resolveTypeString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.zip.unzip": {
                "id": "@coffeekraken.sugar.node.zip.unzip",
                "name": "unzip",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unzip quickly a zip file\nto a particular destination.\nNote that the zip filename will be used as folder name",
                "namespace": "@coffeekraken.sugar.node.zip",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __unzip from '@coffeekraken/sugar/node/zip/unzip';\nawait __unzip('my/cool/file.zip');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unzip.ts",
                "extension": "ts",
                "relPath": "src/node/zip/unzip.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.array.deepMerge": {
                "id": "@coffeekraken.sugar.php.array.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and merge them deeply by keeping distinct\nproperty keys.",
                "namespace": "@coffeekraken.sugar.php.array",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\merge_deep([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], [\n   'prop1' => 'Plop'\n]);\n// [\n//   'prop1' => 'Plop',\n//   'prop2' => 'World'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.php",
                "extension": "php",
                "relPath": "src/php/array/deepMerge.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.array.pickRandom": {
                "id": "@coffeekraken.sugar.php.array.pickRandom",
                "name": "pickRandom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This returns you a random item of the passed array",
                "namespace": "@coffeekraken.sugar.php.array",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\pickRandom(['hello','world','test']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickRandom.php",
                "extension": "php",
                "relPath": "src/php/array/pickRandom.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.gravatar.url": {
                "id": "@coffeekraken.sugar.php.gravatar.url",
                "name": "url",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function returns the gravatar url for a given email address.",
                "namespace": "@coffeekraken.sugar.php.gravatar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\gravatar\\url('olivier.bossel@gmail.com');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "url.php",
                "extension": "php",
                "relPath": "src/php/gravatar/url.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.html.expandPleasantCssClassnames": {
                "id": "@coffeekraken.sugar.php.html.expandPleasantCssClassnames",
                "name": "expandPleasantCssClassnames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method will look for classes like something:cool and transform it into\nsomething like this: something something--cool",
                "namespace": "@coffeekraken.sugar.php.html",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\html\\expandPleasantCssClassnames('...html');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnames.php",
                "extension": "php",
                "relPath": "src/php/html/expandPleasantCssClassnames.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.absolutePath": {
                "id": "@coffeekraken.sugar.php.is.absolutePath",
                "name": "absolutePath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method simply check if the passed path is absolute or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\absolutePath('my/cool/path'); // => false\nSugar\\is\\absolutePath('http://something.com/my/cool/path'); // => true\nSugar\\is\\absolutePath('/my/cool/path'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "absolutePath.php",
                "extension": "php",
                "relPath": "src/php/is/absolutePath.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.url": {
                "id": "@coffeekraken.sugar.php.is.url",
                "name": "url",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed string a an url or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\url('something'); // => false\nSugar\\is\\url('http://hello.com'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "url.php",
                "extension": "php",
                "relPath": "src/php/is/url.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.markdown.toHtml": {
                "id": "@coffeekraken.sugar.php.markdown.toHtml",
                "name": "toHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method simply render your passed markdown to HTML using the AMATING Parsedown library.",
                "namespace": "@coffeekraken.sugar.php.markdown",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\markdown\\toHtml('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toHtml.php",
                "extension": "php",
                "relPath": "src/php/markdown/toHtml.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.network.ipAddress": {
                "id": "@coffeekraken.sugar.php.network.ipAddress",
                "name": "ipAddress",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get either your \"local\" ip in the local network, either\nyour public ip address on the internet.",
                "namespace": "@coffeekraken.sugar.php.network",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\network\\ipAddress(); // => 192.168.1.23\nSugar\\network\\ipAddress('external'); // => 23.45.322.67"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ipAddress.php",
                "extension": "php",
                "relPath": "src/php/network/ipAddress.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.generateRandomString": {
                "id": "@coffeekraken.sugar.php.string.generateRandomString",
                "name": "generateRandomString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate a random string using the characters and the wanted length\nspecified in the params",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\generateRandomString(10); // => ak93mdkaod"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "generateRandomString.php",
                "extension": "php",
                "relPath": "src/php/string/generateRandomString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.idCompliant": {
                "id": "@coffeekraken.sugar.php.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.php",
                "extension": "php",
                "relPath": "src/php/string/idCompliant.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.replaceTokens": {
                "id": "@coffeekraken.sugar.php.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take care of replacing some tokens like \"%serverIp\", \"%clientIp\", etc...\nHere's the list of supported tokens: (this list can be updated with new tokens)\n- %serverIp: Server ip address\n- %clientIp: Client ip address",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\replaceTokens('Hello %serverIp, how are you?'); // => Hello 156.436.56.75, how are you?"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.php",
                "extension": "php",
                "relPath": "src/php/string/replaceTokens.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.simplifySpecialChars": {
                "id": "@coffeekraken.sugar.php.string.simplifySpecialChars",
                "name": "simplifySpecialChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\simplifySpecialChars('Hellô world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "simplifySpecialChars.php",
                "extension": "php",
                "relPath": "src/php/string/simplifySpecialChars.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.toString": {
                "id": "@coffeekraken.sugar.php.string.toString",
                "name": "toString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to transform pretty much any types like Array, Object, etc... into a string version that you can display\nin documentation, etc...",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\toString(['hello','world']); // => \"['hello','world']\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toString.php",
                "extension": "php",
                "relPath": "src/php/string/toString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.url.currentUrl": {
                "id": "@coffeekraken.sugar.php.url.currentUrl",
                "name": "currentUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Return the current url",
                "namespace": "@coffeekraken.sugar.php.url",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\url\\currentUrl();\n// https://coffeekraken.io/hello/world?query=string"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "currentUrl.php",
                "extension": "php",
                "relPath": "src/php/url/currentUrl.php",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.asyncForEach": {
                "id": "@coffeekraken.sugar.js.array.asyncForEach",
                "name": "asyncForEach",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to make some async foreach on your arrays",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import asyncForEach from '@coffeekraken/sugar/js/array/asyncForEach';\nconst waitFor = (ms) => new Promise(r => setTimeout(r, ms));\nasyncForEach([0,1,2,3], async (item) => {\n   await waitWor(50);\n   console.log(item);\n});\n// 0\n// 1\n// 2\n// 3"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "asyncForEach.ts",
                "extension": "ts",
                "relPath": "src/shared/array/asyncForEach.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.keysFirst": {
                "id": "@coffeekraken.sugar.js.array.keysFirst",
                "name": "keysFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array start with the passed keys",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import keysFirst from '@coffeekraken/sugar/js/array/keysFirst'\nkeysFirst(['a','b','d','g','c'], ['d','g'])\n// ['d','g','a','b','c']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.keysLast": {
                "id": "@coffeekraken.sugar.js.array.keysLast",
                "name": "keysLast",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array ends with the passed keys",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import keysLast from '@coffeekraken/sugar/js/array/keysLast'\nkeysLast(['a','b','d','g','c'], ['d','g'])\n// ['a','b','c','d','g']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysLast.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysLast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.pickRandom": {
                "id": "@coffeekraken.sugar.shared.array.pickRandom",
                "name": "pickRandom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pick a random item in the passed array",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pickRandom from '@coffeekraken/sugar/shared/array/pickRandom';\nconst array = ['hello','world'];\npickRandom(array); // => 'world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickRandom.ts",
                "extension": "ts",
                "relPath": "src/shared/array/pickRandom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.proxy": {
                "id": "@coffeekraken.sugar.js.array.proxy",
                "name": "proxy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function override the passed array prototype to intercept changes made through",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import proxy from '@coffeekraken/sugar/js/array/proxy';\nconst myArray = proxy([1,2,3]);\nmyArray.watch(['push','pop'], (watchObj) => {\n   // check the watchObj action\n   switch (watchObj.action) {\n     case 'push':\n       // do something...\n     break;\n   }\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "proxy.ts",
                "extension": "ts",
                "relPath": "src/shared/array/proxy.ts",
                "children": {
                    "watch": {
                        "id": "323286e361e32ea507e04012c332677d59ce3eea2473cfcb64d9bb2a7488d748",
                        "name": "watch",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to specify which Array methods you want to watch by passing an array of methods names like ['push','pop'].\nYou can also specify the handler function that will be called on each array updates, etc...",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myProxiedArray.watch(['push', 'pop'], (watchObj) => {\n   // do something...\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unwatch": {
                        "id": "56ee2c06d624f8982e804645af5ec02bf435c1d8af4240a5b4f409159855139c",
                        "name": "unwatch",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This methods allows you to unwatch a process started with the \"watch\" method.\nYou have to pass as parameter the watchId that the \"watch\" method has returned you.",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myArray.watch('push', (obj) => //...);\nmyArray.unwatch(watchId);"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.array.sameItems": {
                "id": "@coffeekraken.sugar.shared.array.sameItems",
                "name": "sameItems",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "This function take two arrays and return all the items that are the same.\nYou can specify if you want only comparing by reference for object, etc... or if\nyou want to transform items in hashes and compare that instead.",
                "namespace": "@coffeekraken.sugar.shared.array",
                "example": [
                    {
                        "language": "js",
                        "code": "import sameItems from '@coffeekraken/sugar/shared/array/sameItems';\nsameItems([1,2,3,4], [1,3,5]); // => [1,3]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sameItems.ts",
                "extension": "ts",
                "relPath": "src/shared/array/sameItems.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.splitEvery": {
                "id": "@coffeekraken.sugar.js.array.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split an array every N items",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitEvery from '@coffeekraken/sugar/js/array/splitEvery';\nsplitEvery([1,2,3,4,5,6,7,8,9], 3);\n// [[1,2,3],[4,5,6],[7,8,9]]"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/array/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.array.unique": {
                "id": "@coffeekraken.sugar.js.array.unique",
                "name": "unique",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an array as parameter and return a new one\nwith all the duplicates values removed.",
                "namespace": "@coffeekraken.sugar.js.array",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import unique from '@coffeekraken/sugar/js/array/unique';\nunique(['hello','world','hello','world']); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unique.ts",
                "extension": "ts",
                "relPath": "src/shared/array/unique.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.ascii.sugarBanner": {
                "id": "@coffeekraken.sugar.shared.ascii.sugarBanner",
                "name": "sugarBanner",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns an ascii version of the sugar logo",
                "namespace": "@coffeekraken.sugar.shared.ascii",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sugarBanner from '@coffeekraken/sugar/js/ascii/sugarBanner';\nsugarBanner();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sugarBanner.ts",
                "extension": "ts",
                "relPath": "src/shared/ascii/sugarBanner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.cloneClass": {
                "id": "@coffeekraken.sugar.js.class.cloneClass",
                "name": "cloneClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clone ES6 Classes",
                "namespace": "@coffeekraken.sugar.js.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __cloneClass from '@coffeekraken/sugar/js/class/cloneClass';\nconst NewClass = __closeClass(class MyClass() {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cloneClass.ts",
                "extension": "ts",
                "relPath": "src/shared/class/cloneClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.functionToClass": {
                "id": "@coffeekraken.sugar.js.class.functionToClass",
                "name": "functionToClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform ES5 Functions to ES6 Classes",
                "namespace": "@coffeekraken.sugar.js.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import functionToClass from '@coffeekraken/sugar/js/class/functionToClass';\nfunctionToClass(function coco() {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "functionToClass.ts",
                "extension": "ts",
                "relPath": "src/shared/class/functionToClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.getExtendsStack": {
                "id": "@coffeekraken.sugar.shared.class.getExtendsStack",
                "name": "getExtendsStack",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a class as parameter and return an array of all the class names used to extends this one...",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getExtendsStack from '@coffeekraken/sugar/shared/class/getExtendsStack';\nclass Coco extends Error {}\nclass Plop extends Coco {}\ngetExtendsStack(Plop); // => {Coco: [class ...], Error: [class ...]};"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getExtendsStack.ts",
                "extension": "ts",
                "relPath": "src/shared/class/getExtendsStack.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.getMethods": {
                "id": "@coffeekraken.sugar.js.class.getMethods",
                "name": "getMethods",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an instance as parameter and return all the methods in array format",
                "namespace": "@coffeekraken.sugar.js.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getMethods from '@coffeekraken/sugar/js/class/getMethods';\nmyClass {\n constructor() {}\n hello() {}\n world() {}\n}\nconst myInstance = new myClass();\ngetMethods(myInstance); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getMethods.ts",
                "extension": "ts",
                "relPath": "src/shared/class/getMethods.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.methodExists": {
                "id": "@coffeekraken.sugar.js.class.methodExists",
                "name": "methodExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if one or more methods exists on a class instance",
                "namespace": "@coffeekraken.sugar.js.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "class Coco {\n   hello() {}\n}\nimport methodExists from '@coffeekraken/sugar/node/class/methodExists';\nconst myInstance = new Coco();\nmethodExists(myInstance, 'hello', 'world'); // => ['world'];"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "methodExists.ts",
                "extension": "ts",
                "relPath": "src/shared/class/methodExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.multipleExtends": {
                "id": "@coffeekraken.sugar.shared.class.multipleExtends",
                "name": "multipleExtends",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extends your class with multiple other ones.",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import multipleExtends from '@coffeekraken/sugar/shared/class/multipleExtends';\nclass MyCoolClass extends multipleExtends(Another, AnotherOne) {\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "multipleExtends.ts",
                "extension": "ts",
                "relPath": "src/shared/class/multipleExtends.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.toPlainObject": {
                "id": "@coffeekraken.sugar.shared.class.toPlainObject",
                "name": "toPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a instance as parameter and return a plain object of it",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toPlainObject from '@coffeekraken/sugar/shared/class/toPlainObject';\nclass Coco {\n   constructor() {\n     this.hello = 'world';\n   }\n}\ntoPlainObject(new Coco()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/class/toPlainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.argsToString": {
                "id": "@coffeekraken.sugar.js.cli.argsToString",
                "name": "argsToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a simple object, a definition object and return you the string version that you can pass\ndirectly to the command line interface",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import argsToString from '@coffeekraken/sugar/shared/cli/argsToString';\nargsToString({\n   arg1: 'Hello',\n   myOtherArg: 'World'\n});\n// => -a Hello --myOtherArg World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "argsToString.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/argsToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.buildCommandLine": {
                "id": "@coffeekraken.sugar.js.cli.buildCommandLine",
                "name": "buildCommandLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameters a command line (with tokens), an arguments object and a definition object to\ngenerate the final command line string to launch.\nA token is simply a string that begin with \"[\" and end with \"]\" like so: \"[mytoken]\".\nEach arguments of the definition object can be a token. If you have an argument called \"hostname\", the corresponding token will be \"[hostname]\".\nA special token called \"[arguments]\" is needed if you want the passed arguments to be integrated to the builded command line.",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import buildCommandLine from '@coffeekraken/sugar/js/cli/buildCommandLine';\nbuildCommandLine('php [hostname]:[port] [rootDir] [arguments]', {\n   hostname: {\n     type: 'String',\n     description: 'Server hostname',\n     default: 'localhost'\n   },\n   port: {\n     type: 'Number',\n     description: 'Server port',\n     default: 8080\n   },\n   rootDir: {\n     type: 'String',\n     description: 'Root directory',\n     default: '.'\n   },\n   arg1: {\n     type: 'Boolean',\n     alias: 'a',\n     description: 'Argument 1',\n     default: true\n   }\n}, {\n   port: 8888\n});\n// => php localhost:8888 . -a"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "buildCommandLine.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/buildCommandLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.parseArgs": {
                "id": "@coffeekraken.sugar.js.cli.parseArgs",
                "name": "parseArgs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string to find the provided arguments into the list and return a corresponding object.",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseArgs from '@coffeekraken/sugar/js/string/parseArgs';\nparseArgs('hello -w 10 yop \"hello world\" -b --hello.world Nelson --help \"coco yep\" #blop', {\n   param1: { type: 'String', alias: 'p' },\n   world: { type: 'Array', alias: 'w', validator: value => {\n     return Array.isArray(value);\n   }},\n   bool: { type: 'Boolean', alias: 'b', default: false, required: true },\n   'hello.world': { type: 'String' },\n   help: { type: 'String', alias: 'h' },\n   id: { type: 'String', alias: 'i', regexp: /^#([\\S]+)$/ }\n}, {\n   treatDotsAsObject: true,\n   handleOrphanOptions: true\n});\n{\n   param1: 'hello',\n   world: [10, 'yop', 'hello world'],\n   bool: true,\n   hello: {\n     world: 'Nelson'\n   },\n   help: 'coco yep',\n   id: '#blop'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseArgs.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/parseArgs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.convert": {
                "id": "@coffeekraken.sugar.js.color.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input any color format like rgba Object, hsl Object, hsv Object, hex String, rgba String, hsl String or hsv String\nand convert it into the wanted format like \"rgba\", \"hsl\", \"hsv\", \"hex\", \"rgbaString\", \"hslString\" or \"hsvString\"",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/color/convert';\nconvert('rgba(10,20,30,100)', 'rgba'); // => { r: 10, g: 20, b: 30, a: 100 }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/color/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.hex2rgba": {
                "id": "@coffeekraken.sugar.js.color.hex2rgba",
                "name": "hex2rgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Hex to RGBA",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hex2rgba from '@coffeekraken/sugar/js/color/hex2rgba';\nhex2rgba('#ff00ff');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hex2rgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hex2rgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.hsl2rgba": {
                "id": "@coffeekraken.sugar.js.color.hsl2rgba",
                "name": "hsl2rgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSL to RGBA",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hsl2rgba from '@coffeekraken/sugar/js/color/hsl2rgba';\nhsla2rgba(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hsla2rgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hsla2rgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.parseHsla": {
                "id": "@coffeekraken.sugar.js.color.parseHsla",
                "name": "parseHsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse HSL",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseHsl from '@coffeekraken/sugar/color/parseHsl';\nparseHsl('hsl(20,20,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseHsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.parseRgba": {
                "id": "@coffeekraken.sugar.js.color.parseRgba",
                "name": "parseRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse RGBA string and return an object",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseRgba from '@coffeekraken/sugar/js/color/parseRgba';\nparseRgba('rgba(20,10,100,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseRgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.rgba2hex": {
                "id": "@coffeekraken.sugar.js.color.rgba2hex",
                "name": "rgba2hex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HEX",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rgba2hex from '@coffeekraken/sugar/js/color/rgba2hex';\nrgba2hex(10,20,30,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgba2hex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgba2hex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.color.rgba2hsla": {
                "id": "@coffeekraken.sugar.js.color.rgba2hsla",
                "name": "rgba2hsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HSL",
                "namespace": "@coffeekraken.sugar.js.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rgba2hsla from '@coffeekraken/sugar/js/color/rgba2hsla';\nrgba2hsla(10,20,50,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgba2hsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgba2hsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.console.parseHtml": {
                "id": "@coffeekraken.sugar.js.console.parseHtml",
                "name": "parseHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse the simple html tags to format the console message",
                "namespace": "@coffeekraken.sugar.js.console",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/console/parseHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.convert.xmlToJson": {
                "id": "@coffeekraken.sugar.js.convert.xmlToJson",
                "name": "xmlToJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a xml string as input and return a json object.\nUsed under the hood the AMAZING [xml2json](https://www.npmjs.com/package/xml2json) package.",
                "namespace": "@coffeekraken.sugar.js.convert",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "xmlTojson.ts",
                "extension": "ts",
                "relPath": "src/shared/convert/xmlTojson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.core.activeSpace": {
                "id": "@coffeekraken.sugar.js.core.activeSpace",
                "name": "activeSpace",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This object expose some functions that are usefull to manage the \"active\" space of your application.\nAn active space is represented by a string formated like so \"something.cool.hello\". This mean that your app is\nin the \"something.cool.hello\" space and depending on that, you can enable or disable some features like for example\nkeypress that have to be active only in certain \"space\" of your application.\nThe exposed functions are these ones:\n- set: This allows you to set the active space\n- get: This allows you to get the current active space\n- is: This allows you to check if the passed active space string is in the current active space\n- previous: This allows you to go back 1 activeSpace in the stack\n- on: This allows you to register callbacks attached to an activeSpace\n- append: This allows you to append an activeSpace string to the current one",
                "namespace": "@coffeekraken.sugar.js.core",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import activeSpace from '@coffeekraken/sugar/core/activeSpace';\nactiveSpace.set('hello.world');\nactiveSpace.get(); // => hello.world\nactiveSpace.is('hello'); // => false\nactiveSpace.is('hello.world.coco'); // => false\nactiveSpace.is('hello.*'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "activeSpace.ts",
                "extension": "ts",
                "relPath": "src/shared/core/activeSpace.ts",
                "children": {
                    "get": {
                        "id": "8bc6c7c0cc031bd56bf9aee85032353a29445a956caa8225fa9bb0d7d5bb4d9c",
                        "name": "get",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function allows you to get the current active space",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "set": {
                        "id": "f6e538fc9bf6d8594e2fec49023883a5b98365e7737ce257463022149ce377f1",
                        "name": "set",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function allows you to set the current active space",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "append": {
                        "id": "406c51962d62763053591fd2c0aee50c805479bea4ea38c9d80880331262dc58",
                        "name": "append",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function take the current activeSpace string and add the passed one to set the new activeSpace string",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "remove": {
                        "id": "1e5ee55bbffd541c7ee179785b1e79a5e7fd499f3d65615b93b77202fe00ef9d",
                        "name": "remove",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function simply remove the passed string from the activeSpace stack",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "previous": {
                        "id": "86d7c56f4bad6f7556b78471bbf159aed746b190909bd8979256308c9c6316a9",
                        "name": "previous",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function simply go back by 1 in the activeSpace stack",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "is": {
                        "id": "f7b905a3cf4031838fb1baa241b3a28b63680e119c415425faa1c03a8c12af26",
                        "name": "is",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function allows you to check if the active space string that you pass match with the current active space or not.\nThe checking process is done using the \"minimatch\" package that let you use cool features like \"\", \"**\", etc...",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "on": {
                        "id": "cab4d85175b8a34c4df67127cbf3744c1140457f3d0978bb8016a37b3e32ef55",
                        "name": "on",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function allows you to register a callback linked with an activeSpace string\nthat will be called once the activeSpace is matched",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.aes": {
                "id": "@coffeekraken.sugar.js.crypt.aes",
                "name": "aes",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the aes algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "aes.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/aes.ts",
                "children": {
                    "encrypt": {
                        "id": "cc0a549152c7bf2403b6f1dfc9fedef380bf164b152cef70196670981ed03f11",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "3cd6280bcd24b0d3d03fc023e80f0e4f7bce5650116038075b99c5d5e41b40b4",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.base64": {
                "id": "@coffeekraken.sugar.js.crypt.base64",
                "name": "base64",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the base64 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/base64.ts",
                "children": {
                    "encrypt": {
                        "id": "c783e86de6e337100507b99c3a4aaed0943ed1cc305ad66fedeed75c6bca8725",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "62623d72c1185072541b07dbefdb419ac3938bd540e91c218bb074c7fbe6d4ba",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.md5": {
                "id": "@coffeekraken.sugar.js.crypt.md5",
                "name": "md5",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/md5.ts",
                "children": {
                    "encrypt": {
                        "id": "4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.object": {
                "id": "@coffeekraken.sugar.js.crypt.object",
                "name": "object",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the object algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/object.ts",
                "children": {
                    "encrypt": {
                        "id": "957358f634c84e7b8a4f0f7b4f8ed3904a3ab1b550389e57ef8e8c31edabe5d7",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "201ab1edf5eb7afc6c33b354c361a57a3bec9c3301d58996ed3af40d34cb2bd1",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.sha256": {
                "id": "@coffeekraken.sugar.js.crypt.sha256",
                "name": "sha256",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha256 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha256.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/sha256.ts",
                "children": {
                    "encrypt": {
                        "id": "4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.crypt.sha512": {
                "id": "@coffeekraken.sugar.js.crypt.sha512",
                "name": "sha512",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha512 algorithm",
                "namespace": "@coffeekraken.sugar.js.crypt",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha512.ts",
                "extension": "ts",
                "relPath": "src/shared/crypt/sha512.ts",
                "children": {
                    "encrypt": {
                        "id": "4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.css.isValidUnitValue": {
                "id": "@coffeekraken.sugar.shared.css.isValidUnitValue",
                "name": "isValidUnitValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function tells you if the passed value is a valid css unit based one like 10px, 20em, etc...",
                "namespace": "@coffeekraken.sugar.shared.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isValidUnitValue from '@coffeekraken/sugar/shared/css/isValidUnitValue';\nisValidUnitValue('10px'); // => true\nisValidUnitValue('default'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isValidUnitValue.ts",
                "extension": "ts",
                "relPath": "src/shared/css/isValidUnitValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.stripCssComments": {
                "id": "@coffeekraken.sugar.js.css.stripCssComments",
                "name": "stripCssComments",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply remove all the css comments like:\n- Multiline blocks css comments begining with / *, ending with\n/\n- Single line comments begining with //",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripCssComments from '@coffeekraken/sugar/js/css/stripCssComments';\nstripCssComments(`\n// something cool\nbody { background-color: red; }\n`);\n// body { background-color: red }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripCssComments.ts",
                "extension": "ts",
                "relPath": "src/shared/css/stripCssComments.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.date.utcTime": {
                "id": "@coffeekraken.sugar.shared.date.utcTime",
                "name": "utcTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method allows you to display easily the time in UTC format like \"10:20:32\"",
                "namespace": "@coffeekraken.sugar.shared.date",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import utcTime from '@coffeekraken/sugar/shared/date/utcTime';\nutcTime(); // => 10:20:32\nutcTime(true, true, false); // => 10:20"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "utcTime.ts",
                "extension": "ts",
                "relPath": "src/shared/date/utcTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.availableEasingsArray": {
                "id": "@coffeekraken.sugar.js.easing.availableEasingsArray",
                "name": "availableEasingsArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return back an array of all the available easings function in the sugar toolkit",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "availableEasingsArray.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/availableEasingsArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInCubic": {
                "id": "@coffeekraken.sugar.js.easing.easeInCubic",
                "name": "easeInCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutCubic": {
                "id": "@coffeekraken.sugar.js.easing.easeInOutCubic",
                "name": "easeInOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuad": {
                "id": "@coffeekraken.sugar.js.easing.easeInOutQuad",
                "name": "easeInOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuart": {
                "id": "@coffeekraken.sugar.js.easing.easeInOutQuart",
                "name": "easeInOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInOutQuint": {
                "id": "@coffeekraken.sugar.js.easing.easeInOutQuint",
                "name": "easeInOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuad": {
                "id": "@coffeekraken.sugar.js.easing.easeInQuad",
                "name": "easeInQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuart": {
                "id": "@coffeekraken.sugar.js.easing.easeInQuart",
                "name": "easeInQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeInQuint": {
                "id": "@coffeekraken.sugar.js.easing.easeInQuint",
                "name": "easeInQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutCubic": {
                "id": "@coffeekraken.sugar.js.easing.easeOutCubic",
                "name": "easeOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out cubic function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuad": {
                "id": "@coffeekraken.sugar.js.easing.easeOutQuad",
                "name": "easeOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quad function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuart": {
                "id": "@coffeekraken.sugar.js.easing.easeOutQuart",
                "name": "easeOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quart function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.easeOutQuint": {
                "id": "@coffeekraken.sugar.js.easing.easeOutQuint",
                "name": "easeOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quint function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.easing.linear": {
                "id": "@coffeekraken.sugar.js.easing.linear",
                "name": "linear",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease linear function",
                "namespace": "@coffeekraken.sugar.js.easing",
                "status": "beta",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linear.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/linear.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.env.env": {
                "id": "@coffeekraken.sugar.js.env.env",
                "name": "env",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to access environment variables through the same method in node and javascript",
                "namespace": "@coffeekraken.sugar.js.env",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import env from '@coffeekraken/sugar/js/dev/env';\nconsole.log(env('node_env')); // => production\nenv('something.cool', { hello: 'world' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "env.ts",
                "extension": "ts",
                "relPath": "src/shared/env/env.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.es6.SEs6Import": {
                "id": "@coffeekraken.sugar.js.es6.SEs6Import",
                "name": "SEs6Import",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent an es6 import statement with properties like:\n- path {String}: The import path\n- default {String}: The default import name\n- star {String}: The start import name \"import\nas something from ...\"\n- named {Array<Object>}: THe named imports\n- raw {String}: The raw import statement",
                "namespace": "@coffeekraken.sugar.js.es6",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import SEs6Import from '@coffeekraken/sugar/js/es6/SEs6Import';\nconst import = new SEs6Import('import coco from \"something\";');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SEs6Import.ts",
                "extension": "ts",
                "relPath": "src/shared/es6/SEs6Import.ts",
                "children": {
                    "parsecode": {
                        "id": "a1595353b7cfd5b2e6112b388ab667c49bf19d36f412978688360565dc533e21",
                        "name": "parseCode",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This function simply parse the passed code and return an array of all the\nfounded es6 imports",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "raw": {
                        "id": "d6d289cf5f575f018b7b5f20257521b0136abe65991183d6098644f52de35f2a",
                        "name": "raw",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the raw statement string",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "path": {
                        "id": "411cc4c44c0b359823b49754ce8d9f0dbbc5f36712a4b35ce8e1d0917ebd6ce3",
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the statement path",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "default": {
                        "id": "01ceea9b7b08bb98da426d773364fa367742799492646436e720d3c05ab3c7b1",
                        "name": "default",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the statement default import name",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "star": {
                        "id": "fff9e1bc79978e8a74e36830cc2dad2e858d25a5d2f599b6976c55441b17b102",
                        "name": "star",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ]
                        },
                        "description": "Store the statement star name like \"import\nas coco from ...\"",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "named": {
                        "id": "c70583a79be2b73a86db0bb0a83907ff76bcfc5125a7179a1533815e94e5f6a2",
                        "name": "named",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "Object"
                                    ]
                                }
                            ]
                        },
                        "description": "Store the statement named imports with these properties:\n- name {String}: The import name\n- as {String}: The import as alias",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "id": "6aa2402964c1da24bb7f1ec0626e955bd10531337af52b852142f53f51ecb420",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "tostring": {
                        "id": "284cf311059f9a860cb590a0c043e4f8bd6dc27fe6fd36613f98bae29f9f35dd",
                        "name": "toString",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Return the builded version of the import",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.extension.commonAudioFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonAudioFileExtensions",
                "name": "commonAudioFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonAudioFileExtensions from '@coffeekraken/sugar/shared/extension/commonAudioFileExtensions';\nconst extensions = __commonAudioFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonAudioFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonAudioFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonCompressedFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonCompressedFileExtensions",
                "name": "commonCompressedFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonCompressedFileExtensions from '@coffeekraken/sugar/shared/extension/commonCompressedFileExtensions';\nconst extensions = __commonCompressedFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonCompressedFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonCompressedFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonDataFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonDataFileExtensions",
                "name": "commonDataFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonDataFileExtensions from '@coffeekraken/sugar/shared/extension/commonDataFileExtensions';\nconst extensions = __commonDataFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDataFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDataFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonDiscFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonDiscFileExtensions",
                "name": "commonDiscFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonDiscFileExtensions from '@coffeekraken/sugar/shared/extension/commonDiscFileExtensions';\nconst extensions = __commonDiscFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDiscFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDiscFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonEmailFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonEmailFileExtensions",
                "name": "commonEmailFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonEmailFileExtensions from '@coffeekraken/sugar/shared/extension/commonEmailFileExtensions';\nconst extensions = __commonEmailFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonEmailFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonEmailFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonExecutableFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonExecutableFileExtensions",
                "name": "commonExecutableFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonExecutableFileExtensions from '@coffeekraken/sugar/shared/extension/commonExecutableFileExtensions';\nconst extensions = __commonExecutableFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonExecutableFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonExecutableFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonFileExtensions",
                "name": "commonFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common file extensions with or without the dot.\nYou can filter extensions by types:\n- audio\n- compressed\n- data\n- disc\n- email\n- executable\n- font\n- image\n- media\n- programming\n- text\n- video\n- web",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonFileExtensions from '@coffeekraken/sugar/shared/extension/commonFileExtensions';\nconst extensions = __commonFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonFontFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonFontFileExtensions",
                "name": "commonFontFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonFontFileExtensions from '@coffeekraken/sugar/shared/extension/commonFontFileExtensions';\nconst extensions = __commonFontFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFontFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFontFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonImageFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonImageFileExtensions",
                "name": "commonImageFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonImageFileExtensions from '@coffeekraken/sugar/shared/extension/commonImageFileExtensions';\nconst extensions = __commonImageFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonImageFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonImageFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonMediaFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonMediaFileExtensions",
                "name": "commonMediaFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common media file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonMediaFileExtensions from '@coffeekraken/sugar/shared/extension/commonMediaFileExtensions';\nconst extensions = __commonMediaFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonMediaFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonMediaFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonProgrammingFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonProgrammingFileExtensions",
                "name": "commonProgrammingFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonProgrammingFileExtensions from '@coffeekraken/sugar/shared/extension/commonProgrammingFileExtensions';\nconst extensions = __commonProgrammingFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonProgrammingFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonProgrammingFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonTextFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonTextFileExtensions",
                "name": "commonTextFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonTextFileExtensions from '@coffeekraken/sugar/shared/extension/commonTextFileExtensions';\nconst extensions = __commonTextFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonTextFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonTextFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonWebFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonWebFileExtensions",
                "name": "commonWebFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __commonWebFileExtensions from '@coffeekraken/sugar/shared/extension/commonWebFileExtensions';\nconst extensions = __commonWebFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonWebFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonWebFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.debounce": {
                "id": "@coffeekraken.sugar.js.function.debounce",
                "name": "debounce",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called only once after\nthe delay passed",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import debounce from '@coffeekraken/sugar/js/function/debounce';\nconst myDebouncedFn = debounce(() => {\n\t\t// my function content that will be\n\t\t// executed only once after the 1 second delay\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my debounced function\n\t\tmyDebouncedFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "debounce.ts",
                "extension": "ts",
                "relPath": "src/shared/function/debounce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.easeInterval": {
                "id": "@coffeekraken.sugar.shared.function.easeInterval",
                "name": "easeInterval",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to call a callback function exactly as the `setInterval` would do but with an easing that you can specify,\nas well as an `interval` setting to customize how many time your function will be called.\nBy default this function will pass the \"easedPercent\" that represent the percentage of your passed \"duration\" with the easing applied on it.\nWith that you can make everything you want inside your callback function.",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __easeInterval from '@coffeekraken/sugar/shared/function/easeInterval';\nawait __easeInterval(2000, (easedPercent) => {\n     // do something...\n}, {\n     interval: 1000 / 25 // 25 times by second\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "easeInterval.ts",
                "extension": "ts",
                "relPath": "src/shared/function/easeInterval.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.getArgsNames": {
                "id": "@coffeekraken.sugar.shared.function.getArgsNames",
                "name": "getArgsNames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the arguments names of the passed function. Return an array of the arguments names",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getArgsNames from '@coffeekraken/sugar/shared/function/getArgsNames';\nfunction hello(world, coco, plop) { }\ngetArgsNames(hello); // => ['world', 'coco', 'plop']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getArgsNames.ts",
                "extension": "ts",
                "relPath": "src/shared/function/getArgsNames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.memoize": {
                "id": "@coffeekraken.sugar.shared.function.memoize",
                "name": "memoize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function can be used to memorize a function call result in order to save memory.\nThis is just a \"proxy\" of the \"memoizee\" package.",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import memoize from '@coffeekraken/sugar/shared/function/memoize';\nconst fn = memoize(function(text) => {\n   return `Hello ${text}`;\n});\nconst result = fn('world'); // first execution. no cache\nconst result1 = fn('plop'); // first execution with this argument, no cache\nconst result2 = fn('world'); // taken from cache"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "memoize.ts",
                "extension": "ts",
                "relPath": "src/shared/function/memoize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.setRecursiveTimeout": {
                "id": "@coffeekraken.sugar.js.function.setRecursiveTimeout",
                "name": "setRecursiveTimeout",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to call a passed function each x time during a certain duration",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import setRecursiveTimeout from '@coffeekraken/sugar/js/function/setRecursiveTimeout';\nsetRecursiveTimeout(() => {\n\t\t// I will be executed 10 times\n}, 1000, 10000);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "setRecursiveTimeout.ts",
                "extension": "ts",
                "relPath": "src/shared/function/setRecursiveTimeout.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.sleep": {
                "id": "@coffeekraken.sugar.js.function.sleep",
                "name": "sleep",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple sleep function that can be used using \"await\" syntax in an \"async\" function",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sleep from '@coffeekraken/sugar/js/function/sleep';\nasync function() {\n console.log('hello');\n await sleep(2000);\n console.log('World');\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sleep.ts",
                "extension": "ts",
                "relPath": "src/shared/function/sleep.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.function.throttle": {
                "id": "@coffeekraken.sugar.js.function.throttle",
                "name": "throttle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called once each threshhold time",
                "namespace": "@coffeekraken.sugar.js.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import throttle from '@coffeekraken/sugar/js/function/throttle';\nconst myThrottledFn = throttle(() => {\n\t\t// my function content that will be\n\t\t// executed only once each second\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my throttled function\n\t\tmyThrottledFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "throttle.ts",
                "extension": "ts",
                "relPath": "src/shared/function/throttle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.geom.2d.circleConstrain": {
                "id": "@coffeekraken.sugar.js.geom.2d.circleConstrain",
                "name": "circleConstrain",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take as parameter a central point, a radius and a points to constrain inside the circle defined by the radius",
                "namespace": "@coffeekraken.sugar.js.geom.2d",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import circleConstrain from '@coffeekraken/sugar/js/geom/2d/circleConstrain'\ncircleConstrain({\n\tx: 10, y: 10\n}, 10, {\n\tx: 10, y: 5\n})"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "circleConstrain.ts",
                "extension": "ts",
                "relPath": "src/shared/geom/circleConstrain.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.geom.2d.distanceBetween": {
                "id": "@coffeekraken.sugar.js.geom.2d.distanceBetween",
                "name": "distanceBetween",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the distance between two points",
                "namespace": "@coffeekraken.sugar.js.geom.2d",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceBetween from '@coffeekraken/sugar/js/geom/2d/distanceBetween'\ndistanceBetween({\n\tx: 10, y: 20\n}, {\n\tx: 10, y: 30\n}) // 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distanceBetween.ts",
                "extension": "ts",
                "relPath": "src/shared/geom/distanceBetween.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.expandGlob": {
                "id": "@coffeekraken.sugar.js.glob.expandGlob",
                "name": "expandGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take some extended glob pattern(s) and expand them to standard supported\nglob patterns. With this, you will have access to some syntax sugar like these:\n- /something{2,4}/.ts => **{2,4} = search in level 2 bis level 4",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandGlob from '@coffeekraken/sugar/js/glob/expandGlob';\nexpandGlob('/something/{2,4}/*.ts');\n// ['/something/ /* /*.ts','/something/* /* /* /*.ts', '/something/* /* /* /* /*.ts']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/expandGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.extractGlob": {
                "id": "@coffeekraken.sugar.js.glob.extractGlob",
                "name": "extractGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the glob part of a passed string",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractGlob from '@coffeekraken/sugar/js/glob/extractGlob';\nextractGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.glob.extractNoneGlob": {
                "id": "@coffeekraken.sugar.js.glob.extractNoneGlob",
                "name": "extractNoneGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the none glob part of a passed string",
                "namespace": "@coffeekraken.sugar.js.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractNoneGlob from '@coffeekraken/sugar/js/glob/extractNoneGlob';\nextractNoneGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractNoneGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractNoneGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassname": {
                "id": "@coffeekraken.sugar.shared.html.expandPleasantCssClassname",
                "name": "expandPleasantCssClassname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassname from '@coffeekraken/sugar/shared/html/expandPleasantCssClassname';\nexpandPleasantCssClassname('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassname.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassnames": {
                "id": "@coffeekraken.sugar.shared.html.expandPleasantCssClassnames",
                "name": "expandPleasantCssClassnames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import expandPleasantCssClassnames from '@coffeekraken/sugar/shared/html/expandPleasantCssClassnames';\nexpandPleasantCssClassnames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassnames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.extractCssClassesNames": {
                "id": "@coffeekraken.sugar.shared.html.extractCssClassesNames",
                "name": "extractCssClassesNames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extract all the classes names from a passed html string.\nYou can use it with other things than html but depending on the complexity of your string, it may not\nwork as expected...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractCssClassesNames from '@coffeekraken/sugar/shared/html/extractCssClassesNames';\nextractCssClassesNames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractCssClassesNames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/extractCssClassesNames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.replaceTags": {
                "id": "@coffeekraken.sugar.js.html.replaceTags",
                "name": "replaceTags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Replace all the html tags that you specify by something else that you can fully choose",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTags from '@coffeekraken/sugar/js/html/replaceTags';\nreplaceTags('<span>Hello</span> world', {\n   span: (tag, content) => `<div>${content}</div>`; // => <div>Hello</div> world\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/replaceTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.html.striptags": {
                "id": "@coffeekraken.sugar.js.html.striptags",
                "name": "striptags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Strip tags of an html string.\nThis is a simple wrapper of the nice \"striptags\" package that you can find here: https://www.npmjs.com/package/striptags",
                "namespace": "@coffeekraken.sugar.js.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import striptags from '@coffeekraken/sugar/js/string/striptags'\nstriptags('<p><span>Hello</span> world</p>', '<span>') // <span>Hello</span> world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "striptags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/striptags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.unescapeHtml": {
                "id": "@coffeekraken.sugar.shared.html.unescapeHtml",
                "name": "unescapeHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unescape some html characters like &lt;, etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import unescapeHtml from '@coffeekraken/sugar/shared/html/unescapeHtml';\nunescapeHtml('&lt;s-code-example&gt;'); // => <s-code-example>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unescapeHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/html/unescapeHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isArray": {
                "id": "@coffeekraken.sugar.js.is.isArray",
                "name": "isArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Array",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isArray from '@coffeekraken/sugar/js/is/array'\nif (isArray([]) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "array.ts",
                "extension": "ts",
                "relPath": "src/shared/is/array.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBase64": {
                "id": "@coffeekraken.sugar.js.is.isBase64",
                "name": "isBase64",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a base 64 string",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBase64 from '@coffeekraken/sugar/js/is/base64'\nif (isBase64(true) {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/shared/is/base64.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBoolean": {
                "id": "@coffeekraken.sugar.js.is.isBoolean",
                "name": "isBoolean",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Boolean",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBoolean from '@coffeekraken/sugar/js/is/boolean'\nif (isBoolean(true) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "boolean.ts",
                "extension": "ts",
                "relPath": "src/shared/is/boolean.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isBrowser": {
                "id": "@coffeekraken.sugar.js.is.isBrowser",
                "name": "isBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the script is running inside a browser or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isBrowser from '@coffeekraken/sugar/js/is/browser'\nif (isBrowser() {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "browser.ts",
                "extension": "ts",
                "relPath": "src/shared/is/browser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.class": {
                "id": "@coffeekraken.sugar.js.is.class",
                "name": "class",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed variable (or array of variables) is/are plain variable(s)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isClass = from '@coffeekraken/sugar/js/is/class';\nisClass({ hello: 'world'}); // => false\nconst myCoolClass = class Coco{};\nisClass(myCoolClass); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "class.ts",
                "extension": "ts",
                "relPath": "src/shared/is/class.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isClassInstance": {
                "id": "@coffeekraken.sugar.shared.is.isClassInstance",
                "name": "isClassInstance",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed item is an object class and not a plain object.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isClassInstance from '@coffeekraken/sugar/shared/is/classInstance';\nif (isClassInstance({\n     something: 'hello'\n})); // => false\nclass MyClass {\n     constructor() {}\n}\nif (isClassInstance(new MyClass())); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "classInstance.ts",
                "extension": "ts",
                "relPath": "src/shared/is/classInstance.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isColor": {
                "id": "@coffeekraken.sugar.js.is.isColor",
                "name": "isColor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a color",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isColor from '@coffeekraken/sugar/js/is/color';\nisColor('red') => true\nisColor('#fff') => true\nisColor('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "color.ts",
                "extension": "ts",
                "relPath": "src/shared/is/color.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isDdmmyyyyDate": {
                "id": "@coffeekraken.sugar.js.is.isDdmmyyyyDate",
                "name": "isDdmmyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid dd.mm.yyyy date\nThis will match : dd.mm.yyyy | dd/mm/yyyy | dd-mm-yyyy | dd mm yyyy",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isDdmmyyyyDate from '@coffeekraken/sugar/js/is/ddmmyyyyDate'\nif (isDdmmyyyyDate('20.12.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ddmmyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/ddmmyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEmail": {
                "id": "@coffeekraken.sugar.js.is.isEmail",
                "name": "isEmail",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid email address",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEmail from '@coffeekraken/sugar/js/is/email';\nisEmail('john.doe@gmail.com') => true\nisEmail('plop@yop.com') => true\nisEmail('hello') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "email.ts",
                "extension": "ts",
                "relPath": "src/shared/is/email.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEven": {
                "id": "@coffeekraken.sugar.js.is.isEven",
                "name": "isEven",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is even or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isEven from '@coffeekraken/sugar/js/is/even'\nisEven(1) // false\nisEven(2) // true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "even.ts",
                "extension": "ts",
                "relPath": "src/shared/is/even.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isFunction": {
                "id": "@coffeekraken.sugar.js.is.isFunction",
                "name": "isFunction",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js function",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFunction from '@coffeekraken/sugar/js/is/function'\nif (isFunction(function() {})) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "function.ts",
                "extension": "ts",
                "relPath": "src/shared/is/function.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isGlob": {
                "id": "@coffeekraken.sugar.js.is.isGlob",
                "name": "isGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid glob pattern or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isGlob from '@coffeekraken/sugar/js/is/js';\nisGlob('something/.js); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "glob.ts",
                "extension": "ts",
                "relPath": "src/shared/is/glob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isInteger": {
                "id": "@coffeekraken.sugar.js.is.isInteger",
                "name": "isInteger",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is an integer",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isInteger from '@coffeekraken/sugar/js/is/integer';\nisInteger(10) => true\nisInteger('hello') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "integer.ts",
                "extension": "ts",
                "relPath": "src/shared/is/integer.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isJs": {
                "id": "@coffeekraken.sugar.js.is.isJs",
                "name": "isJs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under javascript runtime or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isJs from '@coffeekraken/sugar/js/is/js';\nisJs(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "js.ts",
                "extension": "ts",
                "relPath": "src/shared/is/js.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isJson": {
                "id": "@coffeekraken.sugar.js.is.isJson",
                "name": "isJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid json",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isJson from '@coffeekraken/sugar/js/is/json'\nif (isJson('[{id:10}]')) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "json.ts",
                "extension": "ts",
                "relPath": "src/shared/is/json.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.linux": {
                "id": "@coffeekraken.sugar.js.is.linux",
                "name": "linux",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on linux",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isLinux from '@coffeekraken/sugar/js/is/linux';\nisLinux(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linux.ts",
                "extension": "ts",
                "relPath": "src/shared/is/linux.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMap": {
                "id": "@coffeekraken.sugar.js.is.isMap",
                "name": "isMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Map",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMap from '@coffeekraken/sugar/js/is/map'\nconst map = new Map();\nif (isMap(map) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/is/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMmddyyyyDate": {
                "id": "@coffeekraken.sugar.js.is.isMmddyyyyDate",
                "name": "isMmddyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid mm.dd.yyyy date\nThis will match : mm.dd.yyyy | mm/dd/yyyy | mm-dd-yyyy | mm dd yyyy",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isMmddyyyyDate from '@coffeekraken/sugar/js/is/mmddyyyyDate'\nif (isMmddyyyyDate('12.25.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "mmddyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/mmddyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isNode": {
                "id": "@coffeekraken.sugar.js.is.isNode",
                "name": "isNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under node runtime or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isNode from '@coffeekraken/sugar/js/is/node';\nisNode(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "node.ts",
                "extension": "ts",
                "relPath": "src/shared/is/node.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isNumber": {
                "id": "@coffeekraken.sugar.js.is.isNumber",
                "name": "isNumber",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a number",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isNumber from '@coffeekraken/sugar/js/is/number';\nisNumber(12) => true\nisNumber(22.3) => true\nisNumber('20') => false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "number.ts",
                "extension": "ts",
                "relPath": "src/shared/is/number.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isObject": {
                "id": "@coffeekraken.sugar.js.is.isObject",
                "name": "isObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js object",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isObject from '@coffeekraken/sugar/js/is/object'\nif (isObject({}) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/is/object.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isOdd": {
                "id": "@coffeekraken.sugar.js.is.isOdd",
                "name": "isOdd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is odd or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOdd from '@coffeekraken/sugar/js/is/odd'\nisOdd(1) // true\nisOdd(2) // false"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "odd.ts",
                "extension": "ts",
                "relPath": "src/shared/is/odd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.ofType": {
                "id": "@coffeekraken.sugar.js.is.ofType",
                "name": "ofType",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take the value to check and an argument type definition string like \"String\", \"Array<String>\", etc... and return true or false depending\nif the value pass the test or not...",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOfType from '@coffeekraken/sugar/js/is/ofType';\nifOfType(true, 'Boolean'); // => true\nisOfType(12, 'String|Number'); // => true\nisOfType(['hello',true], 'Array<String>'); // => { expected: { type: 'Array<String>' }, received: { type: 'Array<String|Boolean>' }}\nisOfType(['hello',true], 'Array<String|Boolean>'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ofType.ts",
                "extension": "ts",
                "relPath": "src/shared/is/ofType.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.osx": {
                "id": "@coffeekraken.sugar.js.is.osx",
                "name": "osx",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOsx from '@coffeekraken/sugar/js/is/osx';\nisOsx(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "osx.ts",
                "extension": "ts",
                "relPath": "src/shared/is/osx.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.plainObject": {
                "id": "@coffeekraken.sugar.js.is.plainObject",
                "name": "plainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed object (or array of objects) is/are plain object(s)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPlainObject from '@coffeekraken/sugar/js/is/plainObject';\nisPlainObject({ hello: 'world'}); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "plainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/plainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isRegexp": {
                "id": "@coffeekraken.sugar.js.is.isRegexp",
                "name": "isRegexp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Regexp",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isRegexp from '@coffeekraken/sugar/js/is/regexp'\nif (isRegexp(/^hello$/g) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "regexp.ts",
                "extension": "ts",
                "relPath": "src/shared/is/regexp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isString": {
                "id": "@coffeekraken.sugar.js.is.isString",
                "name": "isString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js String",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isString from '@coffeekraken/sugar/js/is/String'\nif (isString({}) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "string.ts",
                "extension": "ts",
                "relPath": "src/shared/is/string.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isTerminal": {
                "id": "@coffeekraken.sugar.js.is.isTerminal",
                "name": "isTerminal",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns if the process runs inside a terminal or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTerminal from '@coffeekraken/sugar/js/is/terminal';\nisTerminal(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "terminal.ts",
                "extension": "ts",
                "relPath": "src/shared/is/terminal.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.testEnv": {
                "id": "@coffeekraken.sugar.js.is.testEnv",
                "name": "testEnv",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current environment is in a test process or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isTest from '@coffeekraken/sugar/js/is/testEnv';\nisTest(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "testEnv.ts",
                "extension": "ts",
                "relPath": "src/shared/is/testEnv.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isUrl": {
                "id": "@coffeekraken.sugar.js.is.isUrl",
                "name": "isUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid url",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isUrl from '@coffeekraken/sugar/js/is/url';\nisUrl('http://google.com') => true\nisUrl('ftp://web.coco.com:2222') => true\nisUrl('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "url.ts",
                "extension": "ts",
                "relPath": "src/shared/is/url.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.windows": {
                "id": "@coffeekraken.sugar.js.is.windows",
                "name": "windows",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isOsx from '@coffeekraken/sugar/js/is/windows';\nisWindows(); // => true"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "windows.ts",
                "extension": "ts",
                "relPath": "src/shared/is/windows.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isYyyymmddDate": {
                "id": "@coffeekraken.sugar.js.is.isYyyymmddDate",
                "name": "isYyyymmddDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid yyyy.mm.dd date\nThis will match : yyyy.mm.dd | yyyy/mm/dd | yyyy-mm-dd | yyyy mm dd",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isYyyymmddDate from '@coffeekraken/sugar/js/is/yyyymmddDate'\nif (isYyyymmddDate('2018.12.25')) {\n    // do something cool\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "yyyymmddDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/yyyymmddDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.iterable.map": {
                "id": "@coffeekraken.sugar.js.iterable.map",
                "name": "map",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an iterable value like an Array, an Object, a Map, a String, an Integer, a Set, etc... and\nsimply iterate over like a forEach.",
                "namespace": "@coffeekraken.sugar.js.iterable",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import map from '@coffeekraken/sugar/js/iterable/map';\nconst myStack = ['hello', 'world'];\nmap(myStack, ({key, value}) => {\n   return `${value} coco`;\n});\n// ['hello coco', 'world coco']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/iterable/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.json.sanitizeJsonString": {
                "id": "@coffeekraken.sugar.shared.json.sanitizeJsonString",
                "name": "sanitizeJsonString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simple take a json string and ensure that it will be valid\nto pass through ```JSON.parse``` function for example.\nIf your string is really messy, if may not work. It take care for things like double quotes in double quotes, etc...",
                "namespace": "@coffeekraken.sugar.shared.json",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __sanitizeJsonString from '@coffeekraken/sugar/shared/json/sanitizeJsonString';\n__sanitizeJsonString('{\"something\": \"\"cool\"\"}'); // => '{\"something\":\"\\\"cool\\\"\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sanitizeJsonString.ts",
                "extension": "ts",
                "relPath": "src/shared/json/sanitizeJsonString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.json.stringify": {
                "id": "@coffeekraken.sugar.js.json.stringify",
                "name": "stringify",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function do the same as the ```JSON.stringify``` one but add some features.",
                "namespace": "@coffeekraken.sugar.js.json",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stringify from '@coffeekraken/sugar/js/json/stringify';\nstringify({\n   hello: 'world'\n}); // => {\"hello\":\"world\"}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stringify.ts",
                "extension": "ts",
                "relPath": "src/shared/json/stringify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.map.mapToObject": {
                "id": "@coffeekraken.sugar.js.map.mapToObject",
                "name": "mapToObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a Map object and convert it to a plain object",
                "namespace": "@coffeekraken.sugar.js.map",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import mapToObject from '@coffeekraken/sugar/js/map/mapToObject';\nconst myMap = new Map();\nmyMap.set('hello', 'world');\nmapToObject(myMap);\n// {\n//   hello: 'world'\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "mapToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/map/mapToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.math.clamp": {
                "id": "@coffeekraken.sugar.js.math.clamp",
                "name": "clamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values",
                "namespace": "@coffeekraken.sugar.js.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import clamp from '@coffeekraken/sugar/js/math/clamp';\nclamp(10, 0, 100); // => 10\nclamp(0, 0, 100); // => 0\nclamp(100, 0, 100); // => 100\nclamp(101, 0, 100); // => 100"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/clamp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.math.easeClamp": {
                "id": "@coffeekraken.sugar.js.math.easeClamp",
                "name": "easeClamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values with easing in and out",
                "namespace": "@coffeekraken.sugar.js.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import clamp from '@coffeekraken/sugar/js/math/clamp';\nclamp(10, 0, 100); // => 10\nclamp(0, 0, 100); // => 0\nclamp(100, 0, 100); // => 100\nclamp(101, 0, 100); // => 100"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeClamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/easeClamp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.sugar.shared.math.roundWithSign": {
                "id": "@coffeekraken.sugar.sugar.shared.math.roundWithSign",
                "name": "roundWithSign",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to round a number by keeping his sign \"+\" or \"-\"",
                "namespace": "@coffeekraken.sugar.sugar.shared.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __roundWithSign from '@coffeekraken/sugar/shared/math/roundWithSign';\n__roundWithSign(1.5); // => 1\n__roundWithSign(-1.5); // => -1"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "roundWithSign.ts",
                "extension": "ts",
                "relPath": "src/shared/math/roundWithSign.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.module.currentModuleSystem": {
                "id": "@coffeekraken.sugar.shared.module.currentModuleSystem",
                "name": "currentModuleSystem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the current module system the code is running on like \"cjs\" or \"esm\".",
                "namespace": "@coffeekraken.sugar.shared.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __currentSystem from '@coffeekraken/sugar/shared/module/currentModuleSystem';\n__currentSystem(); // => 'cjs'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "currentModuleSystem.ts",
                "extension": "ts",
                "relPath": "src/shared/module/currentModuleSystem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.module.isCjs": {
                "id": "@coffeekraken.sugar.shared.module.isCjs",
                "name": "isCjs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"esm\" module system.",
                "namespace": "@coffeekraken.sugar.shared.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __isCjs from '@coffeekraken/sugar/shared/module/isCjs';\n__isCjs(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCjs.ts",
                "extension": "ts",
                "relPath": "src/shared/module/isCjs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.module.isEsm": {
                "id": "@coffeekraken.sugar.shared.module.isEsm",
                "name": "isEsm",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"esm\" module system.",
                "namespace": "@coffeekraken.sugar.shared.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __isEsm from '@coffeekraken/sugar/shared/module/isEsm';\n__isEsm(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEsm.ts",
                "extension": "ts",
                "relPath": "src/shared/module/isEsm.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.module.isSystem": {
                "id": "@coffeekraken.sugar.shared.module.isSystem",
                "name": "isSystem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on is one of the passed system names like \"esm\" or \"cjs\".",
                "namespace": "@coffeekraken.sugar.shared.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __isSystem from '@coffeekraken/sugar/shared/module/isSystem';\n__isSystem('esm'); // => true\n__isSystem('cjs'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isSystem.ts",
                "extension": "ts",
                "relPath": "src/shared/module/isSystem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.number.constrain": {
                "id": "@coffeekraken.sugar.js.number.constrain",
                "name": "constrain",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Constrain a value between a min and a max value",
                "namespace": "@coffeekraken.sugar.js.number",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import constrain from '@coffeekraken/sugar/js/numbers/constrain'\nconstrain(100, 0, 50) // 50"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "constrain.ts",
                "extension": "ts",
                "relPath": "src/shared/number/constrain.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.number.pad": {
                "id": "@coffeekraken.sugar.js.number.pad",
                "name": "pad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pad a number n of x 0 or another passed character",
                "namespace": "@coffeekraken.sugar.js.number",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import pad from '@coffeekraken/sugar/js/numbers/pad'\npad(123, 4) // 0123"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pad.ts",
                "extension": "ts",
                "relPath": "src/shared/number/pad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.applyScope": {
                "id": "@coffeekraken.sugar.shared.object.applyScope",
                "name": "applyScope",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to apply a certain scope on the passed object.\nA scope can be for example the environment your object lives in like \"production\",\n\"development\", etc...\nIt can be literally all you want as soon as your object follow the property syntax to define\nscoped values described in the example bellow.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import applyScope from '@coffeekraken/sugar/shared/object/applyScope';\nconst myObject = {\n     myValue: 'Hello',\n     '@dev': {\n         myValue: 'World'\n     },\n     'something@prod': {\n         plop: 'yop'\n     }\n};\n\n// apply the \"env\" scope with the value of \"dev\"\napplyScope(myObject, ['dev']);\n// {\n//   myValue: 'World'\n// }\n\n// apply two scopes\napplyScope(myObject, ['prod']);\n// {\n//   myValue: 'Hello',\n//   something: {\n//       plop: 'yop'\n//   }\n// }\n\n// apply a scope with multiple values\napplyScope(myObject, ['dev','prod']);\n// {\n//   myValue: 'World',\n//   something: {\n//       plop: 'yop'\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "applyScope.ts",
                "extension": "ts",
                "relPath": "src/shared/object/applyScope.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.clone": {
                "id": "@coffeekraken.sugar.js.object.clone",
                "name": "clone",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clone an object either at 1 level, or deeply.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import clone from '@coffeekraken/sugar/js/object/clone';\nclone({\n   hello: 'world'\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clone.ts",
                "extension": "ts",
                "relPath": "src/shared/object/clone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.constructorName": {
                "id": "@coffeekraken.sugar.js.object.constructorName",
                "name": "constructorName",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the constructor name of the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import constructorName from '@coffeekraken/sugar/js/object/constructorName';\nclass MyCoolClass {\n\t\t// class implementation...\n}\nconst myObj = new MyCoolClass();\nconsole.log(constructorName(myObj)); => MyCoolClass"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "constructorName.ts",
                "extension": "ts",
                "relPath": "src/shared/object/constructorName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.decycle": {
                "id": "@coffeekraken.sugar.js.object.decycle",
                "name": "decycle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply remove the circular references in the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import decycle from '@coffeekraken/sugar/js/object/decycle';\ndecycle({\n   something: 'cool',\n   with: 'circular references',\n   //..\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "decycle.ts",
                "extension": "ts",
                "relPath": "src/shared/object/decycle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepAssign": {
                "id": "@coffeekraken.sugar.js.object.deepAssign",
                "name": "deepAssign",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as first parameter the object you want to assign others to,\nthen others objects you want to assign to the first.\nThe difference with the ```deepMerge``` function is that this one keep the first\npassed object as reference and update it directly. The ```deepMerge``` one create a new\nobject with the merging result",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepAssign from '@coffeekraken/sugar/js/object/deepAssign';\nconst obj1 = { something: 'cool' };\nconst obj2 = { other: true };\nconst obj3 = deepAssign(obj1, obj2);\nobj1 === obj3 // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepAssign.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepAssign.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepFilter": {
                "id": "@coffeekraken.sugar.js.object.deepFilter",
                "name": "deepFilter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function and this through all of the object structure. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepFilter from '@coffeekraken/sugar/js/object/deepFilter';\ndeepFilter({\n   coco: 'hello',\n   plop: true,\n   sub: {\n     property: 'world'\n   }\n}, ({key, item}) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepFilter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepFilter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepize": {
                "id": "@coffeekraken.sugar.js.object.deepize",
                "name": "deepize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an object like this one:\n{\n'something.cool': 'hello'\n}\nand convert it to something like this:\n{\nsomething: {\ncool: 'hello'\n}\n}",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepize from '@coffeekraken/sugar/js/object/deepize';\ndeepize({ 'something.cool': 'hello' }); // => { something: { cool: 'hello' } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepize.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepMap": {
                "id": "@coffeekraken.sugar.js.object.deepMap",
                "name": "deepMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is the same as the \"map\" one. The only difference is that this one goes deep into the object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepMap from '@coffeekraken/sugar/js/object/deepMap';\ndeepMap({\n   hello: 'world'\n}, ({object, prop, value, path}) => {\n   return '~ ' + value;\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMap.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepMerge": {
                "id": "@coffeekraken.sugar.js.object.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Deep merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepMerge from '@coffeekraken/sugar/node/object/deepMerge';\ndeepMerge({a: {b: {c: 'c', d: 'd'}}}, {a: {b: {e: 'e', f: 'f'}}});\n// => { a: { b: { c: 'c', d: 'd', e: 'e', f: 'f' } } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMerge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.deepProxy": {
                "id": "@coffeekraken.sugar.js.object.deepProxy",
                "name": "deepProxy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add Proxy to an object in deep fashion.\nNormally the Proxy process only the level on which it has been added. Here we add Proxy to all the\nobject levels and to new properties as well.\n\nOn the returned proxied object, you will have access to the ```revoke``` method that you can call to revoke the proxy applied.\nThis method will return you a shallow version of the proxied object that you can use as you want",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import deepProxy from '@coffeekraken/sugar/js/object/deepProxy';\nconst a = deepProxy({\n   hello: 'world'\n}, (actionObj) => {\n   // do something with the actionObj...\n});\na.hello = 'coco';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.delete": {
                "id": "@coffeekraken.sugar.js.object.delete",
                "name": "delete",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Delete an object property using a dotPath like \"something.else\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import delete from '@coffeekraken/sugar/js/object/delete';\nconst myObject = {\n   hello: 'world',\n   plop: 'yop'\n};\ndelete(myObject, 'plop');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "delete.ts",
                "extension": "ts",
                "relPath": "src/shared/object/delete.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.diff": {
                "id": "@coffeekraken.sugar.js.object.diff",
                "name": "diff",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return an object that contains only what has been changed between the two.\nThis function is a simple wrapper around the nice object-diff package from Thomas Jensen that you can find here: https://www.npmjs.com/package/object-diff",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import diff from '@coffeekraken/sugar/js/object/diff';\nconst myObject1 = {\n   hello: 'world',\n   plop: 'yop'\n};\nconst myObject2 = {\n   coco: 'plop',\n   hello: 'hey!',\n   plop: 'yop'\n};\ndiff(myObject1, myObject2);\n{\n   coco: 'plop',\n   hello: 'hey!'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "diff.ts",
                "extension": "ts",
                "relPath": "src/shared/object/diff.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.ensureExists": {
                "id": "@coffeekraken.sugar.js.object.ensureExists",
                "name": "ensureExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pass a string like \"my.cool.object\" and the value it has to be and this function will ensure that this deep object exist",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ensureExists from '@coffeekraken/sugar/js/object/ensureExists';\nconst myObj = { hello: 'world' }«\nensureExists(myObj, 'cool.object', {});\n// { hello: 'world', cool: { object: {} } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureExists.ts",
                "extension": "ts",
                "relPath": "src/shared/object/ensureExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.extractValues": {
                "id": "@coffeekraken.sugar.js.object.extractValues",
                "name": "extractValues",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an array of objects and a key name as parameters and return an array containing\nonly the specified object key value.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractValues from '@coffeekraken/sugar/js/object/extractValues';\nextractValues([{\n   hello: 'world',\n   plop: 'Yes'\n}, {\n   hello: 'king',\n   plop: 'something'\n}], 'hello'); // => ['world', 'king']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractValues.ts",
                "extension": "ts",
                "relPath": "src/shared/object/extractValues.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.filter": {
                "id": "@coffeekraken.sugar.js.object.filter",
                "name": "filter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import filter from '@coffeekraken/sugar/js/object/filter';\nfilter({\n   coco: 'hello',\n   plop: true\n}, (key, item) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/filter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.flatten": {
                "id": "@coffeekraken.sugar.js.object.flatten",
                "name": "flatten",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform the passed multiple level object into a single level one",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import flatten from '@coffeekraken/sugar/js/object/flatten';\nflatten({\n   hello: {\n     world: 'Coco'\n   }\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "flatten.ts",
                "extension": "ts",
                "relPath": "src/shared/object/flatten.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.get": {
                "id": "@coffeekraken.sugar.js.object.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import get from '@coffeekraken/sugar/js/object/get';\nget('myObject.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.ts",
                "extension": "ts",
                "relPath": "src/shared/object/get.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.getGlob": {
                "id": "@coffeekraken.sugar.js.object.getGlob",
                "name": "getGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\".\nIt support glob patterns like \"something..id\" and returns you a new object containing\nall values with the path that matches the passed glob pattern.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import get from '@coffeekraken/sugar/js/object/get';\nget('myObject.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.getKeyByValue": {
                "id": "@coffeekraken.sugar.js.object.getKeyByValue",
                "name": "getKeyByValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the key that correspond to the passed value in the passed object",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getKeyByValue from '@coffeekraken/sugar/js/object/getKeyByValue';\nconsole.log(getKeyByValue({ hello: 'world' }, 'world')); // => hello"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getKeyByValue.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getKeyByValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.map": {
                "id": "@coffeekraken.sugar.js.object.map",
                "name": "map",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is the same function as the \"Array.map\" but for objects. It will iterate over all the properties\nof the passed object and pass the value to your process function. It will then save the property\nwith your processed value",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import map from '@coffeekraken/sugar/js/object/map';\nconst myObject = {\n   hello: 'world',\n   cat: 'Nelson'\n};\nmap(myObject, ({value, prop}) => {\n   return prop === 'hello' ? 'universe' : value;\n});\n{\n   hello: 'universe',\n   cat: 'Nelson'\n}"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/object/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.objectHash": {
                "id": "@coffeekraken.sugar.node.fs.objectHash",
                "name": "objectHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash passed object.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import objectHash from '@coffeekraken/sugar/node/fs/objectHash';\nobjectHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "objectHash.ts",
                "extension": "ts",
                "relPath": "src/shared/object/objectHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.propertyProxy": {
                "id": "@coffeekraken.sugar.js.object.propertyProxy",
                "name": "propertyProxy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a proxy for and object property.\nThis gives you the possibility to process the data of the property\nwhen it is getted or setted.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import propertyProxy from '@coffeekraken/sugar/js/object/propertyProxy';\nconst myObject = {\n\t\ttitle : 'World'\n};\n// create the proxy\npropertyProxy(myObject, 'title', {\n\t\tget : (value) => {\n\t\t\treturn `Hello ${value}`;\n\t\t},\n\t\tset : (value) => {\n\t\t\treturn `Youhou ${value}`;\n\t\t}\n});\nconsole.log(myObject.title) => 'Hello World';\nmyObject.title = 'Universe';\nconsole.log(myObject.title) => 'Hello Youhou Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "propertyProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/propertyProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.resolveTokens": {
                "id": "@coffeekraken.sugar.js.object.resolveTokens",
                "name": "resolveTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an object and propare it to accept tokens like:\n- '{this.something.else}'\n- etc...",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import resolveTokens from '@coffeekraken/sugar/js/object/resolveTokens';\nconst myObj = resolveTokens({\n   hello: 'world',\n   plop: '{this.hello}\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resolveTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/object/resolveTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.set": {
                "id": "@coffeekraken.sugar.js.object.set",
                "name": "set",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Set an object value using a dotted object path like \"myObject.myProperty.myValue\" to set his position",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import set from '@coffeekraken/sugar/js/object/set';\nset('myObject.cool.value', 'Hello world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "set.ts",
                "extension": "ts",
                "relPath": "src/shared/object/set.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.sort": {
                "id": "@coffeekraken.sugar.js.object.sort",
                "name": "sort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sortObject from '@coffeekraken/sugar/js/object/sort';\nsortObject({\n   coco: { weight: 10 },\n   lolo: { weight: 2 },\n   plop: { weight: 5 }\n}, (a, b) => {\n  return a.value.weight - b.value.weight;\n});\n// {\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n//   coco: { weight: 10 }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sort.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.sortDeep": {
                "id": "@coffeekraken.sugar.js.object.sortDeep",
                "name": "sortDeep",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it but will do it recusrively to sort the object deeply.",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sortObject from '@coffeekraken/sugar/js/object/sort';\nsortObject({\n   lolo: { weight: 2 },\n   coco: { weight: 10 },\n   plop: { weight: 5 },\n   aha: {\n     hello: 'world',\n     coco: 'plop'\n   }\n}, (a, b) => {\n   return a.key.localeCompare(b.key);\n});\n// {\n//   aha: {\n//      coco: 'plop',\n//      hello: 'world'\n//   }\n//   coco: { weight: 10 }\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sortDeep.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sortDeep.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.SWatch": {
                "id": "@coffeekraken.sugar.js.object.SWatch",
                "name": "SWatch",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class allows you to easily monitor some object properties and get the new and old value of it",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "// create the watcher instance\nconst watchedObj = new SWatch({\n\t\ttitle : 'Hello World'\n});\n\n// watch the object\nwatchedObj.on('title:set', watchResult => {\n \t// do something when the title changes\n});\n\n// update the title\nwatchedObj.title = 'Hello Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SWatch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/SWatch.ts",
                "children": {
                    "constructor": {
                        "id": "bb4096191682acfb00b334aa57ac1e906fe979daca49e21205eaafa04df3593b",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.object.toJson": {
                "id": "@coffeekraken.sugar.shared.object.toJson",
                "name": "toJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert class instances to plain JSON object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toJson from '@coffeekraken/sugar/shared/object/toJson';\nclass MyClass {\n     hello = 'world';\n     something() {}\n}\ntoJson(new MyClass()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toJson.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.toQueryString": {
                "id": "@coffeekraken.sugar.js.object.toQueryString",
                "name": "toQueryString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform an object (key => pairs) to a query string like \"?var1=value1&var2\"",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toQueryString from '@coffeekraken/sugar/js/object/toQueryString'\nconsole.log(toQueryString({\n\tvalue1 : 'coco',\n\tvalue1 : 'plop'\n}));\n// => ?value1=coco&value2=plop"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toQueryString.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toQueryString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.object.uid": {
                "id": "@coffeekraken.sugar.node.object.uid",
                "name": "uid",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate a uniqid based on the objects you pass as parameters.\nThe uid is hashed into a SHA256 32bits string but you can specify it using the \"format\" parameter described above",
                "namespace": "@coffeekraken.sugar.node.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uid from '@coffeekraken/sugar/node/object/uid';\nuid({ hello: 'world' }, { plop: 'coco' }); // => ijfw89uf98jhw9ef8whef87hw7e8q87wegfh78wgf87gw8fgw8e7fzghwz8efgw8fwzuheihgbweuzf"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uid.ts",
                "extension": "ts",
                "relPath": "src/shared/object/uid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.object.watch": {
                "id": "@coffeekraken.sugar.js.object.watch",
                "name": "watch",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method is a simple wrapper around the SWatch class that allows you to watch some action on object and arrays",
                "namespace": "@coffeekraken.sugar.js.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import watch from '@coffeekraken/sugar/js/object/watch';\nlet myObj = watch({\n   hello: 'world'\n}).on('', watchResult => {\n   // do something...\n});\nmyObj.hello = 'plop';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "watch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/watch.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.semver.parseSemverString": {
                "id": "@coffeekraken.sugar.js.semver.parseSemverString",
                "name": "parseSemverString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a semver string and return a semver object using the nice [semver](https://github.com/npm/node-semver) parser.",
                "namespace": "@coffeekraken.sugar.js.semver",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __parseSemverString from '@coffeekraken/sugar/shared/semver/parseSemverString';\n__parseSemverString('2.3.1);\n// {\n//    options: {},\n//    loose: false,\n//    includePrerelease: false,\n//    raw: '2.3.1',\n//    major: 2,\n//    minor: 3,\n//    patch: 1,\n//    prerelease: [],\n//    build: [],\n//    version: '2.3.1',\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseSemverString.ts",
                "extension": "ts",
                "relPath": "src/shared/semver/parseSemverString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.autoCast": {
                "id": "@coffeekraken.sugar.js.string.autoCast",
                "name": "autoCast",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Auto cast the string into the correct variable type",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import autoCast from '@coffeekraken/sugar/js/string/autoCast'\nautoCast('12') // => 12\nautoCast('window.HTMLElement') // => HTMLElement\nautoCast('{\"hello\":\"world\"}') // {hello:'world'}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "autoCast.ts",
                "extension": "ts",
                "relPath": "src/shared/string/autoCast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.camelCase": {
                "id": "@coffeekraken.sugar.js.string.camelCase",
                "name": "camelCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "camelCase a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import camelCase from '@coffeekraken/sugar/js/string/camelCase';\ncamelCase('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.camelize": {
                "id": "@coffeekraken.sugar.js.string.camelize",
                "name": "camelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Camelize a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import camelize from '@coffeekraken/sugar/js/string/camelize';\ncamelize('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.countLine": {
                "id": "@coffeekraken.sugar.js.string.countLine",
                "name": "countLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many characters their is in the passed line.\nThis function will exclude the characters like the html tags like <red>, etc...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import countLine from '@coffeekraken/sugar/js/string/countLine';\ncountLine('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "countLine.ts",
                "extension": "ts",
                "relPath": "src/shared/string/countLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.crop": {
                "id": "@coffeekraken.sugar.js.string.crop",
                "name": "crop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allows you to crop a string at a certain length (this length take care of the croping characters like \"...\")",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import crop from '@coffeekraken/sugar/js/string/crop';\ncrop('Hello World', 10); // => Hello w..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "crop.ts",
                "extension": "ts",
                "relPath": "src/shared/string/crop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.dashCase": {
                "id": "@coffeekraken.sugar.js.string.dashCase",
                "name": "dashCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "dashCase a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dashCase from '@coffeekraken/sugar/js/string/dashCase';\ndashCase('hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dashCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dashCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.dedupe": {
                "id": "@coffeekraken.sugar.js.string.dedupe",
                "name": "dedupe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simple make sure that you don't have duplicate statements in the passed string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import dedupe from '@coffeekraken/sugar/js/string/dedupe';\ndedupe('hello world hello your', 'hello'); // => hello world your"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dedupe.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dedupe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.extractSame": {
                "id": "@coffeekraken.sugar.js.string.extractSame",
                "name": "extractSame",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you what has been find the same in the two passed string.\nIt will return you either an array of same string parts or a simple string\nrepresenting the first same part found.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import extractSame from '@coffeekraken/sugar/js/string/extractSame';\nextractSame('Hello world', 'Hello plop'); // => 'Hello '"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractSame.ts",
                "extension": "ts",
                "relPath": "src/shared/string/extractSame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.idCompliant": {
                "id": "@coffeekraken.sugar.shared.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __idCompliant from '@coffeekraken/sugar/shared/string/idCompliant';\n__idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/idCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.includes": {
                "id": "@coffeekraken.sugar.js.string.includes",
                "name": "includes",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Same as the native String.includes function but accept either an array of items\nor a simple comma separated string like \"something,cool,hello,world\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import includes from '@coffeekraken/sugar/js/string/includes'\nincludes('Hello world', 'world,coco') // ['world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "includes.ts",
                "extension": "ts",
                "relPath": "src/shared/string/includes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.lowerFirst": {
                "id": "@coffeekraken.sugar.js.string.lowerFirst",
                "name": "lowerFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Lower first letter",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import lowerFirst from '@coffeekraken/sugar/js/string/lowerFirst'\nlowerFirst('Hello world') // hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "lowerFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/lowerFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.ltrim": {
                "id": "@coffeekraken.sugar.js.string.ltrim",
                "name": "ltrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim left a specified string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ltrim from '@coffeekraken/sugar/js/string/ltrim'\nltrim('Hello World', 'Hello') // World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ltrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/ltrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.namespaceCompliant": {
                "id": "@coffeekraken.sugar.shared.string.namespaceCompliant",
                "name": "namespaceCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nas a namespace with just dots and non special characters.",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __namespaceCompliant from '@coffeekraken/sugar/shared/string/namespaceCompliant';\n__namespaceCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "namespaceCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/namespaceCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.paramCase": {
                "id": "@coffeekraken.sugar.js.string.paramCase",
                "name": "paramCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function transform a string into a param case one like so \"something-cool\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import paramCase from '@coffeekraken/sugar/js/string/paramCase';\nparamCase('some thoing cool'); // => some-thing-cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "paramCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/paramCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.parse": {
                "id": "@coffeekraken.sugar.js.string.parse",
                "name": "parse",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string and convert it into his native data type like date, number, boolean, etc...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parse from '@coffeekraken/sugar/js/string/parse';\nparse('10'); // => 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parse.ts",
                "extension": "ts",
                "relPath": "src/shared/string/parse.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.printf": {
                "id": "@coffeekraken.sugar.js.string.printf",
                "name": "printf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "printf php equavalent",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import printf from '@coffeekraken/sugar/js/string/printf';\nprintf('Hello %s', 'world'); // => Hello world\nprintf('Hello %s, I\\'m %s', 'world', 'John Doe'); // Hello world, I'm John Doe\nprintf('Hello %(first)s, I\\'m %(name)s', { first : 'world', name : 'John Doe'}); // Hello world, I'm John Doe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "printf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/printf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.replaceTokens": {
                "id": "@coffeekraken.sugar.js.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameter a tokened string like \"something [cool]\", an object\nof arguments/values and return the processed string with the tokens replaced by the arguments values.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/js/string/replaceTokens';\nreplaceTokens('hello [world]', { world: 'Coco' }); // => hello Coco"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/string/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.rtrim": {
                "id": "@coffeekraken.sugar.js.string.rtrim",
                "name": "rtrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim right a specified string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rtrim from '@coffeekraken/sugar/js/string/rtrim'\nrtrim('Hello World', 'ld') // Hello Wor"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rtrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/rtrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.simply": {
                "id": "@coffeekraken.sugar.js.string.simply",
                "name": "simply",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string with accents, etc and convert it to a more simply\nversion like \"éàddö\" to \"eaddo\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import simplify from '@coffeekraken/sugar/js/string/simplify';\nsimplify('éàddö'); // => eaddo"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "João Filipe Ventura Coelho",
                    "email": "joaoventura93@outlook.com"
                },
                "filename": "simplify.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.simplifySpecialChars": {
                "id": "@coffeekraken.sugar.shared.string.simplifySpecialChars",
                "name": "simplifySpecialChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\simplifySpecialChars('Hellô world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "simplifySpecialChars.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplifySpecialChars.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.splitEvery": {
                "id": "@coffeekraken.sugar.js.string.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split a string every n chars either by taking care of not spliting the words, or by simply spliting without any attention to that...",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitEvery from '@coffeekraken/node/string/splitEvery';\nsplitEvery('Hello World', 2, {\n   splitWords: true\n}); // => ['He','ll','o ','Wo','rl','d']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/string/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.sprintf": {
                "id": "@coffeekraken.sugar.js.string.sprintf",
                "name": "sprintf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Javascript implementation of the sprintf php function.\n>For more infos, check [this github repository](https://github.com/alexei/sprintf.js)",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sprintf from '@coffeekraken/sugar/js/string/sprintf'\nsprintf('Hello %s', 'world') // Hello World\nconst user = { name: 'Dolly' }\nsprintf('Hello %(name)s', user) // Hello Dolly"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sprintf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/sprintf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.stripAnsi": {
                "id": "@coffeekraken.sugar.js.string.stripAnsi",
                "name": "stripAnsi",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply strip all the ansi characters in a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripAnsi from '@coffeekraken/sugar/js/string/stripAnsi';\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007'); // => Click"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripAnsi.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripAnsi.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripDocblocks": {
                "id": "@coffeekraken.sugar.shared.string.stripDocblocks",
                "name": "stripDocblocks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all docblocks",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __stripDocblocks from '@coffeekraken/sugar/shared/string/stripDocblocks';\n__stripDocblocks('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripDocblocks.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripDocblocks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripSourcemap": {
                "id": "@coffeekraken.sugar.shared.string.stripSourcemap",
                "name": "stripSourcemap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all sourcemap",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __stripSourcemap from '@coffeekraken/sugar/shared/string/stripSourcemap';\n__stripSourcemap('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripSourcemap.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripSourcemap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.toString": {
                "id": "@coffeekraken.sugar.js.string.toString",
                "name": "toString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert passed value to a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toString from '@coffeekraken/sugar/js/string/toString'\ntoString({\n\tid:'hello'\n}) // '{\"id\":\"hello\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toString.ts",
                "extension": "ts",
                "relPath": "src/shared/string/toString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.trimLines": {
                "id": "@coffeekraken.sugar.js.string.trimLines",
                "name": "trimLines",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and trim each lines",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import trimLines from '@coffeekraken/sugar/js/string/trimLines';\ntrimLines(`my cool lines\n     that have some lines to trim\nand some not...`);\n// my cool lines\n// that have some lines to trim\n// and some not..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "trimLines.ts",
                "extension": "ts",
                "relPath": "src/shared/string/trimLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.uncamelize": {
                "id": "@coffeekraken.sugar.js.string.uncamelize",
                "name": "uncamelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Uncamelize a string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uncamelize from '@coffeekraken/sugar/js/string/uncamelize'\nuncamelize('helloWorldAndUniverse') // hello-world-and-universe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uncamelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uncamelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.uniqid": {
                "id": "@coffeekraken.sugar.js.string.uniqid",
                "name": "uniqid",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Generate a uniqid string of 8 bytes. Work using the [uniqid](https://www.npmjs.com/package/uniqid) npm package under the hood.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import uniqid from '@coffeekraken/sugar/js/string/uniqid';\nconsole.log(uniqid()); // => 1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uniqid.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uniqid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.unquote": {
                "id": "@coffeekraken.sugar.js.string.unquote",
                "name": "unquote",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Remove the quotes of a string\nTypes of quotes removed :\n- `\"`, `'`, `”`, '`'",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import unquote from '@coffeekraken/sugar/js/string/unquote'\nunquote(\"'Hello world'\") // \"Hello world\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unquote.ts",
                "extension": "ts",
                "relPath": "src/shared/string/unquote.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.upperFirst": {
                "id": "@coffeekraken.sugar.js.string.upperFirst",
                "name": "upperFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Upper first",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import upperFirst from '@coffeekraken/sugar/js/string/upperFirst'\nupperFirst('hello world') // Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "upperFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/upperFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.urlCompliant": {
                "id": "@coffeekraken.sugar.shared.string.urlCompliant",
                "name": "urlCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin url for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import __urlCompliant from '@coffeekraken/sugar/shared/string/urlCompliant';\n__urlCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "urlCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/urlCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.sugar.sanitizeSugarJson": {
                "id": "@coffeekraken.sugar.node.sugar.sanitizeSugarJson",
                "name": "sanitizeSugarJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to sanitize a sugarJson JSON to be sure you'll get\nthe same structure everytime",
                "namespace": "@coffeekraken.sugar.node.sugar",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import sanitizeSugarJson from '@coffeekraken/sugar/node/sugar/sanitizeSugarJson';\nsanitizeSugarJson({\n     extends: 'something',\n     // ...\n}); // => { extends: ['something'], ... }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sanitizeSugarJson.ts",
                "extension": "ts",
                "relPath": "src/shared/sugar/sanitizeSugarJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.time.convert": {
                "id": "@coffeekraken.sugar.js.time.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert time like seconds, ms, hours, minutes, etc... from one format to another",
                "namespace": "@coffeekraken.sugar.js.time",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/time/convert';\nconvert('10s', 'ms'); // => 10000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/time/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.time.formatDuration": {
                "id": "@coffeekraken.sugar.shared.time.formatDuration",
                "name": "formatDuration",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass a duration in ms and get back a formatted estimation like \"2.4m\", \"30s\", etc...",
                "namespace": "@coffeekraken.sugar.shared.time",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import formatDuration from '@coffeekraken/sugar/js/time/formatDuration';\nformatDuration(2000); // => 2s"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatDuration.ts",
                "extension": "ts",
                "relPath": "src/shared/time/formatDuration.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.time.wait": {
                "id": "@coffeekraken.sugar.js.time.wait",
                "name": "wait",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is a simple \"setTimeout\" wrapper inside a promise.",
                "namespace": "@coffeekraken.sugar.js.time",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wait from '@coffeekraken/sugar/js/time/wait';\nawait wait(2000);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "wait.ts",
                "extension": "ts",
                "relPath": "src/shared/time/wait.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.token.replaceTokens": {
                "id": "@coffeekraken.sugar.shared.token.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a string and replace some tokens like:\n- %moduleSystem: The current module system like \"esm\" or \"cjs\"",
                "namespace": "@coffeekraken.sugar.shared.token",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/shared/token/replaceTokens';\nreplaceTokens('Current module system is %moduleSystem');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.type.parseTypeString": {
                "id": "@coffeekraken.sugar.shared.type.parseTypeString",
                "name": "parseTypeString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply parse the passed typeString like \"string | number\", or \"string & path\", etc... and return\nan object defining this type string",
                "namespace": "@coffeekraken.sugar.shared.type",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __parseTypeString from '@coffeekraken/sugar/shared/type/parseTypeString';\nparseTypeString('string|number');\n//[{\n//   type: 'string',\n//   of: undefined,\n//}, {\n//   type: 'number',\n//   of: undefined,\n//}]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "parseTypeString.ts",
                "extension": "ts",
                "relPath": "src/shared/type/parseTypeString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.convert": {
                "id": "@coffeekraken.sugar.js.unit.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert a passed unit to the wanted one. If the passed unit is a number and not a string like \"10rem\", the unit is take as pixels",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import convert from '@coffeekraken/sugar/js/unit/convert';\nconvert('2rem', 'px');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.em2px": {
                "id": "@coffeekraken.sugar.js.unit.em2px",
                "name": "em2px",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import em2px from '@coffeekraken/sugar/js/unit/em2px';\nem2px(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "em2px.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/em2px.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.px2em": {
                "id": "@coffeekraken.sugar.js.unit.px2em",
                "name": "px2em",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import px2em from '@coffeekraken/sugar/js/unit/px2em';\npx2em(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "px2em.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/px2em.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.px2rem": {
                "id": "@coffeekraken.sugar.js.unit.px2rem",
                "name": "px2rem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import px2rem from '@coffeekraken/sugar/js/unit/px2rem';\npx2rem(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "px2rem.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/px2rem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.unit.rem2px": {
                "id": "@coffeekraken.sugar.js.unit.rem2px",
                "name": "rem2px",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.unit",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import rem2px from '@coffeekraken/sugar/js/unit/rem2px';\nrem2px(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rem2px.ts",
                "extension": "ts",
                "relPath": "src/shared/unit/rem2px.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.gravatarUrl": {
                "id": "@coffeekraken.sugar.js.url.gravatarUrl",
                "name": "gravatarUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return a gravatar url depending on the passed user email and size",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import gravatarUrl from '@coffeekraken/sugar/js/util/gravatarUrl';\nconsole.log(gravatarUrl('olivier.bossel@gmail.com')); // https://www.gravatar.com/avatar/b5df60055b6287bb7c90c0078ce20a5f"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "gravatarUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/url/gravatarUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.parseSchema": {
                "id": "@coffeekraken.sugar.js.url.parseSchema",
                "name": "parseSchema",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two arguments. The first one is the url to parse and the second is a schema to scan the url with.\nThe schema describe the pathname of an url and tell's how to analyze it.\nHere's a little description with some example of schemas:\n- \"{param1}/{param2}/{param3}\": This schema describe that your Url must have 3 \"values\" named param1, param2 and param3\n- If my Url is \"something.com/hello/world/plop\", my schema is respected and I can have access to the values through the \"schema.params.param1\", \"schema.params.param2\", etc...\n- \"{hello:string}/{world:number}/{?idx:number}\": This schema describe that the Url can have 3 \"values\" but the last one is optional\n- If my Url is \"something.com/plop/3/1\", my schema is respected\n- If my Url is \"something.com/plop/2\", my schema is respected\n- If my Url is \"something.com/plop/hello/2\", my schema is not respected due to the fact that the param named \"world\" has to be a number",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseSchema from '@coffeekraken/sugar/js/url/parseSchema';\nparseSchema('https://github.com/myApp/master/3', '{project:string}/{?branch:string}/{?idx:number}');\n// {\n//   url: 'https://github.com/myApp/master/3',\n//   schema: '{project:string}/{?branch:string}/{?idx:number}',\n//   match: true,\n//   errors: null,\n//   params: {\n//     project: {\n//       optional: false,\n//       raw: '{project:string}',\n//       type: 'string',\n//       value: 'myApp'\n//     },\n//     branch: {\n//       optional: true,\n//       raw: '{?branch:string},\n//       type: 'string',\n//       value: 'master'\n//     },\n//     idx: {\n//       optional: true,\n//       raw: '{?idx:number}',\n//       type: 'number',\n//       value: 3\n//     }\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "parseSchema.ts",
                "extension": "ts",
                "relPath": "src/shared/url/parseSchema.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.url.queryStringToObject": {
                "id": "@coffeekraken.sugar.js.url.queryStringToObject",
                "name": "queryStringToObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform a query string into his object (key => pairs) representation",
                "namespace": "@coffeekraken.sugar.js.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import queryStringToObject from '@coffeekraken/sugar/js/string/queryStringToObject'\nqueryStringToObject('?var1=value1&var2=value2') // { var1: 'value1', var2: 'value2' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "queryStringToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/url/queryStringToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.urlFromString": {
                "id": "@coffeekraken.sugar.shared.url.urlFromString",
                "name": "urlFromString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Simple function that take a string as parameter and returns you a valid\nurl ready one",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import urlFromString from '@coffeekraken/sugar/shared/url/urlFromString';\nurlFromString('Sir James Paul McCartney MBE is an English singer-songwriter');\n// sir-james-paul-mc-cartney-mbe-is-an-english-singer-songwriter"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "urlFromString.ts",
                "extension": "ts",
                "relPath": "src/shared/url/urlFromString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.value.typeDefinitionArrayObjectToString": {
                "id": "@coffeekraken.sugar.js.value.typeDefinitionArrayObjectToString",
                "name": "typeDefinitionArrayObjectToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as parameter a type definition object like this one:\n{\ntype: [{\ntype: 'Array',\nof: [{\ntype: 'Boolean'\n}]\n}]\n}\nan transform it to a string like so \"Array<Boolean>\"",
                "namespace": "@coffeekraken.sugar.js.value",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import typeDefinitionArrayObjToString from '@coffeekraken/sugar/js/value/typeDefinitionArrayObjectToString'\ntypeDefinitionArrayObjToString([{\n   type: [{\n     type: 'Array',\n     of: [{\n       type: 'Boolean'\n     }]\n   }]\n}]); // => Array<Boolean>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typeDefinitionArrayObjectToString.ts",
                "extension": "ts",
                "relPath": "src/shared/value/typeDefinitionArrayObjectToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.value.typeof": {
                "id": "@coffeekraken.sugar.js.value.typeof",
                "name": "typeof",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return the correct type of the passed value.\nIt support the recognition of arrays and return 'Array' as property type.\nYou can olso ask the function to gives you the \"of\" types of the passed value. This mean that if you\npass an Array like so \"[10,'Hello',true]\" and that you ask for \"of\" types, it will returns you\n\"Array<Integer|String|Boolean>\".\nAnother feature is to ask the result as an object like so:\n{\ntype: 'Array',\nof: ['Integer','String','Boolean']\n}\nYou can ask also the typeof function to returns you the actual class name if the passed value is an instance\nof an custom class.",
                "namespace": "@coffeekraken.sugar.js.value",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import typeof from '@coffeekraken/sugar/js/value/typeof';\ntypeof(true); // => Boolean\ntypeof(10); // => Integer\ntypeof(12.4); // => Number\ntypeof(['Hello']); // => Array\ntypeof(['Hello',true], { of: true }); // => Array<String|Boolean>\n\nclass MyCoolClass {\n   // ...\n}\nconst myInstance = new MyCoolClass();\ntypeof(myInstance, { customClass: true }); // => MyCoolClass"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typeof.ts",
                "extension": "ts",
                "relPath": "src/shared/value/typeof.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.animation.innerHtml": {
                "id": "@coffeekraken.sugar.js.dom.animation.innerHtml",
                "name": "innerHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Change the content of a Node with the possibility to animate the change using one of these animations:\n- fade\n- fadeUp\n- fadeDown\n- fadeLeft\n- fadeRight\nYou can also choose between 3 actions which are: replace, append and prepend",
                "namespace": "@coffeekraken.sugar.js.dom.animation",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import innerHtml from '@coffeekraken/sugar/js/dom/innerHtml'\ninnerHtml(myCoolNode, 'Hello World', {\n   action: 'replace', // replace, append, prepend\n   animIn: 'fade', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animOut: 'fadeUp', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animInDuration: 600, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animOutDuration: 300, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animInDistance: 25, // in px\n   animOutDistance: 25, // in px\n   animInEasing: 'ease-in-out',\n   animOutEasing: 'ease-in-out'\n}).then(() => {\n   // do something when the change has been made...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "innerHtml.ts",
                "extension": "ts",
                "relPath": "src/js/dom/animation/innerHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.addAnimationClass": {
                "id": "@coffeekraken.sugar.js.dom.class.addAnimationClass",
                "name": "addAnimationClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add a class that trigger an animation and remove it at the end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addAnimationClass from '@coffeekraken/sugar/js/dom/addAnimationClass'\naddAnimationClass(myElm, 'my-cool-class').then($elm => {\n   // do something at the animation end...\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addAnimationClass.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/addAnimationClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.removeClassOnAnimationEnd": {
                "id": "@coffeekraken.sugar.js.dom.class.removeClassOnAnimationEnd",
                "name": "removeClassOnAnimationEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Remove some class on animation end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import removeClassOnAnimationEnd from '@coffeekraken/sugar/js/dom/removeClassOnAnimationEnd'\nremoveClassOnAnimationEnd(myCoolElm, 'my-class');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeClassOnAnimationEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/removeClassOnAnimationEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.adoptStyleInShadowRoot": {
                "id": "@coffeekraken.sugar.js.css.adoptStyleInShadowRoot",
                "name": "adoptStyleInShadowRoot",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to make a shadowRoot element adopt his host context styles",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __adoptStyleInShadowRoot from '@coffeekraken/sugar/js/dom/css/adoptStyleInShadowRoot';\nconst myShadowRoot = $myElement.shadowRoot;\nawait __adoptStyleInShadowRoot(myShadowRoot);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "adoptStyleInShadowRoot.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/adoptStyleInShadowRoot.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.injectStyle": {
                "id": "@coffeekraken.sugar.js.css.injectStyle",
                "name": "injectStyle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Inject a passed style string in the DOM",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import injectStyle from '@coffeekraken/sugar/js/dom/css/injectStyle';\ninjectStyle('a { color: red; }');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "injectStyle.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/injectStyle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.stylesheetToString": {
                "id": "@coffeekraken.sugar.js.css.stylesheetToString",
                "name": "stylesheetToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take a StyleSheet instance and convert it to a simple string",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import stylesheetToString from '@coffeekraken/sugar/js/dom/css/stylesheetToString';\nstylesheetToString(document.stylesheets); // => body { ... }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stylesheetToString.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/stylesheetToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.data.dataset": {
                "id": "@coffeekraken.sugar.js.dom.data.dataset",
                "name": "dataset",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get or set a value on the passed element with the passed name",
                "namespace": "@coffeekraken.sugar.js.dom.data",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import dataset from '@coffeekraken/sugar/js/dom/dataset';\ndataset(myCoolElement, 'hello', 'world'); // => 'world';"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dataset.ts",
                "extension": "ts",
                "relPath": "src/js/dom/data/dataset.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detection.detectInOutDirection": {
                "id": "@coffeekraken.sugar.js.dom.detection.detectInOutDirection",
                "name": "detectInOutDirection",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect the mouse direction when entered on the passed element. The direction can be up, down, left or right and will be passed to the two callbacks available.\nThe first one is the `onIn` callback, and the second one is the `onOut`.",
                "namespace": "@coffeekraken.sugar.js.dom.detection",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import detectInOutDirection from '@coffeekraken/sugar/js/dom/detectInOutDirection'\nconst detect = detectInOutDirection(myElm).in(direction => {\n   // do something...\n}).out(direction => {\n   // do something...\n}).then(value => {\n   // do something\n   console.log(value); // => { action: 'in', direction: 'up' };\n});\n\n// cancel the detection process\ndetect.cancel();"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "detectInOutDirection.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/detectInOutDirection.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.inViewportStatusChange": {
                "id": "@coffeekraken.sugar.js.dom.detect.inViewportStatusChange",
                "name": "inViewportStatusChange",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor when the passed element enter or exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewportStatusChange from '@coffeekraken/sugar/js/dom/inViewportStatusChange';\ninViewportStatusChange(myElm).on('enter', $elm => {\n   // do something...\n}).on('exit', $elm => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inViewportStatusChange.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/inViewportStatusChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onDrag": {
                "id": "@coffeekraken.sugar.js.dom.detect.onDrag",
                "name": "onDrag",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect drag \"gesture\" with the mouse or touch",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onSwipe from '@coffeekraken/sugar/js/dom/onSwipe'"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onDrag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onDrag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onScrollEnd": {
                "id": "@coffeekraken.sugar.js.dom.detect.onScrollEnd",
                "name": "onScrollEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply listen for scroll on the passed element and call the passed callback\nwhen reaching the end of it.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onScrollEnd from '@coffeekraken/sugar/js/dom/detect/onScrollEnd';\nonScrollEnd($elm, () => {\n     // do something\n}, {\n   offset: 50\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onScrollEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onScrollEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onSwipe": {
                "id": "@coffeekraken.sugar.js.dom.detect.onSwipe",
                "name": "onSwipe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect swipes gestures on touch devices.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import onSwipe from '@coffeekraken/sugar/js/dom/onSwipe'\nonSwipe(myCoolElm, (swipe) => {\n\t// check the swipe direction\n\tif (swipe.left) {\n\t\t// do something...\n\t}\n\t// support : left, right, up, down\n\t// etc...\n}, {\n\tthreshold : 50\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onSwipe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onSwipe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.when": {
                "id": "@coffeekraken.sugar.js.dom.detect.when",
                "name": "when",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function listen for passed `trigger(s)` on the passed `HTMLElement` and resolve the promise once one of them has reached his state.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import when from '@coffeekraken/sugar/js/dom/detect/when';\nwhen($elm, 'inViewport', () => {\n     // do something\n}, {\n   whenInViewport: {\n      offset: 50\n   }\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "when.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/when.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenAttribute": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenAttribute",
                "name": "whenAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Resolve a promise when the wanted attribute on the passed HTMLElement exist or pass the check function provided",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenAttribute from '@coffeekraken/sugar/js/dom/whenAttribute'\nwhenAttribute(myCoolHTMLElement, 'value').then((value) => {\n\t\t// the value attribute exist on the element\n});\n// with a checkFn\nwhenAttribute(myCoolHTMLElement, 'value', (newVal, oldVal) => {\n\t\t// make sure the value is a number\n\t\treturn typeof(newVal) === 'number';\n}).then((value) => {\n\t\t// do something with your number value...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenDomReady": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenDomReady",
                "name": "whenDomReady",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait that the dom is ready before resolving the promise",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenDomReady from '@coffeekraken/sugar/js/dom/detect/whenDomReady'\n// using promise\nwhenDomReady().then(() => {\n\t\t// do something\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenDomReady.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenDomReady.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInteract": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenInteract",
                "name": "whenInteract",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait that an interaction is made with the passed element like \"focus\", \"focusIn\", \"mouseover\", etc...",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenInteract from '@coffeekraken/sugar/js/dom/detect/whenInteract'\nawait whenInteract(myCoolElement, {});"
                    }
                ],
                "interface": {
                    "name": "WhenInteractSettingsInterface",
                    "description": "",
                    "definition": {
                        "mouseover": {
                            "description": "Specify if the mouseover event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "mouseout": {
                            "description": "Specify if the mouseout event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "click": {
                            "description": "Specify if the click event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "touchstart": {
                            "description": "Specify if the touchstart event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "touchend": {
                            "description": "Specify if the touchend event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "focus": {
                            "description": "Specify if the focus event has to be used",
                            "type": "Boolean",
                            "default": true
                        }
                    }
                },
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenInteract.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInteract.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenInViewport",
                "name": "whenInViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenInViewport from '@coffeekraken/sugar/js/dom/whenInViewport'\nwhenInViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenInViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenNearViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenNearViewport",
                "name": "whenNearViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is near (100vh before or after) the viewport, or in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenNearViewport from '@coffeekraken/sugar/js/dom/whenNearViewport'\nwhenNearViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenNearViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenNearViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenOutOfViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenOutOfViewport",
                "name": "whenOutOfViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenOutOfViewport from '@coffeekraken/sugar/js/dom/whenOutOfViewport'\nwhenOutOfViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has exit the viewport...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenOutOfViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenOutOfViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenStylesheetsReady": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenStylesheetsReady",
                "name": "whenStylesheetsReady",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until all the HTMLLinkElement's are properly loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenStylesheetsReady from '@coffeekraken/sugar/js/dom/whenStylesheetsReady'\nwhenStylesheetsReady([\n\t\tmyHTMLLinkElement1,\n\t\tmyHTMLLinkElement2\n]).then(() => {\n\t\t// do something when all the links are loaded\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenStylesheetsReady.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenStylesheetsReady.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenTransitionEnd": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenTransitionEnd",
                "name": "whenTransitionEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when his transition has ended",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenTransitionEnd from '@coffeekraken/sugar/js/dom/whenTransitionEnd'\nwhenTransitionEnd(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element transition has ended...\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenTransitionEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenTransitionEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenVisible": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenVisible",
                "name": "whenVisible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is visible",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import whenVisible from '@coffeekraken/sugar/js/dom/whenVisible'\nwhenVisible(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that is now visible\n});"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportBottom": {
                "id": "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportBottom",
                "name": "fromElementTopToViewportBottom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport bottom in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceFromElementTopToViewportBottom from '@coffeekraken/sugar/js/dom/distance/fromElementTopToViewportBottom';\ndistanceFromElementTopViewportBottom(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fromElementTopToViewportBottom.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/fromElementTopToViewportBottom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportTop": {
                "id": "@coffeekraken.sugar.js.dom.distance.fromElementTopToViewportTop",
                "name": "fromElementTopToViewportTop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport top in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import distanceFromElementTopToViewportTop from '@coffeekraken/sugar/js/dom/distance/fromElementTopToViewportTop';\ndistanceFromElementTopViewportBottom(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fromElementTopToViewportTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/fromElementTopToViewportTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.scrollLeft": {
                "id": "@coffeekraken.sugar.js.dom.distance.scrollLeft",
                "name": "scrollLeft",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the amount of scroll left",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollLeft from '@coffeekraken/sugar/js/dom/scrollLeft'\nscrollLeft() // 40"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivier.bossel@gmail.com"
                },
                "filename": "scrollLeft.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/scrollLeft.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.element.areaStats": {
                "id": "@coffeekraken.sugar.js.dom.element.areaStats",
                "name": "areaStats",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function returns you an object with informations about the visible surface of the element like the `percentage`, `percentageX`, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.element",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import areaStats from '@coffeekraken/sugar/js/dom/element/areaStats';\nconst $myElement = document.querySelector('#my-element');\nconst data = areaStats($myElement);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "areaStats.ts",
                "extension": "ts",
                "relPath": "src/js/dom/element/areaStats.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListener": {
                "id": "@coffeekraken.sugar.js.dom.event.addEventListener",
                "name": "addEventListener",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add an event listener on an element and return the function to remove the event listener",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addEventListener from '@coffeekraken/sugar/js/dom/addEventListener'\nconst listener = addEventListener($myCoolElm, 'click', (event) => {\n   // event.type; // => click\n});\n// remove the event listener\nlistener.cancel();\n\n// listen for more than one event at a time\naddEventListener($myCoolElm, 'click,mouseover,mouseout', (event) => {\n   // do something depending on the event.type property\n}).on('mouseover', (event) => {\n   // do something when the event is the mouseover one\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addEventListener.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListener.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListenerOnce": {
                "id": "@coffeekraken.sugar.js.dom.event.addEventListenerOnce",
                "name": "addEventListenerOnce",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add an event listener that will be trigerred only once",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import addEventListenerOnce from '@coffeekraken/sugar/js/dom/addEventListenerOnce'\naddEventListenerOnce(myElm, 'click', (e) => {\n    // do something on click\n});\naddEventListenerOnce(myElm, 'click').on('click', (e) => {\n\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addEventListenerOnce.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListenerOnce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.dispatchEvent": {
                "id": "@coffeekraken.sugar.js.dom.event.dispatchEvent",
                "name": "dispatchEvent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Helper to quickly display an event with some optional data attached to it",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import dispatchEvent from '@coffeekraken/sugar/js/dom/dispatchEvent'\ndispatchEvent(myCoolHTMLElement, 'myCoolEventName', {\n\t\tvar1 : 'value1'\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dispatchEvent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/dispatchEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.form.sendForm": {
                "id": "@coffeekraken.sugar.js.dom.form.sendForm",
                "name": "sendForm",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Send a form through an ajax call and return back a promise resolved with the server response",
                "namespace": "@coffeekraken.sugar.js.dom.form",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import sendForm from '@coffeekraken/sugar/js/dom/sendForm'\nconst myCoolForm = document.querySelector('.my-cool-form')\nsentForm(myCoolForm).then((response) => {\n\t// do something with the response\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sendForm.ts",
                "extension": "ts",
                "relPath": "src/js/dom/form/sendForm.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.input.cursorToEnd": {
                "id": "@coffeekraken.sugar.js.dom.input.cursorToEnd",
                "name": "cursorToEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Place the cursor to the end of the input",
                "namespace": "@coffeekraken.sugar.js.dom.input",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import cursorToEnd from '@coffeekraken/sugar/js/dom/input/cursorToEnd';\ncursorToEnd($input);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierboss$input.com"
                },
                "filename": "cursorToEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/input/cursorToEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.focus": {
                "id": "@coffeekraken.sugar.js.dom.is.focus",
                "name": "focus",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is focus the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFocus from '@coffeekraken/sugar/js/dom/is/focus'\nconst $myElm = document.querySelector('.my-elm')\nif (isFocus($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "focus.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/focus.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.focusWithin": {
                "id": "@coffeekraken.sugar.js.dom.is.focusWithin",
                "name": "focusWithin",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is focusWithin the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isFocusWithin from '@coffeekraken/sugar/js/dom/is/focusWithin'\nconst $myElm = document.querySelector('.my-elm')\nif (isFocusWithin($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "focusWithin.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/focusWithin.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.hover": {
                "id": "@coffeekraken.sugar.js.dom.is.hover",
                "name": "hover",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is hover the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import hover from '@coffeekraken/sugar/js/dom/is/hover'\nconst $myElm = document.querySelector('.my-elm')\nif (hover($myElm)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hover.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/hover.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.inIframe": {
                "id": "@coffeekraken.sugar.js.dom.is.inIframe",
                "name": "inIframe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the page is loaded inside an iframe",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inIframe from '@coffeekraken/sugar/js/dom/is/inIframe'\nif (inIframe()) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inIframe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/inIframe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.inViewport": {
                "id": "@coffeekraken.sugar.js.dom.is.inViewport",
                "name": "inViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is in the viewport or not",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewport from '@coffeekraken/sugar/js/dom/is/inViewport'\nif (await inViewport(myCoolHTMLElement) {\n\t\t// i'm in the viewport\n}"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/inViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.scrollable": {
                "id": "@coffeekraken.sugar.js.dom.is.scrollable",
                "name": "scrollable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is scrollable or not",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isScrollable from '@coffeekraken/sugar/js/dom/is/scrollable'\nif (isScrollable($myElement)) {\n  // do something\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/scrollable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.userScrolling": {
                "id": "@coffeekraken.sugar.js.dom.is.userScrolling",
                "name": "userScrolling",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check the user is scrolling a particular element",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __isUserScrolling from '@coffeekraken/sugar/js/dom/is/userScrolling'\nif (__isUserScrolling(myCoolHTMLElement) {\n\t\t// i'm in the viewport\n}"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "userScrolling.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/userScrolling.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.visible": {
                "id": "@coffeekraken.sugar.js.dom.is.visible",
                "name": "visible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is visible or not.\nVisible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import visible from '@coffeekraken/sugar/js/dom/is/visible'\nif (visible(myCoolHTMLElement) {\n\t\t// i'm visible\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "visible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/visible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.backgroundImageLoaded": {
                "id": "@coffeekraken.sugar.js.dom.load.backgroundImageLoaded",
                "name": "backgroundImageLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when a background image has been loaded on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import backgroundImageLoaded from '@coffeekraken/sugar/js/dom/backgroundImageLoaded'\nbackgroundImageLoaded($myElm).then(() => {\n  // do something when loaded\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "backgroundImageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/backgroundImageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.imageLoaded": {
                "id": "@coffeekraken.sugar.js.dom.load.imageLoaded",
                "name": "imageLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed image is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imageLoaded from '@coffeekraken/sugar/js/dom/imageLoaded'\nimageLoaded(myCoolHTMLImageElement).then(($img) => {\n\t\t// do something when the image is loaded\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/imageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.imagesLoaded": {
                "id": "@coffeekraken.sugar.js.dom.load.imagesLoaded",
                "name": "imagesLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when some images are loaded. This function take advantage of the SPromise class\nand trigger an event called \"img.loaded\" that will be triggered on each loaded images and another called \"loaded\" once all the images are loaded.\nSee in the example bellow.",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import imagesLoaded from '@coffeekraken/sugar/js/dom/imagesLoaded'\nimagesLoaded([\n\t$img1, $img2, $img3\n]).on('loaded', $img => {\n   // do something with the loaded image\n}).then(() => {\n  // do something here\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imagesLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/imagesLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.linkLoaded": {
                "id": "@coffeekraken.sugar.js.dom.load.linkLoaded",
                "name": "linkLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed HTMLLinkElement is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import linkLoaded from '@coffeekraken/sugar/js/dom/linkLoaded'\nlinkLoaded(myCoolHTMLLinlElement).then((link) => {\n\t\t// do something when the link is loaded\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linkLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/linkLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.load.scriptLoaded": {
                "id": "@coffeekraken.sugar.js.dom.load.scriptLoaded",
                "name": "scriptLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when a script has been fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scriptLoaded from '@coffeekraken/sugar/js/dom/scriptLoaded'\nscriptLoaded($script).then(($script) => {\n  // do something here\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scriptLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/load/scriptLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.emptyNode": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.emptyNode",
                "name": "emptyNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Empty a node by removing each childs one after the other",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyNode.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/emptyNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.insertAfter": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.insertAfter",
                "name": "insertAfter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Insert an HTMLElement after another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import insertAfter from '@coffeekraken/sugar/js/dom/insertAfter'\ninsertAfter(myElementToInsert, theReferenceElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "insertAfter.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/insertAfter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.prependChild": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.prependChild",
                "name": "prependChild",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Prepend an HTMLElement into another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import prependChild from '@coffeekraken/sugar/js/dom/prependChild'\nprependChild(myElementToInsert, theReferenceElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "prependChild.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/prependChild.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.stripTags": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.stripTags",
                "name": "stripTags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Strip the tags of the passed text",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import stripTags from '@coffeekraken/sugar/js/dom/stripTags'\nstripTags('<h1>Hello World</h1>') // => Hello World"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripTags.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/stripTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.toDomNodes": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.toDomNodes",
                "name": "toDomNodes",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return a usable nodeTree from a variable source like selector, an html string, an html template tag or a node that will be cloned.",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import toDomNodes from '@coffeekraken/sugar/js/dom/toDomNodes';\ntoDomNodes('<span>Hello World</span>');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toDomNodes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/toDomNodes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrap": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.wrap",
                "name": "wrap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wrap an HTMLElement inside another `$wrapper` one",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wrap from '@coffeekraken/sugar/js/dom/wrap'\nconst $wrapper = document.createElement('div')\n// assuming:\n// <div>\n//   <span class=\"wrap\">Hello World</span>\n// </div>\nwrap(document.querySelector('.wrap'), $wrapper)\n// output:\n// <div>\n//   <div>\n//     <span class=\"wrap\">Hello World</span>\n//   </div>\n// </div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "wrap.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrapInner": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.wrapInner",
                "name": "wrapInner",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wrap the content of the passed `$parent` inside a the passed HTMLElement `$wrapper`",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import wrapInner from '@coffeekraken/sugar/js/dom/wrapInner'\nconst $myWrapper = document.createElement('div')\n// assuming\n// <div class=\"container\">\n//   <span>Hello World</span>\n// </div>\nwrapInner(document.querySelector('.container'), $myWrapper)\n// return\n// <div class=\"container\">\n//   <div>\n//     <span>Hello World</span>\n//   </div>\n// </div>"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel@gmail.com"
                },
                "filename": "wrapInner.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrapInner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.observe.observeAttributes": {
                "id": "@coffeekraken.sugar.js.dom.observe.observeAttributes",
                "name": "observeAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Observe attributes on an HTMLElement and get mutations through the SPromise instance",
                "namespace": "@coffeekraken.sugar.js.dom.observe",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import observeAttributes from '@coffeekraken/sugar/js/dom/observeAttributes'\nconst observer = observeAttributes(myCoolHTMLElement).then(mutation => {\n\t\t// do something with the mutation\n});\n/ the observer\nobserve();"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "observeAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/observe/observeAttributes.ts",
                "children": {
                    "attributes": {
                        "id": "9376d0731aaef00b88f0a3a51c44b6e1d40662a80bc92e1ad646b54a4fc54c06",
                        "name": "attributes",
                        "type": {
                            "types": [
                                {
                                    "type": "{Array}"
                                }
                            ]
                        },
                        "default": "null",
                        "description": "List of attributes to observe"
                    }
                }
            },
            "@coffeekraken.sugar.js.dom.observe.observeMutations": {
                "id": "@coffeekraken.sugar.js.dom.observe.observeMutations",
                "name": "observeMutations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Observe mutations on an HTMLElement and get them through the observable subscription.\nYou can pass the mutation observer settings through the second argument. By default, here's his values:\n- attributes: true,\n- childList: false,\n- subtree: false",
                "namespace": "@coffeekraken.sugar.js.dom.observe",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import observeMutations from '@coffeekraken/sugar/js/dom/observeMutations'\nconst promise = observeMutations(myElement).then(mutation => {\n   // do something with the mutation\n});\n// stop listening for mutations\npromise.cancel();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "observeMutations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/observe/observeMutations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offset": {
                "id": "@coffeekraken.sugar.js.dom.offset.offset",
                "name": "offset",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from the document top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import offset from '@coffeekraken/sugar/js/dom/offset'\nconst offsetElm = offset(myCoolElement);\n// output : { top : 200, left : 300 }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "offset.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offset.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offsetParent": {
                "id": "@coffeekraken.sugar.js.dom.offset.offsetParent",
                "name": "offsetParent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from his parent top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import offsetParent from '@coffeekraken/sugar/js/dom/offsetParent'\nconst offsetParentElm = offsetParent(myCoolElement);\n// output : { top : 200, left : 300 }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "offsetParent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offsetParent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.position.getPositionFromEvent": {
                "id": "@coffeekraken.sugar.js.dom.position.getPositionFromEvent",
                "name": "getPositionFromEvent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the position from an event \"touchstart\", \"touchmove\", \"touchend\", \"mousedown\", \"mousemove\" or \"mouseup\".",
                "namespace": "@coffeekraken.sugar.js.dom.position",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getPositionFromEvent from '@coffeekraken/sugar/js/dom/position/getPositionFromEvent'\n__getPositionFromEvent(e);\n// output : { x, 230, y: 122 }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getPositionFromEvent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/position/getPositionFromEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closest": {
                "id": "@coffeekraken.sugar.js.dom.query.closest",
                "name": "closest",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import closest from '@coffeekraken/sugar/js/dom/query/closest'\nconst closestElm = closest(myCoolElement, '.my-cool-class');\nif (closestElm) {\n\t\t// we have found en element that matches the selector\n}\n// the selector param can be a function that need to return either true or false like so:\nclosest(myCoolElement, (elm) => {\n  return elm.hasAttribute('my-cool-attribute')\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closest.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closest.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closestNotVisible": {
                "id": "@coffeekraken.sugar.js.dom.query.closestNotVisible",
                "name": "closestNotVisible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that is not visible.\nNot visible mean that has either an opacity to 0, a visibility to hidden or a display to none",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import closestNotVisible from '@coffeekraken/sugar/js/dom/query/closestNotVisible'\nconst closestElm = closestNotVisible(myCoolElement);\nif (closestElm) {\n\t\t// we have found en element that is not visible\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closestNotVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closestNotVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closestScrollable": {
                "id": "@coffeekraken.sugar.js.dom.query.closestScrollable",
                "name": "closestScrollable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that is scrollable",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __closestScrollable from '@coffeekraken/sugar/js/node/query/closestScrollable';\n__closestScrollable($myElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closestScrollable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closestScrollable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.matches": {
                "id": "@coffeekraken.sugar.js.dom.query.matches",
                "name": "matches",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Polyfill for the Element.matches function",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import matches from '@coffeekraken/sugar/js/dom/query/matches'\nif (matches(myCoolHTMLElement, '.my-cool-css-selector')) {\n\t\t// the element match the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matches.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/matches.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.next": {
                "id": "@coffeekraken.sugar.js.dom.query.next",
                "name": "next",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element next siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import next from '@coffeekraken/sugar/js/dom/query/next'\nconst nextElm = next(myCoolElement, '.my-cool-class');\nif (nextElm) {\n\t\t// we have found en element that matches the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "next.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/next.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.previous": {
                "id": "@coffeekraken.sugar.js.dom.query.previous",
                "name": "previous",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element previous siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import previous from '@coffeekraken/sugar/js/dom/query/previous'\nconst previousElm = previous(myCoolElement, '.my-cool-class');\nif (previousElm) {\n\t\t// we have found en element that matches the selector\n}"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "previous.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/previous.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelector": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelector",
                "name": "querySelector",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelector function that let you specify\nif you want an element that is visible, or even that is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelector from '@coffeekraken/sugar/js/dom/query/querySelector';\n// simple query\nconst elm = querySelector('.a-cool-css-selector');\n\n// get an element that is in the viewport\nconst elm = querySelector('.a-cool-css-selector', {\n\t\tinViewport : true\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelector.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelector.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorAll": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorAll",
                "name": "querySelectorAll",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelectorAll function that let you specify\nif you want elements that are visible, or even that are in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelectorAll from '@coffeekraken/sugar/js/dom/query/querySelectorAll';\n// simple query\nconst elms = querySelectorAll('.a-cool-css-selector');\n\n// get elements that are in the viewport\nconst elms = querySelectorAll('.a-cool-css-selector', {\n\t\tinViewport : true\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorAll.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorAll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorLive": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorLive",
                "name": "querySelectorLive",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Observe the dom to get all the elements that matches a passed css selector at any point in time.\nBe warned that this use the mutation observer API and will monitor all the document for new nodes. Make sure to use it\nwhen you don't have the chance to use the custom elements API instead",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelectorLive from '@coffeekraken/sugar/js/dom/query/querySelectorLive'\nquerySelectorLive('.my-cool-item', (node, clearFn) => {\n\t    // do something here with the detected node\n     // call clearFn if you want to stop listening for this selector\n     clearFn();\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorLive.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorUp": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorUp",
                "name": "querySelectorUp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import querySelectorUp from '@coffeekraken/sugar/js/dom/query/querySelectorUp'\nconst closestElm = querySelectorUp(myCoolElement, '.my-cool-class');\nif (closestElm) {\n\t\t// we have found en element that matches the selector\n}\n// the selector param can be a function that need to return either true or false like so:\nquerySelectorUp(myCoolElement, (elm) => {\n  return elm.hasAttribute('my-cool-attribute')\n})"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorUp.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.preventScrollRestoration": {
                "id": "@coffeekraken.sugar.js.dom.scroll.preventScrollRestoration",
                "name": "preventScrollRestoration",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Function that set the `history.scrollRestoration` property to `manual`",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import __preventScrolLRestoration from '@coffeekraken/sugar/js/dom/scroll/preventScrollRestoration'\n__preventScrollRestoration();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "preventScrollRestoration.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/preventScrollRestoration.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollLeft": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollLeft",
                "name": "scrollLeft",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the amount of scroll left that the user as made in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollLeft from '@coffeekraken/sugar/js/dom/scroll/scrollLeft';\nscrollLeft();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollLeft.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollLeft.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollTo": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollTo",
                "name": "scrollTo",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Function that let you make a smooth page scroll to a specific element in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollTop from '@coffeekraken/sugar/js/dom/scroll/scrollTo'\nimport easeInOutQuad from '@coffeekraken/sugar/js/easings/easeInOutQuad'\nscrollTo(myCoolHTMLElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollTo.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollTo.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollToLocationHash": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollToLocationHash",
                "name": "scrollToLocationHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Scroll to the location hash if an hash is present.\nThis function will try to get the target element from the hash and scroll to it",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __scrollToLocationHash from '@coffeekraken/sugar/js/dom/scroll/scrollToLocationHash'\n__scrollToLocationHash(500, 0)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollToLocationHash.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollToLocationHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollTop": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollTop",
                "name": "scrollTop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the amount of scroll top that the user as made in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrollTop from '@coffeekraken/sugar/js/dom/scroll/scrollTop';\nscrollTop();"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.size.realHeight": {
                "id": "@coffeekraken.sugar.js.dom.size.realHeight",
                "name": "realHeight",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the full height of an element that has maybe a max-height, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.size",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import realHeight from '@coffeekraken/sugar/js/dom/realHeight';\nrealHeight(myCoolHtmlElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "realHeight.ts",
                "extension": "ts",
                "relPath": "src/js/dom/size/realHeight.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.drag.slideable": {
                "id": "@coffeekraken.sugar.js.dom.drag.slideable",
                "name": "slideable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Simulate the slide gesture with optional inertia and direction restriction",
                "namespace": "@coffeekraken.sugar.js.dom.drag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import slideable from '@coffeekraken/sugar/js/drag/slideable';"
                    }
                ],
                "async": "true",
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "slideable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/slide/slideable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.cssEasingStrToJsFunction": {
                "id": "@coffeekraken.sugar.js.dom.style.cssEasingStrToJsFunction",
                "name": "cssEasingStrToJsFunction",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Convert a css easing string line \"cubic-bezier(.17,.67,.83,.67)\" to a js easing function",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import cssEasingStrToJsFunction from '@coffeekraken/sugar/js/dom/cssEasingStrToJsFunction'\nconst fn = cssEasingStrToJsFunction('cubic-bezier(.17,.67,.83,.67)');\nfn(0.5);\nfn(0.34);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cssEasingStrToJsFunction.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/cssEasingStrToJsFunction.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getAnimationProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getAnimationProperties",
                "name": "getAnimationProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the css animation properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getAnimationProperties from '@coffeekraken/sugar/js/dom/getAnimationProperties'\nconst props = getAnimationProperties(myCoolHTMLElement);\n// output format\n// {\n// \tname : ['animation1'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \titerationCount : [1],\n// \tdirection : ['forward'],\n// \ttotalDuration : 200\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getAnimationProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getAnimationProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getAnimationsFromElement": {
                "id": "@coffeekraken.sugar.js.dom.style.getAnimationsFromElement",
                "name": "getAnimationsFromElement",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the animations applied to the passed element.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getAnimationsFromElement from '@coffeekraken/sugar/js/dom/getAnimationsFromElement'\nconst props = getAnimationsFromElement(myCoolHTMLElement);\n// output format\n// [{\n//   name : 'animation1',\n// \tduration : 200,\n// \tdelay : 0,\n// \ttimingFunction : 'linear',\n// \titerationCount : 1,\n// \tdirection : 'forward',\n//   playState: 'running',\n//   fillMode: 'none'\n// }]"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getAnimationsFromElement.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getAnimationsFromElement.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getCssDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.getCssDeclarations",
                "name": "getCssDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the CSSRules of the passed type",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getCssDeclarations from '@coffeekraken/sugar/js/dom/style/getCssDeclarations';\n__getCssDeclarations('style', [myCoolCssRules]);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCssDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getCssDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getCssRulesFromStylesheet": {
                "id": "@coffeekraken.sugar.js.dom.style.getCssRulesFromStylesheet",
                "name": "getCssRulesFromStylesheet",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the CSSRules of the passed stylesheet",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getCssRulesFromStylesheet from '@coffeekraken/sugar/js/dom/style/getCssRulesFromStylesheet';\n__getCssRulesFromStylesheet(myStylesheet);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCssRulesFromStylesheet.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getCssRulesFromStylesheet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getDefinedStyles": {
                "id": "@coffeekraken.sugar.js.dom.style.getDefinedStyles",
                "name": "getDefinedStyles",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Gets map of defined styles from CSS2Properties object",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getDefinedStyles from '@coffeekraken/sugar/js/dom/style/getDefinedStyles';"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getDefinedStyles.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getDefinedStyles.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getKeyframesDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.getKeyframesDeclarations",
                "name": "getKeyframesDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the keyframes declarations from the passed rules",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getKeyframesDeclarations from '@coffeekraken/sugar/js/dom/style/getKeyframesDeclarations';\n__getKeyframesDeclarations('myCoolAnimation', [myCoolCssRules]);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getKeyframesDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getKeyframesDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getRotateProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getRotateProperties",
                "name": "getRotateProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a rotate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getRotateProperties from '@coffeekraken/sugar/js/dom/getRotateProperties'\nconst props = getRotateProperties(myCoolHTMLElement);\n// output format\n// {\n// \tx : 100,\n// \ty : 0,\n// \tz : 0\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getRotateProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getRotateProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getScaleProperty": {
                "id": "@coffeekraken.sugar.js.dom.style.getScaleProperty",
                "name": "getScaleProperty",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a scale properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getScaleProperty from '@coffeekraken/sugar/js/dom/getScaleProperty'\nconst props = getScaleProperty(myCoolHTMLElement);\n// output format\n// 2"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getScaleProperty.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getScaleProperty.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getStyleProperty": {
                "id": "@coffeekraken.sugar.js.dom.style.getStyleProperty",
                "name": "getStyleProperty",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a style property on the passed element through the computed style.\nThis function try to store the actual style to not trigger more that 1 redraw\neach js execution loop.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getStyleProperty from '@coffeekraken/sugar/js/dom/getStyleProperty'\nconst opacity = getStyleProperty(myCoolHTMLElement, 'opacity');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getStyleProperty.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getStyleProperty.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTransformProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTransformProperties",
                "name": "getTransformProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a translate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTransformProperties from '@coffeekraken/sugar/js/dom/getTransformProperties'\nconst props = getTransformProperties(myCoolHTMLElement);\n// output format\n// {\n// \ttranslateX : 100,\n// \ttranslateY : 0,\n// \ttranslateZ : 0,\n//   rotateX: 0,\n//   rotateY: 0,\n//   rotateZ: 0\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTransformProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTransformProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTransitionProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTransitionProperties",
                "name": "getTransitionProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the css transition properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTransitionProperties from '@coffeekraken/sugar/js/dom/getTransitionProperties'\nconst props = getTransitionProperties(myCoolHTMLElement);\n// output format\n// {\n// \tproperty : ['all'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \ttotalDuration : 200\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTransitionProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTransitionProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTranslateProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTranslateProperties",
                "name": "getTranslateProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a translate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTranslateProperties from '@coffeekraken/sugar/js/dom/getTranslateProperties'\nconst props = getTranslateProperties(myCoolHTMLElement);\n// output format\n// {\n// \tx : 100,\n// \ty : 0,\n// \tz : 0\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTranslateProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTranslateProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.parseKeyframeKey": {
                "id": "@coffeekraken.sugar.js.dom.style.parseKeyframeKey",
                "name": "parseKeyframeKey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Parses KeyFrameRule.keyText to an array of integers holding keyframe percentages",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __parseKeyframeKey from '@coffeekraken/sugar/js/dom/style/parseKeyframeKey';\n__parseKeyframeKey('from');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseKeyframeKey.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/parseKeyframeKey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.parseTransformRule": {
                "id": "@coffeekraken.sugar.js.dom.style.parseTransformRule",
                "name": "parseTransformRule",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Parse the transform rule of an element and returns a simple object with each properties separated.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __parseTransformRule from '@coffeekraken/sugar/js/dom/style/parseTransformRule';\n__parseTransformRule('translate(-100px, 200rem));"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseTransformRule.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/parseTransformRule.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.removeVendorPrefix": {
                "id": "@coffeekraken.sugar.js.dom.style.removeVendorPrefix",
                "name": "removeVendorPrefix",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Remove vendor prefixes from CSSPropertyNames",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __removeVendorPrefix from '@coffeekraken/sugar/js/dom/style/removeVendorPrefix';\n__removeVendorPrefix('moz-something'); // 'something'"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeVendorPrefix.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/removeVendorPrefix.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.style": {
                "id": "@coffeekraken.sugar.js.dom.style.style",
                "name": "style",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Set or remove a css style property on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import style from '@coffeekraken/sugar/js/dom/style'\nstyle(myCoolHTMLElement, {\n\t\tpaddingLeft : 20,\n\t\tdisplay : null\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "style.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/style.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.styleObject2String": {
                "id": "@coffeekraken.sugar.js.dom.style.styleObject2String",
                "name": "styleObject2String",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transform a style object to inline string separated by ;",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import styleObject2String from '@coffeekraken/sugar/js/dom/styleObject2String'\nconst styleString = styleObject2String({\n\t\tpaddingLeft : '20px',\n\t\tdisplay : 'block'\n});\n// output => padding-left:20px; display:block;"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "styleObject2String.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/styleObject2String.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.styleString2Object": {
                "id": "@coffeekraken.sugar.js.dom.style.styleString2Object",
                "name": "styleString2Object",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transform a style string to an object representation",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import styleString2Object from '@coffeekraken/sugar/js/dom/styleString2Object'\nconst styleString = styleString2Object('padding-left:20px; display:block;');\n// output => {\n//\t\tpaddingLeft : '20px',\n// \t\tdisplay : 'block'\n// }"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "styleString2Object.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/styleString2Object.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.transformKeyframesDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.transformKeyframesDeclarations",
                "name": "transformKeyframesDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transforms KeyFrameRule to array of web animation compatible keyframes",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __transformKeyframesDeclarations from '@coffeekraken/sugar/js/dom/style/transformKeyframesDeclarations';"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "transformKeyframesDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/transformKeyframesDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.tag.appendScriptTag": {
                "id": "@coffeekraken.sugar.js.dom.tag.appendScriptTag",
                "name": "appendScriptTag",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Append a script tag either to the head or the body",
                "namespace": "@coffeekraken.sugar.js.dom.tag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendScriptTag from '@coffeekraken/sugar/js/dom/appendScriptTag'\nappendScriptTag('dist/js/app.js')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendScriptTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendScriptTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.tag.appendStylesheetLinkTag": {
                "id": "@coffeekraken.sugar.js.dom.tag.appendStylesheetLinkTag",
                "name": "appendStylesheetLinkTag",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Append a stylesheet link to the page head",
                "namespace": "@coffeekraken.sugar.js.dom.tag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendStylesheetLink from '@coffeekraken/sugar/js/dom/appendStylesheetLink'\nappendStylesheetLink('/dist/css/style.css')"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendStylesheetLinkTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendStylesheetLinkTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.appendStyleTag": {
                "id": "@coffeekraken.sugar.js.dom.appendStyleTag",
                "name": "appendStyleTag",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Append a style tag either to the head or the body",
                "namespace": "@coffeekraken.sugar.js.dom",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import appendStyleTag from '@coffeekraken/sugar/js/dom/appendStyleTag'\nappendStyleTag('dist/js/app.js')"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendStyleTag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/tag/appendStyleTag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.transmation.clearTransmations": {
                "id": "@coffeekraken.sugar.js.dom.transmation.clearTransmations",
                "name": "clearTransmations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clear all the animations and transitions inside a particular dom element.\nYou can specify a timeout if you want to clear them only for a limited amount of time.",
                "namespace": "@coffeekraken.sugar.js.dom.transmation",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import clearTransmations from '@coffeekraken/sugar/js/dom/clearTransmations'\nclearTransmations($myElement, {\n timeout: 1000\n});\nconst reset = clearTransmations($myElement);\nsetTimeout(() => reset(), 2000);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clearTransmations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/transmation/clearTransmations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.traverse.up": {
                "id": "@coffeekraken.sugar.js.dom.traverse.up",
                "name": "up",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three until the callback function return true",
                "namespace": "@coffeekraken.sugar.js.dom.traverse",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import up from '@coffeekraken/sugar/js/dom/traverse/up'\nconst $elm = up($myElement, elm => {\n     return elm.classList.contains('my-class')\n});"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "up.ts",
                "extension": "ts",
                "relPath": "src/js/dom/traverse/up.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.canHaveChildren": {
                "id": "@coffeekraken.sugar.js.dom.utils.canHaveChildren",
                "name": "canHaveChildren",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a tagName String like \"img\", \"div\", etc... or an HTMLElement node\nand return true or false depending if this element is supposed to have children or not.",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import canHaveChildren from '@coffeekraken/sugar/js/dom/canHaveChildren';\ncanHaveChildren('img'); // => false\ncanHaveChildren('div'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "canHaveChildren.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/canHaveChildren.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.exitFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.exitFullscreen",
                "name": "exitFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Exit the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import exitFullscreen from '@coffeekraken/sugar/js/dom/exitFullscreen'\nexitFullscreen()"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exitFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/exitFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.forceRedraw": {
                "id": "@coffeekraken.sugar.js.dom.utils.forceRedraw",
                "name": "forceRedraw",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Force the element to be painted again in case of visual issues",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import forceRedraw from '@coffeekraken/sugar/js/dom/forceRedraw'\nforceRedraw($elm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "forceRedraw.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/forceRedraw.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.inViewportPercentage": {
                "id": "@coffeekraken.sugar.js.dom.utils.inViewportPercentage",
                "name": "inViewportPercentage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return how many percent the passed element is visible in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import inViewportPercentage from '@coffeekraken/sugar/js/dom/inViewportPercentage'\nconst percentage = inViewportPercentage(myCoolHTMLElement);\n// 20"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inViewportPercentage.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/inViewportPercentage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.nodeIndex": {
                "id": "@coffeekraken.sugar.js.dom.utils.nodeIndex",
                "name": "nodeIndex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the inde of the passed node inside the html",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import nodeIndex from '@coffeekraken/sugar/js/dom/nodeIndex'\n// assuming:\n// <li>item #1</li>\n// <li class=\"match\">item #2</li>\n// <li>item #3</li>\nnodeIndex(document.querySelector('.match')) // 1"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "nodeIndex.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/nodeIndex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestAnimationFrame": {
                "id": "@coffeekraken.sugar.js.dom.utils.requestAnimationFrame",
                "name": "requestAnimationFrame",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Proxy for the window.requestAnimationFrame function",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "requestAnimationFrame.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/requestAnimationFrame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.requestFullscreen",
                "name": "requestFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Request fullscreen on the passed DOM element",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import requestFullscreen from '@coffeekraken/sugar/js/dom/requestFullscreen'\nrequestFullscreen(myDomElm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "requestFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/requestFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLetters": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitLetters",
                "name": "splitLetters",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each letters inside an HTMLElement by scoping them inside multiple tags.\nHere's an result sample for : Hello World\n```html\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">H</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">e</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">&nbsp;</span>\n</span>\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">W</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">r</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">d</span>\n</span>\n</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __splitLetters from '@coffeekraken/sugar/js/dom/splitLetters'\nconst myCoolElement = document.querySelector('.my-cool-element');\n__splitLetters(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitLetters.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitLetters.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLines": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitLines",
                "name": "splitLines",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each lines inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello\nWorld\n\n```html\n<p class=\"s-split-lines\">Hello</p>\n<p class=\"s-split-lines\">World</p>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitLines from '@coffeekraken/sugar/js/dom/splitLines'\nconst myCoolElement = document.querySelector('.my-cool-element');\nsplitLines(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitLines.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitWords": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitWords",
                "name": "splitWords",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each words inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello World\n\n```html\n<span class=\"s-split-words\">Hello</span>\n<span class=\"s-split-words\">World</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import splitWords from '@coffeekraken/sugar/js/dom/splitLines'\nconst myCoolElement = document.querySelector('.my-cool-element');\nsplitWords(myCoolElement);"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitWords.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/splitWords.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.textWidth": {
                "id": "@coffeekraken.sugar.js.dom.utils.textWidth",
                "name": "textWidth",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the text width in px of a passed string or the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import textWidth from '@coffeekraken/sugar/js/dom/textWidth'\n// text of an HTMLElement\nconst width = textWidth(myCoolHTMLElement);\n\n// text directly (no font-size management so it's less accurate...)\nconst width = textWidth('Hello World');"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "textWidth.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/textWidth.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.toggleFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.toggleFullscreen",
                "name": "toggleFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Toggle the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import toggleFullscreen from '@coffeekraken/sugar/js/dom/toggleFullscreen'\ntoggleFullscreen(myDomElm)"
                    }
                ],
                "since": "1.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toggleFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utlls/toggleFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.SApp": {
                "id": "@coffeekraken.sugar.js.class.SApp",
                "name": "SApp",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "This class represent an application route class. This mean that you can create an application class that extend this one\nand your instance will have access to a whole package of data like the application name taken from the package.json file, the version,\nthe description, the author(s), the contributor(s), etc...",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "import SApp = from ''@coffeekraken/sugar/js/class/SApp';\nclass MyCoolApp extends SApp {\n   // your app class here...\n}\nconst myApp = new MyCoolApp();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.js.class.SApp.config": {
                "id": "@coffeekraken.sugar.js.class.SApp.config",
                "name": "config",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Get a configuration value from the backend using an ajax call",
                "namespace": "@coffeekraken.sugar.js.class.SApp",
                "example": [
                    {
                        "language": "js",
                        "code": "const host = await myApp.config('log.frontend.mail.host');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.js.class.SApp.meta": {
                "id": "@coffeekraken.sugar.js.class.SApp.meta",
                "name": "meta",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Usefull function that give you back an application meta taken depending on your passed dotted object path",
                "namespace": "@coffeekraken.sugar.js.class.SApp",
                "example": [
                    {
                        "language": "js",
                        "code": "const name = await myApp.meta('name');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts"
            },
            "@coffeekraken.sugar.squid.js.log.log": {
                "id": "@coffeekraken.sugar.squid.js.log.log",
                "name": "log",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Log a message using the transports log system.",
                "namespace": "@coffeekraken.sugar.squid.js.log",
                "example": [
                    {
                        "language": "js",
                        "code": "Squid.log('Hello world', 'error').then(() => {\n   // do something if needed...\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SApp.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SApp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.class.SBind": {
                "id": "@coffeekraken.sugar.js.class.SBind",
                "name": "SBind",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "This class allows to bind properties between objects, object to HTMLElement attribute and vice versa.",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "const binder = new SBind();\n\n// keep in sync the myObject2.title with the myObject1.title property\nbinder.bindObjectPath2ObjectPath(myObject1, 'title', myObject2, 'title');\n\n// update and HTMLElement attribute when the myObject1.title is updated\nbinder.bindObjectPath2ElementAttribute(myObject1, 'title', myHTMLElement, 'title');\n\n// and more..."
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SBind.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SBind.ts",
                "children": {
                    "bind": {
                        "id": "bb8c4c6d83bb9c6d61f2e7518c756c0de931727ff5b9b34f19d630b3884f1f02",
                        "name": "bind",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ]
                        },
                        "description": "This method allows you to bind an Object|HTMLElement property to another Object|HTMLElement property\nThis mean that when the property of the first passed element is updated, the same property on the second\nelement will be updated as well",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.class.SLocalStorageFonts": {
                "id": "@coffeekraken.sugar.js.class.SLocalStorageFonts",
                "name": "SLocalStorageFonts",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ]
                },
                "description": "This class allows to easily store and load custom fonts from the localStorage",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "new SLocalStorageFonts({\n \tjson_path : '/fonts/fonts.json#v1'\n});\n\n// the fonts.json file looks like this\n{\n\t\t\"fonts\" : [{\n  \t\t\"font-family\" : \"Open Sans\",\n    \t\"font-weight\" : 300,\n     \t\"src\" : \"url(data:application/font-woff;base64,d09GRgA...\"\n     }]\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SLocalStorageFonts.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SLocalStorageFonts.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.socket.syncDom": {
                "id": "@coffeekraken.sugar.js.socket.syncDom",
                "name": "syncDom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Simply connect to a backend socket.io server and listen for specifics messages from it to refresh automatically the DOM.\nThe messages that are listened are:\n- 'SSocketDom.html': Used to send some html to \"inject/replace\" in the current page HTML\n- 'SSocketDom.script': Used to add a script tag to the page\n- 'SSocketDom.style': Used to add a style tag to the page",
                "namespace": "@coffeekraken.sugar.js.socket",
                "status": "wip",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.settings.node": {
                "id": "@coffeekraken.sugar.js.class.settings.node",
                "name": "settings.node",
                "type": {
                    "types": [
                        {
                            "type": "HTMLElement"
                        }
                    ]
                },
                "default": "document.body",
                "description": "The root node where the html contents will be injected if no node is passed with the event",
                "namespace": "@coffeekraken.sugar.js.class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js-class.settings.action": {
                "id": "@coffeekraken.sugar.js-class.settings.action",
                "name": "settings.action",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ]
                },
                "default": "'replace'",
                "description": "Specify which action will be executed if no one is passed with the event.\nIt can be one of these:\n- 'append': Will append the HTML content to the existing one\n- 'replace': Will replace the HTML content with the new one\n- 'prepend': Will inject the HTML content before the existing one",
                "namespace": "@coffeekraken.sugar.js-class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.settings.events": {
                "id": "@coffeekraken.sugar.js.class.settings.events",
                "name": "settings.events",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "default": "{}",
                "description": "Save the events scoped settings objects",
                "namespace": "@coffeekraken.sugar.js.class",
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.emit": {
                "id": "@coffeekraken.sugar.js.class.emit",
                "name": "emit",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Emit an event with an object containing some values to pass to the server",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "myCoolSocketDomInstance.emit('coco', { hello: 'world' });"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts"
            },
            "@coffeekraken.sugar.js.class.registerEvent": {
                "id": "@coffeekraken.sugar.js.class.registerEvent",
                "name": "registerEvent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "description": "Register a new event with an handler function that will handle the event content",
                "namespace": "@coffeekraken.sugar.js.class",
                "example": [
                    {
                        "language": "js",
                        "code": "myCoolSocketDomInstance.registerEvent('hello', (data, settings) => {\n   // do something with the event content and the settings\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SSocketDom.ts",
                "extension": "ts",
                "relPath": "src/js/html/__wip__.wip/SSocketDom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.http.getFreePort": {
                "id": "@coffeekraken.sugar.node.http.getFreePort",
                "name": "getFreePort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns you a free port.\nYou can pass a port to check as parameter and if it is free, you will get it back as result",
                "namespace": "@coffeekraken.sugar.node.http",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getFreePort from '@coffeekraken/sugar/node/network/utils/getFreePort';\nawait getFreePort(); // => 22343"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "getFreePort.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/getFreePort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.network.ipAddress": {
                "id": "@coffeekraken.sugar.node.network.ipAddress",
                "name": "ipAddress",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get your ip address",
                "namespace": "@coffeekraken.sugar.node.network",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ipAddress from '@coffeekraken/sugar/node/network/utils/ipAddress';\nipAddress(); // => 192.168.10.45"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "ipAddress.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/ipAddress.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.http.isPortFree": {
                "id": "@coffeekraken.sugar.node.http.isPortFree",
                "name": "isPortFree",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed port is free or not",
                "namespace": "@coffeekraken.sugar.node.http",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import isPortFree from '@coffeekraken/sugar/node/network/utils/isPortFree';\nawait isPortFree(22000); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "isPortFree.ts",
                "extension": "ts",
                "relPath": "src/node/network/utils/isPortFree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.console.html.tagsMap": {
                "id": "@coffeekraken.sugar.js.console.html.tagsMap",
                "name": "tagsMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Store the tag->function map used in ```parseHtml``` function for example",
                "namespace": "@coffeekraken.sugar.js.console.html",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "tagsMap.ts",
                "extension": "ts",
                "relPath": "src/shared/console/html/tagsMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.availableColors": {
                "id": "@coffeekraken.sugar.shared.dev.colors.availableColors",
                "name": "availableColors",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```colorValue``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import availableColors from '@coffeekraken/sugar/shared/dev/color/availableColors';\navailableColors(); => ['black','white','yellow','green',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "availableColors.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/availableColors.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.colorValue": {
                "id": "@coffeekraken.sugar.shared.dev.colors.colorValue",
                "name": "colorValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```getColor``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import colorValue from '@coffeekraken/sugar/shared/dev/color/colorValue';\ncolorValue('black'); => #000000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "colorValue.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/colorValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.color.getColorFor": {
                "id": "@coffeekraken.sugar.shared.dev.color.getColorFor",
                "name": "getColorFor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass anything like an object, a string, etc... and get the same\ncolor back everytime you pass the same value.\nThis if usefull for output logs, etc...",
                "namespace": "@coffeekraken.sugar.shared.dev.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getColorFor from '@coffeekraken/sugar/shared/dev/color/getColorFor';\ngetColorFor('something'); // => cyan\ngetColorFor({\n     else: true\n}); // => magenta\ngetColorFor('something') // => cyan"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getColorFor.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/getColorFor.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.types.dataTypesArray": {
                "id": "@coffeekraken.sugar.shared.dev.types.dataTypesArray",
                "name": "dataTypesArray",
                "type": {
                    "types": [
                        {
                            "type": "Array"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is just a list of data types available in the\ncurrent language (node/js)",
                "namespace": "@coffeekraken.sugar.shared.dev.types",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dataTypesArray.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/types/dataTypesArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.npm.parseAuthorString": {
                "id": "@coffeekraken.sugar.js.npm.parseAuthorString",
                "name": "parseAuthorString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an author string like \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\" and\ntransform it into a plain object with these properties: name, email and url",
                "namespace": "@coffeekraken.sugar.js.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import parseAuthorString from '@coffeekraken/sugar/js/npm/utils/parseAuthorString';\nparseAuthorString(\"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\")\n// => {\n  \"name\": \"Olivier Bossel\",\n  \"email\": \"olivier.bossel@gmail.com\",\n  \"url\": \"https://olivierbossel.com\"\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseAuthorString.ts",
                "extension": "ts",
                "relPath": "src/shared/npm/utils/parseAuthorString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.npm.standardizeJson": {
                "id": "@coffeekraken.sugar.js.npm.standardizeJson",
                "name": "standardizeJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package.json JSON formatted object and standardize\nsome fields like the \"author\" one to be sure it is an object at the end,\nthe \"contributors\" array the same way as the \"author\" one, etc... Here's the list\nof processed actions:\n1. Transform the string version of the \"author\" field into an object with the properties \"name\", \"email\" and \"url\"\n2. Transform the string version of the \"contributors\" field into an object with the properties \"name\", \"email\" and \"url\"",
                "namespace": "@coffeekraken.sugar.js.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import standardizeJson from '@coffeekraken/sugar/js/npm/utils/standardizeJson';\nstandardizeJson({\n   \"author\": \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\"\n}); // => {\n   \"author\": {\n     \"name\": \"Olivier Bossel\",\n     \"email\": \"olivier.bossel@gmail.com\",\n     \"url\": \"https://olivierbossel.com\"\n   }\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "standardizeJson.ts",
                "extension": "ts",
                "relPath": "src/shared/npm/utils/standardizeJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.interface.WhenInteractSettingsInterface": {
                "id": "@coffeekraken.sugar.js.dom.detect.interface.WhenInteractSettingsInterface",
                "name": "WhenInteractSettingsInterface",
                "type": {
                    "types": [
                        {
                            "type": ".                      Class"
                        }
                    ]
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the `whenInteract` settings.",
                "namespace": "@coffeekraken.sugar.js.dom.detect.interface",
                "status": "beta",
                "interface": {
                    "name": "WhenInteractSettingsInterface",
                    "description": "",
                    "definition": {
                        "mouseover": {
                            "description": "Specify if the mouseover event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "mouseout": {
                            "description": "Specify if the mouseout event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "click": {
                            "description": "Specify if the click event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "touchstart": {
                            "description": "Specify if the touchstart event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "touchend": {
                            "description": "Specify if the touchend event has to be used",
                            "type": "Boolean",
                            "default": true
                        },
                        "focus": {
                            "description": "Specify if the focus event has to be used",
                            "type": "Boolean",
                            "default": true
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "WhenInteractSettingsInterface.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/interface/WhenInteractSettingsInterface.ts",
                "children": {}
            }
        }
    }
}
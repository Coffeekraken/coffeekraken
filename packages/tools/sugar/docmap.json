{
    "map": {},
    "generated": {
        "map": {
            "@coffeekraken.sugar.config.themeUi.menu.paddingInline": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.paddingInline",
                "name": "paddingInline",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.padding.50]",
                "description": "Specify the default padding inline for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.paddingBlock": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.paddingBlock",
                "name": "paddingBlock",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.padding.50]",
                "description": "Specify the default padding block for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.borderRadius": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.borderRadius",
                "name": "borderRadius",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.borderRadius]",
                "description": "Specify the default border radius for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.borderWidth": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.borderWidth",
                "name": "borderWidth",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.borderWidth]",
                "description": "Specify the default border width for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.transition": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.transition",
                "name": "transition",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.transition]",
                "description": "Specify the default transition for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.defaultLnf": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.defaultLnf",
                "name": "defaultLnf",
                "type": {
                    "types": [
                        {
                            "type": "Number"
                        }
                    ],
                    "raw": "Number"
                },
                "default": "[theme.ui.default.defaultLnf]",
                "description": "Specify the default look and feel for your menus",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.defaultType": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.defaultType",
                "name": "defaultType",
                "type": {
                    "types": [
                        {
                            "type": "Number"
                        }
                    ],
                    "raw": "Number"
                },
                "default": "primary",
                "description": "Specify the default look and feel for your menus",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.depth": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.depth",
                "name": "depth",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.depth]",
                "description": "Specify the default depth for code items",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.menu.rhythmVertical": {
                "id": "@coffeekraken.sugar.config.themeUi.menu.rhythmVertical",
                "name": "rhythmVertical",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "default": "[theme.ui.default.rhythmVertical]",
                "description": "Specify the default vertical rhythm for your code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.menu",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.paddingInline": {
                "id": "@coffeekraken.sugar.config.themeUi.card.paddingInline",
                "name": "paddingInline",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.padding.50]",
                "description": "Specify the default padding inline for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.paddingBlock": {
                "id": "@coffeekraken.sugar.config.themeUi.card.paddingBlock",
                "name": "paddingBlock",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.padding.50]",
                "description": "Specify the default padding block for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.borderRadius": {
                "id": "@coffeekraken.sugar.config.themeUi.card.borderRadius",
                "name": "borderRadius",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.borderRadius]",
                "description": "Specify the default border radius for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.borderWidth": {
                "id": "@coffeekraken.sugar.config.themeUi.card.borderWidth",
                "name": "borderWidth",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.borderWidth]",
                "description": "Specify the default border width for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.transition": {
                "id": "@coffeekraken.sugar.config.themeUi.card.transition",
                "name": "transition",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.transition]",
                "description": "Specify the default transition for code ui",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts"
            },
            "@coffeekraken.sugar.config.themeUi.card.depth": {
                "id": "@coffeekraken.sugar.config.themeUi.card.depth",
                "name": "depth",
                "type": {
                    "types": [
                        {
                            "type": "String"
                        }
                    ],
                    "raw": "String"
                },
                "default": "[theme.ui.default.depth]",
                "description": "Specify the default depth for code items",
                "namespace": "@coffeekraken.sugar.config.themeUi.card",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "themeUi.config.ts",
                "extension": "config",
                "relPath": "src/config/themeUi.config.ts",
                "children": {}
            },
            "@coffeekraken.sugar.config.viewRenderer.rootDirs": {
                "id": "@coffeekraken.sugar.config.viewRenderer.rootDirs",
                "name": "rootDirs",
                "type": {
                    "types": [
                        {
                            "type": "array",
                            "of": [
                                "string"
                            ]
                        }
                    ],
                    "raw": "string[]"
                },
                "default": "['[config.storage.src.rootDir]/views']",
                "description": "Specify the roots views directories",
                "namespace": "@coffeekraken.sugar.config.viewRenderer",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "viewRenderer.config.ts",
                "extension": "config",
                "relPath": "src/config/viewRenderer.config.ts",
                "children": {}
            },
            "@coffeekraken.sugar.cli.interface.SRunCommandParamsInterface": {
                "id": "@coffeekraken.sugar.cli.interface.SRunCommandParamsInterface",
                "name": "SRunCommandParamsInterface",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent the interface that describe parameters of the `sugar command.run` command",
                "namespace": "@coffeekraken.sugar.cli.interface",
                "status": "beta",
                "interface": {
                    "name": "SRunCommandParamsInterface",
                    "description": "",
                    "definition": {
                        "command": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "Specify the command you want to execute",
                            "alias": "c"
                        },
                        "directory": {
                            "type": {
                                "types": [
                                    {
                                        "type": "String"
                                    }
                                ],
                                "raw": "String"
                            },
                            "description": "Specify where you want to execute this command. Can be a glob to execute command into multiple directories at once",
                            "alias": "d"
                        },
                        "verbose": {
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "description": "Specify if you want each process to log or not",
                            "default": false,
                            "alias": "v"
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SRunCommandParamsInterface.ts",
                "extension": "ts",
                "relPath": "src/cli/interface/SRunCommandParamsInterface.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.copy": {
                "id": "@coffeekraken.sugar.js.clipboard.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to copy",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to copy to the clipboard the passed text",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy } from '@coffeekraken/sugar/clipboard';\n__copy('Hello world');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.clipboard.read": {
                "id": "@coffeekraken.sugar.js.clipboard.read",
                "name": "read",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the content of the clipboard",
                "namespace": "@coffeekraken.sugar.js.clipboard",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy, __read } from '@coffeekraken/sugar/clipboard';\nawait __read();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/js/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.console.tagsMap": {
                "id": "@coffeekraken.sugar.js.console.tagsMap",
                "name": "tagsMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Store the tag->function map used in ```parseHtml``` function for example",
                "namespace": "@coffeekraken.sugar.js.console",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "tagsMap.ts",
                "extension": "ts",
                "relPath": "src/js/console/tagsMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.convert.emToPx": {
                "id": "@coffeekraken.sugar.js.convert.emToPx",
                "name": "emToPx",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "em": {
                        "name": "em",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The rem value to convert",
                        "defaultStr": ""
                    },
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to take as source for calculating the em",
                        "defaultStr": "document.documentElement"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __emToPx } from '@coffeekraken/sugar/convert';\n__emToPx(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emToPx.ts",
                "extension": "ts",
                "relPath": "src/js/convert/emToPx.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.convert.pxToEm": {
                "id": "@coffeekraken.sugar.js.convert.pxToEm",
                "name": "pxToEm",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "em": {
                        "name": "em",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The rem value to convert",
                        "defaultStr": ""
                    },
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to take as source for calculating the em",
                        "defaultStr": "document.documentElement"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pxToEm } from '@coffeekraken/sugar/convert';\n__pxToEm(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pxToEm.ts",
                "extension": "ts",
                "relPath": "src/js/convert/pxToEm.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.convert.pxToRem": {
                "id": "@coffeekraken.sugar.js.convert.pxToRem",
                "name": "pxToRem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "em": {
                        "name": "em",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The rem value to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pxToRem } from '@coffeekraken/sugar/convert';\n__pxToRem(36);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pxToRem.ts",
                "extension": "ts",
                "relPath": "src/js/convert/pxToRem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.convert.remToPx": {
                "id": "@coffeekraken.sugar.js.convert.remToPx",
                "name": "remToPx",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "rem": {
                        "name": "rem",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The rem value to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert rem value to a px one",
                "namespace": "@coffeekraken.sugar.js.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __remToPx } from '@coffeekraken/sugar/convert';\n__remToPx(2);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "remToPx.ts",
                "extension": "ts",
                "relPath": "src/js/convert/remToPx.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cookie.deleteCookie": {
                "id": "@coffeekraken.sugar.js.cookie.deleteCookie",
                "name": "deleteCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The cookie name to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Delete a cookie",
                "namespace": "@coffeekraken.sugar.js.cookie",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deleteCookie } from '@coffeekraken/sugar/cookie';\n__deleteCookie('myCookie');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deleteCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/deleteCookie.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cookie.getCookie": {
                "id": "@coffeekraken.sugar.js.cookie.getCookie",
                "name": "getCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The cookie name to get",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a cookie value",
                "namespace": "@coffeekraken.sugar.js.cookie",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getCookie } from '@coffeekraken/sugar/cookie';\n__getCookie('myCookie');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/getCookie.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cookie.setCookie": {
                "id": "@coffeekraken.sugar.js.cookie.setCookie",
                "name": "setCookie",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The name of the cookie to set",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The cookie value to set",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "ISetCookieSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<ISetCookieSettings>"
                        },
                        "description": "Some settings to configure your cookie",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path of the cookie to store",
                        "default": "/",
                        "defaultStr": "\"/\""
                    },
                    "domain": {
                        "name": "domain",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The domain on which to store the cookie",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "expires": {
                        "name": "expires",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date when the cookie expires",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "max-age": {
                        "name": "max-age",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number of seconds until the cookie expires",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "secure": {
                        "name": "secure",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if the cookie is available only on HTTPS or not",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "samesite": {
                        "name": "samesite",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                },
                                {
                                    "type": "'strict'"
                                },
                                {
                                    "type": "'lax'"
                                }
                            ],
                            "raw": "Boolean | 'strict' | 'lax'"
                        },
                        "description": "Controls whether or not a cookie is sent with cross-site requests, providing some protection against cross-site request forgery attacks (CSRF)",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "httpOnly": {
                        "name": "httpOnly",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Forbids JavaScript from accessing the cookie, for example, through the Document.cookie property.",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Set a cookie",
                "namespace": "@coffeekraken.sugar.js.cookie",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __setCookie } from '@coffeekraken/sugar/cookie';\n__setCookie('myCookie', 'hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "setCookie.ts",
                "extension": "ts",
                "relPath": "src/js/cookie/setCookie.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLazySrcAttribute": {
                "id": "@coffeekraken.sugar.js.feature.imagesLazySrcAttribute",
                "name": "imagesLazySrcAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ],
                    "raw": "Feature"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your feature",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The offset before entering in the viewport to set the \"src\" attribute",
                        "default": 50,
                        "defaultStr": "50"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `img` elements.\nThe video `src` attribute will be populated when the `img` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __imagesLazySrcAttribute } from '@coffeekraken/sugar/feature';\n__imagesLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<img lazy-src=\"my-cool-image.jpg\" />"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imagesLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.imagesLoadedAttribute": {
                "id": "@coffeekraken.sugar.js.feature.imagesLoadedAttribute",
                "name": "imagesLoadedAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ],
                    "raw": "Feature"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your feature",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add on every images the attribute \"loaded\" when it has been fully loaded. This is useful\nfor styling purposes and for others thinks as well.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __imagesLoadedAttribute } from '@coffeekraken/sugar/feature';\n __imagesLoadedAttribute();\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "imagesLoadedAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/imagesLoadedAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.handleInputAttributes": {
                "id": "@coffeekraken.sugar.js.feature.handleInputAttributes",
                "name": "handleInputAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ],
                    "raw": "Feature"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your feature",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "empty": {
                        "name": "empty",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to \"empty\" attribute",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "dirty": {
                        "name": "dirty",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to \"dirty\" attribute",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "hasValue": {
                        "name": "hasValue",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to \"hasValue\" attribute",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add some attributes on inputs, textarea and select to help with styling purposes and more.\nHere's the attributes added:\n- `has-value`: When the input has a value in it\n- `empty`: When the input is has no value in it\n- `dirty`: When the input has been touched",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __inputAdditionalAttributes } from '@coffeekraken/sugar/feature';\n __inputAdditionalAttributes();\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inputAdditionalAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/feature/inputAdditionalAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.linksStateAttributes": {
                "id": "@coffeekraken.sugar.js.feature.linksStateAttributes",
                "name": "linksStateAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ],
                    "raw": "Feature"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your feature",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply add some special attributes on links like \"actual\" when the link correspond to the actual visited page url,\n\"actual-child\" when the link point to a child page, and maybe some more depending on needs and \"actual-parent\" on the actual link parent node",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __linksStateAttributes } from '@coffeekraken/sugar/feature';\n__linksStateAttributes();"
                    },
                    {
                        "language": "html",
                        "code": "<!-- page url: /something -->\n<a href=\"/something\" actual>Hello</a>\n<a href=\"/something/cool\" actual-child>World</a>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linksStateAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/feature/linksStateAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScroll": {
                "id": "@coffeekraken.sugar.js.feature.smoothScroll",
                "name": "smoothScroll",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IsmoothScrollSettings"
                                }
                            ],
                            "raw": "IsmoothScrollSettings"
                        },
                        "description": "Some settings to tweak the smooth scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scroll": {
                        "name": "scroll",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some scroll settings that you can check on the sugar.dom.scroll.scrollTo function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature enable some underhood features like the automatic scroll on anchor links as well as\nthe smooth scroll on page load.",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __smoothScroll } from '@coffeekraken/sugar/feature'\n__smoothScroll()"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScroll.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScroll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnAnchorLinks": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnAnchorLinks",
                "name": "smoothScrollOnAnchorLinks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISmoothScrollOnAnchorLinksSettings"
                                }
                            ],
                            "raw": "ISmoothScrollOnAnchorLinksSettings"
                        },
                        "description": "Some settings to tweak the smooth scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scroll": {
                        "name": "scroll",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some scroll settings that you can check on the sugar.dom.scroll.scrollTo function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Listen for links contains an hash to init them for scroll to target on click",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __smoothScrollOnAnchorLinks } from '@coffeekraken/sugar/feature'\n__smoothScrollOnAnchorLinks();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnAnchorLinks.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnAnchorLinks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnHashChange": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnHashChange",
                "name": "smoothScrollOnHashChange",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISmoothScrollOnHashChangeSettings"
                                }
                            ],
                            "raw": "ISmoothScrollOnHashChangeSettings"
                        },
                        "description": "Some settings to tweak the smooth scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scroll": {
                        "name": "scroll",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some scroll settings that you can check on the sugar.dom.scroll.scrollTo function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on hash changes",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __smoothScrollOnHashChange } from '@coffeekraken/sugar/feature'\n__smoothScrollOnHashChange();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnHashChange.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnHashChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.smoothScrollOnPageLoad": {
                "id": "@coffeekraken.sugar.js.feature.smoothScrollOnPageLoad",
                "name": "smoothScrollOnPageLoad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISmoothScrollOnPageLoadSettings"
                                }
                            ],
                            "raw": "ISmoothScrollOnPageLoadSettings"
                        },
                        "description": "Some settings to tweak the smooth scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scroll": {
                        "name": "scroll",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some scroll settings that you can check on the sugar.dom.scroll.scrollTo function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This feature simply allow a snooth scroll on page load if an hash exists in the url",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __smoothScrollOnPageLoad } from '@coffeekraken/sugar/feature'\n__smoothScrollOnPageLoad();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "smoothScrollOnPageLoad.ts",
                "extension": "ts",
                "relPath": "src/js/feature/smoothScrollOnPageLoad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.feature.videoLazySrcAttribute": {
                "id": "@coffeekraken.sugar.js.feature.videoLazySrcAttribute",
                "name": "videoLazySrcAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Feature"
                        }
                    ],
                    "raw": "Feature"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your feature",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The offset before entering in the viewport to set the \"src\" attribute",
                        "default": 50,
                        "defaultStr": "50"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add support for the `lazy-src` attribute on `video` elements.\nThe video `src` attribute will be populated when the `video` element enter the viewport",
                "namespace": "@coffeekraken.sugar.js.feature",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __videoLazySrcAttribute } from '@coffeekraken/sugar/feature';\n__videoLazySrcAttribute();"
                    },
                    {
                        "language": "html",
                        "code": "<video lazy-src=\"my-cool-video.mp4\"></video>"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "videosLazySrcAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/feature/videosLazySrcAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.filter.SGooeySvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SGooeySvgFilter",
                "name": "SGooeySvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent a gooey SVG filter that can be applied on any HTMLElement.\nHere's the values that you can control on it:\n- blur: The amout of blur you want\n- contrast: The amout of contrast you want\n- shrink: The amount of shrink you want\n- amount: The overall amount of effect you want",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SGooeySvgFilter } from '@coffeekraken/sugar/filter';\nconst filter = new __SGooeySvgFilter();\nfilter.applyTo(myCoolHTMLElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGooeySvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SGooeySvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "sa90f73c83b45182b9c76cf0825f7733d81f803d608ad8ce68d9e162df3063f2d",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "amount": {
                                "name": "amount",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Number"
                                        }
                                    ],
                                    "raw": "Number"
                                },
                                "description": "The amount of effect to apply",
                                "default": 8,
                                "defaultStr": "8"
                            }
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "blur": {
                        "id": "s0d008e859a70a22b17be44fb38bed951dd5e596af2278d116ed5e2be30846eb2",
                        "name": "blur",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Get/Set the blur amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "contrast": {
                        "id": "s80a5d16c651bc68586610e848dec1c352d5196cd14ae2c471b56d145ed19eadf",
                        "name": "contrast",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Get the contrast amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "shrink": {
                        "id": "sfb928f5cadd62df1e0a0368d952412af22fdccdf89689afc85b8216410659f20",
                        "name": "shrink",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Get the shrink amount to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "amount": {
                        "id": "sda0d9383b7c5913604d6a26ef43618cf0360a6703d12097ff06a2479c7d7bd1b",
                        "name": "amount",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Set the overall amount of effect to produce",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SGradientSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SGradientSvgFilter",
                "name": "SGradientSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SGradientSvgFilter } from '@coffeekraken/sugar/filter';\nconst filter = new  __SGradientSvgFilter();\nfilter.linear(['red','blue','green']);\nfilter.applyTo(myCoolHTMLElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SGradientSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SGradientSvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "sbde39a062f8f6f8f587d2fa1efddd894e1baee24b66dc5f6bc45e94887d33d06",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "linear": {
                        "id": "s63df70cf78ea753612f39c4194d91751ca7685a5996024bf8b4440c8d470bdf8",
                        "name": "linear",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "colors": {
                                "name": "colors",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Array"
                                        }
                                    ],
                                    "raw": "Array"
                                },
                                "description": "An array of colors for your gradient",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The settings of your gradient that consist of an object like : ```{width: 512, height: 512, x0: 0, x1: 512, y0: 0, y1: 1}```",
                                "defaultStr": ""
                            }
                        },
                        "description": "Linear gradient",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "radial": {
                        "id": "sfdfdb1649d2822fc01d64de4ef9f4797b59717dc46006d92b7eefe23866c2bc3",
                        "name": "radial",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "colors": {
                                "name": "colors",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Array"
                                        }
                                    ],
                                    "raw": "Array"
                                },
                                "description": "An array of colors for your gradient",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The settings of your gradient that consist of an object like : ```{width: 512, height: 512, x0: 256, x1: 256, y0: 256, y1: 256, r0: 0, r1: 512}```",
                                "defaultStr": ""
                            }
                        },
                        "description": "Radial gradient",
                        "example": [
                            {
                                "language": "js",
                                "code": "myFilter.radial(['#ff0000', '#00ffff], {\n   width: 300,\n   height: 300\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "applyto": {
                        "id": "s456910ceb469d20527899df61566fdd8dbb677efe6835065c4d59fb6472fb823",
                        "name": "applyTo",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "elm": {
                                "name": "elm",
                                "type": {
                                    "types": [
                                        {
                                            "type": "HTMLElement"
                                        }
                                    ],
                                    "raw": "HTMLElement"
                                },
                                "description": "The element on which to apply the filter",
                                "defaultStr": ""
                            }
                        },
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unapplyfrom": {
                        "id": "s827a5ae30e282d21e2512db7a80f6b08171891bd66937b3e6a7097a4228388c3",
                        "name": "unapplyFrom",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "elm": {
                                "name": "elm",
                                "type": {
                                    "types": [
                                        {
                                            "type": "HTMLElement"
                                        }
                                    ],
                                    "raw": "HTMLElement"
                                },
                                "description": "The element to unapply the filter from",
                                "defaultStr": ""
                            }
                        },
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SMotionblurSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SMotionblurSvgFilter",
                "name": "SMotionblurSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent a motion blur svg filter that will blur your\nelement depending on his movements, direction and speed",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SMotionblurSvgFilter } from '@coffeekraken/sugar/filter';\nconst filter = new  __SMotionblurSvgFilter();\nfilter.applyTo(myCoolHTMLElement);\n// now when your element will move, it will be blured accordingly\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SMotionblurSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SMotionblurSvgFilter.ts",
                "children": {
                    "amount": {
                        "id": "sc1b472d89210eb4478b79ca26cf81e2c9c36bd835bcb497472ee6824aab12cf1",
                        "name": "amount",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "default": "0.5",
                        "description": "Store the amount of motion blur to apply",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "constructor": {
                        "id": "s47963561d60c468541e3726665c0e8ab0759b7b26f53c6679f678fd46d72c2a7",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "amount": {
                                "name": "amount",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Number"
                                        }
                                    ],
                                    "raw": "Number"
                                },
                                "description": "The motion blur amount",
                                "default": 0.5,
                                "defaultStr": "0.5"
                            }
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "applyto": {
                        "id": "sb297d47ff7fdf6d6dcbde2652b04bee6b70617d57bea161d06e0ee5e145b8012",
                        "name": "applyTo",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "elm": {
                                "name": "elm",
                                "type": {
                                    "types": [
                                        {
                                            "type": "HTMLElement"
                                        }
                                    ],
                                    "raw": "HTMLElement"
                                },
                                "description": "The element on which to apply the filter",
                                "defaultStr": ""
                            }
                        },
                        "description": "Apply the filter to element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unapplyfrom": {
                        "id": "s827a5ae30e282d21e2512db7a80f6b08171891bd66937b3e6a7097a4228388c3",
                        "name": "unapplyFrom",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "elm": {
                                "name": "elm",
                                "type": {
                                    "types": [
                                        {
                                            "type": "HTMLElement"
                                        }
                                    ],
                                    "raw": "HTMLElement"
                                },
                                "description": "The element to unapply the filter from",
                                "defaultStr": ""
                            }
                        },
                        "description": "Remove the filter from element",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "destroy": {
                        "id": "s32d651541de4b05ecf376ec4060b8db764a3bba3c1b866c345538c73a14b6f6b",
                        "name": "destroy",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Destroy the filter",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.filter.SOutlineSvgFilter": {
                "id": "@coffeekraken.sugar.js.filter.SOutlineSvgFilter",
                "name": "SOutlineSvgFilter",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This class represent an outline filter that can be applied on any HTMLElement.",
                "namespace": "@coffeekraken.sugar.js.filter",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import {__SOutlineSvgFilter } from '@coffeekraken/sugar/filter';\nconst filter = new __SOutlineSvgFilter();\nfilter.applyTo(myCoolHTMLElement);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SOutlineSvgFilter.ts",
                "extension": "ts",
                "relPath": "src/js/filter/SOutlineSvgFilter.ts",
                "children": {
                    "constructor": {
                        "id": "sd100d105b5c71371fb0307992d19a0f43e52c4316db3feb60a316416c7d51880",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "radius": {
                                "name": "radius",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Number"
                                        }
                                    ],
                                    "raw": "Number"
                                },
                                "description": "The amount of effect to apply",
                                "default": 8,
                                "defaultStr": "8"
                            }
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "radius": {
                        "id": "s06ee447bf68df948c08015f7a9e7bb8946e94d0c867f90cfeaa90e44eba349dd",
                        "name": "radius",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Get/Set the radius to produce the effect",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.is.isChrome": {
                "id": "@coffeekraken.sugar.js.is.isChrome",
                "name": "isChrome",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is chrome",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isChrome } from '@coffeekraken/sugar/is'\nif ( __isChrome()) {\n  // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isChrome.ts",
                "extension": "ts",
                "relPath": "src/js/is/isChrome.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isCrawler": {
                "id": "@coffeekraken.sugar.js.is.isCrawler",
                "name": "isCrawler",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if request is from a crawler (google bot, etc...) or not",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCrawler } from '@coffeekraken/sugar/is'\nif (__isCrawler()) {\n  // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCrawler.ts",
                "extension": "ts",
                "relPath": "src/js/is/isCrawler.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isEdge": {
                "id": "@coffeekraken.sugar.js.is.isEdge",
                "name": "isEdge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is edge",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEdge } from '@coffeekraken/sugar/is'\nif (__isEdge()) {\n  // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEdge.ts",
                "extension": "ts",
                "relPath": "src/js/is/isEdge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isFirefox": {
                "id": "@coffeekraken.sugar.js.is.isFirefox",
                "name": "isFirefox",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is firefox",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFirefox } from '@coffeekraken/sugar/is'\nif (__isFirefox()) {\n  // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFirefox.ts",
                "extension": "ts",
                "relPath": "src/js/is/isFirefox.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isIe": {
                "id": "@coffeekraken.sugar.js.is.isIe",
                "name": "isIe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is ie (internet explorer)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIe } from '@coffeekraken/sugar/is'\nif (__isIe()) {\n  // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIe.ts",
                "extension": "ts",
                "relPath": "src/js/is/isIe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isMobile": {
                "id": "@coffeekraken.sugar.js.is.isMobile",
                "name": "isMobile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a mobile device (phone or tablet)",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isMobile } from 'coffeekraken/sugar/is'\nif (__isMobile()) {\n  // do something cool...\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMobile.ts",
                "extension": "ts",
                "relPath": "src/js/is/isMobile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isOpera": {
                "id": "@coffeekraken.sugar.js.is.isOpera",
                "name": "isOpera",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is opera",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOpera } from '@coffeekraken/sugar/is'\nif ( __isOpera()) {\n  // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOpera.ts",
                "extension": "ts",
                "relPath": "src/js/is/isOpera.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isPhone": {
                "id": "@coffeekraken.sugar.js.is.isPhone",
                "name": "isPhone",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a phone device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPhone } from '@coffeekraken/sugar/is'\nif (__isPhone()) {\n  // do something cool...\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPhone.ts",
                "extension": "ts",
                "relPath": "src/js/is/isPhone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSafari": {
                "id": "@coffeekraken.sugar.js.is.isSafari",
                "name": "isSafari",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is safari",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isSafari } from '@coffeekraken/sugar/is'\nif (__isSafari()) {\n  // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isSafari.ts",
                "extension": "ts",
                "relPath": "src/js/is/isSafari.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isSamsumgBrowser": {
                "id": "@coffeekraken.sugar.js.is.isSamsumgBrowser",
                "name": "isSamsumgBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is the samsung stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isSamsumgBrowser } from '@coffeekraken/sugar/is'\nif (__isSamsumgBrowser()) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isSamsungBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/isSamsungBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isTablet": {
                "id": "@coffeekraken.sugar.js.is.isTablet",
                "name": "isTablet",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is a tablet device",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isTablet } from '@coffeekraken/sugar/is'\nif (__isTablet()) {\n  // do something cool...\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isTablet.ts",
                "extension": "ts",
                "relPath": "src/js/is/isTablet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isUcBrowser": {
                "id": "@coffeekraken.sugar.js.is.isUcBrowser",
                "name": "isUcBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "ua": {
                        "name": "ua",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user agent on which to make the test",
                        "default": "navigator.userAgent",
                        "defaultStr": "navigator.userAgent"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect if is the UC stock browser that is running the page",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isUcBrowser } from '@coffeekraken/sugar/is'\nif (__isUcBrowser()) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isUcBrowser.ts",
                "extension": "ts",
                "relPath": "src/js/is/isUcBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.keyboard.hotkey": {
                "id": "@coffeekraken.sugar.js.keyboard.hotkey",
                "name": "hotkey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hotkey": {
                        "name": "hotkey",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The hotkey to detect",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An option object to configure your hotkey. Here's the list of available settings:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "Specify an HTMLElement to detect keyboard events from",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "keyup": {
                        "name": "keyup",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Detect on keyup",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "keydown": {
                        "name": "keydown",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Detect on keydown",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "once": {
                        "name": "once",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to detect the keyboard event just once",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "splitKey": {
                        "name": "splitKey",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the split key to use in the sequences like \"ctrl+a\"",
                        "default": "+",
                        "defaultStr": "'+'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Simple function to add a hotkey like \"ctrl+a\" and an handler function that will be called when the hotkey has been pressed\nThe following keys are supported:\n- shift, option, alt, ctrl, control, command\n- backspace, tab, clear, enter, return, esc, escape, space, up, down, left, right, home, end, pageup, pagedown, del, delete\n- from f1 to f19\n- all the letters keys\n\nYou can pass an option object to your hotkey function call.",
                "namespace": "@coffeekraken.sugar.js.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hotkey } from '@coffeekraken/sugar/keyboard'\nconst promise = __hotkey('ctrl+a');\npromise.on('press', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/js/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.storage.SIndexDb": {
                "id": "@coffeekraken.sugar.js.storage.SIndexDb",
                "name": "SIndexDb",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This SIndexDb class gives you a nive and easy way to interact with your indexDb storage.\nIt provides a localStorage like api with the methods \"setItem\", \"getItem\", \"getAll\" and \"removeItem\"\nwrapped in a nice Promise based api.\nYou can also use it through his static methods that are exacly the same as the instance ones.",
                "namespace": "@coffeekraken.sugar.js.storage",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SIndexDb } from '@coffeekraken/sugar/storage';\nconst db = new __SIndexDb({\n   db: 'my-cool-db', // default: sugar.js.storage.SIndexDb\n   table: 'my-table' // default: default\n});\nawait db.setItem('my-item', 'wefwef.wef.......');\nawait db.getItem('my-item');\nawait db.removeItem('my-item');\n\nawait __SIndexDb.setItem('my-item', 'fwefwefwefwef');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SIndexDb.ts",
                "extension": "ts",
                "relPath": "src/js/storage/SIndexDb.ts",
                "children": {
                    "setitem": {
                        "id": "s7663f5ecc452683208ed128e906461070f39171e9e9ee370e5c355ad37e31ced",
                        "name": "setItem",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The key under which you want to store your data",
                                "defaultStr": ""
                            },
                            "value": {
                                "name": "value",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Any"
                                        }
                                    ],
                                    "raw": "Any"
                                },
                                "description": "The value you want to store",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "IIndexDbSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<IIndexDbSettings>"
                                },
                                "description": "Some settings like the \"db\" and the \"table\" you want to target",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "This method allows you to add an item into your indexDb",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "getitem": {
                        "id": "sb612ac45488972d5ce3525d02eec7f3320c981438fbf8796d0b40e104960126a",
                        "name": "getItem",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The key under which you want to store your data",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "IIndexDbSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<IIndexDbSettings>"
                                },
                                "description": "Some settings like the \"db\" and the \"table\" you want to target",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "This method allows you to get back an item from your indexDb",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "getall": {
                        "id": "s5ee72060fcf63b9f7547095bbbc1dfd29a333a78cb39be443f81159f9938657e",
                        "name": "getAll",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "IIndexDbSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<IIndexDbSettings>"
                                },
                                "description": "Some settings like the \"db\" and the \"table\" you want to target",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "This method allows you to get back all the items of a table from your indexDb",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "removeitem": {
                        "id": "sa5f8e8681ec43583edf975a1574331eddfa533ebabae7bd2998c6aaf95419368",
                        "name": "removeItem",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The key of the item you want to delete",
                                "defaultStr": ""
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "IIndexDbSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<IIndexDbSettings>"
                                },
                                "description": "Some settings like the \"db\" and the \"table\" you want to target",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "This method allows you to delete an item from your indexDb",
                        "async": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.string.decodeHtmlEntities": {
                "id": "@coffeekraken.sugar.js.string.decodeHtmlEntities",
                "name": "decodeHtmlEntities",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to decode",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Decode an htmlentities encoded string",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __decodeHtmlEntities } from '@coffeekraken/sugar/string';\n__decodeHtmlEntities('&#111;&#108;&#105;&#118;&#105;&#101;&#114;&#046;&#098;&#111;&#115;&#115;&#101;&#108;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;');\n// return => olivier.bossel@gmail.com\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "decodeHtmlEntities.ts",
                "extension": "ts",
                "relPath": "src/js/string/decodeHtmlEntities.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.replaceTokens": {
                "id": "@coffeekraken.sugar.js.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string you want to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function replace these tokens in the passed string:\n\n- `%moduleSystem` - Either \"esm\" or \"cjs\"",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceTokens } from '@coffeekraken/sugar/string';\n __replaceTokens('Current module system is %moduleSystem');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/js/string/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.uniqid": {
                "id": "@coffeekraken.sugar.js.string.uniqid",
                "name": "uniqid",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Generate a uniqid string of 8 bytes. Work using the [uniqid](https://www.npmjs.com/package/uniqid) npm package under the hood.",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __uniqid } from '@coffeekraken/sugar/string';\nconsole.log(__uniqid()); // => 1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uniqid.ts",
                "extension": "ts",
                "relPath": "src/js/string/uniqid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.clipboard.copy": {
                "id": "@coffeekraken.sugar.node.clipboard.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to copy",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to copy things into the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy } from '@coffeekraken/sugar/clipboard';\n__copy('Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.clipboard.read": {
                "id": "@coffeekraken.sugar.node.clipboard.read",
                "name": "read",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Simple function to read things from the system clipboard.\nThis is using https://www.npmjs.com/package/clipboardy under the hood.",
                "namespace": "@coffeekraken.sugar.node.clipboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy, __read } from '@coffeekraken/sugar/clipboard';\n__copy('Hello world');\n__read(); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "read.ts",
                "extension": "ts",
                "relPath": "src/node/clipboard/read.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.coffeekraken.getCoffeekrakenMetas": {
                "id": "@coffeekraken.sugar.node.coffeekraken.getCoffeekrakenMetas",
                "name": "getCoffeekrakenMetas",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function will returns you the coffeekraken metas object containing things like:\n- version: The version of the coffeekraken stack used",
                "namespace": "@coffeekraken.sugar.node.coffeekraken",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getCoffeekrakenMetas } from '@coffeekraken/sugar/coffeekraken';\nawait __getCoffeekrakenMetas();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCoffeekrakenMetas.ts",
                "extension": "ts",
                "relPath": "src/node/coffeekraken/getCoffeekrakenMetas.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.composerJsonSync": {
                "id": "@coffeekraken.sugar.node.npm.composerJsonSync",
                "name": "composerJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "nameOrPath": {
                        "name": "nameOrPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "the package name or path wanted",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPackageJson"
                                }
                            ],
                            "raw": "IPackageJson"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\ncomposer.json JSON content",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageJson } from '@coffeekraken/sugar/composer`;\n__packageJson('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "composerJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/composer/composerJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.composer.composerPath": {
                "id": "@coffeekraken.sugar.node.composer.composerPath",
                "name": "composerPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "the package name wanted",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IComposerPathSettings"
                                }
                            ],
                            "raw": "IComposerPathSettings"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\ncomposer package path",
                "namespace": "@coffeekraken.sugar.node.composer",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __composerPath } from '@coffeekraken/sugar/composer`;\n__composerPath('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "composerPath.ts",
                "extension": "ts",
                "relPath": "src/node/composer/composerPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.compression.unzip": {
                "id": "@coffeekraken.sugar.node.compression.unzip",
                "name": "unzip",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "zipFilePath": {
                        "name": "zipFilePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The zip file path to unzip",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IUnzipSettings"
                                }
                            ],
                            "raw": "IUnzipSettings"
                        },
                        "description": "Some settings to configure your unzip process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unzip quickly a zip file\nto a particular destination.\nNote that the zip filename will be used as folder name",
                "namespace": "@coffeekraken.sugar.node.compression",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unzip } from '@coffeekraken/sugar/compression';\nawait __unzip('my/cool/file.zip');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unzip.ts",
                "extension": "ts",
                "relPath": "src/node/compression/unzip.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.console.tagsMap": {
                "id": "@coffeekraken.sugar.node.console.tagsMap",
                "name": "tagsMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Store the tag->function map used in ```parseHtml``` function for example",
                "namespace": "@coffeekraken.sugar.node.console",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "tagsMap.ts",
                "extension": "ts",
                "relPath": "src/node/console/tagsMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.error.handleError": {
                "id": "@coffeekraken.sugar.node.error.handleError",
                "name": "handleError",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a thrown error and try to display it the best way possible.\nSimply add the \"uncaughtException\" and the \"unhandledRejection\" listeners on the process object,\npass this function as the handler one and that's it...",
                "namespace": "@coffeekraken.sugar.node.error",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __handleError } from '@coffeekraken/sugar/error';\n__handleError"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "handleErrors.ts",
                "extension": "ts",
                "relPath": "src/node/error/handleErrors.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.exec.execPhp": {
                "id": "@coffeekraken.sugar.node.exec.execPhp",
                "name": "execPhp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to execute quickly and efficiently some php\nfrom nodejs.\nNote that you MUST have php installed on your system and available a global command.",
                "namespace": "@coffeekraken.sugar.node.exec",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __execPhp } from '@coffeekraken/sugar/exec';\nawait __execPhp('/my/cool/script.php', {\n   some: 'data'\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "execPhp.ts",
                "extension": "ts",
                "relPath": "src/node/exec/execPhp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.appendToFileSync": {
                "id": "@coffeekraken.sugar.node.fs.appendToFileSync",
                "name": "appendToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "content": {
                        "name": "content",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The content to add to the file",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __appendToFileSync } from '@coffeekraken/sugar/fs';\n__appendToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "appendToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/appendToFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.chdir": {
                "id": "@coffeekraken.sugar.node.fs.chdir",
                "name": "chdir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to go to",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to change the process working directory.\nIf you make use of the `__spawn` sugar function, it will also change\nthe directory of the parent process if you call this function in a childProcess.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __chdir } from '@coffeekraken/sugar/fs';\n__chdir('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "chdir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/chdir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.checkPathWithMultipleExtensions": {
                "id": "@coffeekraken.sugar.node.fs.checkPathWithMultipleExtensions",
                "name": "checkPathWithMultipleExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "extensions": {
                        "name": "extensions",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "Array<String>"
                        },
                        "description": "The extensions (without the dot) you want to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a path and some extensions to check if a file\nexists with one of these particular extensions.\nIf a file exists, the function return the path with the first extensions that matches",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __checkPathWithMultipleExtensions } from '@coffeekraken/sugar/fs';\n__checkPathWithMultipleExtensions('/my/cool/file.txt', ['txt','js','css']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "checkPathWithMultipleExtensions.ts",
                "extension": "ts",
                "relPath": "src/node/fs/checkPathWithMultipleExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copy": {
                "id": "@coffeekraken.sugar.node.fs.copy",
                "name": "copy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to copy",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copy } from '@coffeekraken/sugar/fs';\nawait __copy('my/cool/file.jpg', 'my/new/file.jpg').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copy.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.copySync": {
                "id": "@coffeekraken.sugar.node.fs.copySync",
                "name": "copySync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to copy",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Copy a file or directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __copySync } from '@coffeekraken/sugar/fs';\n __copySync('my/cool/file.jpg', 'my/new/file.jpg');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "copySync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/copySync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.dirname": {
                "id": "@coffeekraken.sugar.node.fs.dirname",
                "name": "dirname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "import": {
                        "name": "import",
                        "type": {
                            "types": [
                                {
                                    "type": "Import"
                                }
                            ],
                            "raw": "Import"
                        },
                        "description": "The \"import\" variable from the file you use this function",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the dirname the same as the __dirname cjs variable.\nThe only difference is that it's a function and you need to pass the \"import\" variable\nfrom the filename in which you use this...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dirname } from '@coffeekraken/sugar/fs';\n__dirname(import);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dirname.ts",
                "extension": "ts",
                "relPath": "src/node/fs/dirname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDir": {
                "id": "@coffeekraken.sugar.node.fs.emptyDir",
                "name": "emptyDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory path to empty",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __emptyDir } from '@coffeekraken/sugar/fs';\nawait __emptyDir('my/cool/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.emptyDirSync": {
                "id": "@coffeekraken.sugar.node.fs.emptyDirSync",
                "name": "emptyDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory path to empty",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Empty a directory (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __emptyDirSync } from '@coffeekraken/sugar/fs';\n__emptyDirSync('my/cool/directory');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/emptyDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDir": {
                "id": "@coffeekraken.sugar.node.fs.ensureDir",
                "name": "ensureDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureDir } from '@coffeekraken/sugar/fs';\n __ensureDir('my/cool/dir').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDir.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureDirSync": {
                "id": "@coffeekraken.sugar.node.fs.ensureDirSync",
                "name": "ensureDirSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dir": {
                        "name": "dir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed directory exists. If not, will be created recursively... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureDirSync } from '@coffeekraken/sugar/fs';\n__ensureDirSync('my/cool/dir');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureDirSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureDirSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFile": {
                "id": "@coffeekraken.sugar.node.fs.ensureFile",
                "name": "ensureFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, it will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureFile } from '@coffeekraken/sugar/fs';\nawait __ensureFile('my/cool/file.jpg').then(() => {\n   // do something...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.ensureFileSync": {
                "id": "@coffeekraken.sugar.node.fs.ensureFileSync",
                "name": "ensureFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file to ensure that it exists...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ensure that the passed file exists. If not, will be created... (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureFileSync } from '@coffeekraken/sugar/fs';\n__ensureFileSync('my/cool/file.jpg');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/ensureFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.exists": {
                "id": "@coffeekraken.sugar.node.fs.exists",
                "name": "exists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IExistsSettings"
                                }
                            ],
                            "raw": "IExistsSettings"
                        },
                        "description": "Some settings for what you want to take care of",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "directory": {
                        "name": "directory",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of directories",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of files",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "symlink": {
                        "name": "symlink",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of symlinks",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __exists } from '@coffeekraken/sugar/fs';\n __exists('/something/cool.txt'); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exists.ts",
                "extension": "ts",
                "relPath": "src/node/fs/exists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.existsSync": {
                "id": "@coffeekraken.sugar.node.fs.existsSync",
                "name": "existsSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IExistsSettings"
                                }
                            ],
                            "raw": "IExistsSettings"
                        },
                        "description": "Some settings for what you want to take care of",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "directory": {
                        "name": "directory",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of directories",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of files",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "symlink": {
                        "name": "symlink",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to take care of symlinks",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the path passed exists.\nYou can specify what you want to take care of using the settings object",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __existsSync } from '@coffeekraken/sugar/fs';\n__existsSync('/something/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "existsSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/existsSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.extension": {
                "id": "@coffeekraken.sugar.node.fs.extension",
                "name": "extension",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to get the extension from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the passed file path extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extension } from '@coffeekraken/sugar/fs';\n__extension('hello/world.jpg'); // => jpg"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extension.ts",
                "extension": "ts",
                "relPath": "src/node/fs/extension.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.fileHash": {
                "id": "@coffeekraken.sugar.node.fs.fileHash",
                "name": "fileHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to get the hash back",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFileHashSettings"
                                }
                            ],
                            "raw": "IFileHashSettings"
                        },
                        "description": "Some settings to configure your hash generation process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "algo": {
                        "name": "algo",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The algorithm to use",
                        "default": "sha356",
                        "defaultStr": "'sha356'"
                    },
                    "digest": {
                        "name": "digest",
                        "type": {
                            "types": [
                                {
                                    "type": "BinaryToTextEncoding"
                                }
                            ],
                            "raw": "BinaryToTextEncoding"
                        },
                        "description": "How to digest the hash",
                        "default": "base64",
                        "defaultStr": "'base64'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed file.\nThis mean that if a file returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __fileHash } from '@coffeekraken/sugar/fs';\n__fileHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fileHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/fileHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.filename": {
                "id": "@coffeekraken.sugar.node.fs.filename",
                "name": "filename",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to take the filename from",
                        "defaultStr": ""
                    },
                    "withExtension": {
                        "name": "withExtension",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Tell if we want the filename with or without the extension",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the filename from the passed path with or without the extension",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __filename } from '@coffeekraken/sugar/fs';\n__filename('hello/world.js'); // => world.js"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filename.ts",
                "extension": "ts",
                "relPath": "src/node/fs/filename.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.findUp": {
                "id": "@coffeekraken.sugar.node.fs.findUp",
                "name": "findUp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "search": {
                        "name": "search",
                        "type": {
                            "types": [
                                {
                                    "type": "IFindUpSearch"
                                }
                            ],
                            "raw": "IFindUpSearch"
                        },
                        "description": "The name of the file you search",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFindUpSettings"
                                }
                            ],
                            "raw": "IFindUpSettings"
                        },
                        "description": "An object of settings to configure your research",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply walk across upper folders to search for a file\nand returns you the first finded",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __findUp } from '@coffeekraken/sugar/fs';\nconst file = await __findUp('myCoolFile.json', {});\nconsole.log(file.path);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "findUp.ts",
                "extension": "ts",
                "relPath": "src/node/fs/findUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderHash": {
                "id": "@coffeekraken.sugar.node.fs.folderHash",
                "name": "folderHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "folderPath": {
                        "name": "folderPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path you want to get the hash back",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFolderHashSettings"
                                }
                            ],
                            "raw": "IFolderHashSettings"
                        },
                        "description": "Some settings to configure your hash generation process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "recursive": {
                        "name": "recursive",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to generate a hash using also the children or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "algo": {
                        "name": "algo",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The algorithm to use",
                        "default": "sha356",
                        "defaultStr": "'sha356'"
                    },
                    "digest": {
                        "name": "digest",
                        "type": {
                            "types": [
                                {
                                    "type": "BinaryToTextEncoding"
                                }
                            ],
                            "raw": "BinaryToTextEncoding"
                        },
                        "description": "How to digest the hash",
                        "default": "base64",
                        "defaultStr": "'base64'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash for the passed folder.\nThis mean that if a folder returns the same integrity hash twice, the folder or files in it\nhas not been updated...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderHash } from '@coffeekraken/sugar/fs';\n__folderHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderHash.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderPath": {
                "id": "@coffeekraken.sugar.node.fs.folderPath",
                "name": "folderPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to get folder path from",
                        "defaultStr": ""
                    },
                    "checkExistence": {
                        "name": "checkExistence",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to check the file existence before",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns you the folder path of the file path passed.\nYou can tell the function to check for file existence before getting\nthe folder path with the second parameter.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderPath } from '@coffeekraken/sugar/fs';\n__folderPath('my/cool/path.js'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.folderSize": {
                "id": "@coffeekraken.sugar.node.fs.folderSize",
                "name": "folderSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "folderPath": {
                        "name": "folderPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The folder path to calculate the size",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Calculate the size of the passed folder and return it through a promise in bytes format",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __folderSize } from '@coffeekraken/sugar/fs';\nawait __folderSize('my/cool/folder');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "folderSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/folderSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.formatFileSize": {
                "id": "@coffeekraken.sugar.node.fs.formatFileSize",
                "name": "formatFileSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "size": {
                        "name": "size",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "Number|String"
                        },
                        "description": "The size to transform",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The \"filesize\" settings to customize the output. See [filesize](https://www.npmjs.com/package/filesize) settings",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform into human readable string a file size from a number (float or integer) or string.\nThis function use the wonderfull \"filesize\" npm package under the houd.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatFilesize } from '@coffeekraken/sugar/fs';\n__formatFilesize(163931); // => 326.86 KB"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatFileSize.ts",
                "extension": "ts",
                "relPath": "src/node/fs/formatFileSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.getFiles": {
                "id": "@coffeekraken.sugar.node.fs.getFiles",
                "name": "getFiles",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "paths": {
                        "name": "paths",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The path(s)/glob(s) you want to get files from",
                        "defaultStr": ""
                    },
                    "Some settings to configure your file search/watch process": {
                        "name": "Some settings to configure your file search/watch process",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IGetFilesSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IGetFilesSettings>"
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function wrap the AMAZING chokidar to make use of it even simplier with some default values and support for\nthings like multiple globs, etc...",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getFiles } from '@coffeekraken/sugar/fs';\nawait __getFiles('* /*.txt');\nconst watcher = __getFiles('* /*.txt', {\n watch: true\n});\nwatcher.on('add', ({file, resolve}) => {\n // do something with your file\n // mark the file as treated\n resolve();\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getFiles.ts",
                "extension": "ts",
                "relPath": "src/node/fs/getFiles.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.grabFirstExisting": {
                "id": "@coffeekraken.sugar.node.fs.grabFirstExisting",
                "name": "grabFirstExisting",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "paths": {
                        "name": "paths",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The paths to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check every passed paths and return the first existing one.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __grabFirstExisting } from '@coffeekraken/sugar/fs';\n__grabFirstExisting([\n 'file/1.txt',\n 'file/2.txt\n]); // => 'file/2.txt'\n'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "grabFirstExisting.ts",
                "extension": "ts",
                "relPath": "src/node/fs/grabFirstExisting.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.isPath": {
                "id": "@coffeekraken.sugar.node.fs.isPath",
                "name": "isPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    },
                    "checkExistence": {
                        "name": "checkExistence",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to check that the passed path actually exist",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPath } from '@coffeekraken/sugar/fs';\n__isPath('hello/world'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/node/fs/isPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.move": {
                "id": "@coffeekraken.sugar.node.fs.move",
                "name": "move",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to move",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __move } from '@coffeekraken/sugar/fs';\nawait __move('my/cool/dir', 'another/place/for/directory').then(() => {\n   // do something...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "move.ts",
                "extension": "ts",
                "relPath": "src/node/fs/move.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.moveSync": {
                "id": "@coffeekraken.sugar.node.fs.moveSync",
                "name": "moveSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source path to moveSync",
                        "defaultStr": ""
                    },
                    "dest": {
                        "name": "dest",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination path",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Moves a file or directory, even across devices (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __moveSync } from '@coffeekraken/sugar/fs';\n__moveSync('my/cool/dir', 'another/place/for/directory');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "moveSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/moveSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.pickOne": {
                "id": "@coffeekraken.sugar.node.fs.pickOne",
                "name": "pickOne",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filesNames": {
                        "name": "filesNames",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The names of the files you want to check",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPickOneSettings"
                                }
                            ],
                            "raw": "IPickOneSettings"
                        },
                        "description": "An object of settings to configure your research",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The current working directory to search in",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "SFile": {
                        "name": "SFile",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Return an SFile instance if true, otherwise just a simple path string",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to specify multiple files to check and pick one of them",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pickOne } from '@coffeekraken/sugar/fs';\n__pickOne(['myCoolFile.json', 'myCoolFile2.json'], {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickOne.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pickOne.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.pool": {
                "id": "@coffeekraken.sugar.node.fs.pool",
                "name": "pool",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "input": {
                        "name": "input",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|Array<String>"
                        },
                        "description": "The input glob(s)",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPoolSettings"
                                }
                            ],
                            "raw": "IPoolSettings"
                        },
                        "description": "Some settings to configure your pool. Support all the chokidar settings",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "SFile": {
                        "name": "SFile",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get back SFile instances or just string path",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the cwd",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "exclude": {
                        "name": "exclude",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "Specify some file(s), path(s) to exclude",
                        "default": [],
                        "defaultStr": "[]"
                    },
                    "watch": {
                        "name": "watch",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to watch files or not",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "chokidar": {
                        "name": "chokidar",
                        "type": {
                            "types": [
                                {
                                    "type": "IChokidarSettings"
                                }
                            ],
                            "raw": "IChokidarSettings"
                        },
                        "description": "Specify some settings to pass to chokidar in order to watch files",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take as parameter a glob (or array of globs) pattern(s)\nand return an SPromise instance through which you can subscribe to events like:\n- ready: Emitted once the pool is ready\n- add: Emitted when a file has been added\n- change: Emitted when a file has been updated (alias to update)\n- unlink: Emitted when a file has been deleted",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pool } from '@coffeekraken/sugar/fs';\nconst myPool = __pool('/something/cool /', {\n watch: true\n}):\n__pool.on('file', file => {\n     // do something with each files\n})\n__pool.on('update', (file) => {\n     // do something with updated files\n});\n// when you want to stop your pool watching process\n__pool.cancel();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pool.ts",
                "extension": "ts",
                "relPath": "src/node/fs/pool.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.prependToFileSync": {
                "id": "@coffeekraken.sugar.node.fs.prependToFileSync",
                "name": "prependToFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path you want to check. With or without an extension",
                        "defaultStr": ""
                    },
                    "content": {
                        "name": "content",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The content to add to the file",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to simply append a string to a file.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __prependToFileSync } from '@coffeekraken/sugar/fs';\n__prependToFileSync('/my/cool/file.txt', 'Hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "prependToFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/prependToFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJson": {
                "id": "@coffeekraken.sugar.node.fs.readJson",
                "name": "readJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json file path to read",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readJson } from '@coffeekraken/sugar/fs';\nawait __readJson('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readJsonSync": {
                "id": "@coffeekraken.sugar.node.fs.readJsonSync",
                "name": "readJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json file path to read",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a json file",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readJsonSync } from '@coffeekraken/sugar/fs';\n__readJsonSync('my-cool-json/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.readXmlSync": {
                "id": "@coffeekraken.sugar.node.fs.readXmlSync",
                "name": "readXmlSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The xml file path to read",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read an xml file and get his content back as JSON",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __readXmlSync } from '@coffeekraken/sugar/fs';\n__readXmlSync('my-cool-xml/file.xml');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readXmlSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/readXmlSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.remove": {
                "id": "@coffeekraken.sugar.node.fs.remove",
                "name": "remove",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __remove } from '@coffeekraken/sugar/fs';\nawait __remove('my/cool/file.json').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "remove.ts",
                "extension": "ts",
                "relPath": "src/node/fs/remove.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.removeSync": {
                "id": "@coffeekraken.sugar.node.fs.removeSync",
                "name": "removeSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file/directory path to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Removes a file or directory. The directory can have contents. If the path does not exist, silently does nothing. Like rm -rf (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __removeSync } from '@coffeekraken/sugar/fs';\n __removeSync('my/cool/file.json');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/removeSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFile": {
                "id": "@coffeekraken.sugar.node.fs.writeFile",
                "name": "writeFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeFile()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "CWrite a file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeFile } from '@coffeekraken/sugar/fs';\n__writeFile('my/cool/file.txt', 'Hello World').then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeFileSync": {
                "id": "@coffeekraken.sugar.node.fs.writeFileSync",
                "name": "writeFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeFileSync()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeFileSync } from '@coffeekraken/sugar/fs';\n__writeFileSync('my/cool/file.txt', 'Hello World');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJson": {
                "id": "@coffeekraken.sugar.node.fs.writeJson",
                "name": "writeJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object to write in the JSON file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeJson()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... ( (async)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeJson } from '@coffeekraken/sugar/fs';\n__writeJson('my/cool/file.json', { hello: 'world' }).then(() => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJson.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeJsonSync": {
                "id": "@coffeekraken.sugar.node.fs.writeJsonSync",
                "name": "writeJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to write",
                        "defaultStr": ""
                    },
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object to write in the JSON file",
                        "defaultStr": ""
                    },
                    "options": {
                        "name": "options",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "options are what you'd pass to [fs.writeJsonSync()](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Write a JSON file. If don't exist, will be created as well as the directory structure if needed... (sync)",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeJsonSync } from '@coffeekraken/sugar/fs';\n__writeJsonSync('my/cool/file.json', { hello: 'world' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFile": {
                "id": "@coffeekraken.sugar.node.fs.writeTmpFile",
                "name": "writeTmpFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IWriteTmpFileSettings"
                                }
                            ],
                            "raw": "IWriteTmpFileSettings"
                        },
                        "description": "Some settings to customize your temp file creation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A path relative to the temp folder to store your file",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeTmpFile } from '@coffeekraken/sugar/fs';\n__writeTmpFile('Hello World').then((path) => {\n   // do something on complete...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFile.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.writeTmpFileSync": {
                "id": "@coffeekraken.sugar.node.fs.writeTmpFileSync",
                "name": "writeTmpFileSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The data to write in the file",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IWriteTmpFileSyncSettings"
                                }
                            ],
                            "raw": "IWriteTmpFileSyncSettings"
                        },
                        "description": "Some settings to customize your temp file creation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A path relative to the temp folder to store your file",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a temporary file on the disk with the passed content and returns the path\nto it.",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __writeTmpFileSync } from '@coffeekraken/sugar/fs';\nconst path = __writeTmpFileSync('Hello World');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "writeTmpFileSync.ts",
                "extension": "ts",
                "relPath": "src/node/fs/writeTmpFileSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.github.downloadGithubRepository": {
                "id": "@coffeekraken.sugar.node.github.downloadGithubRepository",
                "name": "downloadGithubRepository",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "repository": {
                        "name": "repository",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The repository name like \"Coffeekraken/coffeekraken\"",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IGithubDownloadRepositorySettings"
                                }
                            ],
                            "raw": "IGithubDownloadRepositorySettings"
                        },
                        "description": "Some settings to configure your download",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to download a github repository\nand unzip it where you want to store it",
                "namespace": "@coffeekraken.sugar.node.github",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import __downloadGithubRepository from '@coffeekraken/sugar/github';\nawait __downloadGithubRepository('Coffeekraken/coffeekraken', {\n   dest: 'something/cool/coffeekraken.zip',\n   unzip: true\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "downloadGithubRepository.ts",
                "extension": "ts",
                "relPath": "src/node/github/downloadGithubRepository.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.excludedGlobs": {
                "id": "@coffeekraken.sugar.node.glob.excludedGlobs",
                "name": "excludedGlobs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the array of exclude globs",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __excludedGlobs } from '@coffeekraken/sugar/glob';\n__excludedGlobs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "excludedGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/glob/excludedGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.matchExcludeGlobs": {
                "id": "@coffeekraken.sugar.node.glob.matchExcludeGlobs",
                "name": "matchExcludeGlobs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed path match one or more exclude globs specified in the config \"storage.exclude\"",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __matchExcludeGlobs } from '@coffeekraken/sugar/glob';\nif (__matchExcludeGlobs('something/cool.js')) {\n     // ...\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matchExcludeGlobs.ts",
                "extension": "ts",
                "relPath": "src/node/glob/matchExcludeGlobs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.matchGlob": {
                "id": "@coffeekraken.sugar.node.glob.matchGlob",
                "name": "matchGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "input": {
                        "name": "input",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path to check",
                        "defaultStr": ""
                    },
                    "glob": {
                        "name": "glob",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The glob pattern to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input a file path and a glob pattern that can be an extended one (this mean that is support the listed features above).\nThen it check if the passed filepath match the passed glob pattern or not and return true or false depending on the result.",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __matchGlob } from '@coffeekraken/sugar/glob';\n__matchGlob('/something/cool.txt', '\\/cool.txt'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matchGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/matchGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.glob.resolveGlob": {
                "id": "@coffeekraken.sugar.node.glob.resolveGlob",
                "name": "resolveGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "globs": {
                        "name": "globs",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|Array<String>"
                        },
                        "description": "The glob pattern(s) to search files for when using some \"**\" pattern",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IResolveGlobSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IResolveGlobSettings>"
                        },
                        "description": "An object of settings to configure your glob process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply resolve the passed glob pattern(s) and resolve his promise\nwith an Array of SFile instances to work with",
                "namespace": "@coffeekraken.sugar.node.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __resolveGlob } from '@coffeekraken/sugar/glob';\n__resolveGlob('/my/cool/pattern/.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resolveGlob.ts",
                "extension": "ts",
                "relPath": "src/node/glob/resolveGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.hash.hashFrom": {
                "id": "@coffeekraken.sugar.node.hash.hashFrom",
                "name": "hashFrom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "sources": {
                        "name": "sources",
                        "type": {
                            "types": [
                                {
                                    "type": "Array<String"
                                },
                                {
                                    "type": "any>"
                                }
                            ],
                            "raw": "Array<String|any>"
                        },
                        "description": "The sources to generate the final hash",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "algo": {
                        "name": "algo",
                        "type": {
                            "types": [
                                {
                                    "type": "string",
                                    "value": "sha256"
                                },
                                {
                                    "type": "string",
                                    "value": "sha512"
                                }
                            ],
                            "raw": "'sha256'|'sha512'"
                        },
                        "description": "The algo to use",
                        "default": "sha256",
                        "defaultStr": "'sha256'"
                    },
                    "digest": {
                        "name": "digest",
                        "type": {
                            "types": [
                                {
                                    "type": "string",
                                    "value": "base64"
                                },
                                {
                                    "type": "string",
                                    "value": "hex"
                                }
                            ],
                            "raw": "'base64'|'hex'"
                        },
                        "description": "The digest encoding",
                        "default": "base64",
                        "defaultStr": "'base64'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return a hash generated from sources like:\n- String: Simple string\n- Folder: Absolute path to a folder\n- File: Absolute path to a file\n- Glob: An absolute glob pattern to target some files\n- NPM package: An NPM package name\n- Object: A plain object",
                "namespace": "@coffeekraken.sugar.node.hash",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hashFrom } from '@coffeekraken/sugar/hash';\n__hashFrom([{\n  hello: 'world'\n}, '/my/cool/folder']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hashFrom.ts",
                "extension": "ts",
                "relPath": "src/node/hash/hashFrom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isCommandExists": {
                "id": "@coffeekraken.sugar.node.is.isCommandExists",
                "name": "isCommandExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "command": {
                        "name": "command",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The command to check like \"ls\", \"node\", etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to check if a command exists on the system where the script is running",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCommandExists } from '@coffeekraken/sugar/is';\nawait  __isCommandExists('ls'); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCommandExists.ts",
                "extension": "ts",
                "relPath": "src/node/is/isCommandExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isDirectory": {
                "id": "@coffeekraken.sugar.node.is.isDirectory",
                "name": "isDirectory",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a directory or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDirectory } from '@coffeekraken/sugar/is';\n__isDirectory('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDirectory.ts",
                "extension": "ts",
                "relPath": "src/node/is/isDirectory.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isFile": {
                "id": "@coffeekraken.sugar.node.is.isFile",
                "name": "isFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a file or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFile } from '@coffeekraken/sugar/is';\n__isFile('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFile.ts",
                "extension": "ts",
                "relPath": "src/node/is/isFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isFfolder": {
                "id": "@coffeekraken.sugar.node.is.isFfolder",
                "name": "isFfolder",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a folder or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isfolder } from '@coffeekraken/sugar/is';\n__isfolder('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFolder.ts",
                "extension": "ts",
                "relPath": "src/node/is/isFolder.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.isInPackage": {
                "id": "@coffeekraken.sugar.node.path.isInPackage",
                "name": "isInPackage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The package name to check or a string comma separated like \"myPackage,another\"",
                        "defaultStr": ""
                    },
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify from where the research has to be done",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "highest": {
                        "name": "highest",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the highest package root or the first finded",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isInPackage } from '@coffeekraken/sugar/is';\nconst root = __isInPackage();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInPackage.ts",
                "extension": "ts",
                "relPath": "src/node/is/isInPackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isMonorepo": {
                "id": "@coffeekraken.sugar.node.is.isMonorepo",
                "name": "isMonorepo",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to check if the current package this code is running in is a monorepo.\nBasically it checks in the package.json if the \"workspaces\" property is set or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import {__isMonorepo } from '@coffeekraken/sugar/is';\n__isMonorepo(); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMonorepo.ts",
                "extension": "ts",
                "relPath": "src/node/is/isMonorepo.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.is.isSymlink": {
                "id": "@coffeekraken.sugar.node.is.isSymlink",
                "name": "isSymlink",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed string path is a sySlink or not",
                "namespace": "@coffeekraken.sugar.node.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isSymlink } from '@coffeekraken/sugar/is';\n__isSymlink('something/cool');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isSymlink.ts",
                "extension": "ts",
                "relPath": "src/node/is/isSymlink.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.keyboard.hotkey": {
                "id": "@coffeekraken.sugar.node.keyboard.hotkey",
                "name": "hotkey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hotkey": {
                        "name": "hotkey",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The hotkey to detect",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An option object to configure your hotkey. Here's the list of available settings:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- once (false) {Boolean}: Specify if you want to detect the keyboard event just once\n- splitChar (+) {String}: Specify the split key to use in the sequences like \"ctrl+a\"\n- systemWide (false) {Boolean}: Specify if the listener have to listen for the application only events, or for the system level ones"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add keyboard listening process and subscribe to some sequences\nusing the SPromise instance returned.",
                "namespace": "@coffeekraken.sugar.node.keyboard",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hotkey } from '@coffeekraken/sugar/keyboard';\nconst promise = __hotkey('ctrl+a').on('press', (e) => {\n   // do something...\n});\npromise.cancel();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hotkey.ts",
                "extension": "ts",
                "relPath": "src/node/keyboard/hotkey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.load.loadConfigFile": {
                "id": "@coffeekraken.sugar.node.load.loadConfigFile",
                "name": "loadConfigFile",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The file path relative to your project root directory",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ILoadConfigFileSettings"
                                }
                            ],
                            "raw": "ILoadConfigFileSettings"
                        },
                        "description": "Some settings to configure your file load",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply load a config file (usually at your project root) and returns his content\nin object format.\nThis function support these file types:\n- `.js`: Simple javascript files\n- `.json`: Simple JSON files\n- `.yml`: Yaml files",
                "namespace": "@coffeekraken.sugar.node.load",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __loadConfigFile } from '@coffeekraken/sugar/load';\nawait __loadConfigFile('vite.config.js`);\nawait __loadConfigFile(`tsconfig.json`);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "loadConfigFile.ts",
                "extension": "ts",
                "relPath": "src/node/load/loadConfigFile.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.buildInNodeModules": {
                "id": "@coffeekraken.sugar.node.module.buildInNodeModules",
                "name": "buildInNodeModules",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This object store the list of built-in node module\nwith a polyfill property for each that point to some\npolyfill depending on the context wanted. It can be \"browser\"\nor some others to come depending on the needs...",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __builtInNodeModules } from '@coffeekraken/sugar/module';\n// {\n//   os: {\n//     polyfill: {\n//        browser: 'os-browserify'\n//     }\n//   },\n//   ...\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "buildInNodeModules.ts",
                "extension": "ts",
                "relPath": "src/node/module/buildInNodeModules.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyList": {
                "id": "@coffeekraken.sugar.node.module.dependencyList",
                "name": "dependencyList",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The absolute file path you want to get the dependency tree from",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDependencyTreeExtendedSettings"
                                }
                            ],
                            "raw": "IDependencyTreeExtendedSettings"
                        },
                        "description": "Some settings (like all the dependency-tree supported ones (excluding filename and directory)), and some additional like caching.",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function make use of the ```dependencyTree``` one and returns the result into a simple array of file pathes",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dependencyList } from '@coffeekraken/sugar/module';\nawait __dependencyList('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dependencyList.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyList.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.dependencyTree": {
                "id": "@coffeekraken.sugar.node.module.dependencyTree",
                "name": "dependencyTree",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "filePath": {
                        "name": "filePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The absolute file path you want to get the dependency tree from",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDependencyTreeExtendedSettings"
                                }
                            ],
                            "raw": "IDependencyTreeExtendedSettings"
                        },
                        "description": "Some settings (like all the dependency-tree supported ones (excluding filename and directory)), and some additional like caching.",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Async wrapper around the amazing dependency-tree module made by mrjoelkemp.\nThis wrapper add some capabilities like caching already parsed dependencies.",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dependencyTree } from '@coffeekraken/sugar/module';\nawait __dependencyTree('/something/cool.js', {\n     cache: true,\n     // etc...\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dependencyTree.ts",
                "extension": "ts",
                "relPath": "src/node/module/dependencyTree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.extractImport": {
                "id": "@coffeekraken.sugar.node.module.extractImport",
                "name": "extractImport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "stringOrFilePath": {
                        "name": "stringOrFilePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A string to parse, or a file path",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IExtractImportSettings"
                                }
                            ],
                            "raw": "IExtractImportSettings"
                        },
                        "description": "Some settings to configure your extraction process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply parse a file content or a passed string directly and\nbuild the list of finded \"import ... from ...\" as well as commonjs \"require(...)\".\nYou will get back an array of object containing all the imformations about each\nimport and require statements",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractImports } from '@coffeekraken/sugar/module';\n__extractImports('/something/cool.js');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractImport.ts",
                "extension": "ts",
                "relPath": "src/node/module/extractImport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.import": {
                "id": "@coffeekraken.sugar.node.module.import",
                "name": "import",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "what": {
                        "name": "what",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "Either a string like with the native \"import\" function, either an array with 2 values. 1st is the package name, 2nd is the \"export\" to import",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is the same as the native \"import\" one unless it allows you to pass an array with 2 values when the\nfirst is the package name from which to import things, and the second is the \"export\" to import.",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __import } from '@coffeekraken/sugar/module';\n__import('@coffeekraken/s-typescript-builder');\n__import(['@coffeekraken/s-typescript-builder', 'STypescriptBuilderBuildParamsInterface']);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "import.ts",
                "extension": "ts",
                "relPath": "src/node/module/import.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.module.resolvePackagePath": {
                "id": "@coffeekraken.sugar.node.module.resolvePackagePath",
                "name": "resolvePackagePath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "package": {
                        "name": "package",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The package bane you want to get the path for",
                        "defaultStr": ""
                    },
                    "baseDir": {
                        "name": "baseDir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory from which to search for the package",
                        "default": "`${__packageRootDir()}/node_modules`",
                        "defaultStr": "`${__packageRootDir()}/node_modules`"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to resolve a passed package name or a folder directory to it's package.json file",
                "namespace": "@coffeekraken.sugar.node.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __resolvePackagePath } from '@coffeekraken/sugar/module';\n__resolvePackagePath('something');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resolvePackagePath.ts",
                "extension": "ts",
                "relPath": "src/node/module/resolvePackagePath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.monorepo.findPackages": {
                "id": "@coffeekraken.sugar.node.monorepo.findPackages",
                "name": "findPackages",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "rootDir": {
                        "name": "rootDir",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The root directory from where to search for packages",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply let you search for packages (that are not dependencies) inside\nthe passed folder and returns a object with relative paths as keys and package.json\ncontent value",
                "namespace": "@coffeekraken.sugar.node.monorepo",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __findPackages } from '@coffeekraken/sugar/monorepo';\nconst packages = await __findPackages();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "findPackages.ts",
                "extension": "ts",
                "relPath": "src/node/monorepo/findPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.network.getFreePort": {
                "id": "@coffeekraken.sugar.node.network.getFreePort",
                "name": "getFreePort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "port": {
                        "name": "port",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "A port to challenge before starting generating random ones",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns you a free port.\nYou can pass a port to check as parameter and if it is free, you will get it back as result",
                "namespace": "@coffeekraken.sugar.node.network",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getFreePort } from '@coffeekraken/sugar/network';\nawait __getFreePort(); // => 22343"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "getFreePort.ts",
                "extension": "ts",
                "relPath": "src/node/network/getFreePort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.network.ipAddress": {
                "id": "@coffeekraken.sugar.node.network.ipAddress",
                "name": "ipAddress",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get your ip address",
                "namespace": "@coffeekraken.sugar.node.network",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ipAddress } from '@coffeekraken/sugar/network';\n__ipAddress(); // => 192.168.1.45"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "ipAddress.ts",
                "extension": "ts",
                "relPath": "src/node/network/ipAddress.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.network.isPortFree": {
                "id": "@coffeekraken.sugar.node.network.isPortFree",
                "name": "isPortFree",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "port": {
                        "name": "port",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The port to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed port is free or not",
                "namespace": "@coffeekraken.sugar.node.network",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPortFree } from '@coffeekraken/sugar/network';\nawait __isPortFree(22000); // => true"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "isPortFree.ts",
                "extension": "ts",
                "relPath": "src/node/network/isPortFree.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.addDependencies": {
                "id": "@coffeekraken.sugar.node.npm.addDependencies",
                "name": "addDependencies",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "dependencies": {
                        "name": "dependencies",
                        "type": {
                            "types": [
                                {
                                    "type": "Record",
                                    "of": [
                                        "string, string"
                                    ]
                                }
                            ],
                            "raw": "Record<string, string>"
                        },
                        "description": "Dependencies you want to add",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "INpmAddDependenciesSettings"
                                }
                            ],
                            "raw": "INpmAddDependenciesSettings"
                        },
                        "description": "Some settings to configure your installation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory where you want to execute the install",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to just add some dependencies without installing them directly.\nIt just add the dependency into the package.json file",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import install from '@coffeekraken/sugar/node/npm/install';\nawait install();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addDependencies.ts",
                "extension": "ts",
                "relPath": "src/node/npm/addDependencies.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.globalNodeModulesPath": {
                "id": "@coffeekraken.sugar.node.npm.globalNodeModulesPath",
                "name": "globalNodeModulesPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns you the path to the global node modules folder",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import globalNodeModulesPath from '@coffeekraken/sugar/node/npm/globalNodeModulesPath';\nglobalNodeModulesPath();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "globalNodeModulesPath.ts",
                "extension": "ts",
                "relPath": "src/node/npm/globalNodeModulesPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.install": {
                "id": "@coffeekraken.sugar.node.npm.install",
                "name": "install",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "packageNames": {
                        "name": "packageNames",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The package(s) you want to install. If not specified, perform a simple `install` process",
                        "default": "",
                        "defaultStr": "''"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "INpmInstallSettings"
                                }
                            ],
                            "raw": "INpmInstallSettings"
                        },
                        "description": "Some settings to configure your installation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The directory where you want to execute the install",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "yarn": {
                        "name": "yarn",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Use yarn in priority over npm. Fallback to npm if not available",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "silent": {
                        "name": "silent",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the process to be silent",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "args": {
                        "name": "args",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "An object of arguments passed directly to the yarn or npm install command",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to install the node packages using npm or yarn depending\non your settings.",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import install from '@coffeekraken/sugar/node/npm/install';\nawait install();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "install.ts",
                "extension": "ts",
                "relPath": "src/node/npm/install.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.listNodeModulesPackages": {
                "id": "@coffeekraken.sugar.node.npm.listNodeModulesPackages",
                "name": "listNodeModulesPackages",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IListNodeModulesPackagesSettings"
                                }
                            ],
                            "raw": "IListNodeModulesPackagesSettings"
                        },
                        "description": "Specify some settings for your listing process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function list all the packages that are installed in the node_modules folder(s).\nYou can specify that you want either the current package node_modules folder listed,\nand the root node_modules folder for monorepo as well.",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import listNodeModulesPackages from '@coffeekraken/sugar/node/npm/listNodeModulesPackages';\nlistNodeModulesPackages();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "listNodeModulesPackages.ts",
                "extension": "ts",
                "relPath": "src/node/npm/listNodeModulesPackages.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.packageJson": {
                "id": "@coffeekraken.sugar.node.npm.packageJson",
                "name": "packageJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "the package name wanted",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPackageJson"
                                }
                            ],
                            "raw": "IPackageJson"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\npackage.json JSON content",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import packageJson from '@coffeekraken/sugar/node/npm/packageJson`;\npackagrJson('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageJson.ts",
                "extension": "ts",
                "relPath": "src/node/npm/packageJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.packagePath": {
                "id": "@coffeekraken.sugar.node.npm.packagePath",
                "name": "packagePath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "the package name wanted",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPackageJson"
                                }
                            ],
                            "raw": "IPackageJson"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package name as parameter, and return the corresponding\npackage path",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packagePath } from '@coffeekraken/sugar/npm`;\n__packagePath('lodash');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packagePath.ts",
                "extension": "ts",
                "relPath": "src/node/npm/packagePath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.npm.SNpmUnusedProcess": {
                "id": "@coffeekraken.sugar.node.npm.SNpmUnusedProcess",
                "name": "SNpmUnusedProcess",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This process is used to check npm unused dependencies, remove unsused once, etc...\nIt use under the hood the amazing depcheck package made by @rumpl and @lijunle",
                "namespace": "@coffeekraken.sugar.node.npm",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SNpmUnusedProcess.ts",
                "extension": "ts",
                "relPath": "src/node/npm/SNpmUnusedProcess.ts",
                "children": {
                    "constructor": {
                        "id": "s90d95c4d6f0f0d206be3f8b6fe5297c7be7416c68b1b0cf54128a67bf660e1da",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "process": {
                        "id": "sc6185374c6a3262920cb75092413d59d709304b1c4de574a1086cad6f713975a",
                        "name": "process",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "params": {
                                "name": "params",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "ISNpmUnusedProcessParams"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<ISNpmUnusedProcessParams>"
                                },
                                "description": "Params for the execution",
                                "default": {},
                                "defaultStr": "{}"
                            },
                            "settings": {
                                "name": "settings",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Partial",
                                            "of": [
                                                "ISNpmUnusedProcessSettings"
                                            ]
                                        }
                                    ],
                                    "raw": "Partial<ISNpmUnusedProcessSettings>"
                                },
                                "description": "Some settings to override",
                                "default": {},
                                "defaultStr": "{}"
                            }
                        },
                        "description": "Actual process execution",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.node.og.scrapeUrl": {
                "id": "@coffeekraken.sugar.node.og.scrapeUrl",
                "name": "scrapeUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "url": {
                        "name": "url",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The url to scrape",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrapeUrlSettings"
                                }
                            ],
                            "raw": "IScrapeUrlSettings"
                        },
                        "description": "Some settings to tweak scraping behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "id": {
                        "name": "id",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify an id used for the cache",
                        "defaultStr": "undefined"
                    },
                    "scraper": {
                        "name": "scraper",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "Specify settings for the sraper. See https://www.npmjs.com/package/open-graph-scraper for more infos",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "cache": {
                        "name": "cache",
                        "type": {
                            "types": [
                                {
                                    "type": "ISCacheSettings"
                                }
                            ],
                            "raw": "ISCacheSettings"
                        },
                        "description": "Specify some settings for the caching behavior. Default ttl set to 1 week",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "timeout": {
                        "name": "timeout",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Specigy a timeout after which to consider the url as unreachable",
                        "default": 2000,
                        "defaultStr": "2000"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to scrape a url and get back the open graph metadata\nlike \"ogTitle\", \"ogDescription\", etc...",
                "namespace": "@coffeekraken.sugar.node.og",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import scrapeUrl from '@coffeekraken/sugar/node/og/scrapeUrl';\nawait scrapeUrl('https://www.npmjs.com/package/open-graph-scraper');"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrapeUrl.ts",
                "extension": "ts",
                "relPath": "src/node/og/scrapeUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.namespace": {
                "id": "@coffeekraken.sugar.node.package.namespace",
                "name": "namespace",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string path to convert into a proper namespace",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your namespace generation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string as parameter like a path, or a doted string like \"something.cool\" and return you\na proper namespace build using the package name, your passed string sanitized, etc...",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import namespace from '@coffeekraken/sugar/node/package/namespace';\nnamespace('something.cool'); => // coffeekraken.sugar.something.cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "namespace.ts",
                "extension": "ts",
                "relPath": "src/node/package/namespace.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.packageJson": {
                "id": "@coffeekraken.sugar.node.package.packageJson",
                "name": "packageJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "fromOrName": {
                        "name": "fromOrName",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path from where to search upward for the package.json file, or directly a package name",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the package you asked for, or search upward for a package.json",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageJson } from '@coffeekraken/sugar/package;\n__packageJson();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "packageJson.ts",
                "extension": "ts",
                "relPath": "src/node/package/packageJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.packageJsonSync": {
                "id": "@coffeekraken.sugar.node.package.packageJsonSync",
                "name": "packageJsonSync",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "fromOrName": {
                        "name": "fromOrName",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path from where to search upward for the package.json file",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you the package.json of the current working package into object format",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageJsonSync } from '@coffeekraken/sugar/package';\n__packageJsonSync();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "packageJsonSync.ts",
                "extension": "ts",
                "relPath": "src/node/package/packageJsonSync.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.packageMetas": {
                "id": "@coffeekraken.sugar.node.package.packageMetas",
                "name": "packageMetas",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path of the package to search metas for",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a package root path and returns the metas informations from one of these sources:\n- package.json\n- composer.json",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageMetas } from '@coffeekraken/sugar/package';\n__packageMetas();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "packageMetas.ts",
                "extension": "ts",
                "relPath": "src/node/package/packageMetas.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.package.renamePackage": {
                "id": "@coffeekraken.sugar.node.package.renamePackage",
                "name": "renamePackage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "newName": {
                        "name": "newName",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The new name for your package",
                        "defaultStr": ""
                    },
                    "packagePath": {
                        "name": "packagePath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to the package",
                        "default": "__packageRootDir()",
                        "defaultStr": "__packageRootDir()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to rename a package by doing:\n- Rename the package.json \"name\" property",
                "namespace": "@coffeekraken.sugar.node.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __renamePackage } from '@coffeekraken/sugar/package';\n__renamePackage('my-new-package');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "renamePackage.ts",
                "extension": "ts",
                "relPath": "src/node/package/renamePackage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePackageJsonTokens": {
                "id": "@coffeekraken.sugar.node.path.replacePackageJsonTokens",
                "name": "replacePackageJsonTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string you want to process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IReplacePackageJsonTokensSettings"
                                }
                            ],
                            "raw": "IReplacePackageJsonTokensSettings"
                        },
                        "description": "Some settings to configure your tokens replacements",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to replace packageJson tokens like %packageJson.name, etc... with\nreal package.json values",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replacePackageJsonTokens } from '@coffeekraken/sugar/package';\n__replacePackageJsonTokens('Hello %packageJson.name'); // => Hello @coffeekraken/sugar"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replacePackageJsonTokens.ts",
                "extension": "ts",
                "relPath": "src/node/package/replacePackageJsonTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distCssDir": {
                "id": "@coffeekraken.sugar.node.path.distCssDir",
                "name": "distCssDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistCssDirSettings"
                                }
                            ],
                            "raw": "IDistCssDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distCssDir } from '@coffeekraken/node/fs/distCssDir';\n__distCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distDocDir": {
                "id": "@coffeekraken.sugar.node.path.distDocDir",
                "name": "distDocDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistDocDirSettings"
                                }
                            ],
                            "raw": "IDistDocDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distDocDir } from '@coffeekraken/sugar/path';\n__distDocDir(); // => '/somethign/dist/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distFontsDir": {
                "id": "@coffeekraken.sugar.node.path.distFontsDir",
                "name": "distFontsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistFontsDirSettings"
                                }
                            ],
                            "raw": "IDistFontsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distFontsDir } from '@coffeekraken/sugar/path';\n__distFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distIconsDir": {
                "id": "@coffeekraken.sugar.node.path.distIconsDir",
                "name": "distIconsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistIconsDirSettings"
                                }
                            ],
                            "raw": "IDistIconsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distIconsDir } from '@coffeekraken/sugar/path';\n__distIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distImgDir": {
                "id": "@coffeekraken.sugar.node.path.distImgDir",
                "name": "distImgDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistImgDirSettings"
                                }
                            ],
                            "raw": "IDistImgDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distImgDir } from '@coffeekraken/sugar/path';\n__distImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distJsDir": {
                "id": "@coffeekraken.sugar.node.path.distJsDir",
                "name": "distJsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistJsDirSettings"
                                }
                            ],
                            "raw": "IDistJsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distJsDir } from '@coffeekraken/sugar/path';\n__distJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distNodeDir": {
                "id": "@coffeekraken.sugar.node.path.distNodeDir",
                "name": "distNodeDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistNodeDirSettings"
                                }
                            ],
                            "raw": "IDistNodeDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distNodeDir } from '@coffeekraken/sugar/path';\n__distNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distRootDir": {
                "id": "@coffeekraken.sugar.node.path.distRootDir",
                "name": "distRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistRootDirSettings"
                                }
                            ],
                            "raw": "IDistRootDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distRootDir } from '@coffeekraken/sugar/path';\n__distRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.distViewsDir": {
                "id": "@coffeekraken.sugar.node.path.distViewsDir",
                "name": "distViewsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IDistViewsDirSettings"
                                }
                            ],
                            "raw": "IDistViewsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distViewsDir } from '@coffeekraken/sugar/path';\n__distViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/distViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageCacheDir": {
                "id": "@coffeekraken.sugar.node.path.packageCacheDir",
                "name": "packageCacheDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IPackageCacheDirSettings"
                                }
                            ],
                            "raw": "IPackageCacheDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package cache directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageCacheDir } from '@coffeekraken/sugar/path';\n__packageCacheDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageCacheDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageCacheDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.fs.packageLocalDir": {
                "id": "@coffeekraken.sugar.node.fs.packageLocalDir",
                "name": "packageLocalDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the .local directory path",
                "namespace": "@coffeekraken.sugar.node.fs",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageLocalDir } from '@coffeekraken/sugar/path';\n__packageLocalDir(); // => '/my/cool/path/.local'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageLocalDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageLocalDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageRootDir": {
                "id": "@coffeekraken.sugar.node.path.packageRootDir",
                "name": "packageRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify from where the research has to be done",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Some settings to configure the research",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "highest": {
                        "name": "highest",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the highest package possible",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "upCount": {
                        "name": "upCount",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Specify a number of packages to go up. Cannot be used alongside the `highest` setting",
                        "defaultStr": "undefined"
                    },
                    "requiredProperties": {
                        "name": "requiredProperties",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "Specify some required properties that MUST be present in the package.json to be considered as a valid package",
                        "default": [
                            "name",
                            "version"
                        ],
                        "defaultStr": "['name','version']"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the path to either the first finded package root going up the folders, or the highest package root finded",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageRootDir } from '@coffeekraken/sugar/path';\nconst root = __packageRootDir();"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.packageTmpDir": {
                "id": "@coffeekraken.sugar.node.path.packageTmpDir",
                "name": "packageTmpDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ITmpDirSettings"
                                }
                            ],
                            "raw": "ITmpDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scope": {
                        "name": "scope",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the scope in which you want your tmpDir to be returned. Can be \"local\" or \"global\"",
                        "default": "local",
                        "defaultStr": "'local'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __packageTmpDir } from '@coffeekraken/sugar/path';\n__packageTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "packageTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/packageTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.replacePathTokens": {
                "id": "@coffeekraken.sugar.node.path.replacePathTokens",
                "name": "replacePathTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "paths": {
                        "name": "paths",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|Array<String>"
                        },
                        "description": "The path(s) you want to process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IReplacePathTokensSettings"
                                }
                            ],
                            "raw": "IReplacePathTokensSettings"
                        },
                        "description": "Some settings to configure your tokens replacements",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as parameter either a path string, or an array of paths\nand return the according value type with the tokens (%tmpDir, %packageCacheDir, etc...) replaced",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replacePathTokens } from '@coffeekraken/sugar/path';\n__replacePathTokens('%packageCacheDir/something.txt'); // => /path/to/cache/directory/something.txt'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replacePathTokens.ts",
                "extension": "ts",
                "relPath": "src/node/path/replacePathTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcCssDir": {
                "id": "@coffeekraken.sugar.node.path.srcCssDir",
                "name": "srcCssDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcCssDirSettings"
                                }
                            ],
                            "raw": "ISrcCssDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcCssDir } from '@coffeekraken/sugar/path';\n__srcCssDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcCssDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcCssDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcDocDir": {
                "id": "@coffeekraken.sugar.node.path.srcDocDir",
                "name": "srcDocDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcDocDirSettings"
                                }
                            ],
                            "raw": "ISrcDocDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist doc directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcDocDir } from '@coffeekraken/sugar/path';\n__srcDocDir(); // => '/somethign/src/doc'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcDocDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcDocDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcFontsDir": {
                "id": "@coffeekraken.sugar.node.path.srcFontsDir",
                "name": "srcFontsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcFontsDirSettings"
                                }
                            ],
                            "raw": "ISrcFontsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcFontsDir } from '@coffeekraken/sugar/path';\n__srcFontsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcFontsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcFontsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcIconsDir": {
                "id": "@coffeekraken.sugar.node.path.srcIconsDir",
                "name": "srcIconsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcIconsDirSettings"
                                }
                            ],
                            "raw": "ISrcIconsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcIconsDir } from '@coffeekraken/sugar/path';\n__srcIconsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcIconsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcIconsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcImgDir": {
                "id": "@coffeekraken.sugar.node.path.srcImgDir",
                "name": "srcImgDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcImgDirSettings"
                                }
                            ],
                            "raw": "ISrcImgDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcImgDir } from '@coffeekraken/sugar/path';\n__srcImgDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcImgDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcImgDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcJsDir": {
                "id": "@coffeekraken.sugar.node.path.srcJsDir",
                "name": "srcJsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcJsDirSettings"
                                }
                            ],
                            "raw": "ISrcJsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcJsDir } from '@coffeekraken/sugar/path';\n__srcJsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcJsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcJsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcNodeDir": {
                "id": "@coffeekraken.sugar.node.path.srcNodeDir",
                "name": "srcNodeDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcNodeDirSettings"
                                }
                            ],
                            "raw": "ISrcNodeDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcNodeDir } from '@coffeekraken/sugar/path';\n__srcNodeDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcNodeDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcNodeDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcRootDir": {
                "id": "@coffeekraken.sugar.node.path.srcRootDir",
                "name": "srcRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcRootDirSettings"
                                }
                            ],
                            "raw": "ISrcRootDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcRootDir } from '@coffeekraken/sugar/path';\n__srcRootDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.srcViewsDir": {
                "id": "@coffeekraken.sugar.node.path.srcViewsDir",
                "name": "srcViewsDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISrcViewsDirSettings"
                                }
                            ],
                            "raw": "ISrcViewsDirSettings"
                        },
                        "description": "Some settings to configure your temp directory process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the package dist directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __srcViewsDir } from '@coffeekraken/sugar/path';\n__srcViewsDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "srcViewsDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/srcViewsDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.sugarRootDir": {
                "id": "@coffeekraken.sugar.node.path.sugarRootDir",
                "name": "sugarRootDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "setting": {
                    "scope": {
                        "name": "scope",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the scope in which you want your sugarRootDir to be returned. Can be \"local\" or \"global\"",
                        "default": "local",
                        "defaultStr": "'local'"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the sugar package directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sugarRootDir } from '@coffeekraken/sugar/path';\n__sugarRootDir(); // => '/something/node_modules/@coffeekraken/sugar'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sugarRootDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/sugarRootDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.path.systemTmpDir": {
                "id": "@coffeekraken.sugar.node.path.systemTmpDir",
                "name": "systemTmpDir",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the system temp directory path",
                "namespace": "@coffeekraken.sugar.node.path",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __systemTmpDir } from '@coffeekraken/sugar/path';\n__systemTmpDir(); // => '/private/var/folders/3x/jf5977fn79jbglr7rk0tq4d00000gn/T'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "systemTmpDir.ts",
                "extension": "ts",
                "relPath": "src/node/path/systemTmpDir.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.exitCleanup": {
                "id": "@coffeekraken.sugar.node.process.exitCleanup",
                "name": "exitCleanup",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply cleanup all the processes and other things that stay alive after that\nthe main process has been terminated",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __exitCleanup } from '@coffeekraken/sugar/process';\nawait __exitCleanup();"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exitCleanup.ts",
                "extension": "ts",
                "relPath": "src/node/process/exitCleanup.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.kill": {
                "id": "@coffeekraken.sugar.node.process.kill",
                "name": "kill",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "portOrId": {
                        "name": "portOrId",
                        "type": {
                            "types": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "number|string"
                        },
                        "description": "The port or the id of the process you want to kill. If you want to kill from a port, prefix your port with \":\" like so \":8888\"",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to kill a process by id or by port.\nThis is just a proxy to the awesome fkill package",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __kill } from '@coffeekraken/sugar/process';\nawait __kill(':8888'); // port\nawait __kill(8765); // id"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "kill.ts",
                "extension": "ts",
                "relPath": "src/node/process/kill.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.onProcessExit": {
                "id": "@coffeekraken.sugar.node.process.onProcessExit",
                "name": "onProcessExit",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The callback function you want to call",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to register a callback to execute when the process\nis exiting by one of these events:\n- exit: when app is closing\n- SIGINT: on ctrl+c\n- SIGUSR1, SIGUSR2: catches \"kill pid\"\n- uncaughtException: catches uncaught exceptions",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __onProcessExit } from '@coffeekraken/sugar/process';\n__onProcessExit(() => {\n     // do something\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "onProcessExit.ts",
                "extension": "ts",
                "relPath": "src/node/process/onProcessExit.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.index": {
                "id": "@coffeekraken.sugar.node.index",
                "name": "index",
                "description": "This file is the \"initialisation\" one for the sugar node toolkit.\nIt's optional to include it but if you do, you will get these features \"for free\":\n- Display errors\n- Process exit cleanup",
                "namespace": "@coffeekraken.sugar.node",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __processSugar } from '@coffeekraken/sugar/process';\n__processSugar();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "processSugar.ts",
                "extension": "ts",
                "relPath": "src/node/process/processSugar.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.sharedContext": {
                "id": "@coffeekraken.sugar.node.process.sharedContext",
                "name": "sharedContext",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of data to set",
                        "defaultStr": "undefined"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to access/set some context data that will be shared between main and child processes.",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sharedContext } from '@coffeekraken/sugar/process';\n\n// in the main process\n__sharedContext({\n something: 'cool'\n});\n\n// in a child process\n__sharedContext(); // => { something: 'cool' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "sharedContext.ts",
                "extension": "ts",
                "relPath": "src/node/process/sharedContext.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.process.spawn": {
                "id": "@coffeekraken.sugar.node.process.spawn",
                "name": "spawn",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "command": {
                        "name": "command",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The command to spawn",
                        "defaultStr": ""
                    },
                    "args": {
                        "name": "args",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "Some string arguments to use in the command",
                        "default": [],
                        "defaultStr": "[]"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISpawnSettings"
                                }
                            ],
                            "raw": "ISpawnSettings"
                        },
                        "description": "An object of settings to configure your spawn process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "...SpawnOptions": {
                        "name": "...SpawnOptions",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "All the supported ```spawn``` options. see: https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to spawn a new child process just like the native ```spawn``` node function\nbut add the support for SEventEmitter communication layers",
                "namespace": "@coffeekraken.sugar.node.process",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __spawn } from '@coffeekraken/sugar/process';\nconst pro = __spawn('echo \"hello world\");\npro.on('close', () => {\n  console.log('closed');\n});\nconsole.log(await pro);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "spawn.ts",
                "extension": "ts",
                "relPath": "src/node/process/spawn.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.project.detectProjectType": {
                "id": "@coffeekraken.sugar.node.project.detectProjectType",
                "name": "detectProjectType",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The root project directory to detect the type from",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to detect the project type like \"next\", \"nuxt\", etc...\nIf the project type is not detected, it will return \"generic\" for the type and \"1.0.0\" for the version.",
                "namespace": "@coffeekraken.sugar.node.project",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __detectProjectType } from '@coffeekraken/sugar/project';\n__detectProjectType();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "detectProjectType.ts",
                "extension": "ts",
                "relPath": "src/node/project/detectProjectType.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.string.uniqid": {
                "id": "@coffeekraken.sugar.node.string.uniqid",
                "name": "uniqid",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Generate a uniqid string of 8 bytes. Work using the [uniqid](https://www.npmjs.com/package/uniqid) npm package under the hood.",
                "namespace": "@coffeekraken.sugar.node.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __uniqid } from '@coffeekraken/sugar/string';\nconsole.log(__uniqid()); // => 1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uniqid.ts",
                "extension": "ts",
                "relPath": "src/node/string/uniqid.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.terminal.countLine": {
                "id": "@coffeekraken.sugar.node.terminal.countLine",
                "name": "countLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to count",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many lines the passed string will take in the current terminal",
                "namespace": "@coffeekraken.sugar.node.terminal",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __countLines } from '@coffeekraken/sugar/terminal';\n__countLines('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "countLines.ts",
                "extension": "ts",
                "relPath": "src/node/terminal/countLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.terminal.termSize": {
                "id": "@coffeekraken.sugar.node.terminal.termSize",
                "name": "termSize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Reliably get the termina size even in child process, etc...",
                "namespace": "@coffeekraken.sugar.node.terminal",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __termSize } from '@coffeekraken/sugar/terminal';\n__termSize().width; // => 200"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "termSize.ts",
                "extension": "ts",
                "relPath": "src/node/terminal/termSize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.string.replaceTokens": {
                "id": "@coffeekraken.sugar.node.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string you want to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function replace these tokens in the passed string:\n- `%moduleSystem`: Either \"esm\" or \"cjs\"\n- `%distRootDir`: The absolute path to the \"dist\" directory\n- `%packageCacheDir`: The absolute path to the \"cache\" directory in the package\n- `%packageLocalDir`: The absolute path to the \".local\" directory in the package\n- `%packageRootDir`: The absolute path to the package directory\n- `%packageTmpDir`: The absolute path to the \"tmp\" package directory\n- `%srcCssDir`: The absolute path to the \"css\" directory in the \"src\" one\n- `%srcDocDir`: The absolute path to the \"doc\" directory in the \"src\" one\n- `%srcFontDir`: The absolute path to the \"font\" directory in the \"src\" one\n- `%srcIconDir`: The absolute path to the \"icon\" directory in the \"src\" one\n- `%srcImgDir`: The absolute path to the \"img\" directory in the \"src\" one\n- `%srcJsDir`: The absolute path to the \"js\" directory in the \"src\" one\n- `%srcNodeDir`: The absolute path to the \"node\" directory in the \"src\" one\n- `%srcRootDir`: The absolute path to the \"src\" directory\n- `%srcViewsDir`: The absolute path to the \"views\" directory in the \"src\" one\n- `%distCssDir`: The absolute path to the \"css\" directory in the \"dist\" one\n- `%distDocDir`: The absolute path to the \"doc\" directory in the \"dist\" one\n- `%distFontDir`: The absolute path to the \"font\" directory in the \"dist\" one\n- `%distIconDir`: The absolute path to the \"icon\" directory in the \"dist\" one\n- `%distImgDir`: The absolute path to the \"img\" directory in the \"dist\" one\n- `%distJsDir`: The absolute path to the \"js\" directory in the \"dist\" one\n- `%distNodeDir`: The absolute path to the \"node\" directory in the \"dist\" one\n- `%distRootDir`: The absolute path to the \"dist\" directory\n- `%distViewsDir`: The absolute path to the \"views\" directory in the \"dist\" one\n- `%packageJson.property...`: Any value from the package.json file",
                "namespace": "@coffeekraken.sugar.node.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceTokens } from '@coffeekraken/sugar/string';\n__replaceTokens('Hello %packageJson.name, hope you are doing well (%packageRootDir)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/node/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.type.resolveTypeString": {
                "id": "@coffeekraken.sugar.node.type.resolveTypeString",
                "name": "resolveTypeString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "typeString": {
                        "name": "typeString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The type string to parse",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IResolveTypeStringSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IResolveTypeStringSettings>"
                        },
                        "description": "A setting object to configure your resolve process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "cwd": {
                        "name": "cwd",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The cwd to use to resolve the type string when they are path",
                        "default": "/Users/olivierbossel/data/web/coffeekraken/coffeekraken/packages/tools/sugar",
                        "defaultStr": "process.cwd()"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply parse the passed typeString like \"string | number\", or \"string & path\", etc... and return\nan object defining the resolved type with interface if defined, etc...",
                "namespace": "@coffeekraken.sugar.node.type",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __resolveTypeString } from '@coffeekraken/sugar/type';\n__resolveTypeString('string');\n// {\n//    types: [{\n//       type: 'string',\n//       of: undefined,\n//       value: undefined\n//    }],\n//    interface: undefined\n// }"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "resolveTypeString.ts",
                "extension": "ts",
                "relPath": "src/node/type/resolveTypeString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.deepDiff": {
                "id": "@coffeekraken.sugar.php.ar.deepDiff",
                "name": "deepDiff",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array1": {
                        "name": "$array1",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The base array on which to deepDiff the second",
                        "defaultStr": ""
                    },
                    "$array2": {
                        "name": "$array2",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array you want to deepDiff the first one",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and return only what is different from one to the other",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\deepDiff([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], [\n   'prop1' => 'Plop'\n   'prop2' => 'World'\n]);\n// [\n//   'prop1' => 'Plop'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepDiff.php",
                "extension": "php",
                "relPath": "src/php/array/deepDiff.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.deepMap": {
                "id": "@coffeekraken.sugar.php.ar.deepMap",
                "name": "deepMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to deep map on",
                        "defaultStr": ""
                    },
                    "$callback": {
                        "name": "$callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to run on each values. Must return the new value to set",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to map deeply on an array (object)",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\deepMap([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], function($prop, $value, $object) {\n     return 'Hello ' . $value;\n});\n// [\n//   'prop1' => 'Hello Plop',\n//   'prop2' => 'Hello World'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMap.php",
                "extension": "php",
                "relPath": "src/php/array/deepMap.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.deepMerge": {
                "id": "@coffeekraken.sugar.php.ar.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array1": {
                        "name": "$array1",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The base array on which to merge the second",
                        "defaultStr": ""
                    },
                    "$array2": {
                        "name": "$array2",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array you want to merge in the first one",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and merge them deeply by keeping distinct\nproperty keys.",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\merge_deep([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], [\n   'prop1' => 'Plop'\n]);\n// [\n//   'prop1' => 'Plop',\n//   'prop2' => 'World'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.php",
                "extension": "php",
                "relPath": "src/php/array/deepMerge.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.filter": {
                "id": "@coffeekraken.sugar.php.ar.filter",
                "name": "filter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "$filter": {
                        "name": "$filter",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "String|Function"
                        },
                        "description": "The filter to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you filter some array items either by:\n- `^...`: The keys that starts with the passed string\n- `...$`: The keys that ends with the passed string\n- `function($key, $value) { retur true; }`: A function that must return true or false",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$obj = [\n  \"hello\" => 'world',\n  \"yop\" => 'plop',\n  \"helloPlop\" => true\n];\n\\Sugar\\ar\\filter($obj, '^hel'); // [\"hello\" => 'world', \"helloPlop\" => true]\n\\Sugar\\ar\\filter($obj, function($key, $value) {\n  return false;\n}); // []"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filter.php",
                "extension": "php",
                "relPath": "src/php/array/filter.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.get": {
                "id": "@coffeekraken.sugar.php.ar.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object from which to get the value",
                        "defaultStr": ""
                    },
                    "$dotpath": {
                        "name": "$dotpath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath to get in the object",
                        "defaultStr": ""
                    },
                    "$separator": {
                        "name": "$separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath separator",
                        "default": ".",
                        "defaultStr": "'.'"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get a value from the passed object using the passed dotpath",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$obj = [\n  \"hello\" => [\n     \"world\" => \"plop\"\n  ]\n];\n\\Sugar\\ar\\get($obj, 'hello.world'); // \"plop\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.php",
                "extension": "php",
                "relPath": "src/php/array/get.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.ar.pickRandom": {
                "id": "@coffeekraken.sugar.php.ar.pickRandom",
                "name": "pickRandom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array in which you want to pick a random item",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This returns you a random item of the passed array",
                "namespace": "@coffeekraken.sugar.php.ar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\ar\\pickRandom(['hello','world','test']);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickRandom.php",
                "extension": "php",
                "relPath": "src/php/array/pickRandom.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.blade.getDefaultViewDirs": {
                "id": "@coffeekraken.sugar.php.blade.getDefaultViewDirs",
                "name": "getDefaultViewDirs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function gives you the default root directories where to search for views.\nYou will need to add these if you want to use the \"@sugar\" layouts, etc...",
                "namespace": "@coffeekraken.sugar.php.blade",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "$viewDirs = \\Sugar\\blade\\getDefaultViewDirs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getDefaultViewDirs.php",
                "extension": "php",
                "relPath": "src/php/blade/getDefaultViewDirs.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.classname.patchHtml": {
                "id": "@coffeekraken.sugar.php.classname.patchHtml",
                "name": "patchHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$html": {
                        "name": "$html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to patch",
                        "defaultStr": ""
                    },
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to pass to the SClassmap class",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method allows you to patch some html classes/variables depending on the classmap.json file loaded through the SClassmap class\nthat is exposed in the @coffeekraken/s-classname package.",
                "namespace": "@coffeekraken.sugar.php.classname",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$patchedHtml = \\Sugar\\classmap\\patchHtml('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "patchHtml.php",
                "extension": "php",
                "relPath": "src/php/classmap/patchHtml.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.convert.toArray": {
                "id": "@coffeekraken.sugar.php.convert.toArray",
                "name": "toArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The base object to convert to an array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert recursively an object to an associative array",
                "namespace": "@coffeekraken.sugar.php.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\convert\\toArray((object) [\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toArray.php",
                "extension": "php",
                "relPath": "src/php/convert/toArray.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.convert.toObject": {
                "id": "@coffeekraken.sugar.php.convert.toObject",
                "name": "toObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The base array to convert to an object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert recursively an associative array to an object",
                "namespace": "@coffeekraken.sugar.php.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\convert\\toObject([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toObject.php",
                "extension": "php",
                "relPath": "src/php/convert/toObject.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.css.buildMediaQuery": {
                "id": "@coffeekraken.sugar.php.css.buildMediaQuery",
                "name": "buildMediaQuery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$media": {
                        "name": "$media",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The media query definition you want like \"mobile\", \">mobile\", etc...",
                        "defaultStr": ""
                    },
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Some settings to configure your media query css generation",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "setting": {
                    "[defaultAction='>=']": {
                        "name": "[defaultAction='>=']",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the default action you want when none is passed in the $media parameter. Can be \"<\", \">\", \"=\", \"<=\" or \">=\".",
                        "defaultStr": ""
                    },
                    "defaultQuery": {
                        "name": "defaultQuery",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A default query to always use in the generation",
                        "default": "screen",
                        "defaultStr": "'screen'"
                    },
                    "[queries=['mobile'=>[],'tablet'=>[],'desktop'=>[],'wide'=>[],'dwarf'=>[]]]": {
                        "name": "[queries=['mobile'=>[],'tablet'=>[],'desktop'=>[],'wide'=>[],'dwarf'=>[]]]",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "All the available queries you want to support with for each the \"min-width|height\" and \"max-width|height\" values in integer (used as px)",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function takes a media query definition like \"mobile\", \">mobile\", \"=tablet\", etc... and\nreturns you the corresponding css media query string.\nThis is based on the passed settings that you can pass as a second parameter.\n\nHere's the default medias availables:\n- mobile: 0-639px\n- tablet: 640px-1279px\n- desktop: 1280px-2047px\n- wide: 2048px-...\nYou can as well override these in the $settings parameter.",
                "namespace": "@coffeekraken.sugar.php.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\css\\buildMediaQuery('desktop');\n\\Sugar\\css\\buildMediaQuery('>desktop');\n\\Sugar\\css\\buildMediaQuery('<tablet');\n\\Sugar\\css\\buildMediaQuery('desktop', [\n  'queries' => [\n     'desktop' => [\n         'minWidth': 1000,\n         'maxWidth': null\n     ]\n  ]\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "buildMediaQuery.php",
                "extension": "php",
                "relPath": "src/php/css/buildMediaQuery.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.css.layoutCss": {
                "id": "@coffeekraken.sugar.php.css.layoutCss",
                "name": "layoutCss",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$layout": {
                        "name": "$layout",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The layout string defintion you want to generate the css for like \"1 2 _ 3 3\"",
                        "defaultStr": ""
                    },
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Some settings to configure your layout generation",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "setting": {
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A css selector used to target the correct section/div...",
                        "default": "#layout",
                        "defaultStr": "'#layout'"
                    },
                    "gap": {
                        "name": "gap",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A gap value to apply on your layout",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "gapBetween": {
                        "name": "gapBetween",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the gap only between the cells or all around",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "align": {
                        "name": "align",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The \"align-items\" value for your grid layout",
                        "default": "stretch",
                        "defaultStr": "'stretch'"
                    },
                    "justify": {
                        "name": "justify",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The \"justify-items\" value for your grid layout",
                        "default": "stretch",
                        "defaultStr": "'stretch'"
                    },
                    "media": {
                        "name": "media",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A media to pass to the \\Sugar\\css\\buildMediaQuery function to scope the generated css in the correct media query",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "mediaSettings": {
                        "name": "mediaSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Specify the \\Sugar\\css\\buildMediaQuery $settings parameter if you specify a \"media\" setting",
                        "default": [],
                        "defaultStr": "[]"
                    },
                    "minify": {
                        "name": "minify",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Minify the output css or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "$scope": {
                        "name": "$scope",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The scope(s) you want to generate",
                        "default": [
                            "bare",
                            "lnf",
                            "gap",
                            "align",
                            "justify"
                        ],
                        "defaultStr": "['bare','lnf','gap','align','justify']"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function takes a layout definition like \"1 2 _ 3 3\" and generate the css that will handle this layout.\nYou can as well pass some informations the gap wanted, the alignement, etc...",
                "namespace": "@coffeekraken.sugar.php.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\css\\layoutCss('1 2 _ 3 3', [\n   'selector' => '.my-layout'\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "layoutCss.php",
                "extension": "php",
                "relPath": "src/php/css/layoutCss.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.css.marginClasses": {
                "id": "@coffeekraken.sugar.php.css.marginClasses",
                "name": "marginClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$margins": {
                        "name": "$margins",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "Some margins like \"block\" => 10, etc...",
                        "defaultStr": ""
                    },
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "The frontspec json to handle things like defaultMedia, etc...",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function takes an object|array of margins issued from the themeMargin.config.ts configuration file like:\n- \"blockStart\" => 10\n- \"inlineEnd\" => 30\n- \"block\" => 10\n- etc...\nThis function will returns you the classes like \"s-mbs:10\" that you can apply where you want in your views.",
                "namespace": "@coffeekraken.sugar.php.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\css\\marginClasses([\n     'block' => 20,\n     'inlineEnd' => 10\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "marginClasses.php",
                "extension": "php",
                "relPath": "src/php/css/marginClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.css.paddingClasses": {
                "id": "@coffeekraken.sugar.php.css.paddingClasses",
                "name": "paddingClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$paddings": {
                        "name": "$paddings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "Some paddings like \"block\" => 10, etc...",
                        "defaultStr": ""
                    },
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "The frontspec json to handle things like defaultMedia, etc...",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function takes an object|array of paddings issued from the themePadding.config.ts configuration file like:\n- \"blockStart\" => 10\n- \"inlineEnd\" => 30\n- \"block\" => 10\n- etc...\nThis function will returns you the classes like \"s-pbs:10\" that you can apply where you want in your views.",
                "namespace": "@coffeekraken.sugar.php.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\css\\paddingClasses([\n     'block' => 20,\n     'inlineEnd' => 10\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "paddingClasses.php",
                "extension": "php",
                "relPath": "src/php/css/paddingClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.array.pre": {
                "id": "@coffeekraken.sugar.php.array.pre",
                "name": "pre",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$toPrint": {
                        "name": "$toPrint",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The data to print",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function simply print your passed \"object/array\" in a \"<pre>\" tag using the \"print_r\" function.",
                "namespace": "@coffeekraken.sugar.php.array",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "print \\Sugar\\debug\\pre([\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pre.php",
                "extension": "php",
                "relPath": "src/php/debug/pre.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.draftJs.generateDeepStyleObject": {
                "id": "@coffeekraken.sugar.php.draftJs.generateDeepStyleObject",
                "name": "generateDeepStyleObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$block": {
                        "name": "$block",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "DraftJs JSON object",
                        "defaultStr": ""
                    },
                    "$style": {
                        "name": "$style",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Typo to render",
                        "defaultStr": ""
                    },
                    "$type": {
                        "name": "$type",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Type of typo to render",
                        "defaultStr": ""
                    },
                    "$char_position": {
                        "name": "$char_position",
                        "type": {
                            "types": [
                                {
                                    "type": "Integer"
                                }
                            ],
                            "raw": "Integer"
                        },
                        "description": "Position in content treatment - Start to 0",
                        "defaultStr": ""
                    },
                    "$keyInlineStylePosition": {
                        "name": "$keyInlineStylePosition",
                        "type": {
                            "types": [
                                {
                                    "type": "Integer"
                                }
                            ],
                            "raw": "Integer"
                        },
                        "description": "Index of current InlineStyle treatment",
                        "defaultStr": ""
                    },
                    "$breakPoint": {
                        "name": "$breakPoint",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Contains deep elements to close",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Create deep object used to render DraftJs output (HTML, markdown, etc...)",
                "namespace": "@coffeekraken.sugar.php.draftJs",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Paul Balanche",
                    "email": "pb@buzzbrothers.ch",
                    "url": "https://buzzbrothers.ch"
                },
                "filename": "generateDeepStyleObject.php",
                "extension": "php",
                "relPath": "src/php/draftJs/generateDeepStyleObject.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.draftJs.renderContent": {
                "id": "@coffeekraken.sugar.php.draftJs.renderContent",
                "name": "renderContent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$deepStyleObject": {
                        "name": "$deepStyleObject",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Deep style object gathered using the `generateDeepStyleObject` function",
                        "defaultStr": ""
                    },
                    "$renderFunction": {
                        "name": "$renderFunction",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The render function that will take as parameter an array with the \"type\" and the \"html\" properties",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Return DraftJs HTML",
                "namespace": "@coffeekraken.sugar.php.draftJs",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Paul Balanche",
                    "email": "pb@buzzbrothers.ch",
                    "url": "https://buzzbrothers.ch"
                },
                "filename": "renderContent.php",
                "extension": "php",
                "relPath": "src/php/draftJs/renderContent.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.frontspec.assets": {
                "id": "@coffeekraken.sugar.php.frontspec.assets",
                "name": "assets",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$assets": {
                        "name": "$assets",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The \"assets\" object of the frontspec",
                        "defaultStr": ""
                    },
                    "$cacheBuster": {
                        "name": "$cacheBuster",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A string to be added to the asset url to bust cache",
                        "default": "",
                        "defaultStr": "''"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Print the passed \"assets\" from the frontspec",
                "namespace": "@coffeekraken.sugar.php.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\frontspec\\assets($frontspec);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "assets.php",
                "extension": "php",
                "relPath": "src/php/frontspec/assets.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.frontspec.metas": {
                "id": "@coffeekraken.sugar.php.frontspec.metas",
                "name": "metas",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec object containing the \"metas\" property",
                        "defaultStr": ""
                    },
                    "$env": {
                        "name": "$env",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The \"env\" string that can be \"development\" or \"production\"",
                        "default": "development",
                        "defaultStr": "'development'"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Print the passed \"metas\" from the frontspec",
                "namespace": "@coffeekraken.sugar.php.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\frontspec\\metas($frontspec, 'production');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "metas.php",
                "extension": "php",
                "relPath": "src/php/frontspec/metas.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.frontspec.og": {
                "id": "@coffeekraken.sugar.php.frontspec.og",
                "name": "og",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec object containing the \"og\" property",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Print the passed \"og\" from the frontspec",
                "namespace": "@coffeekraken.sugar.php.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\frontspec\\og($frontspec);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "og.php",
                "extension": "php",
                "relPath": "src/php/frontspec/og.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.frontspec.readFrontspec": {
                "id": "@coffeekraken.sugar.php.twig.functions.frontspec.readFrontspec",
                "name": "readFrontspec",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$sFrontspecSettings": {
                        "name": "$sFrontspecSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to pass to the SFrontspec class like the path, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read the `frontspec.json` file",
                "namespace": "@coffeekraken.sugar.php.twig.functions.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\frontspec\\readFrontspec();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readFrontspec.php",
                "extension": "php",
                "relPath": "src/php/frontspec/readFrontspec.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.frontspec.sortMedia": {
                "id": "@coffeekraken.sugar.php.frontspec.sortMedia",
                "name": "sortMedia",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$media": {
                        "name": "$media",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec \"media\" object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take as input the \"media\" property of the `frontspec.json` file and return\na new object mostly the same but with the \"queries\" object|array sorted depending on the\n\"defaultAction\" property.",
                "namespace": "@coffeekraken.sugar.php.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\frontspec\\sortMedia($frontspec->media);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sortMedia.php",
                "extension": "php",
                "relPath": "src/php/frontspec/sortMedia.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.gravatar.url": {
                "id": "@coffeekraken.sugar.php.gravatar.url",
                "name": "url",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$email": {
                        "name": "$email",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The email address to get the gravatar url for.",
                        "defaultStr": ""
                    },
                    "$s": {
                        "name": "$s",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Size in pixels, defaults to 80px [ 1 - 2048 ]",
                        "defaultStr": ""
                    },
                    "$d": {
                        "name": "$d",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Default imageset to use [ 404 | mp | identicon | monsterid | wavatar ]",
                        "defaultStr": ""
                    },
                    "$r": {
                        "name": "$r",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Maximum rating (inclusive) [ g | pg | r | x ]",
                        "defaultStr": ""
                    },
                    "$img": {
                        "name": "$img",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "True to return a complete IMG tag False for just the URL",
                        "defaultStr": ""
                    },
                    "$atts": {
                        "name": "$atts",
                        "type": {
                            "types": [
                                {
                                    "type": "array"
                                }
                            ],
                            "raw": "array"
                        },
                        "description": "Optional, additional key/value attributes to include in the IMG tag",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function returns the gravatar url for a given email address.",
                "namespace": "@coffeekraken.sugar.php.gravatar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\gravatar\\url('olivier.bossel@gmail.com');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "url.php",
                "extension": "php",
                "relPath": "src/php/gravatar/url.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.html.attrs": {
                "id": "@coffeekraken.sugar.php.html.attrs",
                "name": "attrs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$attributes": {
                        "name": "$attributes",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate an html attributes string from a key=>pair object",
                "namespace": "@coffeekraken.sugar.php.html",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div <?php print \\Sugar\\attrs(attributes) ?>></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "attrs.php",
                "extension": "php",
                "relPath": "src/php/html/attrs.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.html.expandPleasantCssClassnames": {
                "id": "@coffeekraken.sugar.php.html.expandPleasantCssClassnames",
                "name": "expandPleasantCssClassnames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$html": {
                        "name": "$html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method will look for classes like something:cool and transform it into\nsomething like this: something something--cool",
                "namespace": "@coffeekraken.sugar.php.html",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\html\\expandPleasantCssClassnames('...html');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnames.php",
                "extension": "php",
                "relPath": "src/php/html/expandPleasantCssClassnames.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.absolutePath": {
                "id": "@coffeekraken.sugar.php.is.absolutePath",
                "name": "absolutePath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$path": {
                        "name": "$path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method simply check if the passed path is absolute or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\absolutePath('my/cool/path'); // => false\nSugar\\is\\absolutePath('http://something.com/my/cool/path'); // => true\nSugar\\is\\absolutePath('/my/cool/path'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "absolutePath.php",
                "extension": "php",
                "relPath": "src/php/is/absolutePath.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.is.url": {
                "id": "@coffeekraken.sugar.php.is.url",
                "name": "url",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$url": {
                        "name": "$url",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The url to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function simply check if the passed string a an url or not",
                "namespace": "@coffeekraken.sugar.php.is",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\is\\url('something'); // => false\nSugar\\is\\url('http://hello.com'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "url.php",
                "extension": "php",
                "relPath": "src/php/is/url.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.lod.lodClasses": {
                "id": "@coffeekraken.sugar.php.lod.lodClasses",
                "name": "lodClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$level": {
                        "name": "$level",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The lod level you want to generate classes for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function is about the lod system (level of details).\nIt generate the correct .s-lod--... classes depending on the requested level.",
                "namespace": "@coffeekraken.sugar.php.lod",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\lod\\lodClasses(2); // => .s-lod .s-lod--0 .s-lod--1 .s-lod--2"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "lodClasses.php",
                "extension": "php",
                "relPath": "src/php/lod/lodClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.markdown.toHtml": {
                "id": "@coffeekraken.sugar.php.markdown.toHtml",
                "name": "toHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$markdown": {
                        "name": "$markdown",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The markdown to render",
                        "defaultStr": ""
                    },
                    "$inline": {
                        "name": "$inline",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Whether to render inline or block",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method simply render your passed markdown to HTML using the AMATING Parsedown library.",
                "namespace": "@coffeekraken.sugar.php.markdown",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\markdown\\toHtml('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toHtml.php",
                "extension": "php",
                "relPath": "src/php/markdown/toHtml.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.network.ipAddress": {
                "id": "@coffeekraken.sugar.php.network.ipAddress",
                "name": "ipAddress",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$type": {
                        "name": "$type",
                        "type": {
                            "types": [
                                {
                                    "type": "string",
                                    "value": "local"
                                },
                                {
                                    "type": "string",
                                    "value": "external"
                                }
                            ],
                            "raw": "\"local\"|\"external\""
                        },
                        "description": "Specify which ip address you want",
                        "default": "local",
                        "defaultStr": "\"local\""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get either your \"local\" ip in the local network, either\nyour public ip address on the internet.",
                "namespace": "@coffeekraken.sugar.php.network",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\network\\ipAddress(); // => 192.168.1.23\nSugar\\network\\ipAddress('external'); // => 23.45.322.67"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ipAddress.php",
                "extension": "php",
                "relPath": "src/php/network/ipAddress.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.deepDiff": {
                "id": "@coffeekraken.sugar.php.object.deepDiff",
                "name": "deepDiff",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$object1": {
                        "name": "$object1",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The base object on which to deepDiff the second",
                        "defaultStr": ""
                    },
                    "$object2": {
                        "name": "$object2",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to deepDiff the first one",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return only what is different from one to the other",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\object\\deepDiff((object) [\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], (object) [\n   'prop1' => 'Plop'\n   'prop2' => 'World'\n]);\n// [\n//   'prop1' => 'Plop'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepDiff.php",
                "extension": "php",
                "relPath": "src/php/object/deepDiff.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.deepMap": {
                "id": "@coffeekraken.sugar.php.object.deepMap",
                "name": "deepMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$array": {
                        "name": "$array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to deep map on",
                        "defaultStr": ""
                    },
                    "$callback": {
                        "name": "$callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to run on each values. Must return the new value to set",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to map deeply on an object (array)",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\object\\deepMap((object) [\n   'prop1' => 'Hello',\n   'prop2' => 'World'\n], function($prop, $value, $object) {\n     return 'Hello ' . $value;\n});\n// [\n//   'prop1' => 'Hello Plop',\n//   'prop2' => 'Hello World'\n// ]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMap.php",
                "extension": "php",
                "relPath": "src/php/object/deepMap.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.deepMerge": {
                "id": "@coffeekraken.sugar.php.object.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$object1": {
                        "name": "$object1",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The first object",
                        "defaultStr": ""
                    },
                    "$object2": {
                        "name": "$object2",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The second object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to merge deeply two objects",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\object\\deepMerge((object) [\n 'hello' => 'world'\n], (object) [\n 'plop' => true\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.php",
                "extension": "php",
                "relPath": "src/php/object/deepMerge.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.filter": {
                "id": "@coffeekraken.sugar.php.object.filter",
                "name": "filter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "$filter": {
                        "name": "$filter",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "String|Function"
                        },
                        "description": "The filter to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you filter some object items either by:\n- `^...`: The keys that starts with the passed string\n- `...$`: The keys that ends with the passed string\n- `function($key, $value) { retur true; }`: A function that must return true or false",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$obj = (object) [\n  \"hello\" => 'world',\n  \"yop\" => 'plop',\n  \"helloPlop\" => true\n];\n\\Sugar\\object\\filter($obj, '^hel'); // (object) [\"hello\" => 'world', \"helloPlop\" => true]\n\\Sugar\\object\\filter($obj, function($key, $value) {\n  return false;\n}); // (object) []"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filter.php",
                "extension": "php",
                "relPath": "src/php/object/filter.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.get": {
                "id": "@coffeekraken.sugar.php.object.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object from which to get the value",
                        "defaultStr": ""
                    },
                    "$dotpath": {
                        "name": "$dotpath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath to get in the object",
                        "defaultStr": ""
                    },
                    "$separator": {
                        "name": "$separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath separator",
                        "default": ".",
                        "defaultStr": "'.'"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get a value from the passed object using the passed dotpath.\nY",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$obj = (object) [\n  \"hello\" => (object) [\n     \"world\" => \"plop\"\n  ]\n];\n\\Sugar\\object\\get($obj, 'hello.world'); // \"plop\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.php",
                "extension": "php",
                "relPath": "src/php/object/get.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.object.sort": {
                "id": "@coffeekraken.sugar.php.object.sort",
                "name": "sort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to sort",
                        "defaultStr": ""
                    },
                    "sort": {
                        "name": "sort",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The sort function to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way Array.sort made it in js.",
                "namespace": "@coffeekraken.sugar.php.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sort } from '@coffeekraken/sugar/object';\n__sort({\n   coco: { weight: 10 },\n   lolo: { weight: 2 },\n   plop: { weight: 5 }\n}, (a, b) => {\n  return a.value.weight - b.value.weight;\n});\n// {\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n//   coco: { weight: 10 }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sort.php",
                "extension": "php",
                "relPath": "src/php/object/sort.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.path.extension": {
                "id": "@coffeekraken.sugar.php.path.extension",
                "name": "extension",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "The path to parse and get the extension from": {
                        "name": "The path to parse and get the extension from",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Return the extension of the passed path",
                "namespace": "@coffeekraken.sugar.php.path",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\path\\extension('/path/to/file.ext'); // => ext"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extension.php",
                "extension": "php",
                "relPath": "src/php/path/extension.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.specs.listSpecs": {
                "id": "@coffeekraken.sugar.php.specs.listSpecs",
                "name": "listSpecs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$namespaces": {
                        "name": "$namespaces",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An array of namespaces to list the specs from. If not set, list all the specs from all the namespaces",
                        "defaultStr": ""
                    },
                    "$sJsonSettings": {
                        "name": "$sJsonSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to pass to the SJson class like the rootDirs, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This method allows you to list all the available spec files inside a particular namespace(s), or simply all.",
                "namespace": "@coffeekraken.sugar.php.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "$specs = \\Sugar\\specs\\listSpecs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "listSpecs.php",
                "extension": "php",
                "relPath": "src/php/specs/listSpecs.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.specs.markdownSpecsList": {
                "id": "@coffeekraken.sugar.php.specs.markdownSpecsList",
                "name": "markdownSpecsList",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$specs": {
                        "name": "$specs",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The specs object you want to list",
                        "defaultStr": ""
                    },
                    "$override": {
                        "name": "$override",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object to override some of the passed specs",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to display a markdown specs list with some default specifications info like \"margin\", \"padding\", \"gap\", etc...\nYou can abviously override the defaults with your own details object that MUST contains an \"title\" and \"description\" property for each spec",
                "namespace": "@coffeekraken.sugar.php.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$markdown = \\Sugar\\specs\\markdownSpecsList($mySpecs);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "markdownSpecsList.php",
                "extension": "php",
                "relPath": "src/php/specs/markdownSpecsList.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.specs.readSpec": {
                "id": "@coffeekraken.sugar.php.specs.readSpec",
                "name": "readSpec",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$jsonDotPath": {
                        "name": "$jsonDotPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath relative to any $settings->rootDirs specified directories",
                        "defaultStr": ""
                    },
                    "$sJsonSettings": {
                        "name": "$sJsonSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to pass to the SJson class like the rootDirs, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a spec file like the \"viewspec.json\", \"frontspec\", etc... using the SSpecs class\nthat gives you the ability to reference other json and json props.",
                "namespace": "@coffeekraken.sugar.php.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "$value = \\Sugar\\specs\\readSpec('my.cool.viewspec);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readSpec.php",
                "extension": "php",
                "relPath": "src/php/specs/readSpec.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.specs.specsToMarkdown": {
                "id": "@coffeekraken.sugar.php.specs.specsToMarkdown",
                "name": "specsToMarkdown",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$specs": {
                        "name": "$specs",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The list of specs you want to display",
                        "defaultStr": ""
                    },
                    "$override": {
                        "name": "$override",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An associative array or an object that specify each specs details like `{margin:{title:'Margin',description':'Manage margins'}}`",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to display a markdown specs list with some default specifications info like \"margin\", \"padding\", \"gap\", etc...\nYou can abviously override the defaults with your own details object that MUST contains an \"title\" and \"description\" property for each spec",
                "namespace": "@coffeekraken.sugar.php.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "$markdown = \\Sugar\\specs\\specsToMarkdown(['margin','padding'], [\n  \"margin\" => [\n     \"title\" => \"Margin\",\n     \"description\" => \"Manage the margins with ease\n  ]\n]);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "specsToMarkdown.php",
                "extension": "php",
                "relPath": "src/php/specs/specsToMarkdown.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.generateRandomString": {
                "id": "@coffeekraken.sugar.php.string.generateRandomString",
                "name": "generateRandomString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$length": {
                        "name": "$length",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The length of the string you want",
                        "defaultStr": ""
                    },
                    "$characters": {
                        "name": "$characters",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The characters you want to use to generate the string",
                        "default": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                        "defaultStr": "'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'"
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate a random string using the characters and the wanted length\nspecified in the params",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\generateRandomString(10); // => ak93mdkaod"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "generateRandomString.php",
                "extension": "php",
                "relPath": "src/php/string/generateRandomString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.idCompliant": {
                "id": "@coffeekraken.sugar.php.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$string": {
                        "name": "$string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.php",
                "extension": "php",
                "relPath": "src/php/string/idCompliant.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.replaceTokens": {
                "id": "@coffeekraken.sugar.php.string.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$string": {
                        "name": "$string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take care of replacing some tokens like \"%serverIp\", \"%clientIp\", etc...\nHere's the list of supported tokens: (this list can be updated with new tokens)\n- %serverIp: Server ip address\n- %clientIp: Client ip address",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\replaceTokens('Hello %serverIp, how are you?'); // => Hello 156.436.56.75, how are you?"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.php",
                "extension": "php",
                "relPath": "src/php/string/replaceTokens.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.simplifySpecialChars": {
                "id": "@coffeekraken.sugar.php.string.simplifySpecialChars",
                "name": "simplifySpecialChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$string": {
                        "name": "$string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\simplifySpecialChars('Hellô world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "simplifySpecialChars.php",
                "extension": "php",
                "relPath": "src/php/string/simplifySpecialChars.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.string.toString": {
                "id": "@coffeekraken.sugar.php.string.toString",
                "name": "toString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The value to convert into a string",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to transform pretty much any types like Array, Object, etc... into a string version that you can display\nin documentation, etc...",
                "namespace": "@coffeekraken.sugar.php.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\string\\toString(['hello','world']); // => \"['hello','world']\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toString.php",
                "extension": "php",
                "relPath": "src/php/string/toString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.sugar.init": {
                "id": "@coffeekraken.sugar.php.sugar.init",
                "name": "init",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings you want to init.",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "'frontend.path'": {
                        "name": "'frontend.path'",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The absolute path to the frontend directory where you will find the frontspec.json file, package.json, etc...",
                        "defaultStr": ""
                    },
                    "'frontspec.path'": {
                        "name": "'frontspec.path'",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The absolute path to the frontspec.json file",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to init the sugar toolkit with ease and elegantly.\nAll this really do under the hood is to set some environment variables\nthat will be used across the toolkit, usually as function argument default values\nor in some optional settings arguments.\nNote that if you prefer, you can set these environment variables by hand the way\nyou prefer.",
                "namespace": "@coffeekraken.sugar.php.sugar",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\init([\n   \"frontend.path\" => \"/something/cool/...\"\n]);\n// This will generate this environment variable: $_ENV[\"S_FRONTEND_PATH\"] = \"/something/cool/...\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "init.php",
                "extension": "php",
                "relPath": "src/php/sugar/init.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.getDefaultViewDirs": {
                "id": "@coffeekraken.sugar.php.twig.getDefaultViewDirs",
                "name": "getDefaultViewDirs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function gives you the default root directories where to search for views.\nYou will need to add these if you want to use the \"@coffeekraken\" layouts, etc...",
                "namespace": "@coffeekraken.sugar.php.twig",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "$viewDirs = \\Sugar\\twig\\getDefaultViewDirs();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getDefaultViewDirs.php",
                "extension": "php",
                "relPath": "src/php/twig/getDefaultViewDirs.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.initTwig": {
                "id": "@coffeekraken.sugar.php.twig.initTwig",
                "name": "initTwig",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$twig": {
                        "name": "$twig",
                        "type": {
                            "types": [
                                {
                                    "type": "Twig"
                                }
                            ],
                            "raw": "Twig"
                        },
                        "description": "Your twig instance",
                        "defaultStr": ""
                    },
                    "$loader": {
                        "name": "$loader",
                        "type": {
                            "types": [
                                {
                                    "type": "TwigLoader"
                                }
                            ],
                            "raw": "TwigLoader"
                        },
                        "description": "Your twig loader to be able to register default layout directories, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function init your twig to have access to helpers delivered from the \"coffeekraken/sugar\" package like \"toArray\", \"idCompliant\", and many more...\nThese helpers/functions are used inside the @coffeekraken layouts, views, etc... so you will need to init your twig using this function.",
                "namespace": "@coffeekraken.sugar.php.twig",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "$twig = \\Sugar\\twig\\initTwig($twig);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "initTwig.php",
                "extension": "php",
                "relPath": "src/php/twig/initTwig.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.type.typeToString": {
                "id": "@coffeekraken.sugar.php.type.typeToString",
                "name": "typeToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$type": {
                        "name": "$type",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The type to convert into string",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a simple string that will be returned as he's, or a type object|array like:\n{\ntypes: [{\ntype: 'Array',\nof: ['String','Boolean']\n}, {\ntype: 'Array',\nof: undefined\n}]\n}\nAnd convert it into a type string like:\nArray<String|Boolean>|Array",
                "namespace": "@coffeekraken.sugar.php.type",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "Sugar\\type\\generateRandomString('Array'); // => Array\nSugar\\type\\generateRandomString({\n   types: [{\n       type: 'Array',\n       of: ['String','Boolean']\n   }]\n}); // => Array<String|Boolean>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typeOtString.php",
                "extension": "php",
                "relPath": "src/php/type/typeOtString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.url.currentUrl": {
                "id": "@coffeekraken.sugar.php.url.currentUrl",
                "name": "currentUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "Return the current url",
                "namespace": "@coffeekraken.sugar.php.url",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\url\\currentUrl();\n// https://coffeekraken.io/hello/world?query=string"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "currentUrl.php",
                "extension": "php",
                "relPath": "src/php/url/currentUrl.php",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.asyncForEach": {
                "id": "@coffeekraken.sugar.shared.array.asyncForEach",
                "name": "asyncForEach",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to loop on",
                        "defaultStr": ""
                    },
                    "asyncFn": {
                        "name": "asyncFn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The async function to call on each items",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to make some async foreach on your arrays",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __asyncForEach } from '@coffeekraken/sugar/array';\nconst waitFor = (ms) => new Promise(r => setTimeout(r, ms));\n__asyncForEach([0,1,2,3], async (item) => {\n   await waitWor(50);\n   console.log(item);\n});\n// 0\n// 1\n// 2\n// 3"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "asyncForEach.ts",
                "extension": "ts",
                "relPath": "src/shared/array/asyncForEach.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.fromQuantifier": {
                "id": "@coffeekraken.sugar.shared.array.fromQuantifier",
                "name": "fromQuantifier",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "quantifier": {
                        "name": "quantifier",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "String|Number"
                        },
                        "description": "The quantifier to generate",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IFromQuantifierSettings"
                                }
                            ],
                            "raw": "IFromQuantifierSettings"
                        },
                        "description": "Some settings to configure your array generation",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum wanted when using > and >= quantifiers",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A function that take the current index and that MUST return the value wanted in the generated array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate an array from a certain passed quantifier like \"2\", \"<10\", \">10\", \"9-12\", etc...\nThis is useful to create arrays that are depending on user-friendly quantifier and it's used for example in the\ns-postcss-sugar-plugin for the `@sugar.lod(>2)` mixin.",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __fromQuantifier } from '@coffeekraken/sugar/array'\n__fromQuantifier(3); // => [0,1,2]\n__fromQuantifier('3-5'); // => [3,4,5]\n__fromQuantifier('3-6', {\n   value(i) => `c-${i}`\n}); // => ['c-3','c-4','c-5','c-6']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "fromQuantifier.ts",
                "extension": "ts",
                "relPath": "src/shared/array/fromQuantifier.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.keysFirst": {
                "id": "@coffeekraken.sugar.shared.array.keysFirst",
                "name": "keysFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to sort",
                        "defaultStr": ""
                    },
                    "keys": {
                        "name": "keys",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The keys to start the array with",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array start with the passed keys",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __keysFirst } from '@coffeekraken/sugar/array'\n__keysFirst(['a','b','d','g','c'], ['d','g'])\n// ['d','g','a','b','c']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.keysLast": {
                "id": "@coffeekraken.sugar.shared.array.keysLast",
                "name": "keysLast",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to process",
                        "defaultStr": ""
                    },
                    "keys": {
                        "name": "keys",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The keys to end the array with",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Make sure the passed array ends with the passed keys",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __keysLast } from '@coffeekraken/sugar/array'\n__keysLast(['a','b','d','g','c'], ['d','g'])\n// ['a','b','c','d','g']"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "keysLast.ts",
                "extension": "ts",
                "relPath": "src/shared/array/keysLast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.pickRandom": {
                "id": "@coffeekraken.sugar.shared.array.pickRandom",
                "name": "pickRandom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array from which to pick a random item",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pick a random item in the passed array",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pickRandom } from '@coffeekraken/sugar/array';\nconst array = ['hello','world'];\n__pickRandom(array); // => 'world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pickRandom.ts",
                "extension": "ts",
                "relPath": "src/shared/array/pickRandom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.proxyArray": {
                "id": "@coffeekraken.sugar.shared.array.proxyArray",
                "name": "proxyArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to proxy",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function override the passed array prototype to intercept changes made through",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __proxyArray } from '@coffeekraken/sugar/array';\nconst myArray = __proxyArray([1,2,3]);\nmyArray.watch(['push','pop'], (watchObj) => {\n   // check the watchObj action\n   switch (watchObj.action) {\n     case 'push':\n       // do something...\n     break;\n   }\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "proxyArray.ts",
                "extension": "ts",
                "relPath": "src/shared/array/proxyArray.ts",
                "children": {
                    "watch": {
                        "id": "s323286e361e32ea507e04012c332677d59ce3eea2473cfcb64d9bb2a7488d748",
                        "name": "watch",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "methods": {
                                "name": "methods",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Array"
                                        },
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "Array|String"
                                },
                                "description": "The methods you want to watch",
                                "defaultStr": ""
                            },
                            "handler": {
                                "name": "handler",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Function"
                                        }
                                    ],
                                    "raw": "Function"
                                },
                                "description": "The function that will be called on each updates. This function will be called with an object as parameters. Here's the list of properties available:",
                                "defaultStr": "",
                                "content": "- method (null) {String}: The method name that causes the watch emit\n- args ([]) {Array}: An array of all the arguments passed to the method call\n- oldValue (null) {Array}: The array just before the method call\n- value (null) {Array}: The array after the method call\n- returnedValue (null) {Mixed}: This is the value that the method call has returned"
                            }
                        },
                        "description": "This method allows you to specify which Array methods you want to watch by passing an array of methods names like ['push','pop'].\nYou can also specify the handler function that will be called on each array updates, etc...",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myProxiedArray.watch(['push', 'pop'], (watchObj) => {\n   // do something...\n});"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "unwatch": {
                        "id": "s56ee2c06d624f8982e804645af5ec02bf435c1d8af4240a5b4f409159855139c",
                        "name": "unwatch",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "watchId": {
                                "name": "watchId",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The watchId returned by the \"watch\" method",
                                "defaultStr": ""
                            }
                        },
                        "description": "This methods allows you to unwatch a process started with the \"watch\" method.\nYou have to pass as parameter the watchId that the \"watch\" method has returned you.",
                        "example": [
                            {
                                "language": "js",
                                "code": "const watchId = myArray.watch('push', (obj) => //...);\nmyArray.unwatch(watchId);"
                            }
                        ],
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.array.sameItems": {
                "id": "@coffeekraken.sugar.shared.array.sameItems",
                "name": "sameItems",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "...arrays": {
                        "name": "...arrays",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The arrays you want to compare",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to refine your comparaison process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "references": {
                        "name": "references",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to use the references comparaison or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "hash": {
                        "name": "hash",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to allows transforming object etc in to hashes and compare this instead",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take two arrays and return all the items that are the same.\nYou can specify if you want only comparing by reference for object, etc... or if\nyou want to transform items in hashes and compare that instead.",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sameItems } from '@coffeekraken/sugar/array';\n__sameItems([1,2,3,4], [1,3,5]); // => [1,3]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sameItems.ts",
                "extension": "ts",
                "relPath": "src/shared/array/sameItems.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.splitEvery": {
                "id": "@coffeekraken.sugar.shared.array.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to split",
                        "defaultStr": ""
                    },
                    "every": {
                        "name": "every",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "Every how many items to split the array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split an array every N items",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitEvery } from '@coffeekraken/sugar/array';\n__splitEvery([1,2,3,4,5,6,7,8,9], 3);\n// [[1,2,3],[4,5,6],[7,8,9]]"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/array/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.array.unique": {
                "id": "@coffeekraken.sugar.shared.array.unique",
                "name": "unique",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The array to deduplicates",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an array as parameter and return a new one\nwith all the duplicates values removed.",
                "namespace": "@coffeekraken.sugar.shared.array",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unique } from '@coffeekraken/sugar/array';\n__unique(['hello','world','hello','world']); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unique.ts",
                "extension": "ts",
                "relPath": "src/shared/array/unique.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.ascii.sugarBanner": {
                "id": "@coffeekraken.sugar.shared.ascii.sugarBanner",
                "name": "sugarBanner",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- version (2.0.0) {String}: The version you want to display\n- borders (true) {Boolean}: If you want to display the border left or not\n"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function returns an ascii version of the sugar logo",
                "namespace": "@coffeekraken.sugar.shared.ascii",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sugarBanner } from '@coffeekraken/sugar/ascii';\n__sugarBanner();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sugarBanner.ts",
                "extension": "ts",
                "relPath": "src/shared/ascii/sugarBanner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.cloneClass": {
                "id": "@coffeekraken.sugar.shared.class.cloneClass",
                "name": "cloneClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "class": {
                        "name": "class",
                        "type": {
                            "types": [
                                {
                                    "type": "Class"
                                }
                            ],
                            "raw": "Class"
                        },
                        "description": "The class to clone",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clone ES6 Classes",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __cloneClass } from '@coffeekraken/sugar/class';\nconst NewClass = __cloneClass(class MyClass() {});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cloneClass.ts",
                "extension": "ts",
                "relPath": "src/shared/class/cloneClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.getExtendsStack": {
                "id": "@coffeekraken.sugar.shared.class.getExtendsStack",
                "name": "getExtendsStack",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "cls": {
                        "name": "cls",
                        "type": {
                            "types": [
                                {
                                    "type": "Class"
                                }
                            ],
                            "raw": "Class"
                        },
                        "description": "The class to get the stack of",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IGetExtendsStackSettings"
                                }
                            ],
                            "raw": "IGetExtendsStackSettings"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "includeBaseClass": {
                        "name": "includeBaseClass",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to include the base class in the stack or not",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a class as parameter and return an array of all the class names used to extends this one...",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getExtendsStack } from '@coffeekraken/sugar/class';\nclass Coco extends Error {}\nclass Plop extends Coco {}\n__getExtendsStack(Plop); // => {Coco: [class ...], Error: [class ...]};"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getExtendsStack.ts",
                "extension": "ts",
                "relPath": "src/shared/class/getExtendsStack.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.getMethods": {
                "id": "@coffeekraken.sugar.shared.class.getMethods",
                "name": "getMethods",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "instance": {
                        "name": "instance",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The instance of the object to get the methods names of",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an instance as parameter and return all the methods in array format",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getMethods } from '@coffeekraken/sugar/class';\nmyClass {\n constructor() {}\n hello() {}\n world() {}\n}\nconst myInstance = new myClass();\n__getMethods(myInstance); // => ['hello','world']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getMethods.ts",
                "extension": "ts",
                "relPath": "src/shared/class/getMethods.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.methodExists": {
                "id": "@coffeekraken.sugar.shared.class.methodExists",
                "name": "methodExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "instance": {
                        "name": "instance",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The instance to check the methods on",
                        "defaultStr": ""
                    },
                    "...methods": {
                        "name": "...methods",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The methods to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if one or more methods exists on a class instance",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "class Coco {\n   hello() {}\n}\nimport { __methodExists } from '@coffeekraken/sugar/class';\nconst myInstance = new Coco();\n__methodExists(myInstance, 'hello', 'world'); // => ['world'];\n__methodExists(myInstance, 'hello'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "methodExists.ts",
                "extension": "ts",
                "relPath": "src/shared/class/methodExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.multipleExtends": {
                "id": "@coffeekraken.sugar.shared.class.multipleExtends",
                "name": "multipleExtends",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "...classes": {
                        "name": "...classes",
                        "type": {
                            "types": [
                                {
                                    "type": "Class"
                                }
                            ],
                            "raw": "Class"
                        },
                        "description": "All the classed you want to extend the first one with",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extends your class with multiple other ones.",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __multipleExtends } from '@coffeekraken/sugar/class';\nclass MyCoolClass extends __multipleExtends(Another, AnotherOne) {\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "multipleExtends.ts",
                "extension": "ts",
                "relPath": "src/shared/class/multipleExtends.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.class.toPlainObject": {
                "id": "@coffeekraken.sugar.shared.class.toPlainObject",
                "name": "toPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "instance": {
                        "name": "instance",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "Any class instance to transform into a plain object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a instance as parameter and return a plain object of it",
                "namespace": "@coffeekraken.sugar.shared.class",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toPlainObject } from '@coffeekraken/sugar/class';\nclass Coco {\n   constructor() {\n     this.hello = 'world';\n   }\n}\n__toPlainObject(new Coco()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/class/toPlainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.cli.argsToString": {
                "id": "@coffeekraken.sugar.shared.cli.argsToString",
                "name": "argsToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "args": {
                        "name": "args",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The arguments object",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object to configure your command build process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a simple object, a definition object and return you the string version that you can pass\ndirectly to the command line interface",
                "namespace": "@coffeekraken.sugar.shared.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __argsToString } from '@coffeekraken/sugar/cli';\n__argsToString({\n   arg1: 'Hello',\n   myOtherArg: 'World'\n});\n// => -a Hello --myOtherArg World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "argsToString.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/argsToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.cli.buildCommandLine": {
                "id": "@coffeekraken.sugar.js.cli.buildCommandLine",
                "name": "buildCommandLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "command": {
                        "name": "command",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tokenized command line to use as base",
                        "defaultStr": ""
                    },
                    "definition": {
                        "name": "definition",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The definition object of the command to launch",
                        "defaultStr": ""
                    },
                    "args": {
                        "name": "args",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An optional arguments/values object to override definition default value",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your command line buildine process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- includeAllParams (true) {Boolean}: Specify if you want all the arguments in the definition object in your command line string, or if you just want the one passed in your argsObj argument\n- alias (true) {Boolean}: Specify if you want to make use of the aliases in your generated command"
                    }
                },
                "setting": {
                    "keepFalsy": {
                        "name": "keepFalsy",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to keep falsy arguments in your command line or not",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function takes as parameters a command line (with tokens), an arguments object and a definition object to\ngenerate the final command line string to launch.\nA token is simply a string that begin with \"[\" and end with \"]\" like so: \"[mytoken]\".\nEach arguments of the definition object can be a token. If you have an argument called \"hostname\", the corresponding token will be \"[hostname]\".\nA special token called \"[arguments]\" is needed if you want the passed arguments to be integrated to the builded command line.",
                "namespace": "@coffeekraken.sugar.js.cli",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __buildCommandLine } from '@coffeekraken/sugar/cli';\n__buildCommandLine('php [hostname]:[port] [rootDir] [arguments]', {\n   hostname: {\n     type: 'String',\n     description: 'Server hostname',\n     default: 'localhost'\n   },\n   port: {\n     type: 'Number',\n     description: 'Server port',\n     default: 8080\n   },\n   rootDir: {\n     type: 'String',\n     description: 'Root directory',\n     default: '.'\n   },\n   arg1: {\n     type: 'Boolean',\n     alias: 'a',\n     description: 'Argument 1',\n     default: true\n   }\n}, {\n   port: 8888\n});\n// => php localhost:8888 . -a"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "buildCommandLine.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/buildCommandLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.cli.parseArgs": {
                "id": "@coffeekraken.sugar.shared.cli.parseArgs",
                "name": "parseArgs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to parse",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object that configure how the string will be parsed. Here's the settings options:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "valueQuote": {
                        "name": "valueQuote",
                        "type": {
                            "types": [
                                {
                                    "type": "string",
                                    "value": "'\""
                                },
                                {
                                    "type": "'\"'"
                                },
                                {
                                    "type": "'`'"
                                }
                            ],
                            "raw": "\"'\" | '\"' | '`'"
                        },
                        "description": "Specify which quote is used for quoted values. If not set, will take the first quote of the passed string",
                        "defaultStr": "undefined"
                    },
                    "treatNoAsBoolean": {
                        "name": "treatNoAsBoolean",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the \"no-...\" argument will be treated as false boolean. \"--no-format\": { format: false }",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "camelCase": {
                        "name": "camelCase",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, will transform returned object properties to camelCase",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string to find the provided arguments into the list and return a corresponding object.",
                "namespace": "@coffeekraken.sugar.shared.cli",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseArgs } from '@coffeekraken/sugar/cli';\n__parseArgs('hello -w 10 yop \"hello world\" -b --hello.world Nelson --help \"coco yep\" #blop', {\n   param1: { type: 'String', alias: 'p' },\n   world: { type: 'Array', alias: 'w', validator: value => {\n     return Array.isArray(value);\n   }},\n   bool: { type: 'Boolean', alias: 'b', default: false, required: true },\n   'hello.world': { type: 'String' },\n   help: { type: 'String', alias: 'h' },\n   id: { type: 'String', alias: 'i', regexp: /^#([\\S]+)$/ }\n});\n{\n   param1: 'hello',\n   world: [10, 'yop', 'hello world'],\n   bool: true,\n   hello: {\n     world: 'Nelson'\n   },\n   help: 'coco yep',\n   id: '#blop'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseArgs.ts",
                "extension": "ts",
                "relPath": "src/shared/cli/parseArgs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.alphaToHex": {
                "id": "@coffeekraken.sugar.shared.color.alphaToHex",
                "name": "alphaToHex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "alpha": {
                        "name": "alpha",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha to convert to hex (0-1)",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take alpha (0-1) and convert it to hex like \"FF\", \"80\", etc...",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __alphaToHex } from '@coffeekraken/sugar/color';\n__alphaToHex(1); // FF"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "alphaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/alphaToHex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.convert": {
                "id": "@coffeekraken.sugar.shared.color.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "input": {
                        "name": "input",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The input color to convert",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format wanted",
                        "default": "rgba",
                        "defaultStr": "\"rgba\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as input any color format like rgba Object, hsl Object, hsv Object, hex String, rgba String, hsl String or hsv String\nand convert it into the wanted format like \"rgba\", \"hsl\", \"hsv\", \"hex\", \"rgbaString\", \"hslString\" or \"hsvString\"",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __convert } from '@coffeekraken/sugar/color';\n__convert('rgba(10,20,30,100)', 'rgba'); // => { r: 10, g: 20, b: 30, a: 100 }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convert.ts",
                "extension": "ts",
                "relPath": "src/shared/color/convert.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.hexToRgba": {
                "id": "@coffeekraken.sugar.shared.color.hexToRgba",
                "name": "hexToRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hex": {
                        "name": "hex",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The hex string to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Hex to RGBA",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hexToRgba } from '@coffeekraken/sugar/color';\n__hexToRgba('#ff00ff');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hexToRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hexToRgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.hslaToHex": {
                "id": "@coffeekraken.sugar.shared.color.hslaToHex",
                "name": "hslaToHex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSLA to HEX",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslaToHex } from '@coffeekraken/sugar/color';\n__hslaToHex(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToHex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.hslaToHexa": {
                "id": "@coffeekraken.sugar.shared.color.hslaToHexa",
                "name": "hslaToHexa",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSLA to HEX",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslaToHexa } from '@coffeekraken/sugar/color';\n__hslaToHexa(10,20,30,1);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToHexa.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToHexa.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.hslToRgba": {
                "id": "@coffeekraken.sugar.shared.color.hslToRgba",
                "name": "hslToRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "h": {
                        "name": "h",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The hue value between 0-360 an object representing h, s, l, (a) or a string representing the hsla(...) color",
                        "defaultStr": ""
                    },
                    "s": {
                        "name": "s",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The saturation value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "l": {
                        "name": "l",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The luminence value between 0-100|0-1",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "HSL to RGBA",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __hslToRgba } from '@coffeekraken/sugar/color';\n__hslToRgba(10,20,30);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "hslaToRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/hslaToRgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.parseHsla": {
                "id": "@coffeekraken.sugar.shared.color.parseHsla",
                "name": "parseHsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hslaString": {
                        "name": "hslaString",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The hsl string (hsl(h,s,l)) to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse HSL",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseHsla } from '@coffeekraken/sugar/color';\n__parseHsla('hsl(20,20,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseHsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.parseRgba": {
                "id": "@coffeekraken.sugar.shared.color.parseRgba",
                "name": "parseRgba",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "rgbaString": {
                        "name": "rgbaString",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The rgba string (rgba(r,g,b,a)) to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse RGBA string and return an object",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseRgba } from '@coffeekraken/sugar/color';\n__parseRgba('rgba(20,10,100,20)');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseRgba.ts",
                "extension": "ts",
                "relPath": "src/shared/color/parseRgba.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.rgba2hex": {
                "id": "@coffeekraken.sugar.shared.color.rgba2hex",
                "name": "rgba2hex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "r": {
                        "name": "r",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The red value between 0-255 or an object representing r, g, b, a or a string representing the rgba(...) color",
                        "defaultStr": ""
                    },
                    "g": {
                        "name": "g",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The green value between 0-255",
                        "defaultStr": ""
                    },
                    "b": {
                        "name": "b",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The blue value between 0-255",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HEX",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rgbaToHex } from '@coffeekraken/sugar/color';\n__rgbaToHex(10,20,30,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgbaToHex.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgbaToHex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.color.rgba2hsla": {
                "id": "@coffeekraken.sugar.shared.color.rgba2hsla",
                "name": "rgba2hsla",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "r": {
                        "name": "r",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                },
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Number|String|Object"
                        },
                        "description": "The red value between 0-255 or an object representing r, b, g, a or a string representing the rgba(...) color",
                        "defaultStr": ""
                    },
                    "g": {
                        "name": "g",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The green value between 0-255",
                        "defaultStr": ""
                    },
                    "b": {
                        "name": "b",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The blue value between 0-255",
                        "defaultStr": ""
                    },
                    "a": {
                        "name": "a",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The alpha value between 0-100|0-1",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "RGBA to HSL",
                "namespace": "@coffeekraken.sugar.shared.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rgbaToHsla } from '@coffeekraken/sugar/color';\n__rgbaToHsla(10,20,50,10);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rgbaToHsla.ts",
                "extension": "ts",
                "relPath": "src/shared/color/rgbaToHsla.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.console.parseHtml": {
                "id": "@coffeekraken.sugar.shared.console.parseHtml",
                "name": "parseHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "message": {
                        "name": "message",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The message to format of an array of messages to format",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse the simple html tags to format the console message",
                "namespace": "@coffeekraken.sugar.shared.console",
                "status": "beta",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/console/parseHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.convert.mapToObject": {
                "id": "@coffeekraken.sugar.shared.convert.mapToObject",
                "name": "mapToObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "map": {
                        "name": "map",
                        "type": {
                            "types": [
                                {
                                    "type": "Map"
                                }
                            ],
                            "raw": "Map"
                        },
                        "description": "The map object to convert into object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a Map object and convert it to a plain object",
                "namespace": "@coffeekraken.sugar.shared.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __mapToObject } from '@coffeekraken/sugar/convert';\nconst myMap = new Map();\nmyMap.set('hello', 'world');\n__mapToObject(myMap);\n// {\n//   hello: 'world'\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "mapToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/convert/mapToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.convert.xmlToJson": {
                "id": "@coffeekraken.sugar.shared.convert.xmlToJson",
                "name": "xmlToJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "xml": {
                        "name": "xml",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The xml string to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a xml string as input and return a json object.",
                "namespace": "@coffeekraken.sugar.shared.convert",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import ( __xmlToJson ) from '@coffeekraken/sugar/convert';\n__xmlToJson('...');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "xmlTojson.ts",
                "extension": "ts",
                "relPath": "src/shared/convert/xmlTojson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.crypto.aes": {
                "id": "@coffeekraken.sugar.shared.crypto.aes",
                "name": "aes",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the aes algorithm",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __aes } from '@coffeekraken/sugar/crypto';\n__aes.encrypt('hello world');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "aes.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/aes.ts",
                "children": {
                    "encrypt": {
                        "id": "s8e02b1eccead6154d6ede96020dfa837a386d1557ebd340a6adf847f344f2972",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            },
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The secret key to encrypt",
                                "default": "coffeekraken.sugar.crypto.aes",
                                "defaultStr": "'coffeekraken.sugar.crypto.aes'"
                            }
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s5566da547676bfb5910700a8fd20e770ef975a474d31a5729ee2b71651fecd8d",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            },
                            "key": {
                                "name": "key",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The secret key to decrypt",
                                "default": "coffeekraken.sugar.crypto.aes",
                                "defaultStr": "'coffeekraken.sugar.crypto.aes'"
                            }
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.crypto.base64": {
                "id": "@coffeekraken.sugar.shared.crypto.base64",
                "name": "base64",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the base64 algorithm",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __base64 } from '@coffeekraken/sugar/crypto';\n__base64.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "base64.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/base64.ts",
                "children": {
                    "encrypt": {
                        "id": "sc783e86de6e337100507b99c3a4aaed0943ed1cc305ad66fedeed75c6bca8725",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Encrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s62623d72c1185072541b07dbefdb419ac3938bd540e91c218bb074c7fbe6d4ba",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Decrypt",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.crypto.md5": {
                "id": "@coffeekraken.sugar.shared.crypto.md5",
                "name": "md5",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the md5 algorithm",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __md5 } from '@coffeekraken/sugar/crypto';\n__md5.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "md5.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/md5.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.crypto.object": {
                "id": "@coffeekraken.sugar.shared.crypto.object",
                "name": "object",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the object algorithm\n\nimport { __object } from '@coffeekraken/sugar/crypto';\n__object.encrypt({\nhello: 'world'\n});",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "object.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/object.ts",
                "children": {
                    "encrypt": {
                        "id": "se1dc2f84f208f124c8dfdc90459d6e65d9f1d5d12b39b21c8466ed6bb50c2a38",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "object": {
                                "name": "object",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Object"
                                        }
                                    ],
                                    "raw": "Object"
                                },
                                "description": "The object to encrypt",
                                "defaultStr": ""
                            },
                            "salt": {
                                "name": "salt",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The salt to encode the object. Needed to decode correctly the object",
                                "default": "coffeekraken.sugar.crypto.object",
                                "defaultStr": "\"coffeekraken.sugar.crypto.object\""
                            }
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s0956d2b63715133c1d7e306b568933c8208a5cb22b2eb12623135ca3f57d2e8f",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "encodedObject": {
                                "name": "encodedObject",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The object to decrypt",
                                "defaultStr": ""
                            },
                            "salt": {
                                "name": "salt",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The salt to decode the object",
                                "default": "coffeekraken.sugar.crypto.object",
                                "defaultStr": "'coffeekraken.sugar.crypto.object'"
                            }
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.crypto.sha256": {
                "id": "@coffeekraken.sugar.shared.crypto.sha256",
                "name": "sha256",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha256 algorithm",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sha256 } from '@coffeekraken/sugar/crypto';\n__sha256.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha256.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/sha256.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.crypto.sha512": {
                "id": "@coffeekraken.sugar.shared.crypto.sha512",
                "name": "sha512",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Expose two function named \"encrypt\" and \"decrypt\" that you can use to process your content using the sha512 algorithm",
                "namespace": "@coffeekraken.sugar.shared.crypto",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sha512 } from '@coffeekraken/sugar/crypto';\n__sha512.encrypt('hello world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sha512.ts",
                "extension": "ts",
                "relPath": "src/shared/crypto/sha512.ts",
                "children": {
                    "encrypt": {
                        "id": "s4ac7787e432691a98148698f2c45e6fb66ecd40724de239512e647434b8971be",
                        "name": "encrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to encrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Encrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    },
                    "decrypt": {
                        "id": "s9893ce4e78964c19b9570c8ae76b5c4395195d06a5cd5278b2a96dc6df13cca0",
                        "name": "decrypt",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "message": {
                                "name": "message",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The message to decrypt",
                                "defaultStr": ""
                            }
                        },
                        "description": "Decrypt",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.css.compressVarName": {
                "id": "@coffeekraken.sugar.shared.css.compressVarName",
                "name": "compressVarName",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The name to compress",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to compress a css variable name only when the environment is production",
                "namespace": "@coffeekraken.sugar.shared.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __compressVarName } from '@coffeekraken/sugar/css';\n__compressVarName('--something-long-that-you-want-to-compress');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "compressVarName.ts",
                "extension": "ts",
                "relPath": "src/shared/css/compressVarName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.css.isValidUnitValue": {
                "id": "@coffeekraken.sugar.shared.css.isValidUnitValue",
                "name": "isValidUnitValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "String|Number"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function tells you if the passed value is a valid css unit based one like 10px, 20em, etc...",
                "namespace": "@coffeekraken.sugar.shared.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isValidUnitValue } from '@coffeekraken/sugar/css';\n__isValidUnitValue('10px'); // => true\n__isValidUnitValue('default'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isValidUnitValue.ts",
                "extension": "ts",
                "relPath": "src/shared/css/isValidUnitValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.css.stripCssComments": {
                "id": "@coffeekraken.sugar.shared.css.stripCssComments",
                "name": "stripCssComments",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "css": {
                        "name": "css",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The css code to process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "block": {
                        "name": "block",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Remove the blocks comments",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "line": {
                        "name": "line",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Remove the line comments",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply remove all the css comments like:\n- Multiline blocks css comments begining with / *, ending with\n/\n- Single line comments begining with //",
                "namespace": "@coffeekraken.sugar.shared.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripCssComments } from '@coffeekraken/sugar/css';\n__stripCssComments(`\n// something cool\nbody { background-color: red; }\n`);\n// body { background-color: red }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripCssComments.ts",
                "extension": "ts",
                "relPath": "src/shared/css/stripCssComments.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.datetime.convert": {
                "id": "@coffeekraken.sugar.shared.datetime.convert",
                "name": "convert",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "String|Number"
                        },
                        "description": "The value to start from like \"10s\", \"20ms\", \"2h\", etc...",
                        "defaultStr": ""
                    },
                    "to": {
                        "name": "to",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format you want to get back",
                        "default": "ms",
                        "defaultStr": "'ms'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert time like seconds, ms, hours, minutes, etc... from one format to another",
                "namespace": "@coffeekraken.sugar.shared.datetime",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __convertTime } from '@coffeekraken/sugar/datetime';\n__convertTime('10s', 'ms'); // => 10000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "convertTime.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/convertTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.datetime.formatDuration": {
                "id": "@coffeekraken.sugar.shared.datetime.formatDuration",
                "name": "formatDuration",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "duration": {
                        "name": "duration",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The duration in ms to format",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass a duration in ms and get back a formatted estimation like \"2.4m\", \"30s\", etc...",
                "namespace": "@coffeekraken.sugar.shared.datetime",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatDuration } from '@coffeekraken/sugar/datetime';\n__formatDuration(2000); // => 2s"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatDuration.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/formatDuration.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.date.utcTime": {
                "id": "@coffeekraken.sugar.shared.date.utcTime",
                "name": "utcTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "hours": {
                        "name": "hours",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Display the hours or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "minutes": {
                        "name": "minutes",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Display the minutes or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "seconds": {
                        "name": "seconds",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Display the seconds or not",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method allows you to display easily the time in UTC format like \"10:20:32\"",
                "namespace": "@coffeekraken.sugar.shared.date",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __utcTime } from '@coffeekraken/sugar/date';\n__utcTime(); // => 10:20:32\n__utcTime(true, true, false); // => 10:20"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "utcTime.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/utcTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.datetime.wait": {
                "id": "@coffeekraken.sugar.shared.datetime.wait",
                "name": "wait",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "timeout": {
                        "name": "timeout",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timeout to wait in ms",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is a simple \"setTimeout\" wrapper inside a promise.",
                "namespace": "@coffeekraken.sugar.shared.datetime",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __wait } from '@coffeekraken/sugar/datetime';\nawait __wait(2000);"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "wait.ts",
                "extension": "ts",
                "relPath": "src/shared/datetime/wait.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.availableEasingsArray": {
                "id": "@coffeekraken.sugar.shared.easing.availableEasingsArray",
                "name": "availableEasingsArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return back an array of all the available easings function in the sugar toolkit",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __availableEasingsArray } from '@coffeekraken/sugar/easing';\n__availableEasingsArray();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "availableEasingsArray.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/availableEasingsArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInCubic": {
                "id": "@coffeekraken.sugar.shared.easing.easeInCubic",
                "name": "easeInCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in cubic function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInOutCubic": {
                "id": "@coffeekraken.sugar.shared.easing.easeInOutCubic",
                "name": "easeInOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out cubic function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInOutQuad": {
                "id": "@coffeekraken.sugar.shared.easing.easeInOutQuad",
                "name": "easeInOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quad function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInOutQuart": {
                "id": "@coffeekraken.sugar.shared.easing.easeInOutQuart",
                "name": "easeInOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quart function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInOutQuint": {
                "id": "@coffeekraken.sugar.shared.easing.easeInOutQuint",
                "name": "easeInOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in out quint function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInQuad": {
                "id": "@coffeekraken.sugar.shared.easing.easeInQuad",
                "name": "easeInQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quad function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInQuart": {
                "id": "@coffeekraken.sugar.shared.easing.easeInQuart",
                "name": "easeInQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quart function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeInQuint": {
                "id": "@coffeekraken.sugar.shared.easing.easeInQuint",
                "name": "easeInQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease in quint function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeInQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeInQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeOutCubic": {
                "id": "@coffeekraken.sugar.shared.easing.easeOutCubic",
                "name": "easeOutCubic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out cubic function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutCubic.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutCubic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeOutQuad": {
                "id": "@coffeekraken.sugar.shared.easing.easeOutQuad",
                "name": "easeOutQuad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quad function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuad.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeOutQuart": {
                "id": "@coffeekraken.sugar.shared.easing.easeOutQuart",
                "name": "easeOutQuart",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quart function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuart.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuart.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.easeOutQuint": {
                "id": "@coffeekraken.sugar.shared.easing.easeOutQuint",
                "name": "easeOutQuint",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease out quint function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeOutQuint.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/easeOutQuint.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.easing.linear": {
                "id": "@coffeekraken.sugar.shared.easing.linear",
                "name": "linear",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "t": {
                        "name": "t",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The current time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Ease linear function",
                "namespace": "@coffeekraken.sugar.shared.easing",
                "status": "beta",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "linear.ts",
                "extension": "ts",
                "relPath": "src/shared/easing/linear.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.es6.SEs6Import": {
                "id": "@coffeekraken.sugar.shared.es6.SEs6Import",
                "name": "SEs6Import",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "param": {
                    "statement": {
                        "name": "statement",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The import statement",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class represent an es6 import statement with properties like:\n- path {String}: The import path\n- default {String}: The default import name\n- star {String}: The start import name \"import\nas something from ...\"\n- named {Array<Object>}: THe named imports\n- raw {String}: The raw import statement",
                "namespace": "@coffeekraken.sugar.shared.es6",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SEs6Import } from '@coffeekraken/sugar/es6';\nconst import = new __SEs6Import('import coco from \"something\";');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "SEs6Import.ts",
                "extension": "ts",
                "relPath": "src/shared/es6/SEs6Import.ts",
                "children": {
                    "parsecode": {
                        "id": "sa1595353b7cfd5b2e6112b388ab667c49bf19d36f412978688360565dc533e21",
                        "name": "parseCode",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "code": {
                                "name": "code",
                                "type": {
                                    "types": [
                                        {
                                            "type": "String"
                                        }
                                    ],
                                    "raw": "String"
                                },
                                "description": "The code to parse",
                                "defaultStr": ""
                            }
                        },
                        "description": "This function simply parse the passed code and return an array of all the\nfounded es6 imports",
                        "static": "true",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "raw": {
                        "id": "sd6d289cf5f575f018b7b5f20257521b0136abe65991183d6098644f52de35f2a",
                        "name": "raw",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Store the raw statement string",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "path": {
                        "id": "s411cc4c44c0b359823b49754ce8d9f0dbbc5f36712a4b35ce8e1d0917ebd6ce3",
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Store the statement path",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "default": {
                        "id": "s01ceea9b7b08bb98da426d773364fa367742799492646436e720d3c05ab3c7b1",
                        "name": "default",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Store the statement default import name",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "star": {
                        "id": "sfff9e1bc79978e8a74e36830cc2dad2e858d25a5d2f599b6976c55441b17b102",
                        "name": "star",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Store the statement star name like \"import\nas coco from ...\"",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "named": {
                        "id": "sc70583a79be2b73a86db0bb0a83907ff76bcfc5125a7179a1533815e94e5f6a2",
                        "name": "named",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "Object"
                                    ]
                                }
                            ],
                            "raw": "Array<Object>"
                        },
                        "description": "Store the statement named imports with these properties:\n- name {String}: The import name\n- as {String}: The import as alias",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "constructor": {
                        "id": "s6aa2402964c1da24bb7f1ec0626e955bd10531337af52b852142f53f51ecb420",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    },
                    "tostring": {
                        "id": "s284cf311059f9a860cb590a0c043e4f8bd6dc27fe6fd36613f98bae29f9f35dd",
                        "name": "toString",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Return the builded version of the import",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.extension.commonAudioFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonAudioFileExtensions",
                "name": "commonAudioFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonAudioFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonAudioFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonAudioFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonAudioFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonCompressedFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonCompressedFileExtensions",
                "name": "commonCompressedFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonCompressedFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonCompressedFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonCompressedFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonCompressedFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonDataFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonDataFileExtensions",
                "name": "commonDataFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonDataFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonDataFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDataFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDataFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonDiscFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonDiscFileExtensions",
                "name": "commonDiscFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonDiscFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonDiscFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonDiscFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonDiscFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonEmailFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonEmailFileExtensions",
                "name": "commonEmailFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonEmailFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonEmailFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonEmailFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonEmailFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonExecutableFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonExecutableFileExtensions",
                "name": "commonExecutableFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonExecutableFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonExecutableFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonExecutableFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonExecutableFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonFileExtensions",
                "name": "commonFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common file extensions with or without the dot.\nYou can filter extensions by types:\n- audio\n- compressed\n- data\n- disc\n- email\n- executable\n- font\n- image\n- media\n- programming\n- text\n- video\n- web",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonFontFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonFontFileExtensions",
                "name": "commonFontFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonFontFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonFontFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonFontFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonFontFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonImageFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonImageFileExtensions",
                "name": "commonImageFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonImageFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonImageFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonImageFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonImageFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonMediaFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonMediaFileExtensions",
                "name": "commonMediaFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common media file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonMediaFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonMediaFileExtensions(); // => ['avi','mp3',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonMediaFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonMediaFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonProgrammingFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonProgrammingFileExtensions",
                "name": "commonProgrammingFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonProgrammingFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonProgrammingFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonProgrammingFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonProgrammingFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonTextFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonTextFileExtensions",
                "name": "commonTextFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonTextFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonTextFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonTextFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonTextFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonVideoFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonVideoFileExtensions",
                "name": "commonVideoFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonVideoFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonVideoFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonVideoFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonVideoFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.extension.commonWebFileExtensions": {
                "id": "@coffeekraken.sugar.shared.extension.commonWebFileExtensions",
                "name": "commonWebFileExtensions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "withDot": {
                        "name": "withDot",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, the dot will be added to the extension",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get an array of common text file extensions with or without the dot",
                "namespace": "@coffeekraken.sugar.shared.extension",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __commonWebFileExtensions } from '@coffeekraken/sugar/extension';\nconst extensions = __commonWebFileExtensions();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "commonWebFileExtensions.ts",
                "extension": "ts",
                "relPath": "src/shared/extension/commonWebFileExtensions.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.debounce": {
                "id": "@coffeekraken.sugar.shared.function.debounce",
                "name": "debounce",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called only once after\nthe delay passed",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __debounce } from '@coffeekraken/sugar/function';\nconst myDebouncedFn = __debounce(() => {\n\t\t// my function content that will be\n\t\t// executed only once after the 1 second delay\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my debounced function\n\t\tmyDebouncedFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "debounce.ts",
                "extension": "ts",
                "relPath": "src/shared/function/debounce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.easeInterval": {
                "id": "@coffeekraken.sugar.shared.function.easeInterval",
                "name": "easeInterval",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "duration": {
                        "name": "duration",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The duration of your interval process you want",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback function to call at each interval",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IEaseIntervalSettings"
                                }
                            ],
                            "raw": "IEaseIntervalSettings"
                        },
                        "description": "Some settings to customize your interval process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "inteval": {
                        "name": "inteval",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "An interval in ms to call your callback function",
                        "default": 40,
                        "defaultStr": "1000/25"
                    },
                    "easing": {
                        "name": "easing",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An easing function that take as parameter a value between 0 and 1",
                        "default": "easeInOutQuart",
                        "defaultStr": "easeInOutQuart"
                    },
                    "from": {
                        "name": "from",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to start with",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "to": {
                        "name": "to",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to end with",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to call a callback function exactly as the `setInterval` would do but with an easing that you can specify,\nas well as an `interval` setting to customize how many time your function will be called.\nBy default this function will pass the \"easedPercent\" that represent the percentage of your passed \"duration\" with the easing applied on it.\nWith that you can make everything you want inside your callback function.",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeInterval } from '@coffeekraken/sugar/function';\nawait __easeInterval(2000, (easedPercent) => {\n     // do something...\n}, {\n     interval: 1000 / 25 // 25 times by second\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "easeInterval.ts",
                "extension": "ts",
                "relPath": "src/shared/function/easeInterval.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.getArgsNames": {
                "id": "@coffeekraken.sugar.shared.function.getArgsNames",
                "name": "getArgsNames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "func": {
                        "name": "func",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function reference of which get the arguments names",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the arguments names of the passed function. Return an array of the arguments names",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getArgsNames } from '@coffeekraken/sugar/function';\nfunction hello(world, coco, plop) { }\n__getArgsNames(hello); // => ['world', 'coco', 'plop']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getArgsNames.ts",
                "extension": "ts",
                "relPath": "src/shared/function/getArgsNames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.memoize": {
                "id": "@coffeekraken.sugar.shared.function.memoize",
                "name": "memoize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function can be used to memorize a function call result in order to save memory.\nThis is just a \"proxy\" of the \"memoizee\" package.",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __memoize } from '@coffeekraken/sugar/function';\nconst fn =  __memoize(function(text) => {\n   return `Hello ${text}`;\n});\nconst result = fn('world'); // first execution. no cache\nconst result1 = fn('plop'); // first execution with this argument, no cache\nconst result2 = fn('world'); // taken from cache"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "memoize.ts",
                "extension": "ts",
                "relPath": "src/shared/function/memoize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.function.throttle": {
                "id": "@coffeekraken.sugar.shared.function.throttle",
                "name": "throttle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This utils function allows you to make sure that a function that will normally be called\nseveral times, for example during a scroll event, to be called once each threshhold time",
                "namespace": "@coffeekraken.sugar.shared.function",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __throttle } from '@coffeekraken/sugar/function';\nconst myThrottledFn = __throttle(() => {\n\t\t// my function content that will be\n\t\t// executed only once each second\n}, 1000);\n\ndocument.addEventListener('scroll', (e) => {\n\t\t// call my throttled function\n\t\tmyThrottledFn();\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "throttle.ts",
                "extension": "ts",
                "relPath": "src/shared/function/throttle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.glob.expandGlob": {
                "id": "@coffeekraken.sugar.shared.glob.expandGlob",
                "name": "expandGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "globs": {
                        "name": "globs",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|Array<String>"
                        },
                        "description": "The glob(s) to expand",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take some extended glob pattern(s) and expand them to standard supported\nglob patterns. With this, you will have access to some syntax sugar like these:\n- /something{2,4}/.ts => **{2,4} = search in level 2 bis level 4",
                "namespace": "@coffeekraken.sugar.shared.glob",
                "status": "alpha",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandGlob } from '@coffeekraken/sugar/glob';\n__expandGlob('/something/{2,4}/*.ts');\n// ['/something/ /* /*.ts','/something/* /* /* /*.ts', '/something/* /* /* /* /*.ts']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/expandGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.glob.extractGlob": {
                "id": "@coffeekraken.sugar.shared.glob.extractGlob",
                "name": "extractGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string from which to extract the glob part",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the glob part of a passed string",
                "namespace": "@coffeekraken.sugar.shared.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractGlob } from '@coffeekraken/sugar/glob';\n__extractGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.glob.extractNoneGlob": {
                "id": "@coffeekraken.sugar.shared.glob.extractNoneGlob",
                "name": "extractNoneGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string from which to extract the none glob part",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply return you the none glob part of a passed string",
                "namespace": "@coffeekraken.sugar.shared.glob",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractNoneGlob } from '@coffeekraken/sugar/glob';\n__extractNoneGlob('/coco/hello/.js'); // => '*.js'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractNoneGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/glob/extractNoneGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassname": {
                "id": "@coffeekraken.sugar.shared.html.expandPleasantCssClassname",
                "name": "expandPleasantCssClassname",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "classesStr": {
                        "name": "classesStr",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The classes string to convert like \"s-typo:h1 s-font:40\", etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandPleasantCssClassname } from '@coffeekraken/sugar/html';\n__expandPleasantCssClassname('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassname.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassname.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.expandPleasantCssClassnames": {
                "id": "@coffeekraken.sugar.shared.html.expandPleasantCssClassnames",
                "name": "expandPleasantCssClassnames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The HTML to process. It can be actually any string values like .vue file, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandPleasantCssClassnames } from '@coffeekraken/sugar/html';\n__expandPleasantCssClassnames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/expandPleasantCssClassnames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.extractCssClassesNames": {
                "id": "@coffeekraken.sugar.shared.html.extractCssClassesNames",
                "name": "extractCssClassesNames",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The HTML to process.",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "expandPleasantCssClassname": {
                        "name": "expandPleasantCssClassname",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to expand the pleasant css classes names like \"s-typo:p\" to \"s-typo--p\"",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to extract all the classes names from a passed html string.\nYou can use it with other things than html but depending on the complexity of your string, it may not\nwork as expected...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractCssClassesNames } from '@coffeekraken/sugar/html';\n__extractCssClassesNames('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractCssClassesNames.ts",
                "extension": "ts",
                "relPath": "src/shared/html/extractCssClassesNames.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.tags": {
                "id": "@coffeekraken.sugar.shared.html.tags",
                "name": "tags",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "An object of tags to replace which have as value the replacement function that take the tag name, the tag content and must return the replacement content",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __replaceTags } from '@coffeekraken/sugar/html';\n __replaceTags('<span>Hello</span> world', {\n   span: (tag, content) => `<div>${content}</div>`; // => <div>Hello</div> world\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/replaceTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.stripTags": {
                "id": "@coffeekraken.sugar.shared.html.stripTags",
                "name": "stripTags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html string to process",
                        "defaultStr": ""
                    },
                    "allowedTags": {
                        "name": "allowedTags",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tags that are allowed like <h1><h2>...",
                        "defaultStr": ""
                    },
                    "tagReplacement": {
                        "name": "tagReplacement",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A string with which you want to replace the tags",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Strip tags of an html string.\nThis is a simple wrapper of the nice \"striptags\" package that you can find here: https://www.npmjs.com/package/striptags",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripTags } from '@coffeekraken/sugar/html'\n__stripTags('<p><span>Hello</span> world</p>', '<span>') // <span>Hello</span> world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "striptags.ts",
                "extension": "ts",
                "relPath": "src/shared/html/striptags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.html.unescapeHtml": {
                "id": "@coffeekraken.sugar.shared.html.unescapeHtml",
                "name": "unescapeHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to unescape",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to unescape some html characters like &lt;, etc...",
                "namespace": "@coffeekraken.sugar.shared.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unescapeHtml } from '@coffeekraken/sugar/html';\n__unescapeHtml('&lt;s-code-example&gt;'); // => <s-code-example>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unescapeHtml.ts",
                "extension": "ts",
                "relPath": "src/shared/html/unescapeHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isArray": {
                "id": "@coffeekraken.sugar.shared.is.isArray",
                "name": "isArray",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Array",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isArray } from '@coffeekraken/sugar/is'\nif (__isArray([]) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isArray.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isBase64": {
                "id": "@coffeekraken.sugar.shared.is.isBase64",
                "name": "isBase64",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a base 64 string",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBase64 } from '@coffeekraken/sugar/is'\nif (__isBase64('wfwefwefiowjfiojwiefjwoiejfiowjfi9jef98je9f3j') {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBase64.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBase64.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isBoolean": {
                "id": "@coffeekraken.sugar.shared.is.isBoolean",
                "name": "isBoolean",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Boolean",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBoolean } from '@coffeekraken/sugar/is'\nif (__isBoolean(true) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBoolean.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBoolean.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isBrowser": {
                "id": "@coffeekraken.sugar.shared.is.isBrowser",
                "name": "isBrowser",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the script is running inside a browser or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isBrowser } from '@coffeekraken/sugar/is'\nif (__isBrowser() {\n  // do something\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isBrowser.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isBrowser.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isChildProcess": {
                "id": "@coffeekraken.sugar.shared.is.isChildProcess",
                "name": "isChildProcess",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running as a child process or not by checking if the ```process.send``` exists, or is the environment variable ```IS_CHILD_PROCESS``` is true.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isChildProcess } from '@coffeekraken/sugar/is';\n__isChildProcess(); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isChildProcess.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isChildProcess.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isCjs": {
                "id": "@coffeekraken.sugar.shared.is.isCjs",
                "name": "isCjs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"commonjs\" module system.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCjs } from '@coffeekraken/sugar/is';\n__isCjs(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCjs.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCjs.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.class": {
                "id": "@coffeekraken.sugar.shared.is.class",
                "name": "class",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "variable": {
                        "name": "variable",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Mixed|Array"
                        },
                        "description": "The variable(s) to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed variable (or array of variables) is/are plain variable(s)",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isClass } = from '@coffeekraken/sugar/is';\n__isClass({ hello: 'world'}); // => false\nconst myCoolClass = class Coco{};\n__isClass(myCoolClass); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isClass.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isClassInstance": {
                "id": "@coffeekraken.sugar.shared.is.isClassInstance",
                "name": "isClassInstance",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The object to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed item is an object class and not a plain object.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isClassInstance } from '@coffeekraken/sugar/is';\nif (__isClassInstance({\n     something: 'hello'\n})); // => false\nclass MyClass {\n     constructor() {}\n}\n__isClassInstance(new MyClass());"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isClassInstance.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isClassInstance.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isColor": {
                "id": "@coffeekraken.sugar.shared.is.isColor",
                "name": "isColor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a color",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isColor } from '@coffeekraken/sugar/is';\n__isColor('red') => true\n__isColor('#fff') => true\n__isColor('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isColor.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isColor.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isCreditCard": {
                "id": "@coffeekraken.sugar.shared.is.isCreditCard",
                "name": "isCreditCard",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid credit card number",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import {__isCreditCard } from '@coffeekraken/sugar/is';\n__isCreditCard('john.doe@gmail.com') => true\n__isCreditCard('plop@yop.com') => true\n__isCreditCard('hello') => false\n__isCreditCard('378282246310006') => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCreditCard.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCreditCard.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.cyclic": {
                "id": "@coffeekraken.sugar.shared.is.cyclic",
                "name": "cyclic",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function check if the passed object has circular dependencies and if so, returns where it has been found in the object",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isCyclic } from '@coffeekraken/sugar/is';\nconst obj = { hello: 'world' };\nobj.cyclic = obj;\n__isCyclic(obj);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isCyclic.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isCyclic.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isDdmmyyyyDate": {
                "id": "@coffeekraken.sugar.shared.is.isDdmmyyyyDate",
                "name": "isDdmmyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid dd.mm.yyyy date\nThis will match : dd.mm.yyyy | dd/mm/yyyy | dd-mm-yyyy | dd mm yyyy",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDdmmyyyyDate } from '@coffeekraken/sugar/is'\nif (__isDdmmyyyyDate('20.12.2018')) {\n    // do something cool\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDdmmyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDdmmyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isDomElement": {
                "id": "@coffeekraken.sugar.js.is.isDomElement",
                "name": "isDomElement",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is a DOM element",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDomElement } from '@coffeekraken/sugar/dom'\n__isDomElement($myElement);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDomElement.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDomElement.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.is.isDomNode": {
                "id": "@coffeekraken.sugar.js.is.isDomNode",
                "name": "isDomNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is a DOM node",
                "namespace": "@coffeekraken.sugar.js.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isDomNode } from '@coffeekraken/sugar/dom'\n__isDomNode($myElement);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isDomNode.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isDomNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isEmail": {
                "id": "@coffeekraken.sugar.shared.is.isEmail",
                "name": "isEmail",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid email address",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEmail } from '@coffeekraken/sugar/is';\n__isEmail('john.doe@gmail.com') => true\n__isEmail('plop@yop.com') => true\n__isEmail('hello') => false\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEmail.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEmail.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isEsm": {
                "id": "@coffeekraken.sugar.shared.is.isEsm",
                "name": "isEsm",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on \"esm\" module system.",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEsm } from '@coffeekraken/sugar/is';\n__isEsm(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEsm.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEsm.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isEven": {
                "id": "@coffeekraken.sugar.shared.is.isEven",
                "name": "isEven",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is even or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isEven } from '@coffeekraken/sugar/is'\n__isEven(1) // false\n__isEven(2) // true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isEven.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isEven.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isFunction": {
                "id": "@coffeekraken.sugar.shared.is.isFunction",
                "name": "isFunction",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js function",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFunction } from '@coffeekraken/sugar/is'\nif (__isFunction(function() {})) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFunction.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isFunction.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isGlob": {
                "id": "@coffeekraken.sugar.shared.is.isGlob",
                "name": "isGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$string": {
                        "name": "$string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid glob pattern or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isGlob } from '@coffeekraken/sugar/is';\n__isGlob('something/.js); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isImageUrl": {
                "id": "@coffeekraken.sugar.shared.is.isImageUrl",
                "name": "isImageUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string path is an image url",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isImageUrl } from '@coffeekraken/sugar/is';\n__isImageUrl('something.jpg); // => true\n__isImageUrl('other.pdf); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isImageUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isImageUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isInteger": {
                "id": "@coffeekraken.sugar.shared.is.isInteger",
                "name": "isInteger",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is an integer",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isInteger } from '@coffeekraken/sugar/is';\n__isInteger(10) => true\n__isInteger('hello') => false\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInteger.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isInteger.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isIsoDate": {
                "id": "@coffeekraken.sugar.shared.is.isIsoDate",
                "name": "isIsoDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date string",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoDate } from '@coffeekraken/sugar/is';\n__isIsoDate('john.doe@gmail.com') => false\n__isIsoDate('plop@yop.com') => false\n__isIsoDate('hello') => false\n__isIsoDate('2008-08') => true"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isIsoDateTime": {
                "id": "@coffeekraken.sugar.shared.is.isIsoDateTime",
                "name": "isIsoDateTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date time string",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoDateTime } from '@coffeekraken/sugar/is';\n__isIsoDateTime('john.doe@gmail.com') => false\n__isIsoDateTime('plop@yop.com') => false\n__isIsoDateTime('2008-08-30 17:21:59') => true"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoDateTime.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoDateTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isIsoTime": {
                "id": "@coffeekraken.sugar.shared.is.isIsoTime",
                "name": "isIsoTime",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid iso date string",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isIsoTime } from '@coffeekraken/sugar/is';\n__isIsoTime('john.doe@gmail.com') => false\n__isIsoTime('plop@yop.com') => false\n__isIsoTime('hello') => false\n__isIsoTime('17:21') => true"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isIsoTime.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isIsoTime.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isJson": {
                "id": "@coffeekraken.sugar.shared.is.isJson",
                "name": "isJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid json",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isJson } from '@coffeekraken/sugar/is'\nif (__isJson('[{id:10}]')) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isJson.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isLinux": {
                "id": "@coffeekraken.sugar.shared.is.isLinux",
                "name": "isLinux",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on linux",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isLinux } from '@coffeekraken/sugar/is';\n__isLinux(); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isLinux.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isLinux.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isMap": {
                "id": "@coffeekraken.sugar.shared.is.isMap",
                "name": "isMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Map",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isMap } from '@coffeekraken/sugar/is'\nconst map = new Map();\nif (__isMap(map) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMap.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isMmddyyyyDate": {
                "id": "@coffeekraken.sugar.shared.is.isMmddyyyyDate",
                "name": "isMmddyyyyDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid mm.dd.yyyy date\nThis will match : mm.dd.yyyy | mm/dd/yyyy | mm-dd-yyyy | mm dd yyyy",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isMmddyyyyDate } from '@coffeekraken/sugar/is'\nif (__isMmddyyyyDate('12.25.2018')) {\n    // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isMmddyyyyDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isMmddyyyyDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isModuleSystem": {
                "id": "@coffeekraken.sugar.shared.is.isModuleSystem",
                "name": "isModuleSystem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "systemNames": {
                        "name": "systemNames",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        {
                                            "type": "string",
                                            "value": "esm"
                                        },
                                        {
                                            "type": "string",
                                            "value": "cjs"
                                        }
                                    ]
                                }
                            ],
                            "raw": "('esm'|'cjs')[]"
                        },
                        "description": "An array of system names to check against",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current module system the code runs on is one of the passed system names like \"esm\" or \"cjs\".",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isModuleSystem } from '@coffeekraken/sugar/is';\n__isModuleSystem('esm'); // => true\n__isModuleSystem('cjs'); // => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isModuleSystem.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isModuleSystem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isNode": {
                "id": "@coffeekraken.sugar.shared.is.isNode",
                "name": "isNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current script is running under node runtime or not...",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isNode } from '@coffeekraken/sugar/is';\n__isNode(); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isNode.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isNumber": {
                "id": "@coffeekraken.sugar.shared.is.isNumber",
                "name": "isNumber",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a number",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isNumber } from '@coffeekraken/sugar/is';\n__isNumber(12) => true\n__isNumber(22.3) => true\n__isNumber('20') => false\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isNumber.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isNumber.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isObject": {
                "id": "@coffeekraken.sugar.shared.is.isObject",
                "name": "isObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js object",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isObject } from '@coffeekraken/sugar/is'\nif (__isObject({}) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isOdd": {
                "id": "@coffeekraken.sugar.shared.is.isOdd",
                "name": "isOdd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if a number is odd or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOdd } from '@coffeekraken/sugar/is'\n__isOdd(1) // true\n__isOdd(2) // false\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOdd.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isOdd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isOfType": {
                "id": "@coffeekraken.sugar.shared.is.isOfType",
                "name": "isOfType",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    },
                    "typeString": {
                        "name": "typeString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The argument type definition string to use for the test",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to configure your type checking",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "verbose": {
                        "name": "verbose",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get back just \"false\", or an object describing the issue",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take the value to check and an argument type definition string like \"String\", \"Array<String>\", etc... and return true or false depending\nif the value pass the test or not...",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOfType } from '@coffeekraken/sugar/is';\n__isOfType(true, 'Boolean'); // => true\n__isOfType(12, 'String|Number'); // => true\n__isOfType(['hello',true], 'Array<String>'); // => { expected: { type: 'Array<String>' }, received: { type: 'Array<String|Boolean>' }}\n__isOfType(['hello',true], 'Array<String|Boolean>'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOfType.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isOfType.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isOsx": {
                "id": "@coffeekraken.sugar.shared.is.isOsx",
                "name": "isOsx",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isOsx } from '@coffeekraken/sugar/is';\n__isOsx(); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isOsx.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isOsx.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isPath": {
                "id": "@coffeekraken.sugar.shared.is.isPath",
                "name": "isPath",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The path to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed string is a valid path or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPath } from '@coffeekraken/sugar/is';\n__isPath('hello/world'); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPath.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isPath.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isPlainObject": {
                "id": "@coffeekraken.sugar.shared.is.isPlainObject",
                "name": "isPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Object|Array"
                        },
                        "description": "The object(s) to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed object (or array of objects) is/are plain object(s)",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isPlainObject } from '@coffeekraken/sugar/is';\n__isPlainObject({ hello: 'world'}); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isPlainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isRegexp": {
                "id": "@coffeekraken.sugar.shared.is.isRegexp",
                "name": "isRegexp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js Regexp",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isRegexp } from '@coffeekraken/sugar/is'\nif (__isRegexp(/^hello$/g) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isRegexp.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isRegexp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isString": {
                "id": "@coffeekraken.sugar.shared.is.isString",
                "name": "isString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a js String",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isString } from '@coffeekraken/sugar/is'\nif (__isString({}) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isString.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isTerminal": {
                "id": "@coffeekraken.sugar.shared.is.isTerminal",
                "name": "isTerminal",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply returns if the process runs inside a terminal or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isTerminal } from '@coffeekraken/sugar/is';\n__isTerminal(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isTerminal.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isTerminal.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.testEnv": {
                "id": "@coffeekraken.sugar.shared.is.testEnv",
                "name": "testEnv",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the current environment is in a test process or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isTestEnv } from '@coffeekraken/sugar/is';\n__isTestEnv(); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isTestEnv.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isTestEnv.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isUrl": {
                "id": "@coffeekraken.sugar.shared.is.isUrl",
                "name": "isUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the passed value is a valid url",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isUrl } from '@coffeekraken/sugar/is';\n__isUrl('http://google.com') => true\n__isUrl('ftp://web.coco.com:2222') => true\n__isUrl('hello') => false"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isWindows": {
                "id": "@coffeekraken.sugar.shared.is.isWindows",
                "name": "isWindows",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if the app run on mac OS X or not",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isWindows } from '@coffeekraken/sugar/is';\n__isWindows(); // => true\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isWindows.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isWindows.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.is.isYyyymmddDate": {
                "id": "@coffeekraken.sugar.shared.is.isYyyymmddDate",
                "name": "isYyyymmddDate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "date": {
                        "name": "date",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The date to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Check if is a valid yyyy.mm.dd date\nThis will match : yyyy.mm.dd | yyyy/mm/dd | yyyy-mm-dd | yyyy mm dd",
                "namespace": "@coffeekraken.sugar.shared.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isYyyymmddDate } from '@coffeekraken/sugar/is'\nif (__isYyyymmddDate('2018.12.25')) {\n    // do something cool\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isYyyymmddDate.ts",
                "extension": "ts",
                "relPath": "src/shared/is/isYyyymmddDate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.iterable.map": {
                "id": "@coffeekraken.sugar.shared.iterable.map",
                "name": "map",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "stack": {
                        "name": "stack",
                        "type": {
                            "types": [
                                {
                                    "type": "Iterable"
                                }
                            ],
                            "raw": "Iterable"
                        },
                        "description": "The stack on which to iterate",
                        "defaultStr": ""
                    },
                    "A callback called on each stack items with parameters \"key\" and \"value\". You must return either a new value for the stack item to be set, either nothing to pass to the next item": {
                        "name": "A callback called on each stack items with parameters \"key\" and \"value\". You must return either a new value for the stack item to be set, either nothing to pass to the next item",
                        "type": {
                            "types": [
                                {
                                    "type": "IIterableCallbackFn"
                                }
                            ],
                            "raw": "IIterableCallbackFn"
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an iterable value like an Array, an Object, a Map, a String, an Integer, a Set, etc... and\nsimply iterate over like the \"map\" array function.",
                "namespace": "@coffeekraken.sugar.shared.iterable",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __map } from '@coffeekraken/sugar/iterable';\nconst myStack = ['hello', 'world'];\n__map(myStack, ({key, value}) => {\n   return `${value} coco`;\n});\n// ['hello coco', 'world coco']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/iterable/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.json.sanitizeJsonString": {
                "id": "@coffeekraken.sugar.shared.json.sanitizeJsonString",
                "name": "sanitizeJsonString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "jsonString": {
                        "name": "jsonString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json string to sanitize",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simple take a json string and ensure that it will be valid\nto pass through ```JSON.parse``` function for example.\nIf your string is really messy, if may not work. It take care for things like double quotes in double quotes, etc...",
                "namespace": "@coffeekraken.sugar.shared.json",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sanitizeJsonString } from '@coffeekraken/sugar/json';\n__sanitizeJsonString('{\"something\": \"\"cool\"\"}'); // => '{\"something\":\"\\\"cool\\\"\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sanitizeJsonString.ts",
                "extension": "ts",
                "relPath": "src/shared/json/sanitizeJsonString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.json.stringify": {
                "id": "@coffeekraken.sugar.shared.json.stringify",
                "name": "stringify",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to stringify",
                        "defaultStr": ""
                    },
                    "replacer": {
                        "name": "replacer",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A function that alters the behavior of the stringification process.",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "space": {
                        "name": "space",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number of spaces you want tp use",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function do the same as the ```JSON.stringify``` one but add some features.",
                "namespace": "@coffeekraken.sugar.shared.json",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stringify } from '@coffeekraken/sugar/json';\n__stringify({\n   hello: 'world'\n}); // => {\"hello\":\"world\"}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stringify.ts",
                "extension": "ts",
                "relPath": "src/shared/json/stringify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.math.circleConstrain": {
                "id": "@coffeekraken.sugar.shared.math.circleConstrain",
                "name": "circleConstrain",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "center": {
                        "name": "center",
                        "type": {
                            "types": [
                                {
                                    "type": "Vector2"
                                }
                            ],
                            "raw": "Vector2"
                        },
                        "description": "The center point of the circle",
                        "defaultStr": ""
                    },
                    "radius": {
                        "name": "radius",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The radius to constrain the point in",
                        "defaultStr": ""
                    },
                    "point": {
                        "name": "point",
                        "type": {
                            "types": [
                                {
                                    "type": "Vector2"
                                }
                            ],
                            "raw": "Vector2"
                        },
                        "description": "The point to constrain",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Take as parameter a central point, a radius and a points to constrain inside the circle defined by the radius",
                "namespace": "@coffeekraken.sugar.shared.math",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __circleConstrain } from '@coffeekraken/sugar/math'\n__circleConstrain({\n\tx: 10, y: 10\n}, 10, {\n\tx: 10, y: 5\n})"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "circleConstrain.ts",
                "extension": "ts",
                "relPath": "src/shared/math/circleConstrain.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.math.clamp": {
                "id": "@coffeekraken.sugar.shared.math.clamp",
                "name": "clamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "num": {
                        "name": "num",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to clamp",
                        "defaultStr": ""
                    },
                    "min": {
                        "name": "min",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The minimum value",
                        "defaultStr": ""
                    },
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum value",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values",
                "namespace": "@coffeekraken.sugar.shared.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __clamp } from '@coffeekraken/sugar/math';\n__clamp(10, 0, 100); // => 10\n__clamp(0, 0, 100); // => 0\n__clamp(100, 0, 100); // => 100\n__clamp(101, 0, 100); // => 100"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/clamp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.math.distanceBetween": {
                "id": "@coffeekraken.sugar.shared.math.distanceBetween",
                "name": "distanceBetween",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "point1": {
                        "name": "point1",
                        "type": {
                            "types": [
                                {
                                    "type": "Point"
                                }
                            ],
                            "raw": "Point"
                        },
                        "description": "The point 1, x and y value",
                        "defaultStr": ""
                    },
                    "point2": {
                        "name": "point2",
                        "type": {
                            "types": [
                                {
                                    "type": "Point"
                                }
                            ],
                            "raw": "Point"
                        },
                        "description": "The point 2, x and y value",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Get the distance between two points",
                "namespace": "@coffeekraken.sugar.shared.math",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distanceBetween } from '@coffeekraken/sugar/js/geom/2d/distanceBetween'\n__distanceBetween({\n\tx: 10, y: 20\n}, {\n\tx: 10, y: 30\n}) // 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distanceBetween.ts",
                "extension": "ts",
                "relPath": "src/shared/math/distanceBetween.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.math.easeClamp": {
                "id": "@coffeekraken.sugar.shared.math.easeClamp",
                "name": "easeClamp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "num": {
                        "name": "num",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to clamp",
                        "defaultStr": ""
                    },
                    "min": {
                        "name": "min",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The minimum value",
                        "defaultStr": ""
                    },
                    "max": {
                        "name": "max",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum value",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Clamp a number between two values with easing in and out",
                "namespace": "@coffeekraken.sugar.shared.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __easeClamp } from '@coffeekraken/sugar/math';\n__easeClamp(-20, -10, 0, 100, 110); // => -10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "easeClamp.ts",
                "extension": "ts",
                "relPath": "src/shared/math/easeClamp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.math.roundWithSign": {
                "id": "@coffeekraken.sugar.shared.math.roundWithSign",
                "name": "roundWithSign",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to round",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to round a number by keeping his sign \"+\" or \"-\"",
                "namespace": "@coffeekraken.sugar.shared.math",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __roundWithSign } from '@coffeekraken/sugar/math';\n__roundWithSign(1.5); // => 1\n__roundWithSign(-1.5); // => -1"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "roundWithSign.ts",
                "extension": "ts",
                "relPath": "src/shared/math/roundWithSign.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.module.currentModuleSystem": {
                "id": "@coffeekraken.sugar.shared.module.currentModuleSystem",
                "name": "currentModuleSystem",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the current module system the code is running on like \"cjs\" or \"esm\".",
                "namespace": "@coffeekraken.sugar.shared.module",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __currentModuleSystem } from '@coffeekraken/sugar/module';\n__currentModuleSystem(); // => 'cjs'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "currentModuleSystem.ts",
                "extension": "ts",
                "relPath": "src/shared/module/currentModuleSystem.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.number.pad": {
                "id": "@coffeekraken.sugar.shared.number.pad",
                "name": "pad",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The number to pad",
                        "defaultStr": ""
                    },
                    "width": {
                        "name": "width",
                        "type": {
                            "types": [
                                {
                                    "type": "Integer"
                                }
                            ],
                            "raw": "Integer"
                        },
                        "description": "The width of pad to apply",
                        "defaultStr": ""
                    },
                    "character": {
                        "name": "character",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The character to use",
                        "default": "0",
                        "defaultStr": "\"0\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pad a number n of x 0 or another passed character",
                "namespace": "@coffeekraken.sugar.shared.number",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __pad } from '@coffeekraken/sugar/number'\n__pad(123, 4) // 0123\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "pad.ts",
                "extension": "ts",
                "relPath": "src/shared/number/pad.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.applyScope": {
                "id": "@coffeekraken.sugar.shared.object.applyScope",
                "name": "applyScope",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object on which to apply the scope",
                        "defaultStr": ""
                    },
                    "scope": {
                        "name": "scope",
                        "type": {
                            "types": [
                                {
                                    "type": "Record",
                                    "of": [
                                        "string, string"
                                    ]
                                }
                            ],
                            "raw": "Record<string, string>"
                        },
                        "description": "The scope you want to apply. Check the example it will be easier to understand",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IApplyScopeSettings"
                                }
                            ],
                            "raw": "IApplyScopeSettings"
                        },
                        "description": "Some settings to configure your scope application process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to apply the scope deep in the object or just in the first level",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "clone": {
                        "name": "clone",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object before applying scope or not",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to apply a certain scope on the passed object.\nA scope can be for example the environment your object lives in like \"production\",\n\"development\", etc...\nIt can be literally all you want as soon as your object follow the property syntax to define\nscoped values described in the example bellow.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __applyScope } from '@coffeekraken/sugar/object';\nconst myObject = {\n     myValue: 'Hello',\n     '@dev': {\n         myValue: 'World'\n     },\n     'something@prod': {\n         plop: 'yop'\n     }\n};\n\n// apply the \"env\" scope with the value of \"dev\"\n__applyScope(myObject, ['dev']);\n// {\n//   myValue: 'World'\n// }\n\n// apply two scopes\n__applyScope(myObject, ['prod']);\n// {\n//   myValue: 'Hello',\n//   something: {\n//       plop: 'yop'\n//   }\n// }\n\n// apply a scope with multiple values\n__applyScope(myObject, ['dev','prod']);\n// {\n//   myValue: 'World',\n//   something: {\n//       plop: 'yop'\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "applyScope.ts",
                "extension": "ts",
                "relPath": "src/shared/object/applyScope.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.camelCaseProps": {
                "id": "@coffeekraken.sugar.shared.object.camelCaseProps",
                "name": "camelCaseProps",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object on which to apply the camel case treatment",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IApplyScopeSettings"
                                }
                            ],
                            "raw": "IApplyScopeSettings"
                        },
                        "description": "Some settings to configure your scope application process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to apply the treatment deep in the object or just in the first level",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an object as argument and return the same one but with properties in camel case.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelCaseProps } from '@coffeekraken/sugar/object';\n__camelCaseProps({\n   'hello-world': true\n});\n// {\n//   helloWorld: true\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelCaseProps.ts",
                "extension": "ts",
                "relPath": "src/shared/object/camelCaseProps.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.clone": {
                "id": "@coffeekraken.sugar.shared.object.clone",
                "name": "clone",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to copy",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Specify some settings to configure your clone process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to clone the object deeply",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clone an object either at 1 level, or deeply.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __clone } from '@coffeekraken/sugar/object';\n__clone({\n   hello: 'world'\n});"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clone.ts",
                "extension": "ts",
                "relPath": "src/shared/object/clone.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.decycle": {
                "id": "@coffeekraken.sugar.shared.object.decycle",
                "name": "decycle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply remove the circular references in the passed object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __decycle } from '@coffeekraken/sugar/object';\n__decycle({\n   something: 'cool',\n   with: 'circular references',\n   //..\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "decycle.ts",
                "extension": "ts",
                "relPath": "src/shared/object/decycle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepAssign": {
                "id": "@coffeekraken.sugar.shared.object.deepAssign",
                "name": "deepAssign",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "referenceObj": {
                        "name": "referenceObj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to assign the others in",
                        "defaultStr": ""
                    },
                    "...objects": {
                        "name": "...objects",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some objects you want to assign in the first one",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take as first parameter the object you want to assign others to,\nthen others objects you want to assign to the first.\nThe difference with the ```deepMerge``` function is that this one keep the first\npassed object as reference and update it directly. The ```deepMerge``` one create a new\nobject with the merging result",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepAssign } from '@coffeekraken/sugar/object';\nconst obj1 = { something: 'cool' };\nconst obj2 = { other: true };\nconst obj3 = __deepAssign(obj1, obj2);\nobj1 === obj3 // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepAssign.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepAssign.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepFilter": {
                "id": "@coffeekraken.sugar.shared.object.deepFilter",
                "name": "deepFilter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "filter": {
                        "name": "filter",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The filter function that take as parameter the property itself, and the property name",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function and this through all of the object structure. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepFilter } from '@coffeekraken/sugar/object';\n__deepFilter ({\n   coco: 'hello',\n   plop: true,\n   sub: {\n     property: 'world'\n   }\n}, ({key, item}) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepFilter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepFilter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepize": {
                "id": "@coffeekraken.sugar.shared.object.deepize",
                "name": "deepize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an object like this one:\n{\n'something.cool': 'hello'\n}\nand convert it to something like this:\n{\nsomething: {\ncool: 'hello'\n}\n}",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepize } from '@coffeekraken/sugar/object';\n__deepize ({ 'something.cool': 'hello' }); // => { something: { cool: 'hello' } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepize.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepMap": {
                "id": "@coffeekraken.sugar.shared.object.deepMap",
                "name": "deepMap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to map through",
                        "defaultStr": ""
                    },
                    "processor": {
                        "name": "processor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The processor function that take as parameter the actual property value, the current property name and the full dotted path to the current property",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your deepMap process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- classInstances (false) {Boolean}: Specify if you want the objects to be processed the same as other values\n- deepFirst (true) {Boolean}: Specify if you want to process deep values first\n- array (true) {Boolean}: Specify if we have to treat array like simple value to process of treat them as an object and continue our map down\n"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function is the same as the \"map\" one. The only difference is that this one goes deep into the object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepMap } from '@coffeekraken/sugar/object';\n__deepMap({\n   hello: 'world'\n}, ({object, prop, value, path}) => {\n   return '~ ' + value;\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMap.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepMerge": {
                "id": "@coffeekraken.sugar.shared.object.deepMerge",
                "name": "deepMerge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "args...": {
                        "name": "args...",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass all the objects you want to merge",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass as last object the settings one that can contain these properties:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "mergeArray": {
                        "name": "mergeArray",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Merge or not arrays",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Deep merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepMerge } from '@coffeekraken/sugar/object';\n__deepMerge({a: {b: {c: 'c', d: 'd'}}}, {a: {b: {e: 'e', f: 'f'}}});\n// => { a: { b: { c: 'c', d: 'd', e: 'e', f: 'f' } } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepMerge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepMerge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.deepProxy": {
                "id": "@coffeekraken.sugar.shared.object.deepProxy",
                "name": "deepProxy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which to add the proxy",
                        "defaultStr": ""
                    },
                    "handlerFn": {
                        "name": "handlerFn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The handler function that will be called with the update object. It can be a property deleted, an array item added, a property updated, etc...:",
                        "defaultStr": "",
                        "content": "- set: An object property added or updated\n- delete: An object property deleted\n- push: An item has been added inside an array\n- {methodName}: Every array actions"
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your proxy:",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to watch the passed object deeply or juste the first level",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "handleSet": {
                        "name": "handleSet",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to handle the \"set\" action",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "handleGet": {
                        "name": "handleGet",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to handle the \"get\" action",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "handleDelete": {
                        "name": "handleDelete",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to handle the \"delete\" action",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "domElements": {
                        "name": "domElements",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to proxy dom elements",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to add Proxy to an object in deep fashion.\nNormally the Proxy process only the level on which it has been added. Here we add Proxy to all the\nobject levels and to new properties as well.\n\nOn the returned proxied object, you will have access to the ```revoke``` method that you can call to revoke the proxy applied.\nThis method will return you a shallow version of the proxied object that you can use as you want",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __deepProxy } from '@coffeekraken/sugar/object';\nconst a = __deepProxy({\n   hello: 'world'\n}, (actionObj) => {\n   // do something with the actionObj...\n});\na.hello = 'coco';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/deepProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.delete": {
                "id": "@coffeekraken.sugar.shared.object.delete",
                "name": "delete",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which you want to delete the property",
                        "defaultStr": ""
                    },
                    "dotPath": {
                        "name": "dotPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath to the property you want to delete",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Delete an object property using a dotPath like \"something.else\"",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __delete } from '@coffeekraken/sugar/object';\nconst myObject = {\n   hello: 'world',\n   plop: 'yop'\n};\n__delete(myObject, 'plop');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "delete.ts",
                "extension": "ts",
                "relPath": "src/shared/object/delete.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.diff": {
                "id": "@coffeekraken.sugar.shared.object.diff",
                "name": "diff",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object1": {
                        "name": "object1",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The first object used for the diff process",
                        "defaultStr": ""
                    },
                    "object2": {
                        "name": "object2",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The second object used for the diff process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure the diff process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- deep (true) {Boolean}: Specify if you want a deep diff or a simple one level diff\n- added (true) {Boolean}: Specify if you want to include the props that does not exist on the object1 but exists on the object2\n- deleted (false) {Boolean}: Specify if you want to include the props that exists on the object1 but no more on the object2\n- equals (false) {Boolean}: Specify if you want to include the props that are equals from the object1 to the object2\n- emptyObject (false) {Boolean}: Specify if you want to keep the empty objects in the resulting one\n- updated (true) {Boolean}: Specify if you want to include the updated values"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return an object that contains only what has been changed between the two.\nThis function is a simple wrapper around the nice object-diff package from Thomas Jensen that you can find here: https://www.npmjs.com/package/object-diff",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __diff } from '@coffeekraken/sugar/object';\nconst myObject1 = {\n   hello: 'world',\n   plop: 'yop'\n};\nconst myObject2 = {\n   coco: 'plop',\n   hello: 'hey!',\n   plop: 'yop'\n};\n__diff(myObject1, myObject2);\n{\n   coco: 'plop',\n   hello: 'hey!'\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "diff.ts",
                "extension": "ts",
                "relPath": "src/shared/object/diff.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.ensureExists": {
                "id": "@coffeekraken.sugar.shared.object.ensureExists",
                "name": "ensureExists",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which to check the path existence",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to check",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to set to the object path created if not already exist",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Pass a string like \"my.cool.object\" and the value it has to be and this function will ensure that this deep object exist",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ensureExists } from '@coffeekraken/sugar/object';\nconst myObj = { hello: 'world' }«\n__ensureExists(myObj, 'cool.object', {});\n// { hello: 'world', cool: { object: {} } }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ensureExists.ts",
                "extension": "ts",
                "relPath": "src/shared/object/ensureExists.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.extractValues": {
                "id": "@coffeekraken.sugar.shared.object.extractValues",
                "name": "extractValues",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "arrayOfObjects": {
                        "name": "arrayOfObjects",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "Object"
                                    ]
                                }
                            ],
                            "raw": "Array<Object>"
                        },
                        "description": "An array of objects as source",
                        "defaultStr": ""
                    },
                    "keyName": {
                        "name": "keyName",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The key name you want to extract of the objects",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an array of objects and a key name as parameters and return an array containing\nonly the specified object key value.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractValues } from '@coffeekraken/sugar/object';\n__extractValues ([{\n   hello: 'world',\n   plop: 'Yes'\n}, {\n   hello: 'king',\n   plop: 'something'\n}], 'hello'); // => ['world', 'king']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractValues.ts",
                "extension": "ts",
                "relPath": "src/shared/object/extractValues.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.filter": {
                "id": "@coffeekraken.sugar.shared.object.filter",
                "name": "filter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "filter": {
                        "name": "filter",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The filter function that take as parameter the property itself, and the property name",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allow to filter an object using a function. It works the same as the filter method on the Array object type.\nThe passed filter function will have as parameter each object properties and must return true or false depending if you want the\npassed property in the filtered object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __filter } from '@coffeekraken/sugar/object';\n__filter({\n   coco: 'hello',\n   plop: true\n}, (key, item) => typeof item === 'string');\n// { coco: 'hello' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filter.ts",
                "extension": "ts",
                "relPath": "src/shared/object/filter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.flatten": {
                "id": "@coffeekraken.sugar.shared.object.flatten",
                "name": "flatten",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to flatten",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your flatten process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "separation": {
                        "name": "separation",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The separation character to use for preperty names",
                        "default": ".",
                        "defaultStr": "\".\""
                    },
                    "array": {
                        "name": "array",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to flatten array or not",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "quoteSeparatedProperties": {
                        "name": "quoteSeparatedProperties",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to quote dotted properties to be able to restore them correctly later",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "quoteCharacter": {
                        "name": "quoteCharacter",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Specify the quote character to use when need to quote separated properties",
                        "default": "\"",
                        "defaultStr": "'\"'"
                    },
                    "keepLastIntact": {
                        "name": "keepLastIntact",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to keep the last level (object, array) intact and not to flatten each properties",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform the passed multiple level object into a single level one",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __flatten } from '@coffeekraken/sugar/object';\n__flatten({\n   hello: {\n     world: 'Coco'\n   }\n});"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "flatten.ts",
                "extension": "ts",
                "relPath": "src/shared/object/flatten.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.get": {
                "id": "@coffeekraken.sugar.shared.object.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to get",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\"",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __get } from '@coffeekraken/sugar/object';\n__get(myObject, 'my.cool.value'); // => 'Hello world'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.ts",
                "extension": "ts",
                "relPath": "src/shared/object/get.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.getGlob": {
                "id": "@coffeekraken.sugar.shared.object.getGlob",
                "name": "getGlob",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotted object path to get",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object to configure your glob get process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "deepize": {
                        "name": "deepize",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the result object to be deepized using the ```deepize``` sugar function",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Retreive an object value using a dotted path like \"myObject.myProperty.myValue\".\nIt support glob patterns like \"something..id\" and returns you a new object containing\nall values with the path that matches the passed glob pattern.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getGlob } from '@coffeekraken/sugar/object';\n__getGlob({\n hello: {\n    world: true,\n    plop: false\n}, 'hello.');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getGlob.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getGlob.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.getKeyByValue": {
                "id": "@coffeekraken.sugar.shared.object.getKeyByValue",
                "name": "getKeyByValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to search for the value",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to find in the object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the key that correspond to the passed value in the passed object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getKeyByValue } from '@coffeekraken/sugar/object';\n__getKeyByValue({ hello: 'world' }, 'world'); // => hello"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getKeyByValue.ts",
                "extension": "ts",
                "relPath": "src/shared/object/getKeyByValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.map": {
                "id": "@coffeekraken.sugar.shared.object.map",
                "name": "map",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to process",
                        "defaultStr": ""
                    },
                    "processor": {
                        "name": "processor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The processor function that will take as parameters the current property value and the property name",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is the same function as the \"Array.map\" but for objects. It will iterate over all the properties\nof the passed object and pass the value to your process function. It will then save the property\nwith your processed value",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __map } from '@coffeekraken/sugar/object';\nconst myObject = {\n   hello: 'world',\n   cat: 'Nelson'\n};\n__map(myObject, ({value, prop}) => {\n   return prop === 'hello' ? 'universe' : value;\n});\n{\n   hello: 'universe',\n   cat: 'Nelson'\n}"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "map.ts",
                "extension": "ts",
                "relPath": "src/shared/object/map.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.merge": {
                "id": "@coffeekraken.sugar.shared.object.merge",
                "name": "merge",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "args...": {
                        "name": "args...",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass all the objects you want to merge",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Pass as last object the settings one that can contain these properties:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- object (true) {Boolean}: Specify if you want to merge the objects\n- array (false) {Boolean}: Specify if you want to merge the arrays"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Merge one object with another and return the merged object result. This merging implementation support:\n- Merging object with getters/setters\n- n numbers of objects as arguments",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __merge } from '@coffeekraken/sugar/object';\n__merge({a: 'hello'}, {a: 'plop', hello: 'world');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "merge.ts",
                "extension": "ts",
                "relPath": "src/shared/object/merge.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.objectHash": {
                "id": "@coffeekraken.sugar.shared.object.objectHash",
                "name": "objectHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "The object to hash",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IObjectHashSettings"
                                }
                            ],
                            "raw": "IObjectHashSettings"
                        },
                        "description": "Some settings to configure your hash generation process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get back an integrity hash passed object.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __objectHash } from '@coffeekraken/sugar/object';\n__objectHash('my/cool/folder'); // => YZOrKDx9LCLd8X39PoFTflXGpRU=,"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "objectHash.ts",
                "extension": "ts",
                "relPath": "src/shared/object/objectHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.propertyProxy": {
                "id": "@coffeekraken.sugar.shared.object.propertyProxy",
                "name": "propertyProxy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object on which to create the proxy",
                        "defaultStr": ""
                    },
                    "property": {
                        "name": "property",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The property name that will be proxied",
                        "defaultStr": ""
                    },
                    "descriptor": {
                        "name": "descriptor",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A descriptor object that contains at least a get or a set method, or both",
                        "defaultStr": ""
                    },
                    "applySetterAtStart": {
                        "name": "applySetterAtStart",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If need to apply the descriptor setter directly on the current value or not",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Create a proxy for and object property.\nThis gives you the possibility to process the data of the property\nwhen it is getted or setted.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __propertyProxy } from '@coffeekraken/sugar/object';\nconst myObject = {\n\t\ttitle : 'World'\n};\n// create the proxy\n__propertyProxy(myObject, 'title', {\n\t\tget : (value) => {\n\t\t\treturn `Hello ${value}`;\n\t\t},\n\t\tset : (value) => {\n\t\t\treturn `Youhou ${value}`;\n\t\t}\n});\nconsole.log(myObject.title) => 'Hello World';\nmyObject.title = 'Universe';\nconsole.log(myObject.title) => 'Hello Youhou Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "propertyProxy.ts",
                "extension": "ts",
                "relPath": "src/shared/object/propertyProxy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.set": {
                "id": "@coffeekraken.sugar.shared.object.set",
                "name": "set",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object in which to set the value",
                        "defaultStr": ""
                    },
                    "path": {
                        "name": "path",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The object path where to set the value",
                        "defaultStr": ""
                    },
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to set",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Set an object value using a dotted object path like \"myObject.myProperty.myValue\" to set his position",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __set } from '@coffeekraken/sugar/object';\n __set('myObject.cool.value', 'Hello world'); // => Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "set.ts",
                "extension": "ts",
                "relPath": "src/shared/object/set.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.sort": {
                "id": "@coffeekraken.sugar.shared.object.sort",
                "name": "sort",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to sort",
                        "defaultStr": ""
                    },
                    "sort": {
                        "name": "sort",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The sort function to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sort } from '@coffeekraken/sugar/object';\n__sort({\n   coco: { weight: 10 },\n   lolo: { weight: 2 },\n   plop: { weight: 5 }\n}, (a, b) => {\n  return a.value.weight - b.value.weight;\n});\n// {\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n//   coco: { weight: 10 }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sort.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sort.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.sortDeep": {
                "id": "@coffeekraken.sugar.shared.object.sortDeep",
                "name": "sortDeep",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to sort",
                        "defaultStr": ""
                    },
                    "sort": {
                        "name": "sort",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The sort function to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Sort an object properties the same way as the Array.sort do it but will do it recusrively to sort the object deeply.",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sortDeep } from '@coffeekraken/sugar/object';\n__sortDeep({\n   lolo: { weight: 2 },\n   coco: { weight: 10 },\n   plop: { weight: 5 },\n   aha: {\n     hello: 'world',\n     coco: 'plop'\n   }\n}, (a, b) => {\n   return a.key.localeCompare(b.key);\n});\n// {\n//   aha: {\n//      coco: 'plop',\n//      hello: 'world'\n//   }\n//   coco: { weight: 10 }\n//   lolo: { weight: 2 },\n//   plop: { weight: 5 },\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sortDeep.ts",
                "extension": "ts",
                "relPath": "src/shared/object/sortDeep.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.SWatch": {
                "id": "@coffeekraken.sugar.shared.object.SWatch",
                "name": "SWatch",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to watch",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your watch process",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- deep (true) {Boolean}: Specify if you want to watch the object deeply or just the first level\n"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This class allows you to easily monitor some object properties and get the new and old value of it",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __SWatch } from '@coffeekraken/sugar/object';\n\n// create the watcher instance\nconst watchedObj = new  __SWatch({\n\t\ttitle : 'Hello World'\n});\n\n// watch the object\nwatchedObj.on('title:set', watchResult => {\n \t// do something when the title changes\n});\n\n// update the title\nwatchedObj.title = 'Hello Universe';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "SWatch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/SWatch.ts",
                "children": {
                    "constructor": {
                        "id": "sbb4096191682acfb00b334aa57ac1e906fe979daca49e21205eaafa04df3593b",
                        "name": "constructor",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "Constructor",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.shared.object.toJson": {
                "id": "@coffeekraken.sugar.shared.object.toJson",
                "name": "toJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Any"
                                }
                            ],
                            "raw": "Any"
                        },
                        "description": "The object to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert class instances to plain JSON object",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toJson } from '@coffeekraken/sugar/object';\nclass MyClass {\n     hello = 'world';\n     something() {}\n}\n__toJson(new MyClass()); // => { hello: 'world' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toJson.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.toPlainObject": {
                "id": "@coffeekraken.sugar.shared.object.toPlainObject",
                "name": "toPlainObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "object": {
                        "name": "object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "null",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to configure your process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take an object as parameter and return a new one that does not have getters, setters, etc...",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toPlainObject } from '@coffeekraken/sugar/object';\n__toPlainObject({ something: 'cool' });"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toPlainObject.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toPlainObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.toQueryString": {
                "id": "@coffeekraken.sugar.shared.object.toQueryString",
                "name": "toQueryString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "obj": {
                        "name": "obj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to serialize",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform an object (key => pairs) to a query string like \"?var1=value1&var2\"",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toQueryString } from '@coffeekraken/sugar/object'\nconsole.log(__toQueryString({\n\tvalue1 : 'coco',\n\tvalue1 : 'plop'\n}));\n// => ?value1=coco&value2=plop"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toQueryString.ts",
                "extension": "ts",
                "relPath": "src/shared/object/toQueryString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.object.watch": {
                "id": "@coffeekraken.sugar.shared.object.watch",
                "name": "watch",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "target": {
                        "name": "target",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Object|Array"
                        },
                        "description": "The array or object to watch",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "A settings object to configure your watch process. Check the SWatch class documentation for more.",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method is a simple wrapper around the SWatch class that allows you to watch some action on object and arrays",
                "namespace": "@coffeekraken.sugar.shared.object",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __watch } from '@coffeekraken/sugar/object';\nlet myObj = __watch({\n   hello: 'world'\n}).on('', watchResult => {\n   // do something...\n});\nmyObj.hello = 'plop';"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "watch.ts",
                "extension": "ts",
                "relPath": "src/shared/object/watch.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.package.formatPackageJson": {
                "id": "@coffeekraken.sugar.shared.package.formatPackageJson",
                "name": "formatPackageJson",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "json": {
                        "name": "json",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The json to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a package.json JSON formatted object and standardize\nsome fields like the \"author\" one to be sure it is an object at the end,\nthe \"contributors\" array the same way as the \"author\" one, etc... Here's the list\nof processed actions:\n1. Transform the string version of the \"author\" field into an object with the properties \"name\", \"email\" and \"url\"\n2. Transform the string version of the \"contributors\" field into an object with the properties \"name\", \"email\" and \"url\"",
                "namespace": "@coffeekraken.sugar.shared.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __formatPackageJson } from '@coffeekraken/sugar/package';\n__formatPackageJson({\n   \"author\": \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\"\n}); // => {\n   \"author\": {\n     \"name\": \"Olivier Bossel\",\n     \"email\": \"olivier.bossel@gmail.com\",\n     \"url\": \"https://olivierbossel.com\"\n   }\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "formatPackageJson.ts",
                "extension": "ts",
                "relPath": "src/shared/package/formatPackageJson.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.package.parseAuthorString": {
                "id": "@coffeekraken.sugar.shared.package.parseAuthorString",
                "name": "parseAuthorString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take an author string like \"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\" and\ntransform it into a plain object with these properties: name, email and url",
                "namespace": "@coffeekraken.sugar.shared.package",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseAuthorString } from '@coffeekraken/sugar/package';\n __parseAuthorString(\"Olivier Bossel <olivier.bossel@gmail.com> (https://coffeekraken.io)\")\n// => {\n  \"name\": \"Olivier Bossel\",\n  \"email\": \"olivier.bossel@gmail.com\",\n  \"url\": \"https://olivierbossel.com\"\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseAuthorString.ts",
                "extension": "ts",
                "relPath": "src/shared/package/parseAuthorString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.perf.loopsCount": {
                "id": "@coffeekraken.sugar.shared.perf.loopsCount",
                "name": "loopsCount",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "timeframe": {
                        "name": "timeframe",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timeframe to use for calculation",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function calculate how mane loops are executed in a certain timeframe (ms).\nThis is usefull to estimate the computer speed on which this code is running...",
                "namespace": "@coffeekraken.sugar.shared.perf",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __loopsCount } from '@coffeekraken/sugar/perf';\n__loopsCount(); // 122003"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "loopsCount.ts",
                "extension": "ts",
                "relPath": "src/shared/perf/loopsCount.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.perf.speedIndex": {
                "id": "@coffeekraken.sugar.shared.perf.speedIndex",
                "name": "speedIndex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "slow": {
                        "name": "slow",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many loops a \"slow\" computer can make in 100ms",
                        "default": 100000,
                        "defaultStr": "100000"
                    },
                    "fast": {
                        "name": "fast",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many loops a \"fast\" computer can make in 100ms",
                        "default": 1400000,
                        "defaultStr": "1400000"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function gives you back an index usually between 0 and 100 that represent\nthe speed estimation of the computer on which this code runs.\nThis index is calculated by estimating the loops (for) count that the computer\ncan make in 100ms and make use of the \"slow\" and \"fast\" parameters that represent\nan average of how many loops a \"slow\" computer can do in this timeframe, vs how many loops a \"fast\"\ncomputer can make in this timeframe.\nYou can totally update these parameters as you prefer.\nNote that these parameters can/will be updated during time to reflect the most\naverage cases possible.",
                "namespace": "@coffeekraken.sugar.shared.perf",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __speedIndex } from '@coffeekraken/sugar/perf';\n__speedIndex(); // 78"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "speedIndex.ts",
                "extension": "ts",
                "relPath": "src/shared/perf/speedIndex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.autoCast": {
                "id": "@coffeekraken.sugar.js.string.autoCast",
                "name": "autoCast",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to auto cast",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Auto cast the string into the correct variable type",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __autoCast } from '@coffeekraken/sugar/string'\n__autoCast('12') // => 12\n__autoCast('window.HTMLElement') // => HTMLElement\n__autoCast('{\"hello\":\"world\"}') // {hello:'world'}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "autoCast.ts",
                "extension": "ts",
                "relPath": "src/shared/string/autoCast.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.camelCase": {
                "id": "@coffeekraken.sugar.shared.string.camelCase",
                "name": "camelCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to camelCase",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "camelCase a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelCase } from '@coffeekraken/sugar/string';\n__camelCase('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.camelize": {
                "id": "@coffeekraken.sugar.shared.string.camelize",
                "name": "camelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to camelize",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Camelize a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __camelize } from '@coffeekraken/sugar/string';\n__camelize('hello world'); // => helloWorld"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "camelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/camelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.countLine": {
                "id": "@coffeekraken.sugar.shared.string.countLine",
                "name": "countLine",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "line": {
                        "name": "line",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The line to count",
                        "defaultStr": ""
                    },
                    "count": {
                        "name": "count",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Specify what you want to count outside of the normal characters of yourse. Here's the list of available options:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- htmlTags (false) {Boolean}: Specify if you want to count the html tags or not\n- terminalSpecialChars (false) {Boolean}: Specify if you want to count the terminal specials chars like \"\\u001b[30m\", etc...\n- newLineChars (false) {Boolean}: Specify if you want to count the new line special char \"\\n\" or not"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Count how many characters their is in the passed line.\nThis function will exclude the characters like the html tags like <red>, etc...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __countLine } from '@coffeekraken/sugar/string';\n __countLine('Hello <red>World</red>'); // 11"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "countLine.ts",
                "extension": "ts",
                "relPath": "src/shared/string/countLine.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.crop": {
                "id": "@coffeekraken.sugar.shared.string.crop",
                "name": "crop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to crop",
                        "defaultStr": ""
                    },
                    "length": {
                        "name": "length",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The text length to have after the croping process",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings described bellow:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- chars (...) {String}: The characters to use to signal the crop\n- splitWords (false) {Boolean}: Specify if you want to split words or not. If not, the function will make sure the final text does not exceeds the wanted length"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Allows you to crop a string at a certain length (this length take care of the croping characters like \"...\")",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __crop } from '@coffeekraken/sugar/string';\n__crop('Hello World', 10); // => Hello w..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "crop.ts",
                "extension": "ts",
                "relPath": "src/shared/string/crop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.dashCase": {
                "id": "@coffeekraken.sugar.shared.string.dashCase",
                "name": "dashCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to dashCase",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "dashCase a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dashCase } from '@coffeekraken/sugar/string';\n__dashCase('hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dashCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dashCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.dedupe": {
                "id": "@coffeekraken.sugar.shared.string.dedupe",
                "name": "dedupe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    },
                    "statement": {
                        "name": "statement",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The statement to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simple make sure that you don't have duplicate statements in the passed string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dedupe } from '@coffeekraken/sugar/string';\n__dedupe('hello world hello your', 'hello'); // => hello world your"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dedupe.ts",
                "extension": "ts",
                "relPath": "src/shared/string/dedupe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.extractSame": {
                "id": "@coffeekraken.sugar.shared.string.extractSame",
                "name": "extractSame",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string1": {
                        "name": "string1",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string 1 to compare",
                        "defaultStr": ""
                    },
                    "string2": {
                        "name": "string2",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string 2 to compare",
                        "defaultStr": ""
                    },
                    "multiple": {
                        "name": "multiple",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get back multiple same string if exists as an array",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return you what has been find the same in the two passed string.\nIt will return you either an array of same string parts or a simple string\nrepresenting the first same part found.",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __extractSame } from '@coffeekraken/sugar/string';\n__extractSame('Hello world', 'Hello plop'); // => 'Hello '"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "extractSame.ts",
                "extension": "ts",
                "relPath": "src/shared/string/extractSame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.string.format": {
                "id": "@coffeekraken.sugar.js.string.format",
                "name": "format",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to format",
                        "defaultStr": ""
                    },
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Format the passed string using the requested format. Available formats are:\n- isoDate",
                "namespace": "@coffeekraken.sugar.js.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __format } from '@coffeekraken/sugar/string'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "format.ts",
                "extension": "ts",
                "relPath": "src/shared/string/format.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.idCompliant": {
                "id": "@coffeekraken.sugar.shared.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin html id for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import { __idCompliant } from '@coffeekraken/sugar/string';\n__idCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/idCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.lowerFirst": {
                "id": "@coffeekraken.sugar.shared.string.lowerFirst",
                "name": "lowerFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to lower the first letter",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Lower first letter",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __lowerFirst } from '@coffeekraken/sugar/string'\n__lowerFirst('Hello world') // hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "lowerFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/lowerFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.ltrim": {
                "id": "@coffeekraken.sugar.shared.string.ltrim",
                "name": "ltrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim",
                        "defaultStr": ""
                    },
                    "needle": {
                        "name": "needle",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to find an cut out if found",
                        "defaultStr": ""
                    },
                    "trimResult": {
                        "name": "trimResult",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If you want to trim the resulted ltrim",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim left a specified string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __ltrim } from '@coffeekraken/sugar/string'\n __ltrim('Hello World', 'Hello') // World"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "ltrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/ltrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.namespaceCompliant": {
                "id": "@coffeekraken.sugar.shared.string.namespaceCompliant",
                "name": "namespaceCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nas a namespace with just dots and non special characters.",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import { __namespaceCompliant } from '@coffeekraken/sugar/string';\n__namespaceCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "namespaceCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/namespaceCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.paramCase": {
                "id": "@coffeekraken.sugar.shared.string.paramCase",
                "name": "paramCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function transform a string into a param case one like so \"something-cool\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __paramCase } from '@coffeekraken/sugar/string';\n__paramCase('some thoing cool'); // => some-thing-cool"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "paramCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/paramCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.parse": {
                "id": "@coffeekraken.sugar.shared.string.parse",
                "name": "parse",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The value to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a string and convert it into his native data type like date, number, boolean, etc...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parse } from '@coffeekraken/sugar/string';\n __parse('10'); // => 10"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parse.ts",
                "extension": "ts",
                "relPath": "src/shared/string/parse.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.printf": {
                "id": "@coffeekraken.sugar.shared.string.printf",
                "name": "printf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "source": {
                        "name": "source",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The source in which to replace the tokens",
                        "defaultStr": ""
                    },
                    "values...": {
                        "name": "values...",
                        "type": {
                            "types": [
                                {
                                    "type": "Miyed"
                                }
                            ],
                            "raw": "Miyed"
                        },
                        "description": "Any number of arguments to replace the placeholders in the string",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "printf php equavalent",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __printf } from '@coffeekraken/sugar/string';\n__printf('Hello %s', 'world'); // => Hello world\n__printf('Hello %s, I\\'m %s', 'world', 'John Doe'); // Hello world, I'm John Doe\n__printf('Hello %(first)s, I\\'m %(name)s', { first : 'world', name : 'John Doe'}); // Hello world, I'm John Doe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "printf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/printf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.rtrim": {
                "id": "@coffeekraken.sugar.shared.string.rtrim",
                "name": "rtrim",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim",
                        "defaultStr": ""
                    },
                    "needle": {
                        "name": "needle",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to find an cut out if found",
                        "defaultStr": ""
                    },
                    "trimResult": {
                        "name": "trimResult",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to trim the trimed string",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Trim right a specified string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __rtrim } from '@coffeekraken/sugar/string'\n__rtrim('Hello World', 'ld') // Hello Wor"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "rtrim.ts",
                "extension": "ts",
                "relPath": "src/shared/string/rtrim.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.simply": {
                "id": "@coffeekraken.sugar.shared.string.simply",
                "name": "simply",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to simplyfy",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to simplify your string as you want:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- specialChars (true) {Boolean}: Specify if you want to get rid of the special chars like é, è, etc...\n- lowerCase (true) {Boolean}: Specify if you want your returned string to be lowercased\n- dashSpace (true) {Boolean}: Specify if you want to replace the \"_|-\" by a space\n- trim (true} {Boolean}: Specify if you want your string to be trimed or not\n"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string with accents, etc and convert it to a more simply\nversion like \"éàddö\" to \"eaddo\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __simplify } from '@coffeekraken/sugar/string';\n__simplify('éàddö'); // => eaddo"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "João Filipe Ventura Coelho",
                    "email": "joaoventura93@outlook.com"
                },
                "filename": "simplify.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplify.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.simplifySpecialChars": {
                "id": "@coffeekraken.sugar.shared.string.simplifySpecialChars",
                "name": "simplifySpecialChars",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and replace all the special chars like \"é\", \"à\", etc...\nwith their simple version like \"a\", \"e\", etc...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import { __simplifySpecialChars } from '@coffeekraken/sugar/string';\n__simplifySpecialChars('É'); // E"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "simplifySpecialChars.ts",
                "extension": "ts",
                "relPath": "src/shared/string/simplifySpecialChars.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.snakeCase": {
                "id": "@coffeekraken.sugar.shared.string.snakeCase",
                "name": "snakeCase",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to snakeCase",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "snakeCase a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __snakeCase } from '@coffeekraken/sugar/string';\n__snakeCase('hello world'); // => hello_world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "snakeCase.ts",
                "extension": "ts",
                "relPath": "src/shared/string/snakeCase.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.splitEvery": {
                "id": "@coffeekraken.sugar.shared.string.splitEvery",
                "name": "splitEvery",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "text": {
                        "name": "text",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The text to split",
                        "defaultStr": ""
                    },
                    "every": {
                        "name": "every",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "How many characters to split the text",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial<ISplitEverySettings"
                                }
                            ],
                            "raw": "Partial<ISplitEverySettings"
                        },
                        "description": "Some settings to configure your split process",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "setting": {
                    "splitWords": {
                        "name": "splitWords",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If you want to split the words or not...",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Split a string every n chars either by taking care of not spliting the words, or by simply spliting without any attention to that...",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitEvery } from '@coffeekraken/sugar/string';\n__splitEvery('Hello World', 2, {\n   splitWords: true\n}); // => ['He','ll','o ','Wo','rl','d']"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitEvery.ts",
                "extension": "ts",
                "relPath": "src/shared/string/splitEvery.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.sprintf": {
                "id": "@coffeekraken.sugar.shared.string.sprintf",
                "name": "sprintf",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "format": {
                        "name": "format",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The format of the string wanted as output",
                        "defaultStr": ""
                    },
                    "...replacements": {
                        "name": "...replacements",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The replacement tokens to apply to the string",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Javascript implementation of the sprintf php function.\n>For more infos, check [this github repository](https://github.com/alexei/sprintf.js)",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __sprintf } from '@coffeekraken/sugar/string'\n__sprintf('Hello %s', 'world') // Hello World\nconst user = { name: 'Dolly' }\n__sprintf('Hello %(name)s', user) // Hello Dolly"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "sprintf.ts",
                "extension": "ts",
                "relPath": "src/shared/string/sprintf.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripAnsi": {
                "id": "@coffeekraken.sugar.shared.string.stripAnsi",
                "name": "stripAnsi",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to strip ansi from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply strip all the ansi characters in a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripAnsi } from '@coffeekraken/sugar/string';\n__stripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007'); // => Click"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripAnsi.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripAnsi.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripDocblocks": {
                "id": "@coffeekraken.sugar.shared.string.stripDocblocks",
                "name": "stripDocblocks",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all docblocks",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripDocblocks } from '@coffeekraken/sugar/string';\n__stripDocblocks('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripDocblocks.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripDocblocks.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.stripSourcemap": {
                "id": "@coffeekraken.sugar.shared.string.stripSourcemap",
                "name": "stripSourcemap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "str": {
                        "name": "str",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function simply take a string and get rid of all sourcemap",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripSourcemap } from '@coffeekraken/sugar/string';\n__stripSourcemap('...');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripSourcemap.ts",
                "extension": "ts",
                "relPath": "src/shared/string/stripSourcemap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.toString": {
                "id": "@coffeekraken.sugar.shared.string.toString",
                "name": "toString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to convert to string",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your toString process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- beautify (true) {Boolean}: Specify if you want to beautify the output like objects, arrays, etc...\n- highlight (true) {Boolean}: Specify if you want to color highlight the output like objects, arrays, etc...\n- theme ({}) {Object}: The theme to use to colorize the output. See https://highlightjs.readthedocs.io/en/latest/css-classes-reference.html"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Convert passed value to a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toString } from '@coffeekraken/sugar/string'\n__toString({\n\tid:'hello'\n}) // '{\"id\":\"hello\"}'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toString.ts",
                "extension": "ts",
                "relPath": "src/shared/string/toString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.trimLines": {
                "id": "@coffeekraken.sugar.shared.string.trimLines",
                "name": "trimLines",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to trim lines of",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object settings. Here's the object properties:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- leftPadding (0) {Number}: Specify a left padding to set. 1 padding represent 1 space character\n- rightPadding (0) {Number}: Specify a right padding to set.\n- keepEmptyLines (true) {Boolean}: Specify if you want to keep empty lines or not\n"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and trim each lines",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __trimLines } from '@coffeekraken/sugar/string';\n__trimLines(`my cool lines\n     that have some lines to trim\nand some not...`);\n// my cool lines\n// that have some lines to trim\n// and some not..."
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "trimLines.ts",
                "extension": "ts",
                "relPath": "src/shared/string/trimLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.uncamelize": {
                "id": "@coffeekraken.sugar.shared.string.uncamelize",
                "name": "uncamelize",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to uncamelize",
                        "defaultStr": ""
                    },
                    "separator": {
                        "name": "separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The separator to use",
                        "default": "-",
                        "defaultStr": "'-'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Uncamelize a string",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __uncamelize } from '@coffeekraken/sugar/string'\n__uncamelize('helloWorldAndUniverse') // hello-world-and-universe"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uncamelize.ts",
                "extension": "ts",
                "relPath": "src/shared/string/uncamelize.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.unquote": {
                "id": "@coffeekraken.sugar.shared.string.unquote",
                "name": "unquote",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    },
                    "quotesToRemove": {
                        "name": "quotesToRemove",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "Array<String>"
                        },
                        "description": "The quotes to removes",
                        "default": [
                            "\"",
                            "'",
                            "”",
                            "`"
                        ],
                        "defaultStr": "['\"','\\'','”','`']"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Remove the quotes of a string\nTypes of quotes removed :\n- `\"`, `'`, `”`, '`'",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __unquote } from '@coffeekraken/sugar/string'\n__unquote(\"'Hello world'\") // \"Hello world\""
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "unquote.ts",
                "extension": "ts",
                "relPath": "src/shared/string/unquote.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.upperFirst": {
                "id": "@coffeekraken.sugar.shared.string.upperFirst",
                "name": "upperFirst",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Upper first",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __upperFirst } from '@coffeekraken/sugar/string'\n__upperFirst('hello world') // Hello world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "upperFirst.ts",
                "extension": "ts",
                "relPath": "src/shared/string/upperFirst.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.string.urlCompliant": {
                "id": "@coffeekraken.sugar.shared.string.urlCompliant",
                "name": "urlCompliant",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take a string and return a version of it that you can safely use\nin url for example. It replace spaces with '-' as well as all the special characters\nwith their simple version like \"à\" will be replaces by \"a\"",
                "namespace": "@coffeekraken.sugar.shared.string",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "import { __urlCompliant } from '@coffeekraken/sugar/string';\n__urlCompliant('Hello world'); // => hello-world"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "urlCompliant.ts",
                "extension": "ts",
                "relPath": "src/shared/string/urlCompliant.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.token.replaceTokens": {
                "id": "@coffeekraken.sugar.shared.token.replaceTokens",
                "name": "replaceTokens",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "string": {
                        "name": "string",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string you want to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function replace these tokens in the passed string:\n- `%moduleSystem` - Either \"esm\" or \"cjs\"",
                "namespace": "@coffeekraken.sugar.shared.token",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import replaceTokens from '@coffeekraken/sugar/shared/token/replaceTokens';\nreplaceTokens('Current module system is %moduleSystem');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replaceTokens.ts",
                "extension": "ts",
                "relPath": "src/shared/token/replaceTokens.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.type.parseTypeString": {
                "id": "@coffeekraken.sugar.shared.type.parseTypeString",
                "name": "parseTypeString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "typeString": {
                        "name": "typeString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The type string to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This method simply parse the passed typeString like \"string | number\", or \"string & path\", etc... and return\nan object defining this type string",
                "namespace": "@coffeekraken.sugar.shared.type",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseTypeString } from '@coffeekraken/sugar/type';\n__parseTypeString('string|number');\n//[{\n//   type: 'string',\n//   of: undefined,\n//}, {\n//   type: 'number',\n//   of: undefined,\n//}]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "parseTypeString.ts",
                "extension": "ts",
                "relPath": "src/shared/type/parseTypeString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.value.typeof": {
                "id": "@coffeekraken.sugar.js.value.typeof",
                "name": "typeof",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "value": {
                        "name": "value",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The value to get the type of",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of settings to configure your type get process:",
                        "default": {},
                        "defaultStr": "{}",
                        "content": "- of (false) {Boolean}: Specify if you want to get the \"child\" properties types for Objects, Arrays and custom classes\n- format ('String') {String}: Specify if you want back a String or an Object\n- customClass (true) {Boolean}: Specify if you want the custom classes to return theirs real names or simply Object"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function return the correct type of the passed value.\nIt support the recognition of arrays and return 'Array' as property type.\nYou can olso ask the function to gives you the \"of\" types of the passed value. This mean that if you\npass an Array like so \"[10,'Hello',true]\" and that you ask for \"of\" types, it will returns you\n\"Array<Integer|String|Boolean>\".\nAnother feature is to ask the result as an object like so:\n{\ntype: 'Array',\nof: ['Integer','String','Boolean']\n}\nYou can ask also the typeof function to returns you the actual class name if the passed value is an instance\nof an custom class.",
                "namespace": "@coffeekraken.sugar.js.value",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __typeof } from '@coffeekraken/sugar/type';\n__typeof(true); // => Boolean\n__typeof(10); // => Integer\n__typeof(12.4); // => Number\n__typeof(['Hello']); // => Array\n__typeof(['Hello',true], { of: true }); // => Array<String|Boolean>\n\nclass MyCoolClass {\n   // ...\n}\nconst myInstance = new MyCoolClass();\n__typeof(myInstance, { customClass: true }); // => MyCoolClass"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typeof.ts",
                "extension": "ts",
                "relPath": "src/shared/type/typeof.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.gravatarUrl": {
                "id": "@coffeekraken.sugar.shared.url.gravatarUrl",
                "name": "gravatarUrl",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "email": {
                        "name": "email",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The user email",
                        "defaultStr": ""
                    },
                    "size": {
                        "name": "size",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The wanted image size. From 1 to 2048",
                        "default": 200,
                        "defaultStr": "200"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return a gravatar url depending on the passed user email and size",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __gravatarUrl } from '@coffeekraken/sugar/url';\n__gravatarUrl('olivier.bossel@gmail.com'); // https://www.gravatar.com/avatar/b5df60055b6287bb7c90c0078ce20a5f"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "gravatarUrl.ts",
                "extension": "ts",
                "relPath": "src/shared/url/gravatarUrl.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.parseSchema": {
                "id": "@coffeekraken.sugar.shared.url.parseSchema",
                "name": "parseSchema",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "url": {
                        "name": "url",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The url to parse",
                        "defaultStr": ""
                    },
                    "schema": {
                        "name": "schema",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The schema with the one we will analyze the url",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function take two arguments. The first one is the url to parse and the second is a schema to scan the url with.\nThe schema describe the pathname of an url and tell's how to analyze it.\nHere's a little description with some example of schemas:\n- \"{param1}/{param2}/{param3}\": This schema describe that your Url must have 3 \"values\" named param1, param2 and param3\n- If my Url is \"something.com/hello/world/plop\", my schema is respected and I can have access to the values through the \"schema.params.param1\", \"schema.params.param2\", etc...\n- \"{hello:string}/{world:number}/{?idx:number}\": This schema describe that the Url can have 3 \"values\" but the last one is optional\n- If my Url is \"something.com/plop/3/1\", my schema is respected\n- If my Url is \"something.com/plop/2\", my schema is respected\n- If my Url is \"something.com/plop/hello/2\", my schema is not respected due to the fact that the param named \"world\" has to be a number",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseSchema } from '@coffeekraken/sugar/url';\n__parseSchema('https://github.com/myApp/master/3', '{project:string}/{?branch:string}/{?idx:number}');\n// {\n//   url: 'https://github.com/myApp/master/3',\n//   schema: '{project:string}/{?branch:string}/{?idx:number}',\n//   match: true,\n//   errors: null,\n//   params: {\n//     project: {\n//       optional: false,\n//       raw: '{project:string}',\n//       type: 'string',\n//       value: 'myApp'\n//     },\n//     branch: {\n//       optional: true,\n//       raw: '{?branch:string},\n//       type: 'string',\n//       value: 'master'\n//     },\n//     idx: {\n//       optional: true,\n//       raw: '{?idx:number}',\n//       type: 'number',\n//       value: 3\n//     }\n//   }\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "parseSchema.ts",
                "extension": "ts",
                "relPath": "src/shared/url/parseSchema.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.queryStringToObject": {
                "id": "@coffeekraken.sugar.shared.url.queryStringToObject",
                "name": "queryStringToObject",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "queryString": {
                        "name": "queryString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The query string to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Transform a query string into his object (key => pairs) representation",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __queryStringToObject } from '@coffeekraken/sugar/url'\n__queryStringToObject('?var1=value1&var2=value2') // { var1: 'value1', var2: 'value2' }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "queryStringToObject.ts",
                "extension": "ts",
                "relPath": "src/shared/url/queryStringToObject.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.url.urlFromString": {
                "id": "@coffeekraken.sugar.shared.url.urlFromString",
                "name": "urlFromString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    },
                    {
                        "name": "ts",
                        "description": ""
                    }
                ],
                "description": "Simple function that take a string as parameter and returns you a valid\nurl ready one",
                "namespace": "@coffeekraken.sugar.shared.url",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import urlFromString from '@coffeekraken/sugar/shared/url/urlFromString';\nurlFromString('Sir James Paul McCartney MBE is an English singer-songwriter');\n// sir-james-paul-mc-cartney-mbe-is-an-english-singer-songwriter"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "urlFromString.ts",
                "extension": "ts",
                "relPath": "src/shared/url/urlFromString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.version.parseSemverString": {
                "id": "@coffeekraken.sugar.shared.version.parseSemverString",
                "name": "parseSemverString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "semverString": {
                        "name": "semverString",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The semver string to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Parse a semver string and return a semver object using the nice [semver](https://github.com/npm/node-semver) parser.",
                "namespace": "@coffeekraken.sugar.shared.version",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseSemverString } from '@coffeekraken/sugar/version';\n__parseSemverString('2.3.1);\n// {\n//    options: {},\n//    loose: false,\n//    includePrerelease: false,\n//    raw: '2.3.1',\n//    major: 2,\n//    minor: 3,\n//    patch: 1,\n//    prerelease: [],\n//    build: [],\n//    version: '2.3.1',\n// }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseSemverString.ts",
                "extension": "ts",
                "relPath": "src/shared/version/parseSemverString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dev.color.getColorFor": {
                "id": "@coffeekraken.sugar.js.dev.color.getColorFor",
                "name": "getColorFor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "for": {
                        "name": "for",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "Pass something to take as reference to get the same color back every time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass anything like an object, a string, etc... and get the same\ncolor back everytime you pass the same value.\nThis if usefull for output logs, etc...",
                "namespace": "@coffeekraken.sugar.js.dev.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getColorFor from '@coffeekraken/sugar/dev';\ngetColorFor('something'); // => cyan\ngetColorFor({\n     else: true\n}); // => magenta\ngetColorFor('something') // => cyan"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getColorFor.ts",
                "extension": "ts",
                "relPath": "src/js/dev/color/getColorFor.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.animation.animatedInnerHtml": {
                "id": "@coffeekraken.sugar.js.dom.animation.animatedInnerHtml",
                "name": "animatedInnerHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "node": {
                        "name": "node",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The node to change to content of",
                        "defaultStr": ""
                    },
                    "content": {
                        "name": "content",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The new content of the node",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The settings to change the content like 'animIn', 'animOut', and more...",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Change the content of a Node with the possibility to animate the change using one of these animations:\n- fade\n- fadeUp\n- fadeDown\n- fadeLeft\n- fadeRight\nYou can also choose between 3 actions which are: replace, append and prepend",
                "namespace": "@coffeekraken.sugar.js.dom.animation",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __animatedInnerHtml } from '@coffeekraken/sugar/dom';\n __animatedInnerHtml(myCoolNode, 'Hello World', {\n   action: 'replace', // replace, append, prepend\n   animIn: 'fade', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animOut: 'fadeUp', // fade, fadeUp, fadeDown, fadeLeft, fadeRight\n   animInDuration: 600, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animOutDuration: 300, // in ms if number, otherwise a string like '1s', '1m', etc...\n   animInDistance: 25, // in px\n   animOutDistance: 25, // in px\n   animInEasing: 'ease-in-out',\n   animOutEasing: 'ease-in-out'\n}).then(() => {\n   // do something when the change has been made...\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "animatedInnerHtml.ts",
                "extension": "ts",
                "relPath": "src/js/dom/animation/animatedInnerHtml.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.addAnimationClass": {
                "id": "@coffeekraken.sugar.js.dom.class.addAnimationClass",
                "name": "addAnimationClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to take care of",
                        "defaultStr": ""
                    },
                    "cls": {
                        "name": "cls",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The class or classes (Array) to apply",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add a class that trigger an animation and remove it at the end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __addAnimationClass } from '@coffeekraken/sugar/dom';\n __addAnimationClass(myElm, 'my-cool-class').then($elm => {\n   // do something at the animation end...\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addAnimationClass.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/addAnimationClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.class.removeClassOnAnimationEnd": {
                "id": "@coffeekraken.sugar.js.dom.class.removeClassOnAnimationEnd",
                "name": "removeClassOnAnimationEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to take care of",
                        "defaultStr": ""
                    },
                    "cls": {
                        "name": "cls",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The class or classes (Array) to remove",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Remove some class on animation end",
                "namespace": "@coffeekraken.sugar.js.dom.class",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __removeClassOnAnimationEnd } from '@coffeekraken/sugar/dom';\n __removeClassOnAnimationEnd(myCoolElm, 'my-class');\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeClassOnAnimationEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/class/removeClassOnAnimationEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.adoptStyleInShadowRoot": {
                "id": "@coffeekraken.sugar.js.css.adoptStyleInShadowRoot",
                "name": "adoptStyleInShadowRoot",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$shadowRoot": {
                        "name": "$shadowRoot",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLShadowRootElement"
                                }
                            ],
                            "raw": "HTMLShadowRootElement"
                        },
                        "description": "The shadow root you want to adopt the $context styles",
                        "defaultStr": ""
                    },
                    "$context": {
                        "name": "$context",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The context from which you want to adopt the styles",
                        "default": {},
                        "defaultStr": "document"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to make a shadowRoot element adopt his host context styles",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __adoptStyleInShadowRoot } from '@coffeekraken/sugar/dom';\nconst myShadowRoot = $myElement.shadowRoot;\nawait __adoptStyleInShadowRoot(myShadowRoot);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com"
                },
                "filename": "adoptStyleInShadowRoot.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/adoptStyleInShadowRoot.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.css.expandPleasantCssClassnamesLive": {
                "id": "@coffeekraken.sugar.js.dom.css.expandPleasantCssClassnamesLive",
                "name": "expandPleasantCssClassnamesLive",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to convert \"colon\" classnames like \"s-something:cool @desktop something\"\nto comprehensive classnames for css like \"s-something s-something--cool something___desktop\", etc...\nThis function do this live when detecting a new node in the page, etc...\nThis function does not transform content of \"template\" and \"code\" tags.",
                "namespace": "@coffeekraken.sugar.js.dom.css",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandPleasantCssClassnamesLive } from '@coffeekraken/sugar/dom';\n__expandPleasantCssClassnamesLive();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandPleasantCssClassnamesLive.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/expandPleasantCssClassnamesLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.css.reloadStylesheets": {
                "id": "@coffeekraken.sugar.js.dom.css.reloadStylesheets",
                "name": "reloadStylesheets",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "null": {
                        "name": null,
                        "type": {
                            "types": [
                                {
                                    "type": ""
                                }
                            ],
                            "raw": ""
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function just loop on each \"link\" tags that point to some css files\nand reload them by adding a \"queryString\" with the timestamp in it\nto prevent caching",
                "namespace": "@coffeekraken.sugar.js.dom.css",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __reloeadStylesheets } from '@coffeekraken/sugar/dom';\n__reloadStylesheets();"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "reloadStylesheets.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/reloadStylesheets.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.stylesheetToString": {
                "id": "@coffeekraken.sugar.js.css.stylesheetToString",
                "name": "stylesheetToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "stalesheet": {
                        "name": "stalesheet",
                        "type": {
                            "types": [
                                {
                                    "type": "StyleSheet"
                                },
                                {
                                    "type": "StyleSheetList"
                                }
                            ],
                            "raw": "StyleSheet|StyleSheetList"
                        },
                        "description": "The StyleSheet instance to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take a StyleSheet instance and convert it to a simple string",
                "namespace": "@coffeekraken.sugar.js.css",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stylesheetToString } from '@coffeekraken/sugar/dom';\n__stylesheetToString(document.stylesheets); // => body { ... }"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stylesheetToString.ts",
                "extension": "ts",
                "relPath": "src/js/dom/css/stylesheetToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detection.detectInOutDirection": {
                "id": "@coffeekraken.sugar.js.dom.detection.detectInOutDirection",
                "name": "detectInOutDirection",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to listen for mouseover and mouseout on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect the mouse direction when entered on the passed element. The direction can be up, down, left or right and will be passed to the two callbacks available.",
                "namespace": "@coffeekraken.sugar.js.dom.detection",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __detectInOutDirection } from '@coffeekraken/sugar/dom';\nconst detector = __detectInOutDirection($myElm).on('in', (direction) => {\n   // direction can be \"up\", \"down\", \"left\" or \"right\"\n}).on('out', (direction) => {\n   // direction can be \"up\", \"down\", \"left\" or \"right\"\n});\n\n// cancel the detection process\ndetector.cancel();\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "detectInOutDirection.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/detectInOutDirection.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.inViewportStatusChange": {
                "id": "@coffeekraken.sugar.js.dom.detect.inViewportStatusChange",
                "name": "inViewportStatusChange",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IInViewportStatusChangeSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IInViewportStatusChangeSettings>"
                        },
                        "description": "Some settings to configure your detector",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An offset to detect the in/out earlier or later",
                        "default": "10px",
                        "defaultStr": "'10px'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor when the passed element enter or exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __inViewportStatusChange } from '@coffeekraken/sugar/dom';\n__inViewportStatusChange(myElm).on('enter', $elm => {\n   // do something...\n}).on('enter', $elm => {\n   // do something...\n}).on('leave', $elm => {\n   // do something...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inViewportStatusChange.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/inViewportStatusChange.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onDrag": {
                "id": "@coffeekraken.sugar.js.dom.detect.onDrag",
                "name": "onDrag",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to detect the swipe",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call on swipe. The callback function has as parameter an object that containthe swipe direction like left, right, up and down",
                        "defaultStr": ""
                    },
                    "threshold": {
                        "name": "threshold",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The swipe threshold",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "setting": {
                    "maxSpeed": {
                        "name": "maxSpeed",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The maximum speed",
                        "default": 0.01,
                        "defaultStr": "0.01"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect drag \"gesture\" with the mouse or touch",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __onDrag } from '@coffeekraken/sugar/dom'\n__onDrag($myElement, (drag) => {\n   // do something...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onDrag.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onDrag.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onScrollEnd": {
                "id": "@coffeekraken.sugar.js.dom.detect.onScrollEnd",
                "name": "onScrollEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to listen on",
                        "defaultStr": ""
                    },
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call when scroll end is detected",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IOnScrollEndSettings"
                                }
                            ],
                            "raw": "IOnScrollEndSettings"
                        },
                        "description": "Some settings like offset, etc...",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "An offset to detect earlier the end of the scroll",
                        "default": 20,
                        "defaultStr": "20"
                    },
                    "once": {
                        "name": "once",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "true if you want to detect the scroll end just once",
                        "default": false,
                        "defaultStr": "false"
                    },
                    "times": {
                        "name": "times",
                        "type": {
                            "types": [
                                {
                                    "type": "number"
                                }
                            ],
                            "raw": "number"
                        },
                        "description": "Specify a number of times to detect the scroll end",
                        "default": -1,
                        "defaultStr": "-1"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply listen for scroll on the passed element and call the passed callback\nwhen reaching the end of it.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __onScrollEnd } from '@coffeekraken/sugar/dom';\n__onScrollEnd($elm, () => {\n     // do something\n}, {\n   offset: 50\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onScrollEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onScrollEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.onSwipe": {
                "id": "@coffeekraken.sugar.js.dom.detect.onSwipe",
                "name": "onSwipe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to detect the swipe",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call on swipe. The callback function has as parameter an object that containthe swipe direction like left, right, up and down",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IOnSwipeSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IOnSwipeSettings>"
                        },
                        "description": "Some settings to configure your swipe detection",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "threshold": {
                        "name": "threshold",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The swipe threshold",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect swipes gestures on touch devices.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __onSwipe } from '@coffeekraken/sugar/dom'\n__onSwipe(myCoolElm, (swipe) => {\n\t// check the swipe direction\n\tif (swipe.left) {\n\t\t// do something...\n\t}\n\t// support : left, right, up, down\n\t// etc...\n}, {\n\tthreshold : 50\n});"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "onSwipe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/onSwipe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.when": {
                "id": "@coffeekraken.sugar.js.dom.detect.when",
                "name": "when",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to listen on",
                        "defaultStr": ""
                    },
                    "trigger": {
                        "name": "trigger",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The trigger(s) to listen on",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IwhenSettings"
                                }
                            ],
                            "raw": "IwhenSettings"
                        },
                        "description": "Some settings like offset, etc...",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "whenInViewport": {
                        "name": "whenInViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenInViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenInViewportSettings>"
                        },
                        "description": "Some settings for the whenInViewport function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenNearViewport": {
                        "name": "whenNearViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenNearViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenNearViewportSettings>"
                        },
                        "description": "Some settings for the whenNearViewport function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenEntersViewport": {
                        "name": "whenEntersViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenEntersViewportSettubgs"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenEntersViewportSettubgs>"
                        },
                        "description": "Some settings for the whenEntersViewport function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenOutOfViewport": {
                        "name": "whenOutOfViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenOutOfViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenOutOfViewportSettings>"
                        },
                        "description": "Some settings for the whenOutOfViewport function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenInteract": {
                        "name": "whenInteract",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenInteractSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenInteractSettings>"
                        },
                        "description": "Some settings for the whenInteract function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenVisible": {
                        "name": "whenVisible",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenVisibleSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenVisibleSettings>"
                        },
                        "description": "Some settings for the whenVisible function",
                        "default": {},
                        "defaultStr": "{}"
                    },
                    "whenStylesheetsReady": {
                        "name": "whenStylesheetsReady",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenStyleSheetsReadySettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenStyleSheetsReadySettings>"
                        },
                        "description": "Some settings for the whenStylesheetsReady function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function listen for passed `trigger(s)` on the passed `HTMLElement` and resolve the promise once one of them has reached his state.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __when } from '@coffeekraken/sugar/dom';\n__when($elm, 'inViewport', () => {\n     // do something\n}, {\n   whenInViewport: {\n      offset: 50\n   }\n});"
                    }
                ],
                "async": "true",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "when.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/when.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenAnimationEnd": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenAnimationEnd",
                "name": "whenAnimationEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to listen on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when animation ends",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenAnimationEnd } from '@coffeekraken/sugar/dom'\nawait __whenAnimationEnd(myCoolElm);\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenAnimationEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenAnimationEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenAttribute": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenAttribute",
                "name": "whenAttribute",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to monitor the property",
                        "defaultStr": ""
                    },
                    "attribute": {
                        "name": "attribute",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The attribute to monitor",
                        "defaultStr": ""
                    },
                    "checkFn": {
                        "name": "checkFn",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional function to check the attribute. The promise is resolved when this function return true",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Resolve a promise when the wanted attribute on the passed HTMLElement exist or pass the check function provided",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenAttribute } from '@coffeekraken/sugar/dom'\n__whenAttribute(myCoolHTMLElement, 'value').then((value) => {\n\t\t// the value attribute exist on the element\n});\n// with a checkFn\n__whenAttribute(myCoolHTMLElement, 'value', (newVal, oldVal) => {\n\t\t// make sure the value is a number\n\t\treturn typeof(newVal) === 'number';\n}).then((value) => {\n\t\t// do something with your number value...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenAttribute.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenAttribute.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenBackgroundImageLoaded": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenBackgroundImageLoaded",
                "name": "whenBackgroundImageLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to detect the background image load",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback function if you prefer",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when a background image has been loaded on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenBackgroundImageLoaded } from '@coffeekraken/sugar/dom'\n__whenBackgroundImageLoaded($myElm).then(() => {\n  // do something when loaded\n})\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenBackgroundImageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenBackgroundImageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenDomReady": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenDomReady",
                "name": "whenDomReady",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait that the dom is ready before resolving the promise",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenDomReady } from '@coffeekraken/sugar/dom'\n// using promise\n__whenDomReady().then(() => {\n\t\t// do something\n});"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenDomReady.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenDomReady.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenEntersViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenEntersViewport",
                "name": "whenEntersViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenEntersViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenEntersViewportSettings>"
                        },
                        "description": "Some settings to tweak the detection behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An offset to detect the element entering in viewport earlier or later",
                        "default": "0px 0px -25% 0px",
                        "defaultStr": "'0px 0px -25% 0px'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is enters in the viewport (1/3vh in the viewport), or in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenEntersViewport } from '@coffeekraken/sugar/dom'\n__whenEntersViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenEntersViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenEntersViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenImageLoaded": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenImageLoaded",
                "name": "whenImageLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$img": {
                        "name": "$img",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLImageElement"
                                }
                            ],
                            "raw": "HTMLImageElement"
                        },
                        "description": "The image to check the loading state",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional callback to call",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed image is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenImageLoaded } from '@coffeekraken/sugar/dom'\n __whenImageLoaded(myCoolHTMLImageElement).then(($img) => {\n\t\t// do something when the image is loaded\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenImageLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenImageLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenImagesLoaded": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenImagesLoaded",
                "name": "whenImagesLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$imgs": {
                        "name": "$imgs",
                        "type": {
                            "types": [
                                {
                                    "type": "Array",
                                    "of": [
                                        "HTMLImageElement"
                                    ]
                                }
                            ],
                            "raw": "Array<HTMLImageElement>"
                        },
                        "description": "An array (or nodeList) of HTMLImageElement to detect the load",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback function if you prefer",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when some images are loaded. This function take advantage of the SPromise class\nand trigger an event called \"img.loaded\" that will be triggered on each loaded images and another called \"loaded\" once all the images are loaded.\nSee in the example bellow.",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenImagesLoaded } from '@coffeekraken/sugar/dom'\n__whenImagesLoaded([\n\t$img1, $img2, $img3\n]).on('loaded', $img => {\n   // do something with the loaded image\n}).then(() => {\n  // do something here\n})\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenImagesLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenImagesLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInteract": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenInteract",
                "name": "whenInteract",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The html element you want to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IInteractionSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IInteractionSettings>"
                        },
                        "description": "Some settings to configure your interaction detection",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "pointerover": {
                        "name": "pointerover",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the pointerover or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "pointerout": {
                        "name": "pointerout",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the pointerout or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "pointerdown": {
                        "name": "pointerdown",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the pointerdown or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "touchstart": {
                        "name": "touchstart",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the touchstart or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "touchend": {
                        "name": "touchend",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the touchend or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "focus": {
                        "name": "focus",
                        "type": {
                            "types": [
                                {
                                    "type": "boolean"
                                }
                            ],
                            "raw": "boolean"
                        },
                        "description": "Specify if you want to detect the focus or not",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait that an interaction is made with the passed element like \"focus\", \"focusIn\", \"pointerover\", etc...",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenInteract } from '@coffeekraken/sugar/js/dom/detect/whenInteract'\nawait __whenInteract(myCoolElement);\n @since           2.0.0"
                    }
                ],
                "interface": {
                    "name": "WhenInteractSettingsInterface",
                    "description": "",
                    "definition": {
                        "pointerover": {
                            "description": "Specify if the pointerover event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "pointerout": {
                            "description": "Specify if the pointerout event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "click": {
                            "description": "Specify if the click event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "touchstart": {
                            "description": "Specify if the touchstart event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "touchend": {
                            "description": "Specify if the touchend event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "focus": {
                            "description": "Specify if the focus event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        }
                    }
                },
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenInteract.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInteract.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenInViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenInViewport",
                "name": "whenInViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenInViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenInViewportSettings>"
                        },
                        "description": "Some settings to tweak the detection behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An offset to detect sooner or later the element entering in the viewport",
                        "default": "10px",
                        "defaultStr": "'10px'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenInViewport } from '@coffeekraken/sugar/dom'\nconst promise = __whenInViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});\n// when you want to stop listening\npromise.cancel();\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenInViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenInViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenLinkLoaded": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenLinkLoaded",
                "name": "whenLinkLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "link": {
                        "name": "link",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLLinkElement"
                                }
                            ],
                            "raw": "HTMLLinkElement"
                        },
                        "description": "The link tag to check the loading state",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional callback to call",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until the passed HTMLLinkElement is fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenLinkLoaded } from '@coffeekraken/sugar/dom'\n__whenLinkLoaded(myCoolHTMLLinlElement).then((link) => {\n\t\t// do something when the link is loaded\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenLinkLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenLinkLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenLod": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenLod",
                "name": "whenLod",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "number": {
                        "name": "number",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The level of details to wait on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until the requested lod (level of details) has been reached.\nSee @coffeekraken/s-theme package for more infos",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenLod } from '@coffeekraken/sugar/dom'\n__whenLod(3).then((link) => {\n\t\t// do something when the lod is reached\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenLod.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenLod.ts",
                "children": {
                    "whenlod": {
                        "id": "sfb3f05a565e4112e652415ad335dee4e5f5546b78b301c2d6d5203276c69a5cf",
                        "name": "whenLod",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "param": {
                            "level": {
                                "name": "level",
                                "type": {
                                    "types": [
                                        {
                                            "type": "Number"
                                        }
                                    ],
                                    "raw": "Number"
                                },
                                "description": "The level you want to wait on",
                                "defaultStr": ""
                            }
                        },
                        "description": "This method allows you to have a promise back that will be resolved when the actuel theme lod meet the requested one",
                        "since": "2.0.0",
                        "author": {
                            "name": "Olivier Bossel",
                            "email": "olivier.bossel@gmail.com",
                            "url": "https://coffeekraken.io"
                        }
                    }
                }
            },
            "@coffeekraken.sugar.js.dom.detect.whenNearViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenNearViewport",
                "name": "whenNearViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenNearViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenNearViewportSettings>"
                        },
                        "description": "Some settings to tweak the detection behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "Some offset",
                        "default": "`${window.innerHeight}px ${window.innerWidth}px`",
                        "defaultStr": "`${window.innerHeight}px ${window.innerWidth}px`"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is near (100vh before or after) the viewport, or in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenNearViewport } from '@coffeekraken/sugar/dom'\n__whenNearViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has entered the viewport...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenNearViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenNearViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenOutOfViewport": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenOutOfViewport",
                "name": "whenOutOfViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IWhenOutOfViewportSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IWhenOutOfViewportSettings>"
                        },
                        "description": "Some settings to tweak the detection behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An offset to detect sooner or later the element exits the viewport",
                        "default": "10px",
                        "defaultStr": "10px"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it exit the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenOutOfViewport } from '@coffeekraken/sugar/dom'\n__whenOutOfViewport(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that has exit the viewport...\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenOutOfViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenOutOfViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenRemoved": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenRemoved",
                "name": "whenRemoved",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to monitor",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Resolve a promise when the passed node has been removed from the dom",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenRemoved } from '@coffeekraken/sugar/dom'\n__whenRemoved(myCoolHTMLElement).then((value) => {\n\t\t// the element has been removed\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenRemoved.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenRemoved.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenScriptLoaded": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenScriptLoaded",
                "name": "whenScriptLoaded",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$script": {
                        "name": "$script",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLScriptElement"
                                }
                            ],
                            "raw": "HTMLScriptElement"
                        },
                        "description": "The script element to detect the loading state",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback if you prefer",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Detect when a script has been fully loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenScriptLoaded } from '@coffeekraken/sugar/dom'\n__whenScriptLoaded($script).then(($script) => {\n  // do something here\n})\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenScriptLoaded.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenScriptLoaded.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenStylesheetsReady": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenStylesheetsReady",
                "name": "whenStylesheetsReady",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "links": {
                        "name": "links",
                        "type": {
                            "types": [
                                {
                                    "type": "Array}",
                                    "of": [
                                        "HTMLLinkElement"
                                    ]
                                }
                            ],
                            "raw": "Array}<HTMLLinkElement>"
                        },
                        "description": "The HTMLLinkElement tags to process. If not passed, take the local stylesheets links",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional callback function to call when all the links are loaded",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wait until all the HTMLLinkElement's are properly loaded",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenStylesheetsReady } from '@coffeekraken/sugar/dom'\nawait __whenStylesheetsReady([\n\t\tmyHTMLLinkElement1,\n\t\tmyHTMLLinkElement2\n]);\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenStylesheetsReady.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenStylesheetsReady.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenTransitionEnd": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenTransitionEnd",
                "name": "whenTransitionEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional callback to call when the element transition has ended",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when his transition has ended",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenTransitionEnd } from '@coffeekraken/sugar/dom'\nawait __whenTransitionEnd(myCoolHTMLElement);\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenTransitionEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenTransitionEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.whenVisible": {
                "id": "@coffeekraken.sugar.js.dom.detect.whenVisible",
                "name": "whenVisible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An optional callback to call when the element is visible",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Monitor an HTMLElement to be notified when it is visible",
                "namespace": "@coffeekraken.sugar.js.dom.detect",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __whenVisible } from '@coffeekraken/sugar/js/dom/whenVisible'\n__whenVisible(myCoolHTMLElement).then((elm) => {\n\t\t// do something with your element that is now visible\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "whenVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/whenVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.distanceFromElementTopToViewportBottom": {
                "id": "@coffeekraken.sugar.js.dom.distance.distanceFromElementTopToViewportBottom",
                "name": "distanceFromElementTopToViewportBottom",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element you want to get the distance from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport bottom in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distanceFromElementTopToViewportBottom } from '@coffeekraken/sugar/dom';\n__distanceFromElementTopToViewportBottom(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distanceFromElementTopToViewportBottom.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/distanceFromElementTopToViewportBottom.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.distanceFromElementTopToViewportTop": {
                "id": "@coffeekraken.sugar.js.dom.distance.distanceFromElementTopToViewportTop",
                "name": "distanceFromElementTopToViewportTop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element you want to get the distance from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take an element as parameter and returns you to distance it has\nfrom the element top to the viewport top in pixels",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __distanceFromElementTopToViewportTop } from '@coffeekraken/sugar/dom';\n__distanceFromElementTopToViewportTop(myElement); // => 23"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "distanceFromElementTopToViewportTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/distanceFromElementTopToViewportTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.scrollLeft": {
                "id": "@coffeekraken.sugar.js.dom.distance.scrollLeft",
                "name": "scrollLeft",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the amount of scroll left",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __scrollLeft } from '@coffeekraken/sugar/dom'\n__scrollLeft() // 40\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivier.bossel@gmail.com"
                },
                "filename": "scrollLeft.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/scrollLeft.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.distance.scrollTop": {
                "id": "@coffeekraken.sugar.js.dom.distance.scrollTop",
                "name": "scrollTop",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the amount of scroll top that the user as made in the page",
                "namespace": "@coffeekraken.sugar.js.dom.distance",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __scrollTop } from '@coffeekraken/sugar/dom';\n__scrollTop();\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollTop.ts",
                "extension": "ts",
                "relPath": "src/js/dom/distance/scrollTop.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.element.elementAreaStats": {
                "id": "@coffeekraken.sugar.js.dom.element.elementAreaStats",
                "name": "elementAreaStats",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element you want to enhance",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "relativeTo": {
                        "name": "relativeTo",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                },
                                {
                                    "type": "string",
                                    "value": "visible"
                                }
                            ],
                            "raw": "HTMLElement|'visible'"
                        },
                        "description": "The element to calculate the visible surface relative to",
                        "default": "visible",
                        "defaultStr": "'visible'"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function returns you an object with informations about the visible surface of the element like the `percentage`, `percentageX`, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.element",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __elementAreaStats } from '@coffeekraken/sugar/dom';\nconst $myElement = document.querySelector('#my-element');\nconst data =  __elementAreaStats($myElement);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "elementAreaStats.ts",
                "extension": "ts",
                "relPath": "src/js/dom/element/elementAreaStats.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListener": {
                "id": "@coffeekraken.sugar.js.dom.event.addEventListener",
                "name": "addEventListener",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to add the event listener",
                        "defaultStr": ""
                    },
                    "eventNames": {
                        "name": "eventNames",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The event names to listen to. Can be a simple string like \"click\", multiple events like \"click,focus\", or an array of events like ['click','hover']",
                        "defaultStr": ""
                    },
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The callback function to call on event. The passed event",
                        "defaultStr": ""
                    },
                    "useCapture": {
                        "name": "useCapture",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "A Boolean value that specifies whether the event should be executed in the capturing or in the bubbling phase",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add an event listener on an element and return the function to remove the event listener",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __addEventListener } from '@coffeekraken/sugar/dom'\nconst listener = __addEventListener($myCoolElm, 'click', (event) => {\n   // event.type; // => click\n});\n// remove the event listener\nlistener.cancel();\n\n// listen for more than one event at a time\n__addEventListener($myCoolElm, 'click,mouseover,mouseout', (event) => {\n   // do something depending on the event.type property\n}).on('mouseover', (event) => {\n   // do something when the event is the mouseover one\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addEventListener.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListener.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.addEventListenerOnce": {
                "id": "@coffeekraken.sugar.js.dom.event.addEventListenerOnce",
                "name": "addEventListenerOnce",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to add the event listener on",
                        "defaultStr": ""
                    },
                    "event": {
                        "name": "event",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The event to listen for",
                        "defaultStr": ""
                    },
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The callback function to call on event",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "useCapture": {
                        "name": "useCapture",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "A Boolean value that specifies whether the event should be executed in the capturing or in the bubbling phase",
                        "default": false,
                        "defaultStr": "false"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Add an event listener that will be trigerred only once",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __addEventListenerOnce } from '@coffeekraken/sugar/dom'\n __addEventListenerOnce(myElm, 'click', (e) => {\n    // do something on click\n});\n __addEventListenerOnce(myElm, 'click').on('click', (e) => {\n\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "addEventListenerOnce.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/addEventListenerOnce.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.event.dispatchEvent": {
                "id": "@coffeekraken.sugar.js.dom.event.dispatchEvent",
                "name": "dispatchEvent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$target": {
                        "name": "$target",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to dispatch the event from",
                        "defaultStr": ""
                    },
                    "name": {
                        "name": "name",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The event name to dispatch",
                        "defaultStr": ""
                    },
                    "data": {
                        "name": "data",
                        "type": {
                            "types": [
                                {
                                    "type": "Mixed"
                                }
                            ],
                            "raw": "Mixed"
                        },
                        "description": "The data to attache to the event",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Helper to quickly display an event with some optional data attached to it",
                "namespace": "@coffeekraken.sugar.js.dom.event",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __dispatchEvent } from '@coffeekraken/sugar/js/dom/dispatchEvent'\n __dispatchEvent(myCoolHTMLElement, 'myCoolEventName', {\n\t\tvar1 : 'value1'\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dispatchEvent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/event/dispatchEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.form.isFileAccepted": {
                "id": "@coffeekraken.sugar.js.dom.form.isFileAccepted",
                "name": "isFileAccepted",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "file": {
                        "name": "file",
                        "type": {
                            "types": [
                                {
                                    "type": "File"
                                }
                            ],
                            "raw": "File"
                        },
                        "description": "The file to check",
                        "defaultStr": ""
                    },
                    "accept": {
                        "name": "accept",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String|String[]"
                        },
                        "description": "The \"accept\" string to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed file is accepted relative to the passed \"accept\" string.\nThe \"accept\" string does not supports the extension based accept check simply cause it will be\ntoo big to maintain mimeType to extension map and will take too much weight for no reason.",
                "namespace": "@coffeekraken.sugar.js.dom.form",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFileAccepted } from '@coffeekraken/sugar/dom'\n__isFileAccepted(myFile, 'image/png');\n__isFileAccepted(myFile, 'image/png, application/json');\n__isFileAccepted(myFile, ['image/','text/html'])\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFileAccepted.ts",
                "extension": "ts",
                "relPath": "src/js/dom/form/isFileAccepted.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.form.resetFileInput": {
                "id": "@coffeekraken.sugar.js.dom.form.resetFileInput",
                "name": "resetFileInput",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$input": {
                        "name": "$input",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLInputElement"
                                }
                            ],
                            "raw": "HTMLInputElement"
                        },
                        "description": "The input field to reset",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Correctly reset an input[type=\"file\"]",
                "namespace": "@coffeekraken.sugar.js.dom.form",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __resetFileInput } from '@coffeekraken/sugar/dom'\n __resetFileInput($myInpuit);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "resetFileInput.ts",
                "extension": "ts",
                "relPath": "src/js/dom/form/resetFileInput.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.html.nodeToString": {
                "id": "@coffeekraken.sugar.js.dom.html.nodeToString",
                "name": "nodeToString",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "node": {
                        "name": "node",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to convert to string",
                        "defaultStr": ""
                    },
                    "deep": {
                        "name": "deep",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Include or not his children",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the string version of a dom node or the dom node and his children",
                "namespace": "@coffeekraken.sugar.js.dom.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __nodeToString } from '@coffeekraken/sugar/dom'\nconst myDomNode = document.querySelector('.my-dom-node')\n __nodeToString(myDomNode, false) // <div class=\"my-dom-node\"></div>\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "nodeToString.ts",
                "extension": "ts",
                "relPath": "src/js/dom/html/nodeToString.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.html.stringToHtml": {
                "id": "@coffeekraken.sugar.js.dom.html.stringToHtml",
                "name": "stringToHtml",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The string to convert to dom nodes",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the html (dom) version of a string",
                "namespace": "@coffeekraken.sugar.js.dom.html",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stringToNode } from '@coffeekraken/sugar/dom'\nconst myString = '<p>Hello World</p>'\n__stringToNode(myString) // <p>Hello World</p>\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stringToNode.ts",
                "extension": "ts",
                "relPath": "src/js/dom/html/stringToNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.inject.injectIframeContent": {
                "id": "@coffeekraken.sugar.js.dom.inject.injectIframeContent",
                "name": "injectIframeContent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$iframe": {
                        "name": "$iframe",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLIFrameElement"
                                }
                            ],
                            "raw": "HTMLIFrameElement"
                        },
                        "description": "The iframe element to inject content into",
                        "defaultStr": ""
                    },
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The html to inject",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Inject some content into an iframe",
                "namespace": "@coffeekraken.sugar.js.dom.inject",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __injectIframeContent } from '@coffeekraken/sugar/dom'\n __injectIframeContent($myIframe, '<html>...</html>');\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "injectIframeContent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/inject/injectIframeContent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.inject.injectScript": {
                "id": "@coffeekraken.sugar.js.dom.inject.injectScript",
                "name": "injectScript",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "src": {
                        "name": "src",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The script src to load",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Append a script tag either to the head or the body",
                "namespace": "@coffeekraken.sugar.js.dom.inject",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __injectScript } from '@coffeekraken/sugar/dom'\n __injectScript('dist/js/app.js')\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "injectScript.ts",
                "extension": "ts",
                "relPath": "src/js/dom/inject/injectScript.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.inject.injectStyle": {
                "id": "@coffeekraken.sugar.js.dom.inject.injectStyle",
                "name": "injectStyle",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "style": {
                        "name": "style",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The style to inject in DOM",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Partial",
                                    "of": [
                                        "IInjectStyleSettings"
                                    ]
                                }
                            ],
                            "raw": "Partial<IInjectStyleSettings>"
                        },
                        "description": "Some settings to configure your injection",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "setting": {
                    "id": {
                        "name": "id",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "An id for the injected style tag",
                        "defaultStr": ""
                    },
                    "rootNode": {
                        "name": "rootNode",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "A node in which to inject the style",
                        "defaultStr": "undefined"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Inject a passed style string in the DOM",
                "namespace": "@coffeekraken.sugar.js.dom.inject",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __injectStyle } from '@coffeekraken/sugar/dom';\n __injectStyle('a { color: red; }');"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "injectStyle.ts",
                "extension": "ts",
                "relPath": "src/js/dom/inject/injectStyle.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.inject.injectStylesheet": {
                "id": "@coffeekraken.sugar.js.dom.inject.injectStylesheet",
                "name": "injectStylesheet",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "href": {
                        "name": "href",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "THe url to the stylesheet",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Append a stylesheet link to the page head",
                "namespace": "@coffeekraken.sugar.js.dom.inject",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __injectStylesheet } from '@coffeekraken/sugar/dom'\n__injectStylesheet('/dist/css/style.css')\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "injectStylesheet.ts",
                "extension": "ts",
                "relPath": "src/js/dom/inject/injectStylesheet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.input.cursorToEnd": {
                "id": "@coffeekraken.sugar.js.dom.input.cursorToEnd",
                "name": "cursorToEnd",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$input": {
                        "name": "$input",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLFormElement"
                                }
                            ],
                            "raw": "HTMLFormElement"
                        },
                        "description": "The input to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Place the cursor to the end of the input",
                "namespace": "@coffeekraken.sugar.js.dom.input",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __cursorToEnd } from '@coffeekraken/sugar/dom';\n__cursorToEnd($input);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierboss$input.com"
                },
                "filename": "cursorToEnd.ts",
                "extension": "ts",
                "relPath": "src/js/dom/input/cursorToEnd.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isFocus": {
                "id": "@coffeekraken.sugar.js.dom.is.isFocus",
                "name": "isFocus",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is focus the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFocus } from '@coffeekraken/sugar/dom'\nconst $myElm = document.querySelector('.my-elm')\nif (__isFocus($myElm)) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFocus.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isFocus.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isFocusWithin": {
                "id": "@coffeekraken.sugar.js.dom.is.isFocusWithin",
                "name": "isFocusWithin",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is isFocusWithin the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isFocusWithin } from '@coffeekraken/sugar/dom'\nconst $myElm = document.querySelector('.my-elm')\nif (__isFocusWithin($myElm)) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isFocusWithin.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isFocusWithin.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isHover": {
                "id": "@coffeekraken.sugar.js.dom.is.isHover",
                "name": "isHover",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the mouse is isHover the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isHover } from '@coffeekraken/sugar/dom'\nconst $myElm = document.querySelector('.my-elm')\nif (__isHover($myElm)) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isHover.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isHover.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isInIframe": {
                "id": "@coffeekraken.sugar.js.dom.is.isInIframe",
                "name": "isInIframe",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the page is loaded inside an iframe",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isInIframe } from '@coffeekraken/sugar/dom'\nif (__isInIframe()) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInIframe.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isInIframe.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isInViewport": {
                "id": "@coffeekraken.sugar.js.dom.is.isInViewport",
                "name": "isInViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to insert",
                        "defaultStr": ""
                    },
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of top, right, bottom and left offset used to detect the status or an object with top, right, bottom and left offsets",
                        "default": 50,
                        "defaultStr": "50"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is in the viewport or not",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isInViewport } from '@coffeekraken/sugar/dom'\nif (__isInViewport(myCoolHTMLElement) {\n\t\t// i'm in the viewport\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isInViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isInViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isScrollable": {
                "id": "@coffeekraken.sugar.js.dom.is.isScrollable",
                "name": "isScrollable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed element is scrollable or not",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isScrollable } from '@coffeekraken/sugar/dom'\nif (__isScrollable($myElement)) {\n  // do something\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isScrollable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isScrollable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isUserScrolling": {
                "id": "@coffeekraken.sugar.js.dom.is.isUserScrolling",
                "name": "isUserScrolling",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "default": {},
                        "defaultStr": "document"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check the user is scrolling a particular element",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isUserScrolling } from '@coffeekraken/sugar/dom'\nif (__isUserScrolling(myCoolHTMLElement) {\n\t\t// i'm in the viewport\n}\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isUserScrolling.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isUserScrolling.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.is.isVisible": {
                "id": "@coffeekraken.sugar.js.dom.is.isVisible",
                "name": "isVisible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Check if the passed HTMLElement is visible or not.\nVisible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none and `return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);`",
                "namespace": "@coffeekraken.sugar.js.dom.is",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __isVisible } from '@coffeekraken/sugar/dom'\nif (isVisible(myCoolHTMLElement) {\n\t\t// i'm visible\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "isVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/is/isVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.emptyNode": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.emptyNode",
                "name": "emptyNode",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "node": {
                        "name": "node",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The node to empty",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Empty a node by removing each childs one after the other",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "emptyNode.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/emptyNode.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.insertAfter": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.insertAfter",
                "name": "insertAfter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to insert",
                        "defaultStr": ""
                    },
                    "refElm": {
                        "name": "refElm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element after which to insert the passed element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Insert an HTMLElement after another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __insertAfter } from '@coffeekraken/sugar/dom'\n__insertAfter(myElementToInsert, theReferenceElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "insertAfter.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/insertAfter.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.prependChild": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.prependChild",
                "name": "prependChild",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to prepend",
                        "defaultStr": ""
                    },
                    "refElm": {
                        "name": "refElm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element in which to prepend the new element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Prepend an HTMLElement into another HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __prependChild } from '@coffeekraken/sugar/dom'\n__prependChild(myElementToInsert, theReferenceElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "prependChild.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/prependChild.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.stripTags": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.stripTags",
                "name": "stripTags",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "html": {
                        "name": "html",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "the html to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Strip the tags of the passed text",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __stripTags } from '@coffeekraken/sugar/dom'\n__stripTags('<h1>Hello World</h1>') // => Hello World\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "stripTags.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/stripTags.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.toDomNodes": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.toDomNodes",
                "name": "toDomNodes",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "source": {
                        "name": "source",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "String|HTMLElement"
                        },
                        "description": "The source of the template (html string, selector, node element)",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return a usable nodeTree from a variable source like selector, an html string, an html template tag or a node that will be cloned.",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "betas",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toDomNodes } from '@coffeekraken/sugar/dom';\n__toDomNodes('<span>Hello World</span>');\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toDomNodes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/toDomNodes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrap": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.wrap",
                "name": "wrap",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$toWrap": {
                        "name": "$toWrap",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to wrap",
                        "defaultStr": ""
                    },
                    "$wrapper": {
                        "name": "$wrapper",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The wrapper element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wrap an HTMLElement inside another `$wrapper` one",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __wrap } from '@coffeekraken/sugar/dom'\nconst $wrapper = document.createElement('div')\n// assuming:\n// <div>\n//   <span class=\"wrap\">Hello World</span>\n// </div>\n__wrap(document.querySelector('.wrap'), $wrapper)\n// output:\n// <div>\n//   <div>\n//     <span class=\"wrap\">Hello World</span>\n//   </div>\n// </div>\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "wrap.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.manipulate.wrapInner": {
                "id": "@coffeekraken.sugar.js.dom.manipulate.wrapInner",
                "name": "wrapInner",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$parent": {
                        "name": "$parent",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The parent to wrap inner",
                        "defaultStr": ""
                    },
                    "$wrapper": {
                        "name": "$wrapper",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The wrapper element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Wrap the content of the passed `$parent` inside a the passed HTMLElement `$wrapper`",
                "namespace": "@coffeekraken.sugar.js.dom.manipulate",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __wrapInner } from '@coffeekraken/sugar/dom'\nconst $myWrapper = document.createElement('div')\n// assuming\n// <div class=\"container\">\n//   <span>Hello World</span>\n// </div>\n__wrapInner(document.querySelector('.container'), $myWrapper)\n// return\n// <div class=\"container\">\n//   <div>\n//     <span>Hello World</span>\n//   </div>\n// </div>\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://olivierbossel@gmail.com"
                },
                "filename": "wrapInner.ts",
                "extension": "ts",
                "relPath": "src/js/dom/manipulate/wrapInner.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.observe.observeAttributes": {
                "id": "@coffeekraken.sugar.js.dom.observe.observeAttributes",
                "name": "observeAttributes",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "target": {
                        "name": "target",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to observe",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "MutationObserverInit"
                                }
                            ],
                            "raw": "MutationObserverInit"
                        },
                        "description": "The mutation observer settings",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Observe attributes on an HTMLElement and get mutations through the SPromise instance",
                "namespace": "@coffeekraken.sugar.js.dom.observe",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __observeAttributes } from '@coffeekraken/sugar/dom'\nconst observer =  __observeAttributes(myCoolHTMLElement).then(mutation => {\n\t\t// do something with the mutation\n});\n/ the observer\nobserve();"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "observeAttributes.ts",
                "extension": "ts",
                "relPath": "src/js/dom/observe/observeAttributes.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offsetFromParent": {
                "id": "@coffeekraken.sugar.js.dom.offset.offsetFromParent",
                "name": "offsetFromParent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the offset from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from his parent top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __offsetFromParent } from '@coffeekraken/sugar/dom'\nconst offsetFromParentElm = __offsetFromParent(myCoolElement);\n// output : { top : 200, left : 300 }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "offsetFromParent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offsetFromParent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.offset.offsetFromViewport": {
                "id": "@coffeekraken.sugar.js.dom.offset.offsetFromViewport",
                "name": "offsetFromViewport",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the offset from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the offset top and left of the passed element from the document top left point",
                "namespace": "@coffeekraken.sugar.js.dom.offset",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __offsetFromViewport } from '@coffeekraken/sugar/dom'\nconst __offsetFromViewport = offset(myCoolElement);\n// output : { top : 200, left : 300 }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "offsetFromViewport.ts",
                "extension": "ts",
                "relPath": "src/js/dom/offset/offsetFromViewport.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.position.positionFromEvent": {
                "id": "@coffeekraken.sugar.js.dom.position.positionFromEvent",
                "name": "positionFromEvent",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "e": {
                        "name": "e",
                        "type": {
                            "types": [
                                {
                                    "type": "MouseEvent"
                                },
                                {
                                    "type": "TouchEvent"
                                }
                            ],
                            "raw": "MouseEvent|TouchEvent"
                        },
                        "description": "The event to get the position from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the position from an event \"touchstart\", \"touchmove\", \"touchend\", \"mousedown\", \"mousemove\" or \"mouseup\".",
                "namespace": "@coffeekraken.sugar.js.dom.position",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __positionFromEvent } from '@coffeekraken/sugar/dom'\n__positionFromEvent(e);\n// output : { x, 230, y: 122 }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "positionFromEvent.ts",
                "extension": "ts",
                "relPath": "src/js/dom/position/positionFromEvent.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closest": {
                "id": "@coffeekraken.sugar.js.dom.query.closest",
                "name": "closest",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "String|Function"
                        },
                        "description": "A css selector to search for or a check function that will be used",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __closest } from '@coffeekraken/sugar/dom'\nconst closestElm =  __closest(myCoolElement, '.my-cool-class');\nif (closestElm) {\n\t\t// we have found en element that matches the selector\n}\n// the selector param can be a function that need to return either true or false like so:\nclosest(myCoolElement, (elm) => {\n  return elm.hasAttribute('my-cool-attribute')\n})\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closest.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closest.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closestNotVisible": {
                "id": "@coffeekraken.sugar.js.dom.query.closestNotVisible",
                "name": "closestNotVisible",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that is not visible.\nNot visible mean that has either an opacity to 0, a visibility to hidden or a display to none",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __closestNotVisible } from '@coffeekraken/sugar/dom'\nconst closestElm =  __closestNotVisible(myCoolElement);\nif (closestElm) {\n\t\t// we have found en element that is not visible\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closestNotVisible.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closestNotVisible.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.closestScrollable": {
                "id": "@coffeekraken.sugar.js.dom.query.closestScrollable",
                "name": "closestScrollable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that is scrollable.\nThe default scrollable element is the body",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __closestScrollable } from '@coffeekraken/sugar/dom';\n__closestScrollable($myElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "closestScrollable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/closestScrollable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.matches": {
                "id": "@coffeekraken.sugar.js.dom.query.matches",
                "name": "matches",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to check",
                        "defaultStr": ""
                    },
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The selector to check on the element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Polyfill for the Element.matches function",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __matches } from '@coffeekraken/sugar/dom'\nif (__matches(myCoolHTMLElement, '.my-cool-css-selector')) {\n\t\t// the element match the selector\n}"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "matches.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/matches.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.next": {
                "id": "@coffeekraken.sugar.js.dom.query.next",
                "name": "next",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A css selector to search for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element next siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __next } from '@coffeekraken/sugar/dom'\nconst nextElm =  __next(myCoolElement, '.my-cool-class');\nif (nextElm) {\n\t\t// we have found en element that matches the selector\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "next.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/next.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.previous": {
                "id": "@coffeekraken.sugar.js.dom.query.previous",
                "name": "previous",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A css selector to search for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Browse the passed element previous siblings to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __previous } from '@coffeekraken/sugar/dom'\nconst previousElm = __previous(myCoolElement, '.my-cool-class');\nif (previousElm) {\n\t\t// we have found en element that matches the selector\n}\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "previous.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/previous.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelector": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelector",
                "name": "querySelector",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The css selector to search",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The settings of the query",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "visible": {
                        "name": "visible",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want only the visible nodes",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "inViewport": {
                        "name": "inViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want only the nodes that are in the viewport",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "rootNode": {
                        "name": "rootNode",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "Specify the root node from where you want to query",
                        "defaultStr": "document.body"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelector function that let you specify\nif you want an element that is visible, or even that is in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __querySelector } from '@coffeekraken/sugar/dom';\n// simple query\nconst elm = __querySelector('.a-cool-css-selector');\n\n// get an element that is in the viewport\nconst elm = __querySelector('.a-cool-css-selector', {\n\t\tinViewport : true\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelector.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelector.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorAll": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorAll",
                "name": "querySelectorAll",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The css selector to search",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The settings of the query",
                        "defaultStr": ""
                    }
                },
                "setting": {
                    "visible": {
                        "name": "visible",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want only the visible nodes",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "inViewport": {
                        "name": "inViewport",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want only the nodes that are in the viewport",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "rootNode": {
                        "name": "rootNode",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "Specify the root node from where you want to query",
                        "defaultStr": "document.body"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Enhanced proxy of the Element.querySelectorAll function that let you specify\nif you want elements that are visible, or even that are in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __querySelectorAll } from '@coffeekraken/sugar/dom';\n// simple query\nconst elms = __querySelectorAll('.a-cool-css-selector');\n\n// get elements that are in the viewport\nconst elms = __querySelectorAll('.a-cool-css-selector', {\n\t\tinViewport : true\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorAll.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorAll.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorLive": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorLive",
                "name": "querySelectorLive",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The css selector that we are interested in",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call with the newly added node",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An optional settings object to specify things like the rootNode to monitor, etc...",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "rootNode": {
                        "name": "rootNode",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The root node from where to observe childs",
                        "default": {},
                        "defaultStr": "document"
                    },
                    "once": {
                        "name": "once",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "If true, each observed nodes will be handled only once even if they are removed and reinjected in the dom",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Observe the dom to get all the elements that matches a passed css selector at any point in time.\nBe warned that this use the mutation observer API and will monitor all the document for new nodes. Make sure to use it\nwhen you don't have the chance to use the custom elements API instead",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __querySelectorLive } from '@coffeekraken/sugar/dom'\n__querySelectorLive('.my-cool-item', (node, api) => {\n\t    // do something here with the detected node\n     // call api.cancel if you want to stop listening for this selector\n     api.cancel();\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorLive.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorLive.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.query.querySelectorUp": {
                "id": "@coffeekraken.sugar.js.dom.query.querySelectorUp",
                "name": "querySelectorUp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "String|Function"
                        },
                        "description": "A css selector to search for or a check function that will be used",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three to find the first element that matches the passed selector",
                "namespace": "@coffeekraken.sugar.js.dom.query",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __querySelectorUp } from '@coffeekraken/sugar/dom'\nconst closestElm =  __querySelectorUp(myCoolElement, '.my-cool-class');\nif (closestElm) {\n\t\t// we have found en element that matches the selector\n}\n// the selector param can be a function that need to return either true or false like so:\n __querySelectorUp(myCoolElement, (elm) => {\n  return elm.hasAttribute('my-cool-attribute')\n})\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "querySelectorUp.ts",
                "extension": "ts",
                "relPath": "src/js/dom/query/querySelectorUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.preventScrollRestoration": {
                "id": "@coffeekraken.sugar.js.dom.scroll.preventScrollRestoration",
                "name": "preventScrollRestoration",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Function that set the `history.scrollRestoration` property to `manual`",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "stable",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __preventScrolLRestoration } from '@coffeekraken/sugar/dom'\n__preventScrollRestoration();\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "preventScrollRestoration.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/preventScrollRestoration.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollSpy": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollSpy",
                "name": "scrollSpy",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$target": {
                        "name": "$target",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to monitor",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollSpySettings"
                                }
                            ],
                            "raw": "IScrollSpySettings"
                        },
                        "description": "Some settings to tweak the active and unactive detection",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Function that let you monitor an HTMLElement passed and being notified when\nit is \"active\" and when it is \"unactive\".",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __scrollSpy } from '@coffeekraken/sugar/dom';\n__scrollSpy($myElement).on('activate', () => {\n     // do something\n}).on('unactivate', () => {\n     // do something\n});\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollSpy.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollSpy.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollTo": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollTo",
                "name": "scrollTo",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "target": {
                        "name": "target",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to scroll to",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some settings to tweak the scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "duration": {
                        "name": "duration",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The animation duration",
                        "default": 1000,
                        "defaultStr": "1000"
                    },
                    "easing": {
                        "name": "easing",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "An easing Function",
                        "default": "easeInOutQuad",
                        "defaultStr": "easeInOutQuad"
                    },
                    "offset": {
                        "name": "offset",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The destination offset",
                        "default": 0,
                        "defaultStr": "0"
                    },
                    "align": {
                        "name": "align",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The destination align (top, center, bottom)",
                        "default": "top",
                        "defaultStr": "'top'"
                    },
                    "onFinish": {
                        "name": "onFinish",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "A callback to call when the animation if finished",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Function that let you make a smooth page scroll to a specific element in the page",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __scrollTop } from '@coffeekraken/sugar/dom'\nimport easeInOutQuad from '@coffeekraken/sugar/js/easings/easeInOutQuad'\n__scrollTo(myCoolHTMLElement);\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollTo.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollTo.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.scroll.scrollToLocationHash": {
                "id": "@coffeekraken.sugar.js.dom.scroll.scrollToLocationHash",
                "name": "scrollToLocationHash",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToLocationHashSettings"
                                }
                            ],
                            "raw": "IScrollToLocationHashSettings"
                        },
                        "description": "Some settings to tweak the scroll behavior",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "scroll": {
                        "name": "scroll",
                        "type": {
                            "types": [
                                {
                                    "type": "IScrollToSettings"
                                }
                            ],
                            "raw": "IScrollToSettings"
                        },
                        "description": "Some scroll settings that you can check on the sugar.dom.scroll.scrollTo function",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Scroll to the location hash if an hash is present.\nThis function will try to get the target element from the hash and scroll to it",
                "namespace": "@coffeekraken.sugar.js.dom.scroll",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __scrollToLocationHash } from '@coffeekraken/sugar/dom'\n__scrollToLocationHash(500, 0)\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "scrollToLocationHash.ts",
                "extension": "ts",
                "relPath": "src/js/dom/scroll/scrollToLocationHash.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.size.realHeight": {
                "id": "@coffeekraken.sugar.js.dom.size.realHeight",
                "name": "realHeight",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the full height of an element that has maybe a max-height, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.size",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __realHeight } from '@coffeekraken/sugar/dom';\n__realHeight(myCoolHtmlElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "realHeight.ts",
                "extension": "ts",
                "relPath": "src/js/dom/size/realHeight.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.drag.slideable": {
                "id": "@coffeekraken.sugar.js.dom.drag.slideable",
                "name": "slideable",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement on which to apply the slideable behavior",
                        "defaultStr": ""
                    },
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call on swipe. The callback function has as parameter an object that containthe swipe direction like left, right, up and down",
                        "defaultStr": ""
                    },
                    "threshold": {
                        "name": "threshold",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The swipe threshold",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "setting": {
                    "threshold": {
                        "name": "threshold",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The minimum distance the user has to swipe before detection",
                        "default": 100,
                        "defaultStr": "100"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Simulate the slide gesture with optional inertia and direction restriction",
                "namespace": "@coffeekraken.sugar.js.dom.drag",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __slideable } from '@coffeekraken/sugar/dom';\n__slideable($myElement);\n @since           2.0.0"
                    }
                ],
                "async": "true",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "slideable.ts",
                "extension": "ts",
                "relPath": "src/js/dom/slide/slideable.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getAnimationProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getAnimationProperties",
                "name": "getAnimationProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the css animation properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getAnimationProperties } from '@coffeekraken/sugar/dom'\nconst props = __getAnimationProperties(myCoolHTMLElement);\n// output format\n// {\n// \tname : ['animation1'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \titerationCount : [1],\n// \tdirection : ['forward'],\n// \ttotalDuration : 200\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getAnimationProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getAnimationProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getAnimationsFromElement": {
                "id": "@coffeekraken.sugar.js.dom.style.getAnimationsFromElement",
                "name": "getAnimationsFromElement",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the animations applied to the passed element.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getAnimationsFromElement } from '@coffeekraken/sugar/dom'\nconst props = __getAnimationsFromElement(myCoolHTMLElement);\n// output format\n// [{\n//   name : 'animation1',\n// \tduration : 200,\n// \tdelay : 0,\n// \ttimingFunction : 'linear',\n// \titerationCount : 1,\n// \tdirection : 'forward',\n//   playState: 'running',\n//   fillMode: 'none'\n// }]\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getAnimationsFromElement.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getAnimationsFromElement.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getCssDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.getCssDeclarations",
                "name": "getCssDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "typeName": {
                        "name": "typeName",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "CSSRule type to search for, valid types: unknown, style, charset, import, media, fontface, page, keyframes, keyframe, namespace, counter, supports, document, fontfeature, viewport, region",
                        "default": "style",
                        "defaultStr": "'style'"
                    },
                    "rules": {
                        "name": "rules",
                        "type": {
                            "types": [
                                {
                                    "type": "array"
                                }
                            ],
                            "raw": "array"
                        },
                        "description": "Array of CSSRules to search",
                        "default": [],
                        "defaultStr": "[]"
                    },
                    "predecate": {
                        "name": "predecate",
                        "type": {
                            "types": [
                                {
                                    "type": "function"
                                }
                            ],
                            "raw": "function"
                        },
                        "description": "Predecate function to filter matches",
                        "defaultStr": "Boolean"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the CSSRules of the passed type",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getCssDeclarations } from '@coffeekraken/sugar/dom';\n__getCssDeclarations('style', [myCoolCssRules]);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCssDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getCssDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getCssRulesFromStylesheet": {
                "id": "@coffeekraken.sugar.js.dom.style.getCssRulesFromStylesheet",
                "name": "getCssRulesFromStylesheet",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "stylesheet": {
                        "name": "stylesheet",
                        "type": {
                            "types": [
                                {
                                    "type": "CSSStyleSheet"
                                }
                            ],
                            "raw": "CSSStyleSheet"
                        },
                        "description": "The stylesheet from which to get the CSSRules",
                        "defaultStr": ""
                    },
                    "recursive": {
                        "name": "recursive",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want to get rules from imported css or not",
                        "default": true,
                        "defaultStr": "true"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the CSSRules of the passed stylesheet",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getCssRulesFromStylesheet } from '@coffeekraken/sugar/dom';\n__getCssRulesFromStylesheet(myStylesheet);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getCssRulesFromStylesheet.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getCssRulesFromStylesheet.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getDefinedStyles": {
                "id": "@coffeekraken.sugar.js.dom.style.getDefinedStyles",
                "name": "getDefinedStyles",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "properties": {
                        "name": "properties",
                        "type": {
                            "types": [
                                {
                                    "type": "CSS2Properties"
                                }
                            ],
                            "raw": "CSS2Properties"
                        },
                        "description": "CSS2Properties object to return defined styles from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Gets map of defined styles from CSS2Properties object",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getDefinedStyles } from '@coffeekraken/sugar/dom';"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getDefinedStyles.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getDefinedStyles.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getKeyframesDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.getKeyframesDeclarations",
                "name": "getKeyframesDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "animationName": {
                        "name": "animationName",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "CSS animationName to search KeyFrameRule declarations for",
                        "defaultStr": ""
                    },
                    "rules": {
                        "name": "rules",
                        "type": {
                            "types": [
                                {
                                    "type": "array"
                                }
                            ],
                            "raw": "array"
                        },
                        "description": "Array of CSSRules to search",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get all the keyframes declarations from the passed rules",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __getKeyframesDeclarations from '@coffeekraken/sugar/js/dom/style/getKeyframesDeclarations';\n__getKeyframesDeclarations('myCoolAnimation', [myCoolCssRules]);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getKeyframesDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getKeyframesDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getRotateProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getRotateProperties",
                "name": "getRotateProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a rotate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getRotateProperties } from '@coffeekraken/sugar/dom'\nconst props = __getRotateProperties(myCoolHTMLElement);\n// output format\n// {\n// \tx : 100,\n// \ty : 0,\n// \tz : 0\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getRotateProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getRotateProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getScaleProperty": {
                "id": "@coffeekraken.sugar.js.dom.style.getScaleProperty",
                "name": "getScaleProperty",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a scale properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getScaleProperty } from '@coffeekraken/sugar/dom'\nconst props = __getScaleProperty(myCoolHTMLElement);\n// output format\n// 2\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getScaleProperty.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getScaleProperty.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getStyleProperty": {
                "id": "@coffeekraken.sugar.js.dom.style.getStyleProperty",
                "name": "getStyleProperty",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get style from",
                        "defaultStr": ""
                    },
                    "property": {
                        "name": "property",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The css property to get",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a style property on the passed element through the computed style.\nThis function try to store the actual style to not trigger more that 1 redraw\neach js execution loop.",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getStyleProperty } from '@coffeekraken/sugar/dom'\nconst opacity = __getStyleProperty(myCoolHTMLElement, 'opacity');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getStyleProperty.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getStyleProperty.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTransformProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTransformProperties",
                "name": "getTransformProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a translate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTransformProperties from '@coffeekraken/sugar/js/dom/getTransformProperties'\nconst props = getTransformProperties(myCoolHTMLElement);\n// output format\n// {\n// \ttranslateX : 100,\n// \ttranslateY : 0,\n// \ttranslateZ : 0,\n//   rotateX: 0,\n//   rotateY: 0,\n//   rotateZ: 0\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTransformProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTransformProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTransitionProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTransitionProperties",
                "name": "getTransitionProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the css transition properties from an HTMLElement in an object format",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import getTransitionProperties from '@coffeekraken/sugar/js/dom/getTransitionProperties'\nconst props = getTransitionProperties(myCoolHTMLElement);\n// output format\n// {\n// \tproperty : ['all'],\n// \tduration : [200],\n// \tdelay : [0],\n// \ttimingFunction : ['linear'],\n// \ttotalDuration : 200\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTransitionProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTransitionProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.getTranslateProperties": {
                "id": "@coffeekraken.sugar.js.dom.style.getTranslateProperties",
                "name": "getTranslateProperties",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the properties from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get a translate properties of an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getTranslateProperties } from '@coffeekraken/sugar/dom'\nconst props = __getTranslateProperties(myCoolHTMLElement);\n// output format\n// {\n// \tx : 100,\n// \ty : 0,\n// \tz : 0\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTranslateProperties.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/getTranslateProperties.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.style": {
                "id": "@coffeekraken.sugar.js.dom.style.style",
                "name": "style",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to process",
                        "defaultStr": ""
                    },
                    "styleObj": {
                        "name": "styleObj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of style to apply",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Set or remove a css style property on an HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __style } from '@coffeekraken/sugar/dom'\n__style(myCoolHTMLElement, {\n\t\tpaddingLeft : 20,\n\t\tdisplay : null\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "style.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/style.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.style.transformKeyframesDeclarations": {
                "id": "@coffeekraken.sugar.js.dom.style.transformKeyframesDeclarations",
                "name": "transformKeyframesDeclarations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "keyFrameRule": {
                        "name": "keyFrameRule",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "KeyFrameRule to transform",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transforms KeyFrameRule to array of web animation compatible keyframes",
                "namespace": "@coffeekraken.sugar.js.dom.style",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import __transformKeyframesDeclarations from '@coffeekraken/sugar/js/dom/style/transformKeyframesDeclarations';"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "transformKeyframesDeclarations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/style/transformKeyframesDeclarations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.template.expandTemplate": {
                "id": "@coffeekraken.sugar.js.dom.template.expandTemplate",
                "name": "expandTemplate",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$template": {
                        "name": "$template",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLTemplateElement"
                                }
                            ],
                            "raw": "HTMLTemplateElement"
                        },
                        "description": "The template to expand",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to take an HTMLTemplateElement and transform it into real DOM.\nNote that the provided DOM will be wrapper into a nude div",
                "namespace": "@coffeekraken.sugar.js.dom.template",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __expandTemplate } from '@coffeekraken/sugar/dom'\n__expandTemplate($templte);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "expandTemplate.ts",
                "extension": "ts",
                "relPath": "src/js/dom/template/expandTemplate.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.touch.preventViewportMovement": {
                "id": "@coffeekraken.sugar.js.dom.touch.preventViewportMovement",
                "name": "preventViewportMovement",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to prevent the viewport movement from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Capture the \"touchstart\", \"touchmove\", \"touchend\" and \"touchcancel\" of the passed element and\napply a \"preventDefault()\" on all events",
                "namespace": "@coffeekraken.sugar.js.dom.touch",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __preventViewportMovement } from '@coffeekraken/sugar/dom'\n__preventViewportMovement($elm)\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "preventViewportMovement.ts",
                "extension": "ts",
                "relPath": "src/js/dom/touch/preventViewportMovement.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.transmation.clearTransmations": {
                "id": "@coffeekraken.sugar.js.dom.transmation.clearTransmations",
                "name": "clearTransmations",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The dom element to clear the animations/transitions from",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "IClearTransmationsSettings"
                                }
                            ],
                            "raw": "IClearTransmationsSettings"
                        },
                        "description": "The settings to use",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "timeout": {
                        "name": "timeout",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The timeout in ms to wait before removing the animations/transitions clearing",
                        "default": 0,
                        "defaultStr": "0"
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to clear all the animations and transitions inside a particular dom element.\nYou can specify a timeout if you want to clear them only for a limited amount of time.",
                "namespace": "@coffeekraken.sugar.js.dom.transmation",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __clearTransmations } from '@coffeekraken/sugar/dom'\n __clearTransmations($myElement, {\n timeout: 1000\n});\nconst reset =  __clearTransmations($myElement);\nsetTimeout(() => reset(), 2000);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "clearTransmations.ts",
                "extension": "ts",
                "relPath": "src/js/dom/transmation/clearTransmations.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.traverse.traverseUp": {
                "id": "@coffeekraken.sugar.js.dom.traverse.traverseUp",
                "name": "traverseUp",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The callback function to call on each element. If this returns on an element, it will be the returned element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Go up the dom three until the callback function return true",
                "namespace": "@coffeekraken.sugar.js.dom.traverse",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __traverseUp } from '@coffeekraken/sugar/dom'\nconst $elm = __traverseUp($myElement, elm => {\n     return elm.classList.contains('my-class')\n});\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "traverseUp.ts",
                "extension": "ts",
                "relPath": "src/js/dom/traverse/traverseUp.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.ui.makeFloat": {
                "id": "@coffeekraken.sugar.js.dom.ui.makeFloat",
                "name": "makeFloat",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to start on",
                        "defaultStr": ""
                    },
                    "callback": {
                        "name": "callback",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The callback function to call on each element. If this returns on an element, it will be the returned element",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function allows you to make an element float depending on another one.\nIt will make sure the element is placed as best as possible dependong on the page position,\nsurroundings, etc...\nThis make use of the AMAZING [Floating UI](https://floating-ui.com) library.",
                "namespace": "@coffeekraken.sugar.js.dom.ui",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __makeFloat } from '@coffeekraken/sugar/dom'\n__makeFloat($myElement, $dependingOn);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "makeFloat.ts",
                "extension": "ts",
                "relPath": "src/js/dom/ui/makeFloat.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.canHaveChildren": {
                "id": "@coffeekraken.sugar.js.dom.utils.canHaveChildren",
                "name": "canHaveChildren",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "element": {
                        "name": "element",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "String|HTMLElement"
                        },
                        "description": "The element to check. A tagName like \"img\", or directly a HTMLElement node reference",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function take as input either a tagName String like \"img\", \"div\", etc... or an HTMLElement node\nand return true or false depending if this element is supposed to have children or not.",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __canHaveChildren } from '@coffeekraken/sugar/dom';\n __canHaveChildren('img'); // => false\n __canHaveChildren('div'); // => true"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "canHaveChildren.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/canHaveChildren.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.exitFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.exitFullscreen",
                "name": "exitFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Exit the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __exitFullscreen } from '@coffeekraken/sugar/dom'\n__exitFullscreen()\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "exitFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/exitFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.forceRedraw": {
                "id": "@coffeekraken.sugar.js.dom.utils.forceRedraw",
                "name": "forceRedraw",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$elm": {
                        "name": "$elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to force the redraw on",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Force the element to be painted again in case of visual issues",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __forceRedraw } from '@coffeekraken/sugar/dom'\n__forceRedraw($elm)\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "forceRedraw.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/forceRedraw.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.getHtmlClassFromTagName": {
                "id": "@coffeekraken.sugar.js.dom.utils.getHtmlClassFromTagName",
                "name": "getHtmlClassFromTagName",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "tagName": {
                        "name": "tagName",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tagName to get the class for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply return the HTML{name}Element class depending on the passed\ntag name like \"p\", \"input\", \"textarea\", etc...",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getHtmlClassFromTagName } from '@coffeekraken/sugar/dom';\n __getHtmlClassFromTagName('a'); // => HTMLAnchorElement"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getHtmlClassFromTagName.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/getHtmlClassFromTagName.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.getHtmlhtmlClassFromHtmlClass": {
                "id": "@coffeekraken.sugar.js.dom.utils.getHtmlhtmlClassFromHtmlClass",
                "name": "getHtmlhtmlClassFromHtmlClass",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "htmlClass": {
                        "name": "htmlClass",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The htmlClass to get the tag for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This function simply return the tagname depending on the passed HTML class\nlike HTMLAnchorElement, HTMLLinkElement, etc...",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getHtmlhtmlClassFromHtmlClass } from '@coffeekraken/sugar/dom';\n__getHtmlhtmlClassFromHtmlClass(HTMLAnchorElement); // => 'a'"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getTagNameFromHtmlClass.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/getTagNameFromHtmlClass.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.HtmlTagToHtmlClassMap": {
                "id": "@coffeekraken.sugar.js.dom.utils.HtmlTagToHtmlClassMap",
                "name": "HtmlTagToHtmlClassMap",
                "type": {
                    "types": [
                        {
                            "type": "Object"
                        }
                    ],
                    "raw": "Object"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This export an object mapping the HTML tag name to his corresponding HTML class (object not css class)",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __htmlTagToHtmlClassMap } from '@coffeekraken/sugar/dom';\nconsole.log(__htmlTagToHtmlClassMap);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "htmlTagToHtmlClassMap.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/htmlTagToHtmlClassMap.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.inViewportPercentage": {
                "id": "@coffeekraken.sugar.js.dom.utils.inViewportPercentage",
                "name": "inViewportPercentage",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element to get the in viewport percentage from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return how many percent the passed element is visible in the viewport",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __inViewportPercentage } from '@coffeekraken/sugar/dom'\nconst percentage = __inViewportPercentage(myCoolHTMLElement);\n// 20\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "inViewportPercentage.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/inViewportPercentage.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.nodeIndex": {
                "id": "@coffeekraken.sugar.js.dom.utils.nodeIndex",
                "name": "nodeIndex",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "node": {
                        "name": "node",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The node to get the index for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Return the inde of the passed node inside the html",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __nodeIndex } from '@coffeekraken/sugar/dom'\n// assuming:\n// <li>item #1</li>\n// <li class=\"match\">item #2</li>\n// <li>item #3</li>\n __nodeIndex(document.querySelector('.match')) // 1\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "nodeIndex.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/nodeIndex.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestAnimationFrame": {
                "id": "@coffeekraken.sugar.js.dom.utils.requestAnimationFrame",
                "name": "requestAnimationFrame",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "cb": {
                        "name": "cb",
                        "type": {
                            "types": [
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "Function"
                        },
                        "description": "The function to call when it's time to update your animation for the next repaint",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Proxy for the window.requestAnimationFrame function",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "requestAnimationFrame.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/requestAnimationFrame.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.requestFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.requestFullscreen",
                "name": "requestFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element on which to request the fullscreen",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Request fullscreen on the passed DOM element",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __requestFullscreen } from '@coffeekraken/sugar/dom'\n __requestFullscreen(myDomElm)\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "requestFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/requestFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLetters": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitLetters",
                "name": "splitLetters",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to split letters in",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISplitLettersSettings"
                                }
                            ],
                            "raw": "ISplitLettersSettings"
                        },
                        "description": "Some settings to tweak the process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "tag": {
                        "name": "tag",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tag to use to split the letters",
                        "default": "span",
                        "defaultStr": "\"span\""
                    },
                    "class": {
                        "name": "class",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The class to apply on the tags",
                        "default": "s-split-letters",
                        "defaultStr": "\"s-split-letters\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each letters inside an HTMLElement by scoping them inside multiple tags.\nHere's an result sample for : Hello World\n```html\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">H</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">e</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">&nbsp;</span>\n</span>\n<span style=\"white-space:nowrap\">\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">W</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">o</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">r</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">l</span>\n</span>\n<span class=\"split-letters\">\n<span class=\"split-letters__letter\">d</span>\n</span>\n</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitLetters } from '@coffeekraken/sugar/dom'\nconst myCoolElement = document.querySelector('.my-cool-element');\n__splitLetters(myCoolElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitLetters.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/splitLetters.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitLines": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitLines",
                "name": "splitLines",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to split lines in",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISplitLinesSettings"
                                }
                            ],
                            "raw": "ISplitLinesSettings"
                        },
                        "description": "Some settings to tweak the process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "tag": {
                        "name": "tag",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tag to use to split the lines",
                        "default": "p",
                        "defaultStr": "\"p\""
                    },
                    "class": {
                        "name": "class",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The class to apply on the tags",
                        "default": "s-split-lines",
                        "defaultStr": "\"s-split-lines\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each lines inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello\nWorld\n\n```html\n<p class=\"s-split-lines\">Hello</p>\n<p class=\"s-split-lines\">World</p>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitLines } from '@coffeekraken/sugar/dom'\nconst myCoolElement = document.querySelector('.my-cool-element');\n __splitLines(myCoolElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitLines.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/splitLines.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.splitWords": {
                "id": "@coffeekraken.sugar.js.dom.utils.splitWords",
                "name": "splitWords",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The HTMLElement to split words in",
                        "defaultStr": ""
                    },
                    "settings": {
                        "name": "settings",
                        "type": {
                            "types": [
                                {
                                    "type": "ISplitWordsSettings"
                                }
                            ],
                            "raw": "ISplitWordsSettings"
                        },
                        "description": "Some settings to tweak the process",
                        "default": {},
                        "defaultStr": "{}"
                    }
                },
                "setting": {
                    "tag": {
                        "name": "tag",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The tag to use to split the words",
                        "default": "p",
                        "defaultStr": "\"p\""
                    },
                    "tagClass": {
                        "name": "tagClass",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The class to apply on the tags",
                        "default": "s-split-lines",
                        "defaultStr": "\"s-split-lines\""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Split each words inside an HTMLElement by scoping them inside some tags.\nHere's an result sample for :\nHello World\n\n```html\n<span class=\"s-split-words\">Hello</span>\n<span class=\"s-split-words\">World</span>\n```",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __splitWords } from '@coffeekraken/sugar/dom'\nconst myCoolElement = document.querySelector('.my-cool-element');\n__splitWords(myCoolElement);\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "splitWords.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/splitWords.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.textWidth": {
                "id": "@coffeekraken.sugar.js.dom.utils.textWidth",
                "name": "textWidth",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "source": {
                        "name": "source",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "String|HTMLElement"
                        },
                        "description": "The source to process",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Get the text width in px of a passed string or the passed HTMLElement",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __textWidth } from '@coffeekraken/sugar/dom'\n// text of an HTMLElement\nconst width =  __textWidth(myCoolHTMLElement);\n\n// text directly (no font-size management so it's less accurate...)\nconst width =  __textWidth('Hello World');\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "textWidth.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/textWidth.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.utils.toggleFullscreen": {
                "id": "@coffeekraken.sugar.js.dom.utils.toggleFullscreen",
                "name": "toggleFullscreen",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "elm": {
                        "name": "elm",
                        "type": {
                            "types": [
                                {
                                    "type": "HTMLElement"
                                }
                            ],
                            "raw": "HTMLElement"
                        },
                        "description": "The element on which to request the fullscreen",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Toggle the fullscreen mode",
                "namespace": "@coffeekraken.sugar.js.dom.utils",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __toggleFullscreen } from '@coffeekraken/sugar/dom'\n__toggleFullscreen(myDomElm)\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toggleFullscreen.ts",
                "extension": "ts",
                "relPath": "src/js/dom/utilities/toggleFullscreen.ts",
                "children": {}
            },
            "@coffeekraken.sugar.node.dev.color.getColorFor": {
                "id": "@coffeekraken.sugar.node.dev.color.getColorFor",
                "name": "getColorFor",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "for": {
                        "name": "for",
                        "type": {
                            "types": [
                                {
                                    "type": "any"
                                }
                            ],
                            "raw": "any"
                        },
                        "description": "Pass something to take as reference to get the same color back every time",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This function let you pass anything like an object, a string, etc... and get the same\ncolor back everytime you pass the same value.\nThis if usefull for output logs, etc...",
                "namespace": "@coffeekraken.sugar.node.dev.color",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __getColorFor } from '@coffeekraken/sugar/dev';\n__getColorFor('something'); // => cyan\n__getColorFor({\n     else: true\n}); // => magenta\n__getColorFor('something') // => cyan"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "getColorFor.ts",
                "extension": "ts",
                "relPath": "src/node/dev/color/getColorFor.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.registerFilter": {
                "id": "@coffeekraken.sugar.php.twig.filters.registerFilter",
                "name": "registerFilter",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$twig": {
                        "name": "$twig",
                        "type": {
                            "types": [
                                {
                                    "type": "Twig"
                                }
                            ],
                            "raw": "Twig"
                        },
                        "description": "The twig instance on which to register the filters",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to register only the filters on your twig instance",
                "namespace": "@coffeekraken.sugar.php.twig.filters",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\STwig\\registerFilters($twig);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "registerFilters.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/registerFilters.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.registerFunctions": {
                "id": "@coffeekraken.sugar.php.twig.functions.registerFunctions",
                "name": "registerFunctions",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$twig": {
                        "name": "$twig",
                        "type": {
                            "types": [
                                {
                                    "type": "Twig"
                                }
                            ],
                            "raw": "Twig"
                        },
                        "description": "The twig instance on which to register the functions",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "php",
                        "description": ""
                    }
                ],
                "description": "This function allows you to register only the functions on your twig instance",
                "namespace": "@coffeekraken.sugar.php.twig.functions",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "\\Sugar\\twig\\registerFunctions($twig);"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "registerFunctions.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/registerFunctions.php",
                "children": {}
            },
            "@coffeekraken.sugar.shared.css.easing.cssEasingStrToJsFunction": {
                "id": "@coffeekraken.sugar.shared.css.easing.cssEasingStrToJsFunction",
                "name": "cssEasingStrToJsFunction",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "easing": {
                        "name": "easing",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The easing you want to convert",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Convert a css easing string line \"cubic-bezier(.17,.67,.83,.67)\" to a js easing function",
                "namespace": "@coffeekraken.sugar.shared.css.easing",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __cssEasingStrToJsFunction } from '@coffeekraken/sugar/css'\nconst fn = __cssEasingStrToJsFunction('cubic-bezier(.17,.67,.83,.67)');\nfn(0.5);\nfn(0.34);"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cssEasingStrToJsFunction.ts",
                "extension": "ts",
                "relPath": "src/shared/css/easing/cssEasingStrToJsFunction.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.parse.parseKeyframeKey": {
                "id": "@coffeekraken.sugar.js.css.parse.parseKeyframeKey",
                "name": "parseKeyframeKey",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "keyText": {
                        "name": "keyText",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "KeyFrameRule.keyText to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Parses KeyFrameRule.keyText to an array of integers holding keyframe percentages",
                "namespace": "@coffeekraken.sugar.js.css.parse",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseKeyframeKey } from '@coffeekraken/sugar/css';\n__parseKeyframeKey('from');"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseKeyframeKey.ts",
                "extension": "ts",
                "relPath": "src/shared/css/parse/parseKeyframeKey.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.parse.parseTransformRule": {
                "id": "@coffeekraken.sugar.js.css.parse.parseTransformRule",
                "name": "parseTransformRule",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "transformStr": {
                        "name": "transformStr",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "The transform string to parse",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Parse the transform rule of an element and returns a simple object with each properties separated.",
                "namespace": "@coffeekraken.sugar.js.css.parse",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __parseTransformRule } from '@coffeekraken/sugar/css';\n__parseTransformRule('translate(-100px, 200rem));"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "parseTransformRule.ts",
                "extension": "ts",
                "relPath": "src/shared/css/parse/parseTransformRule.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.rule.removeVendorPrefix": {
                "id": "@coffeekraken.sugar.js.css.rule.removeVendorPrefix",
                "name": "removeVendorPrefix",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "propertyName": {
                        "name": "propertyName",
                        "type": {
                            "types": [
                                {
                                    "type": "string"
                                }
                            ],
                            "raw": "string"
                        },
                        "description": "prefixed property name",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Remove vendor prefixes from CSSPropertyNames",
                "namespace": "@coffeekraken.sugar.js.css.rule",
                "status": "wip",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __removeVendorPrefix } from '@coffeekraken/sugar/css';\n__removeVendorPrefix('moz-something'); // 'something'"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "removeVendorPrefix.ts",
                "extension": "ts",
                "relPath": "src/shared/css/rule/removeVendorPrefix.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.transform.styleObject2String": {
                "id": "@coffeekraken.sugar.js.css.transform.styleObject2String",
                "name": "styleObject2String",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "styleObj": {
                        "name": "styleObj",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An object of style to apply",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transform a style object to inline string separated by ;",
                "namespace": "@coffeekraken.sugar.js.css.transform",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __styleObject2String } from '@coffeekraken/sugar/css'\nconst styleString =  __styleObject2String({\n\t\tpaddingLeft : '20px',\n\t\tdisplay : 'block'\n});\n// output => padding-left:20px; display:block;\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "styleObject2String.ts",
                "extension": "ts",
                "relPath": "src/shared/css/transform/styleObject2String.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.css.transform.styleString2Object": {
                "id": "@coffeekraken.sugar.js.css.transform.styleString2Object",
                "name": "styleString2Object",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "style": {
                        "name": "style",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The style string",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "Transform a style string to an object representation",
                "namespace": "@coffeekraken.sugar.js.css.transform",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import { __styleString2Object } from '@coffeekraken/sugar/css'\nconst styleString =  __styleString2Object('padding-left:20px; display:block;');\n// output => {\n//\t\tpaddingLeft : '20px',\n// \t\tdisplay : 'block'\n// }\n @since           2.0.0"
                    }
                ],
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "styleString2Object.ts",
                "extension": "ts",
                "relPath": "src/shared/css/transform/styleString2Object.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.availableColors": {
                "id": "@coffeekraken.sugar.shared.dev.colors.availableColors",
                "name": "availableColors",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```colorValue``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import availableColors from '@coffeekraken/sugar/shared/dev/color/availableColors';\navailableColors(); => ['black','white','yellow','green',...]"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "availableColors.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/availableColors.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.colors.colorValue": {
                "id": "@coffeekraken.sugar.shared.dev.colors.colorValue",
                "name": "colorValue",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "Return the list of color names you can access using the ```getColor``` function.\nThese colors are specified in the config.terminal configuration file under the \"colors\" property.",
                "namespace": "@coffeekraken.sugar.shared.dev.colors",
                "status": "beta",
                "example": [
                    {
                        "language": "js",
                        "code": "import colorValue from '@coffeekraken/sugar/shared/dev/color/colorValue';\ncolorValue('black'); => #000000"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "colorValue.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/color/colorValue.ts",
                "children": {}
            },
            "@coffeekraken.sugar.shared.dev.types.dataTypesArray": {
                "id": "@coffeekraken.sugar.shared.dev.types.dataTypesArray",
                "name": "dataTypesArray",
                "type": {
                    "types": [
                        {
                            "type": "Array"
                        }
                    ],
                    "raw": "Array"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    },
                    {
                        "name": "node",
                        "description": ""
                    }
                ],
                "description": "This is just a list of data types available in the\ncurrent language (node/js)",
                "namespace": "@coffeekraken.sugar.shared.dev.types",
                "status": "wip",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "dataTypesArray.ts",
                "extension": "ts",
                "relPath": "src/shared/dev/types/dataTypesArray.ts",
                "children": {}
            },
            "@coffeekraken.sugar.js.dom.detect.interface.WhenInteractSettingsInterface": {
                "id": "@coffeekraken.sugar.js.dom.detect.interface.WhenInteractSettingsInterface",
                "name": "WhenInteractSettingsInterface",
                "type": {
                    "types": [
                        {
                            "type": "Class"
                        }
                    ],
                    "raw": "Class"
                },
                "platform": [
                    {
                        "name": "js",
                        "description": ""
                    }
                ],
                "description": "This interface represent the `whenInteract` settings.",
                "namespace": "@coffeekraken.sugar.js.dom.detect.interface",
                "status": "beta",
                "interface": {
                    "name": "WhenInteractSettingsInterface",
                    "description": "",
                    "definition": {
                        "pointerover": {
                            "description": "Specify if the pointerover event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "pointerout": {
                            "description": "Specify if the pointerout event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "click": {
                            "description": "Specify if the click event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "touchstart": {
                            "description": "Specify if the touchstart event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "touchend": {
                            "description": "Specify if the touchend event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        },
                        "focus": {
                            "description": "Specify if the focus event has to be used",
                            "type": {
                                "types": [
                                    {
                                        "type": "Boolean"
                                    }
                                ],
                                "raw": "Boolean"
                            },
                            "default": true
                        }
                    }
                },
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "WhenInteractSettingsInterface.ts",
                "extension": "ts",
                "relPath": "src/js/dom/detect/interface/WhenInteractSettingsInterface.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.cast.toArray": {
                "id": "@coffeekraken.sugar.php.twig.filters.cast.toArray",
                "name": "toArray",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The value you want to cast to array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to convert an object to an array",
                "namespace": "@coffeekraken.sugar.php.twig.filters.cast",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set obj = {'something':true} %}\n{% set ar = obj|__toArray %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toArray.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/cast/toArray.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.cast.toObject": {
                "id": "@coffeekraken.sugar.php.twig.filters.cast.toObject",
                "name": "toObject",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The value you want to cast to object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "trig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to convert an array to an object",
                "namespace": "@coffeekraken.sugar.php.twig.filters.cast",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set obj = {'something':true} %}\n{% set ar = obj|__toObject %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toObject.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/cast/toObject.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.json.cleanContext": {
                "id": "@coffeekraken.sugar.php.twig.filters.json.cleanContext",
                "name": "cleanContext",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$context": {
                        "name": "$context",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The context value",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to clean the \"_context\" variable to get only the values you actually passed",
                "namespace": "@coffeekraken.sugar.php.twig.filters.json",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div data=\"{{ _context|__cleanContext|json_encode }}\"></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cleanContext.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/object/cleanContext.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.string.idCompliant": {
                "id": "@coffeekraken.sugar.php.twig.filters.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The value you want to make id compliant",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to ensure a string is \"html\" id compliant",
                "namespace": "@coffeekraken.sugar.php.twig.filters.string",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set id = 'something cool'|__idCompliant %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/string/idCompliant.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.string.replace": {
                "id": "@coffeekraken.sugar.php.twig.filters.string.replace",
                "name": "replace",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$search": {
                        "name": "$search",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to replace. Can be a regex",
                        "defaultStr": ""
                    },
                    "$replaceBy": {
                        "name": "$replaceBy",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to replace your $search with",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to replace a value by another in your string.\nIt support for regex as the search",
                "namespace": "@coffeekraken.sugar.php.twig.filters.string",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{{ 'hello world'|__replace('world', 'coco') }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replace.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/string/replace.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.filters.type.typeToString": {
                "id": "@coffeekraken.sugar.php.twig.filters.type.typeToString",
                "name": "typeToString",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$type": {
                        "name": "$type",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "String|Array"
                        },
                        "description": "The type you want to convert to string.",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to convert a type array to a string is needed",
                "namespace": "@coffeekraken.sugar.php.twig.filters.type",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set id = 'Array'|__typeToString %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typeToString.php",
                "extension": "php",
                "relPath": "src/php/twig/filters/type/typeToString.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.cast.toArray": {
                "id": "@coffeekraken.sugar.php.twig.functions.cast.toArray",
                "name": "toArray",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The value you want to cast to array",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to convert an object to an array",
                "namespace": "@coffeekraken.sugar.php.twig.functions.cast",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set obj = {'something':true} %}\n{% set ar = __toArray(obj) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toArray.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/cast/toArray.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.cast.toObject": {
                "id": "@coffeekraken.sugar.php.twig.functions.cast.toObject",
                "name": "toObject",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The value you want to cast to object",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to convert an array to an object",
                "namespace": "@coffeekraken.sugar.php.twig.functions.cast",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set obj = {'something':true} %}\n{% set ar = __toObject(obj) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "toObject.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/cast/toObject.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.layoutCss": {
                "id": "@coffeekraken.sugar.php.twig.functions.layoutCss",
                "name": "layoutCss",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$layout": {
                        "name": "$layout",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The layout string defintion you want to generate the css for like \"1 2 _ 3 3\"",
                        "defaultStr": ""
                    },
                    "$settings": {
                        "name": "$settings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Some settings to configure your layout generation",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "setting": {
                    "selector": {
                        "name": "selector",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A css selector used to target the correct section/div...",
                        "default": "#layout",
                        "defaultStr": "'#layout'"
                    },
                    "gap": {
                        "name": "gap",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A gap value to apply on your layout",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "gapBetween": {
                        "name": "gapBetween",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Specify if you want the gap only between the cells or all around",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "align": {
                        "name": "align",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The \"align-items\" value for your grid layout",
                        "default": "stretch",
                        "defaultStr": "'stretch'"
                    },
                    "justify": {
                        "name": "justify",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The \"justify-items\" value for your grid layout",
                        "default": "stretch",
                        "defaultStr": "'stretch'"
                    },
                    "media": {
                        "name": "media",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "A media to pass to the \\Sugar\\css\\buildMediaQuery function to scope the generated css in the correct media query",
                        "default": null,
                        "defaultStr": "null"
                    },
                    "mediaSettings": {
                        "name": "mediaSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "Specify the \\Sugar\\css\\buildMediaQuery $settings parameter if you specify a \"media\" setting",
                        "default": [],
                        "defaultStr": "[]"
                    },
                    "minify": {
                        "name": "minify",
                        "type": {
                            "types": [
                                {
                                    "type": "Boolean"
                                }
                            ],
                            "raw": "Boolean"
                        },
                        "description": "Minify the output css or not",
                        "default": true,
                        "defaultStr": "true"
                    },
                    "$scope": {
                        "name": "$scope",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                }
                            ],
                            "raw": "Array"
                        },
                        "description": "The scope(s) you want to generate",
                        "default": [
                            "bare",
                            "lnf",
                            "gap",
                            "align",
                            "justify"
                        ],
                        "defaultStr": "['bare','lnf','gap','align','justify']"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function takes a layout definition like \"1 2 _ 3 3\" and generate the css that will handle this layout.\nYou can as well pass some informations the gap wanted, the alignement, etc...",
                "namespace": "@coffeekraken.sugar.php.twig.functions",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set css = __layoutCss('1 2 _ 3 3', {\n     selector: '#my-layout'\n}) %}\n<style>\n     {{ css }}\n</style>\n<div id=\"my-layout\">\n     <div>Cell #1</div>\n     <div>Cell #2</div>\n     <div>Cell #3</div>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "layoutCss.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/css/layoutCss.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.css.marginClasses": {
                "id": "@coffeekraken.sugar.php.twig.css.marginClasses",
                "name": "marginClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$margins": {
                        "name": "$margins",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "Some margins like \"block\" => 10, etc...",
                        "defaultStr": ""
                    },
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "The frontspec json to handle things like defaultMedia, etc...",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function takes an object|array of margins issued from the themeMargin.config.ts configuration file like:\n- \"blockStart\" => 10\n- \"inlineEnd\" => 30\n- \"block\" => 10\n- etc...\nThis function will returns you the classes like \"s-mbs:10\" that you can apply where you want in your views.",
                "namespace": "@coffeekraken.sugar.php.twig.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "<div class=\"{{ __marginClasses({\n block: 10\n}) }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "marginClasses.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/css/marginClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.css.paddingClasses": {
                "id": "@coffeekraken.sugar.php.twig.css.paddingClasses",
                "name": "paddingClasses",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$paddings": {
                        "name": "$paddings",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "Some paddings like \"block\" => 10, etc...",
                        "defaultStr": ""
                    },
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Array"
                                },
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Array|Object"
                        },
                        "description": "The frontspec json to handle things like defaultMedia, etc...",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function takes an object|array of paddings issued from the themeMargin.config.ts configuration file like:\n- \"blockStart\" => 10\n- \"inlineEnd\" => 30\n- \"block\" => 10\n- etc...\nThis function will returns you the classes like \"s-mbs:10\" that you can apply where you want in your views.",
                "namespace": "@coffeekraken.sugar.php.twig.css",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "<div class=\"{{ __paddingClasses({\n block: 10\n}) }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "paddingClasses.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/css/paddingClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.frontspec.assets": {
                "id": "@coffeekraken.sugar.php.twig.functions.frontspec.assets",
                "name": "assets",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec object from where to take the metas. If not specified, try to get it from the frontspec.json at the root of your project",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to print out the frontspec.json \"assets\" property",
                "namespace": "@coffeekraken.sugar.php.twig.functions.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% __frontspecAssets(fronspec) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "assets.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/frontspec/assets.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.frontspec.metas": {
                "id": "@coffeekraken.sugar.php.twig.functions.frontspec.metas",
                "name": "metas",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec object from where to take the metas. If not specified, try to get it from the frontspec.json at the root of your project",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to print out the frontspec.json \"metas\" property",
                "namespace": "@coffeekraken.sugar.php.twig.functions.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% __frontspecMetas(fronspec) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "metas.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/frontspec/metas.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.frontspec.og": {
                "id": "@coffeekraken.sugar.php.twig.functions.frontspec.og",
                "name": "og",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$frontspec": {
                        "name": "$frontspec",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The frontspec object from where to take the metas. If not specified, try to get it from the frontspec.json at the root of your project",
                        "default": null,
                        "defaultStr": "null"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to print out the frontspec.json \"og\" property",
                "namespace": "@coffeekraken.sugar.php.twig.functions.frontspec",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% __frontspecOg(frontspec) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "og.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/frontspec/og.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.html.attrs": {
                "id": "@coffeekraken.sugar.php.twig.functions.html.attrs",
                "name": "attrs",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$attributes": {
                        "name": "$attributes",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "null",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to generate an html attributes string from a key=>pair object",
                "namespace": "@coffeekraken.sugar.php.twig.functions.html",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div {{ __attrs(attributes) }}></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "attrs.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/html/attrs.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.json.jsonDecode": {
                "id": "@coffeekraken.sugar.php.twig.functions.json.jsonDecode",
                "name": "jsonDecode",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$json": {
                        "name": "$json",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The json string to decode",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to decode a json string into a usable twig object",
                "namespace": "@coffeekraken.sugar.php.twig.functions.json",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div data=\"{{ __jsonDecode(myJson) }}\"></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "jsonDecode.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/json/jsonDecode.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.lod.lodClasses": {
                "id": "@coffeekraken.sugar.php.twig.functions.lod.lodClasses",
                "name": "lodClasses",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$level": {
                        "name": "$level",
                        "type": {
                            "types": [
                                {
                                    "type": "Number"
                                }
                            ],
                            "raw": "Number"
                        },
                        "description": "The lod level you want to generate classes for",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function is about the lod system (level of details).\nIt generate the correct .s-lod--... classes depending on the requested level.",
                "namespace": "@coffeekraken.sugar.php.twig.functions.lod",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "<div classes=\"{{ __lodClasses(2) }}\"></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "lodClasses.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/lod/lodClasses.php",
                "children": {}
            },
            "@coffeekraken.sugar.twig.object.deepDiff": {
                "id": "@coffeekraken.sugar.twig.object.deepDiff",
                "name": "deepDiff",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$object1": {
                        "name": "$object1",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The base object on which to deepDiff the second",
                        "defaultStr": ""
                    },
                    "$object2": {
                        "name": "$object2",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object you want to deepDiff the first one",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function take two objects and return only what is different from one to the other",
                "namespace": "@coffeekraken.sugar.twig.object",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{{ __deepDiff({\n   prop1: 'Hello',\n   prop2: 'World'\n}, {\n   prop1: 'Plop'\n   prop2: 'World'\n}) }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "deepDiff.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/object/deepDiff.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.object.filter": {
                "id": "@coffeekraken.sugar.php.twig.object.filter",
                "name": "filter",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to filter",
                        "defaultStr": ""
                    },
                    "$filter": {
                        "name": "$filter",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                },
                                {
                                    "type": "Function"
                                }
                            ],
                            "raw": "String|Function"
                        },
                        "description": "The filter to use",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you filter some object items either by:\n- `^...`: The keys that starts with the passed string\n- `...$`: The keys that ends with the passed string\n- `function($key, $value) { retur true; }`: A function that must return true or false",
                "namespace": "@coffeekraken.sugar.php.twig.object",
                "status": "beta",
                "example": [
                    {
                        "language": "php",
                        "code": "{% set obj = {\n  hello: 'world',\n  yop: 'plop',\n  helloPlop: true\n} %}\n__filter($obj, '^hel'); // (object) [\"hello\" => 'world', \"helloPlop\" => true]\n__filter($obj, function($key, $value) {\n  return false;\n}); // (object) []"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "filter.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/object/filter.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.object.get": {
                "id": "@coffeekraken.sugar.php.twig.functions.object.get",
                "name": "get",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object from which to get the value",
                        "defaultStr": ""
                    },
                    "$dotpath": {
                        "name": "$dotpath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath to get in the object",
                        "defaultStr": ""
                    },
                    "$separator": {
                        "name": "$separator",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath separator",
                        "default": ".",
                        "defaultStr": "'.'"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to get a value from the passed object using the passed dotpath",
                "namespace": "@coffeekraken.sugar.php.twig.functions.object",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set obj = {\n  hello: {\n     world : \"plop\"\n  }\n} %}\n{{ __get(obj, 'hello.world') }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "get.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/object/get.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.object.props": {
                "id": "@coffeekraken.sugar.php.twig.functions.object.props",
                "name": "props",
                "type": {
                    "types": [
                        {
                            "type": "TwigFilter"
                        }
                    ],
                    "raw": "TwigFilter"
                },
                "param": {
                    "$object": {
                        "name": "$object",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "The object to get props from",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig filter allows you to get back an array of object properties",
                "namespace": "@coffeekraken.sugar.php.twig.functions.object",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div data=\"{{ __props(myObject) }}\"></div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "props.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/object/props.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.specs.markdownSpecsList": {
                "id": "@coffeekraken.sugar.php.twig.functions.specs.markdownSpecsList",
                "name": "markdownSpecsList",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$specs": {
                        "name": "$specs",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The list of specs you want to display",
                        "defaultStr": ""
                    },
                    "$details": {
                        "name": "$details",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "An associative array or an object that specify each specs details like `{margin:{title:'Margin',description':'Manage margins'}}`",
                        "default": [],
                        "defaultStr": "[]"
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to display a markdown specs list with some default specifications info like \"margin\", \"padding\", \"gap\", etc...\nYou can abviously override the defaults with your own details object that MUST contains an \"title\" and \"description\" property for each spec",
                "namespace": "@coffeekraken.sugar.php.twig.functions.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{{ __markdownSpecsList(['margin','padding'], {\n     margin: {\n         title: 'Margin',\n         description: 'Manage the margins with ease\n     }\n}) }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "markdownSpecsList.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/specs/markdownSpecsList.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.specs.readSpec": {
                "id": "@coffeekraken.sugar.php.twig.functions.specs.readSpec",
                "name": "readSpec",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$jsonDotPath": {
                        "name": "$jsonDotPath",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The dotpath relative to any $settings->rootDirs specified directories",
                        "defaultStr": ""
                    },
                    "$sJsonSettings": {
                        "name": "$sJsonSettings",
                        "type": {
                            "types": [
                                {
                                    "type": "Object"
                                }
                            ],
                            "raw": "Object"
                        },
                        "description": "Some settings to pass to the SJson class like the rootDirs, etc...",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to read a spec file like the \"viewspec.json\", \"frontspec\", etc... using the SSpecs class\nthat gives you the ability to reference other json and json props.",
                "namespace": "@coffeekraken.sugar.php.twig.functions.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<code>\n {{ __readSpec('sugar.views.component.card') }}\n</code>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "readSpec.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/specs/readSpec.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.specs.specsToMarkdown": {
                "id": "@coffeekraken.sugar.php.twig.functions.specs.specsToMarkdown",
                "name": "specsToMarkdown",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$specs": {
                        "name": "$specs",
                        "type": {
                            "types": [
                                {
                                    "type": "array",
                                    "of": [
                                        "String"
                                    ]
                                }
                            ],
                            "raw": "String[]"
                        },
                        "description": "The specs you want to display",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows display a spec in the markdown with all the available informations available in the passed spec json",
                "namespace": "@coffeekraken.sugar.php.twig.functions.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{{ __specsToMarkdown(mySpecs) }}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "specsToMarkdown.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/specs/specsToMarkdown.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.specs.specsValues": {
                "id": "@coffeekraken.sugar.php.twig.functions.specs.specsValues",
                "name": "specsValues",
                "type": {
                    "types": [
                        {
                            "type": "Function"
                        }
                    ],
                    "raw": "Function"
                },
                "param": {
                    "$values": {
                        "name": "$values",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The values to print in the attribute",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This function allows you to print the `s-specs-values=\"{...}\"` attribute only if the $_ENV['S-SPECS-VALUES'] is setted to true.",
                "namespace": "@coffeekraken.sugar.php.twig.functions.specs",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "<div {{ __specsValues(_context) }}>\n</div>"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "specsValues.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/specs/specsValues.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.string.idCompliant": {
                "id": "@coffeekraken.sugar.php.twig.functions.string.idCompliant",
                "name": "idCompliant",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$value": {
                        "name": "$value",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The value you want to make id compliant",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to ensure that a string is \"html\" id compliant",
                "namespace": "@coffeekraken.sugar.php.twig.functions.string",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set id = __idCompliant('something cool) %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "idCompliant.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/string/idCompliant.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.string.replace": {
                "id": "@coffeekraken.sugar.php.twig.functions.string.replace",
                "name": "replace",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "param": {
                    "$search": {
                        "name": "$search",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to replace",
                        "defaultStr": ""
                    },
                    "$replaceBy": {
                        "name": "$replaceBy",
                        "type": {
                            "types": [
                                {
                                    "type": "String"
                                }
                            ],
                            "raw": "String"
                        },
                        "description": "The string to replace your $search with",
                        "defaultStr": ""
                    }
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to replace a value by another in your string",
                "namespace": "@coffeekraken.sugar.php.twig.functions.string",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set str = 'hello world' %}\n{% set id = __replace(str, 'world', 'coco') %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "replace.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/string/replace.php",
                "children": {}
            },
            "@coffeekraken.sugar.php.twig.functions.string.uniqid": {
                "id": "@coffeekraken.sugar.php.twig.functions.string.uniqid",
                "name": "uniqid",
                "type": {
                    "types": [
                        {
                            "type": "TwigFunction"
                        }
                    ],
                    "raw": "TwigFunction"
                },
                "platform": [
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "description": "This twig function allows you to generate a uniqid",
                "namespace": "@coffeekraken.sugar.php.twig.functions.string",
                "status": "beta",
                "example": [
                    {
                        "language": "twig",
                        "code": "{% set id = __uniqid() %}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "uniqid.php",
                "extension": "php",
                "relPath": "src/php/twig/functions/string/uniqid.php",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.bare.cell.Cell": {
                "id": "@coffeekraken.sugar.specs.views.bare.cell.Cell",
                "name": "Cell",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Bare"
                    ],
                    "slug": "/specs/sugar.views.bare.cell"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.bare.cell",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cell.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/bare/cell/cell.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.bare.container.Container": {
                "id": "@coffeekraken.sugar.specs.views.bare.container.Container",
                "name": "Container",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Bare"
                    ],
                    "slug": "/specs/sugar.views.bare.container"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.bare.container",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "container.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/bare/container/container.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.bare.layout.Layout": {
                "id": "@coffeekraken.sugar.specs.views.bare.layout.Layout",
                "name": "Layout",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Bare"
                    ],
                    "slug": "/specs/sugar.views.bare.layout"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.bare.layout",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "layout.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/bare/layout/layout.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.bare.typo.Typo": {
                "id": "@coffeekraken.sugar.specs.views.bare.typo.Typo",
                "name": "Typo",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Bare"
                    ],
                    "slug": "/specs/sugar.views.bare.typo"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.bare.typo",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "typo.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/bare/typo/typo.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.components.card.Card": {
                "id": "@coffeekraken.sugar.specs.views.components.card.Card",
                "name": "Card",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Components"
                    ],
                    "slug": "/specs/sugar.views.components.card"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.components.card",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "card.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/components/card/card.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.components.cta.Cta": {
                "id": "@coffeekraken.sugar.specs.views.components.cta.Cta",
                "name": "Cta",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Components"
                    ],
                    "slug": "/specs/sugar.views.components.cta"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.components.cta",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "cta.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/components/cta/cta.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.components.slide.Slide": {
                "id": "@coffeekraken.sugar.specs.views.components.slide.Slide",
                "name": "Slide",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Components"
                    ],
                    "slug": "/specs/sugar.views.components.slide"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.components.slide",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "slide.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/components/slide/slide.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.specs.views.components.slider.Slider": {
                "id": "@coffeekraken.sugar.specs.views.components.slider.Slider",
                "name": "Slider",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Specs",
                        "Components"
                    ],
                    "slug": "/specs/sugar.views.components.slider"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.specs.views.components.slider",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "slider.md.twig",
                "extension": "md",
                "relPath": "src/views/_specs/components/slider/slider.md.twig",
                "children": {}
            },
            "@coffeekraken.sugar.views.layout.Main": {
                "id": "@coffeekraken.sugar.views.layout.Main",
                "name": "Main",
                "type": {
                    "types": [
                        {
                            "type": "Markdown"
                        }
                    ],
                    "raw": "Markdown"
                },
                "menu": {
                    "tree": [
                        "Views",
                        "Layout"
                    ],
                    "slug": "/views/layout/main"
                },
                "platform": [
                    {
                        "name": "blade",
                        "description": ""
                    },
                    {
                        "name": "twig",
                        "description": ""
                    }
                ],
                "namespace": "@coffeekraken.sugar.views.layout",
                "status": "stable",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "main.md",
                "extension": "md",
                "relPath": "src/views/_specs/layouts/main/main.md",
                "children": {}
            },
            "@coffeekraken.sugar.ui.card.menu": {
                "id": "@coffeekraken.sugar.ui.card.menu",
                "name": "menu",
                "type": {
                    "types": [
                        {
                            "type": "PostcssMixin"
                        }
                    ],
                    "raw": "PostcssMixin"
                },
                "platform": [
                    {
                        "name": "css",
                        "description": ""
                    }
                ],
                "description": "Apply the menu lnf to any .s-menu element",
                "namespace": "@coffeekraken.sugar.ui.card",
                "status": "beta",
                "example": [
                    {
                        "language": "css",
                        "code": ".s-menu {\n   @sugar.ui.card;\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "card.ts",
                "extension": "ts",
                "relPath": "src/node/postcss/mixins/ui/card/card.ts",
                "children": {}
            },
            "@coffeekraken.sugar.ui.menu.menu": {
                "id": "@coffeekraken.sugar.ui.menu.menu",
                "name": "menu",
                "type": {
                    "types": [
                        {
                            "type": "PostcssMixin"
                        }
                    ],
                    "raw": "PostcssMixin"
                },
                "platform": [
                    {
                        "name": "css",
                        "description": ""
                    }
                ],
                "description": "Apply the menu lnf to any .s-menu element",
                "namespace": "@coffeekraken.sugar.ui.menu",
                "status": "beta",
                "example": [
                    {
                        "language": "css",
                        "code": ".s-menu {\n   @sugar.ui.menu;\n}"
                    }
                ],
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "menu.ts",
                "extension": "ts",
                "relPath": "src/node/postcss/mixins/ui/menu/menu.ts",
                "children": {}
            },
            "@coffeekraken.sugar.php.views.layouts.main": {
                "id": "@coffeekraken.sugar.php.views.layouts.main",
                "name": "main",
                "type": {
                    "types": [
                        {
                            "type": "blade"
                        }
                    ],
                    "raw": "blade"
                },
                "description": "Main layout that handle things like scripts import, stylesheets import, etc...",
                "namespace": "@coffeekraken.sugar.php.views.layouts",
                "since": "2.0.0",
                "author": {
                    "name": "Olivier Bossel",
                    "email": "olivier.bossel@gmail.com",
                    "url": "https://coffeekraken.io"
                },
                "filename": "main.blade.php",
                "extension": "blade",
                "relPath": "src/views/blade/sugar/layouts/main/main.blade.php",
                "children": {}
            }
        }
    }
}
/**
 * @name          ol
 * @namespace            scss.component.ol.mixin
 * @type            Mixin
 *
 * Generate the properties and child css for the ol component
 *
 * @param       {String}      [$color:default]                   The colors you want to generate
 * @param       {String}    [$size=default]                 The size you want to generate
 * @param       {String}    [separator='settings.components.ol.separator']    The separator you want to use
 * @param       {Number}    [$line-height='settings.components.ol.look-and-feel.line-height | settings.look-and-feel.line-height']      The line-height you want to use
 * @param       {String}    [$scope=null]         The scope you want to generate. Can be "bare" or "style"
 *
 * @since           2.0.0
 * @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin ol(
  $color: default,
  $size: default,
  $separator: null,
  $line-height: null,
  $scope: null
) {
  @include context('components.ol') {
    @if scope('bare', $scope) {
      @if not $line-height {
        $line-height: setting('look-and-feel.line-height');
      }

      display: block;
      line-height: $line-height;
    }

    @if scope('style', $scope) {
      @if not $separator {
        $separator: setting('separator');
      }

      list-style: none;
      counter-reset: li;

      & > li {
        counter-increment: li;
        padding-left: 2.5em;
        position: relative;

        &::before {
          content: counter(li) '#{$separator}';
          color: color($color);
          display: inline-block;
          width: 2em;
          position: absolute;
          top: 0;
          left: 0;
          text-align: right;
        }
      }
    }
  }
}

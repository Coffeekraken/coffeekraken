/**
 * @name              title
 * @namespace            scss.component.title
 * @type              Mixin
 *
 * This mixin generate all the properties for a title depending on the parameters you set.
 *
 * @param         {Number}        $level          The title level you want to generate. 1, 2, 3, 4, 5, 6
 * @param         {Number}        [$font-size='settings.components.title.h#{level}.font-size']      Specify the font size for the title
 * @param         {String}        [$font-family='settings.components.title.h#{level}.font-family']      Specify the font family for the title
 * @param         {Number}        [$vr-margin-bottom='settings.components.title.h#{level}.vr-margin-bottom']      Specify the margin bottom in vertical rhythm context
 * @param         {List<String>}    [$scope=null]       The scope you want to generate. Usually "all", "bare" or "style"            
 *
 * @since       2.0.0
 * @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin title(
  $level,
  $font-size: null,
  $font-family: null,
  $margin-bottom: null,
  $scope: null
) {
  @include context('components.title.h#{$level}') {
    @include scope('bare', $scope) {
      @if not $font-size {
        $font-size: setting('font-size');
      }
      @if not $margin-bottom {
        $margin-bottom: setting('margin-bottom');
      }
      display: block;
      font-size: font-size($font-size);
      @include vr-scope() {
        margin-bottom: space($margin-bottom);
      }
    }
    @include scope('style', $scope) {
      @if not $font-family {
        $font-family: setting('font-family');
      }
      $props: setting('.');
      @each $prop in map-keys($props) {
        @if $prop !=
          'margin-bottom' and
          $prop !=
          'font-size' and
          $prop !=
          'font-family'
        {
          #{$prop}: map-get($props, $prop);
        }
      }
      font-family: font-family($font-family);
    }
  }
}

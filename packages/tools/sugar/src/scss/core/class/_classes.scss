@use 'sass:meta';
@use 'sass:map';
@use 'sass:string';
/**
 * @name    classes
 * @namespace           sugar.scss.core.class
 * @type      mixin
 *
 * Print out all wanted registered classes like padding helpers, margin helpers, font helpers, etc...
 *
 * @param 			{List}<string> 			$namespaces 		The classes namespaces wanted
 *
 * @example     scss
 * \@include Sugar.classes(); // will print out all the classes
 * \@include Sugar.classes('sugar.font'); // will print all the font classes
 * \@include Sugar.classes('sugar.clearfix' 'sugar.pull'); // the clearfixes and the pull classes
 * // etc...
 *
 * @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
 @mixin classes($namespaces: setting('classes.generate.namespace')) {
   $namespaces: test-argument(
     'Sugar.classes',
     'namespaces',
     'string|list-string',
     $namespaces
     );

  // override the $__classNamespacesWanted global variable
  $__classNamespacesWanted: $namespaces !global;

  @include generate-classes();

}

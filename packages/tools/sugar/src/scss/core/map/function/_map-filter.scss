@use 'sass:map';
@use 'sass:meta';
@use 'sass:string';
/**
 * @name      map-filter
 * @namespace           sugar.scss.core.map.function
 * @type      function
 *
 * Filter a map by key, value and the passed processor function
 *
 * @param           {Map}         $map          The map to process
 * @param           {String}      $processor    The processor function name you want to invoke on each values
 * @return          {Map}                       The filtered map
 *
 * @example     scss
 * @function my-cool-function($key, value) {
 *    @return true;
 * }
 * Sugar.map-filter((
 *  'hello.world': 'Hello',
 *  'coco.world': 'Coco',
 *  'hello.that': 'That is cool'
 * ), 'my-cool-function');
 * // return that map:
 * (
 *  'hello.world': 'Hello',
 *  'coco.world': 'Coco',
 *  'hello.that': 'That is cool'
 * )
 *
 * @since       2.0.0
 * @author 	        Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@function map-filter($map, $processor) {
  $map: test-argument('map-filter', 'map', map, $map);
  $processor: test-argument('map-filter', 'processor', string, $processor);
  // get the map keys
  $keys: map.keys($map);
  // init the filtered map
  $filtered-map: ();
  // loop on each keys to check if they match the wanted namespace
  @each $key, $value in $map {
    @if meta.call($processor, $key, $value) {
      $filtered-map: map-set($filtered-map, $key, $value);
    }
  }
  // return the filtered map
  @return $filtered-map;
}

/**
 * @name              helper-position-classes
 * @namespace         sugar.scss.helper.class
 * @type              Mixin
 *
 * This mixin generate all the "position" related helper classes.
 *
 * @classname     #{sel(relative)}       Set an element position as ```relative```
 * @classname     #{sel(absolute)}       Set an element position as ```absolute```
 * @classname     #{sel(fixed)}       Set an element position as ```fixed```
 * @classname     #{sel(fixed-top)}       Set an element position as ```fixed``` top
 * @classname     #{sel(fixed-bottom)}       Set an element position as ```fixed``` bottom
 * @classname     #{sel(sticky)}       Set an element position as ```sticky```
 * @classname     #{sel(sticky-top)}       Set an element position as ```sticky``` top
 *
 * @example         scss
 * @include Sugar.helper-position-classes();
 *
 * @since         2.0.0
 * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
@mixin helper-position-classes() {
  @if class-match-namespace('sugar.helper.position.relative') {
    /**
    * @name 		#{sel(relative)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.relative
    * @type        Classname
    *
    * Set an element position as ```relative```
    *
    * @example 	html
    * <div class="#{sel(relative)}">
    * 	I'm relative now
    * </div>
    *
    * @since       1.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(relative)} {
      position: relative;
    }
  }

  @if class-match-namespace('sugar.helper.position.absolute') {
    /**
    * @name 		#{sel(absolute)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.absolute
    * @type        Classname
    *
    * Set an element position as ```absolute```
    *
    * @example 	html
    * <div class="#{sel(absolute)}">
    * 	I'm absolute now
    * </div>
    *
    * @since       1.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(absolute)} {
      position: absolute;
    }
  }

  @if class-match-namespace('sugar.helper.position.fixed') {
    /**
    * @name 		#{sel(fixed)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.fixed
    * @type        Classname
    *
    * Set an element position as ```fixed```
    *
    * @example 	html
    * <div class="#{sel(fixed)}">
    * 	I'm fixed now
    * </div>
    *
    * @since       2.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(fixed)} {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  @if class-match-namespace('sugar.helper.position.fixed.top') {
    /**
    * @name 		#{sel(fixed-top)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.fixed.top
    * @type        Classname
    *
    * Set an element position as ```fixed``` top
    *
    * @example 	html
    * <div class="#{sel(fixed-top)}">
    * 	I'm fixed now
    * </div>
    *
    * @since       2.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(fixed-top)} {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
    }
  }

  @if class-match-namespace('sugar.helper.position.fixed.bottom') {
    /**
    * @name 		#{sel(fixed-bottom)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.fixed.bottom
    * @type        Classname
    *
    * Set an element position as ```fixed``` bottom
    *
    * @example 	html
    * <div class="#{sel(fixed-bottom)}">
    * 	I'm fixed now
    * </div>
    *
    * @since       2.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(fixed-bottom)} {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
    }
  }

  @if class-match-namespace('sugar.helper.position.sticky') {
    /**
    * @name 		#{sel(sticky)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.sticky
    * @type        Classname
    *
    * Set an element position as ```sticky```
    *
    * @example 	html
    * <div class="#{sel(sticky)}">
    * 	I'm sticky now
    * </div>
    *
    * @since       2.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(sticky)} {
      @supports (position: sticky) {
        position: sticky;
      }
    }
  }

  @if class-match-namespace('sugar.helper.position.sticky.top') {
    /**
    * @name 		#{sel(sticky-top)}
    * @namespace         sugar.scss.helper.class
    * @class-namespace     sugar.helper.position.sticky.top
    * @type        Classname
    *
    * Set an element position as ```sticky``` top
    *
    * @example 	html
    * <div class="#{sel(sticky-top)}">
    * 	I'm sticky on top now
    * </div>
    *
    * @since       2.0.0
    * @author 	        Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .#{sel(sticky-top)} {
      @supports (position: sticky) {
        position: sticky;
        top: 0;
        z-index: 1;
      }
    }
  }
}

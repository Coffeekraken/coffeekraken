/**
 * @name    size
 * @namespace           sugar.scss.helper.mixin
 * @type      mixin
 *
 * Quicky and easily set simple or complexe size to any element
 *
 * @param 		{String|Number} 		$size-width				The size like "cover" or "contain", or the width in number
 * @param 		{Number} 				[$height=null] 			The height wanted
 * @param 		{String} 				[$position=absolute] 	The position wanted if the size is "cover" or "contain"
 * @param     {String}        [align=center]   The horizontal alignement you want. Can be "left, right, center"
 * @param     {String}Â        [valign=middle]     The vertical alignement you want. Can be "top, middle, bottom"
 *
 * @example 	scss
 * .my-cool-image {
 * 	\@include Sugar.size(cover);
 * }
 *
 * @since       1.0.0
 * @author         Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin size(
  $size-width,
  $height: null,
  $position: absolute,
  $align: left,
  $valign: top
) {
  @if type-of($size-width) != number {
    $size-width: test-argument(
      'Sugar.size',
      'size-width',
      (cover, contain, fit),
      $size-width
    );
  } @else {
    $size-width: test-argument('Sugar.size', 'size-width', number, $size-width);
  }
  $height: test-argument('Sugar.size', 'height', 'number|null', $height);
  $position: test-argument(
    'Sugar.size',
    'position',
    (relative, absolute),
    $position
  );
  $align: test-argument('Sugar.size', 'align', (left, center, right), $align);
  $valign: test-argument(
    'Sugar.size',
    'valign',
    (top, middle, bottom),
    $valign
  );

  // apply values
  @if type-of($size-width) == string {
    position: $position;
    @if $size-width == cover or $size-width == contain {
      --translateX: 0;
      --translateY: 0;
      @if $align == left {
        left: 0;
      } @else if $align == center {
        left: 50%;
        --translateX: -50%;
      } @else if $align == right {
        right: 0;
      }
      @if $valign == top {
        top: 0;
      } @else if $valign == middle {
        top: 50%;
        --translateY: -50%;
      } @else if $valign == bottom {
        bottom: 0;
      }
      transform: translateX(var(--translateX)) translateY(var(--translateY));
    }
    @if $size-width == cover {
      min-width: 100%;
      min-height: 100%;
    } @else if $size-width == contain {
      max-width: 100%;
      max-height: 100%;
    } @else if $size-width == fit {
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
    }
  } @else if
    type-of($size-width) ==
    number and
    unitless($size-width) and
    $size-width <
    1
  {
    @include ratio($size-width);
  } @else {
    @if $size-width {
      width: $size-width;
    }
    @if $height {
      height: $height;
    }
  }
}

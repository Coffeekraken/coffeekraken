"use strict";
module.exports = (__SWatch) => {
    let obj = {
        a: 'hello',
        b: {
            bb: 'world'
        },
        glob: {
            something: {
                cool: 'Hello',
                other: 'Yop'
            }
        },
        c: {
            cc: {
                ccc: ['hello', 'world']
            }
        }
    };
    let doneAssign, doneUpdating, doneUpdatingDeep, doneDeleting, doneAddIntoArray, doneGlobAction, doneGlobPattern;
    let hasUnwatchedObjectBeenWatched = false;
    const watchedObj = new __SWatch(obj);
    watchedObj.on('coco:set', (update) => {
        doneAssign();
    });
    watchedObj.on('a:*', (update) => {
        if (watchedObj.a === 'bonjours')
            doneUpdating();
    });
    watchedObj.on('b.bb:*', (update) => {
        if (watchedObj.b.bb === 'hola')
            doneUpdatingDeep();
    });
    watchedObj.on('*:delete', (update) => {
        if (!update.target)
            doneDeleting();
    });
    watchedObj.on('*.cool:*', (update) => {
        doneGlobPattern();
    });
    watchedObj.on('*.other:set', (update) => {
        doneGlobAction();
    });
    watchedObj.on('*:push', (update) => {
        expect(watchedObj.c.cc.ccc).toEqual(['hello', 'world', 'plop']);
        doneAddIntoArray();
    });
    watchedObj.on('b.plop:*', (update) => {
        if (watchedObj.b.plop === 'yop') {
            hasUnwatchedObjectBeenWatched = true;
        }
    });
    test('Assign a new value', (done) => {
        doneAssign = done;
        watchedObj.coco = 'plop';
    });
    test('Update an existing value', (done) => {
        doneUpdating = done;
        watchedObj.a = 'bonjours';
    });
    test('Update an existing deep value', (done) => {
        doneUpdatingDeep = done;
        watchedObj.b.bb = 'hola';
    });
    test('Deleting a deep value', (done) => {
        doneDeleting = done;
        delete watchedObj.b.bb;
    });
    test('Adding a value into an array using push', (done) => {
        doneAddIntoArray = done;
        watchedObj.c.cc.ccc.push('plop');
    });
    test('Adding a value to a deep variable to trigger the corresponding glob', (done) => {
        doneGlobPattern = done;
        watchedObj.glob.something.cool = 'hola';
    });
    test('Adding a value to a deep variable to trigger the corresponding glob action', (done) => {
        doneGlobAction = done;
        watchedObj.glob.something.other = 'plop';
    });
    test('Unwatch the watchedObject', (done) => {
        const obj = watchedObj.unwatch();
        obj.b.plop = 'yop';
        setTimeout(() => {
            expect(hasUnwatchedObjectBeenWatched).toBe(false);
            done();
        });
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU1dhdGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU1dhdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUU7SUFDNUIsSUFBSSxHQUFHLEdBQUc7UUFDUixDQUFDLEVBQUUsT0FBTztRQUNWLENBQUMsRUFBRTtZQUNELEVBQUUsRUFBRSxPQUFPO1NBQ1o7UUFDRCxJQUFJLEVBQUU7WUFDSixTQUFTLEVBQUU7Z0JBQ1QsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsS0FBSyxFQUFFLEtBQUs7YUFDYjtTQUNGO1FBQ0QsQ0FBQyxFQUFFO1lBQ0QsRUFBRSxFQUFFO2dCQUNGLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7YUFDeEI7U0FDRjtLQUNGLENBQUM7SUFFRixJQUFJLFVBQVUsRUFDWixZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLFlBQVksRUFDWixnQkFBZ0IsRUFDaEIsY0FBYyxFQUNkLGVBQWUsQ0FBQztJQUVsQixJQUFJLDZCQUE2QixHQUFHLEtBQUssQ0FBQztJQUUxQyxNQUFNLFVBQVUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVyQyxVQUFVLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQ25DLFVBQVUsRUFBRSxDQUFDO0lBQ2YsQ0FBQyxDQUFDLENBQUM7SUFDSCxVQUFVLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQzlCLElBQUksVUFBVSxDQUFDLENBQUMsS0FBSyxVQUFVO1lBQUUsWUFBWSxFQUFFLENBQUM7SUFDbEQsQ0FBQyxDQUFDLENBQUM7SUFDSCxVQUFVLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQ2pDLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssTUFBTTtZQUFF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
{% set finalId = id %}
{% if not id  %}
    {% set finalId = 's-layout-' ~ __uniqid() %}
{% endif %}
<div id="{{ finalId }}" class="{{ attributes.class }} {{ __spacesClasses(spaces, frontspec) }}" {{ __attrs(attributes, ['class'])|raw }}>
    {% set filteredContext = _context %}
    {% set filteredContext = filteredContext|filter((v, k) => k != 'nodes') %}
    {{ __nodeDataTemplate(specs ? specs : 'sugar.views.bare.layout', filteredContext)|raw }}
    {% set layoutCssRes = __layoutCss(media ? media : '1', {
        selector: '#' ~ finalId ~ '-layout'
    }) %}
    <style>
        {{ layoutCssRes.css|raw }}
    </style>
    {% if container %}
        <div class="s-container:{{ container }}">
    {% endif %}
        <div class="s-layout {{ gap ? 's-gap:' ~ gap : '' }}" id="{{ finalId }}-layout">
            {% if html %}
                {{ html|raw }}
            {% elseif nodes %}
                {% set drawedAreas = [] %}
                {% for areaId, html in nodes %}
                    <div class="s-layout_area-{{ areaId }}" s-container="area-{{ areaId|replace({
                        'area-': ''
                    }) }}">
                        {% if html %}
                            {{ html|raw }}
                        {% endif %}
                    </div>
                    {% set drawedAreas = drawedAreas|merge([areaId, areaId|replace({'area-': ''})]) %}
                {% endfor %}
                {% for areaId in layoutCssRes.areas %}
                    {% if areaId in drawedAreas %}
                    {% else %}
                        <div class="s-layout_area-{{ areaId }}" s-container="area-{{ areaId }}"></div>
                    {% endif %}
                {% endfor %}
            {% else %}
                <p>You MUST pass at least some "nodes" or raw "html" for your layout...</p>
            {% endif %}        
        </div>
    {% if container %}
        </div>
    {% endif %}
</div>
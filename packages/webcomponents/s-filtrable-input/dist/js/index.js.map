{
    "version": 3,
    "names": [],
    "sources": [
        "index.svelte"
    ],
    "sourcesContent": [
        "<svelte:options tag=\"s-filtrable-input\" />\n\n<script type=\"text/ts\">import __SSvelteComponent from '@coffeekraken/s-svelte-component';\nimport __SFiltrableInputComponentInterface from './interface/SFiltrableInputComponentInterface';\nimport __clone from '@coffeekraken/sugar/shared/object/clone';\nclass MyCoolComponent extends __SSvelteComponent {\n    constructor(params) {\n        super(params, {\n            svelteComponent: {}\n        });\n    }\n}\nMyCoolComponent.interface = __SFiltrableInputComponentInterface;\nconst component = new __SSvelteComponent($$props, {\n    svelteComponent: {\n        classPrefix: 's-filtrable-input',\n        interface: __SFiltrableInputComponentInterface\n    }\n});\nlet { value, template, noItemTemplate, filtrable, maxItems } = component.props;\nlet input;\nconst items = [\n    {\n        title: 'Hello',\n        body: `Lorem Ipsum is simply dummy text of the printing`\n    },\n    {\n        title: 'Coco',\n        body: `Lorem Ipsum is simply dummy text of the printing`\n    },\n    {\n        title: 'Plopfopof',\n        body: `Lorem Ipsum is simply dummy text of the printing`\n    }\n];\nfor (let i = 0; i < 1000; i++) {\n    items.push({\n        title: 'Coco ' + i,\n        body: `Lorem Ipsum is simply dummy text of the printing`\n    });\n}\nlet filteredItems = items;\nfunction filterItems() {\n    let matchedItemsCount = 0;\n    filteredItems = items\n        .map((item) => __clone(item))\n        .filter((item) => {\n        if (matchedItemsCount >= maxItems)\n            return false;\n        let matchFilter = false;\n        for (let i = 0; i < Object.keys(item).length; i++) {\n            const propName = Object.keys(item)[i], propValue = item[propName];\n            // prevent not string value\n            if (typeof propValue !== 'string')\n                continue;\n            // check if the current propName is specified in the filtrable list\n            if (filtrable.indexOf(propName) !== -1) {\n                const reg = new RegExp(value, 'gi');\n                if (propValue.match(reg)) {\n                    matchedItemsCount++;\n                    matchFilter = true;\n                    if (value && value !== '') {\n                        const reg = new RegExp(value, 'gi');\n                        const finalString = propValue.replace(reg, (str) => {\n                            return `<span class=\"${component.className('__list-item-highlight')}\">${str}</span>`;\n                        });\n                        item[propName] = finalString;\n                    }\n                }\n            }\n        }\n        return matchFilter;\n    });\n}\ncomponent.beforeUpdate(() => {\n    if (!inputStr) {\n    }\n    if (!template) {\n        const templateElm = document.querySelector('s-filtrable-input template#item');\n        if (templateElm) {\n            template = templateElm.innerHTML;\n        }\n    }\n    if (!noItemTemplate) {\n        const templateElm = document.querySelector('s-filtrable-input template#no-item');\n        if (templateElm) {\n            noItemTemplate = templateElm.innerHTML;\n        }\n    }\n});\nlet inputStr;\ninputStr = component.rootElm.querySelector('input').outerHTML;\n;\nif (inputStr.includes('class=\"')) {\n    inputStr = inputStr.replace('class=\"', `class=\"${component.className('__input')} `);\n}\ncomponent.onMount(() => {\n    filterItems();\n});\n</script>\n\n<div class={component.className()}>\n  {@html inputStr}\n  <ul class={component.className('__list')}>\n    {#if !filteredItems.length}\n      <li class={component.className('__list-item __list-no-item')}>\n        {@html component.compileMustache(noItemTemplate, {})}\n      </li>\n    {:else}\n      {#each filteredItems as item, idx}\n        <li\n          style=\"z-index: {999999999 - idx}\"\n          class={component.className('__list-item')}\n        >\n          {@html component.compileMustache(template, item)}\n        </li>\n      {/each}\n    {/if}\n  </ul>\n</div>\n\n<style>.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) {\n  display: inline-block;\n  position: relative\n}\n.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) .s-filtrable-input__list {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n  opacity: 0;\n  max-width: calc(100vw - 100px);\n  pointer-events: none\n}\n.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) .s-filtrable-input__input:focus + .s-filtrable-input__list,\n.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) .s-filtrable-input__list:focus {\n  opacity: 1;\n  pointer-events: all\n}\n/* .s-filtrable-input--ontop & {\n\t\t\tbottom: 100%;\n\t\t\ttop: initial;\n\t\t\t} */\n.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) .s-filtrable-input__list-item {\n  cursor: pointer;\n  position: relative\n}\n.s-filtrable-input:not(.s-no-bare .s-filtrable-input):not(.no-bare) .s-filtrable-input__list-item * {\n  pointer-events: none\n}\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) {\n  /* .s-filtrable-input--ontop & {\n\t\tbottom: 100%;\n\t\ttop: initial;\n\t\t} */\n  \n}\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list {\n  /* width: 50vw;*/\n  background-color: var(--s-theme-color-surface-default, #ffffff);\n  padding: var(--s-theme-space-20, 0.4rem);\n  min-width: 500px;\n  border-radius: 5px;\n  box-shadow: 0 0.6px 0.5px rgba(0, 0, 0, 0.017),0 1.5px 1.1px rgba(0, 0, 0, 0.024),0 2.8px 2.1px rgba(0, 0, 0, 0.03),0 4.9px 3.8px rgba(0, 0, 0, 0.036),0 9.2px 7.1px rgba(0, 0, 0, 0.043),0 22px 17px rgba(0, 0, 0, 0.06)\n}\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list > li,\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list > dt {\n  border-radius: 5px;\n  padding: var(--s-theme-space-40, 0.8rem)\n}\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list > li:hover,\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list > dt:hover {\n  background-color: var(--s-theme-color-primary-20, #fae7b7)\n}\n/* .s-filtrable-input__list-item {\n        background-color: sugar.color(surface, 50);\n        padding: sugar.space(50);\n        transition: all 0.2s ease-in-out;\n\n        &:hover {\n          background-color: sugar.color(surface, 55);\n          @sugar.depth (2);\n        }\n      } */\n.s-filtrable-input:not(.s-no-lnf .s-filtrable-input):not(.s-no-lnf) .s-filtrable-input__list-item-highlight {\n  background-color: var(--s-theme-color-primary-default, #f2bc2b)\n}\n.s-style-list {\n  background-color: var(--s-theme-color-surface-default, #ffffff);\n  padding: var(--s-theme-space-20, 0.4rem);\n  min-width: 500px;\n  border-radius: 5px;\n  box-shadow: 0 0.6px 0.5px rgba(0, 0, 0, 0.017),0 1.5px 1.1px rgba(0, 0, 0, 0.024),0 2.8px 2.1px rgba(0, 0, 0, 0.03),0 4.9px 3.8px rgba(0, 0, 0, 0.036),0 9.2px 7.1px rgba(0, 0, 0, 0.043),0 22px 17px rgba(0, 0, 0, 0.06)\n}\n.s-style-list > li,\n.s-style-list > dt {\n  border-radius: 5px;\n  padding: var(--s-theme-space-40, 0.8rem)\n}\n.s-style-list > li:hover,\n.s-style-list > dt:hover {\n  background-color: var(--s-theme-color-primary-20, #fae7b7)\n}</style>\n"
    ],
    "mappings": "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"
}
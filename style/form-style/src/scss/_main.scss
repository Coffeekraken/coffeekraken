@use 'sugar/index' as sugar;

// input
%field-bare {
  display: inline-block;
  -webkit-appearance: none;
  -moz-appearance: none;
  // &:not(.input-addon):not(textarea) {
  // 	line-height: 1 !important;
  // }
  border: none;
  outline: none;
  width: 100%;
  font-size: 1em;
}
%field-style {
  border-width: 1px;
  border-style: solid;

  &:disabled {
    cursor: not-allowed;
  }
}

/**
 * @name      field-size
 * @namespace       form-style
 * @type        Mixin
 *
 * Set the styling for field sizes like padding, height, etc...
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin field-size() {
  border-radius: sugar.lnf(border-radius);
  padding: 0 sugar.lnf(padding-vertical);
  height: 1em + sugar.lnf(padding-horizontal) * 2;
  &:not(input):not(select) {
    padding: sugar.lnf(padding-horizontal) sugar.lnf(padding-vertical);
  }
}

/**
 * @name      field-color
 * @namespace    form-style
 * @type      Mixin
 *
 * Set the styling for field color like borders
 *
 * @param 		{Color} 		$color 		The color wanted for the field
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin field-color($color) {
  border-color: sugar.color($color, -opacity 0.1);

  [data-input-activator]:focus ~ &,
  [data-input-activator]:checked ~ &,
  &:hover:not(:disabled) {
    border-bottom-color: sugar.color($color, -opacity 0.6);
  }
  [data-input-activator]:focus ~ &,
  [data-input-activator]:checked ~ &,
  &:focus:not(:disabled),
  &.active:not(:disabled) {
    border-color: sugar.color($color, -opacity 0.6);
  }
}

/**
 * @name      input
 * @namespace     form-style
 * @type        Mixin
 *
 * Apply the bare and style css for input field (text, email, etc...)
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the field
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin input($color: default) {
  @include input-bare();
  @include input-style($color);
}

/**
 * @name      input-bare
 * @namespace     form-style
 * @type        Mixin
 *
 * Apply the bare css for input field (text, email, etc...)
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin input-bare() {
  @extend %field-bare;
  @include sugar.font(sugar.setting("typography.font-family"));
  @include field-size();

  // disable anoying contact icon selection
  // on safari
  &::-webkit-contacts-auto-fill-button {
    visibility: hidden;
    display: none !important;
    pointer-events: none;
    position: absolute;
    right: 0;
  }
  &::-ms-clear {
    display: none;
  }
}

/**
 * @name        input-style
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the style css for input field (text, email, etc...)
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the field
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin input-style($color: default) {
  @extend %field-style;
  color: sugar.color(text);
  @include sugar.transition(border fast);
  @include sugar.input-placeholder() {
    color: sugar.color(text, -opacity 0.4);
  }
  &:disabled {
    opacity: sugar.lnf(disabled-opacity);
  }
  @if ($color) {
    @include field-color($color);
  }
  &[dirty]:invalid,
  &[dirty][invalid] {
    border-color: sugar.color(error) !important;
  }
}

/**
 * @name        textarea
 * @namespace       form-style
 * @type      Mixin
 *
 * Apply the bare and style css for textarea
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the textarea
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin textarea($color: default) {
  @include textarea-bare();
  @include textarea-style($color);
}

/**
 * @name      textarea-field-size
 * @namespace     form-style
 * @type      Mixin
 *
 * Set the styling for textarea sizes like padding, etc...
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin textarea-field-size() {
  padding: s-lnf(padding-horizontal) s-lnf(padding-vertical);
  display: inline-block;
}

/**
 * @name      textarea-bare
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the bare css for textarea
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin textarea-bare() {
  @extend %field-bare;
  @include sugar.font(sugar.setting("typography.font-family"));
  @include textarea-field-size();
}

/**
 * @name      textarea-style
 * @namespace       form-style
 * @type      Mixin
 *
 * Apply the style css for textarea
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the textarea
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin textarea-style($color: default) {
  @extend %field-style;
  color: sugar.color(text);
  @include sugar.transition(border fast);
  @include sugar.input-placeholder() {
    color: sugar.color(text, -opacity 0.4);
  }
  &:disabled {
    opacity: sugar.lnf(disabled-opacity);
  }
  @if ($color) {
    @include field-color($color);
  }
  &[dirty]:invalid,
  &[dirty][invalid] {
    border-color: sugar.color(error) !important;
  }
}

/**
 * @name      select
 * @namespace       form-style
 * @type      Mixin
 *
 * Apply the bare and style css for select
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the select
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin select($color: default) {
  @include select-bare();
  @include select-style($color);
}

/**
 * @name      select-field-color
 * @namespace       form-style
 * @type        Mixin
 *
 * Set the styling for select colors like background arrow, etc...
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin select-field-color($color) {

  &[dirty]:invalid,
  &[dirty][invalid] {

  }
}

/**
 * @name      select-bare
 * @namespace       form-style
 * @type      Mixin
 *
 * Apply the bare css for select
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin select-bare() {
  @extend %field-bare;
  @include sugar.font(sugar.setting("typography.font-family"));
  background-size: 9px 6px;
  background-position: right center;
  background-origin: content-box;
  background-repeat: no-repeat;
  background-color: white;
  @include field-size();
  &::-ms-expand {
    display: none;
  }
}

/**
 * @name      select-style
 * @namespace       form-style
 * @type        Mixin
 *
 * Apply the style css for select
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the select
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin select-style($color: default) {
  @extend %field-style;
  color: sugar.color(text);
  @include sugar.transition(border fast);
  @include sugar.input-placeholder() {
    color: sugar.color(text, -opacity 0.4);
  }
  &:disabled {
    opacity: sugar.lnf(disabled-opacity);
  }
  @if $color {
    @include field-color($color);
    @include select-field-color($color);
  }
  &[dirty]:invalid,
  &[dirty][invalid] {
    border-color: sugar.color(error) !important;
  }
}

/**
 * @name      group
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the bare and style css for form group
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin group() {
  @include group-bare();
  @include group-style();
}

/**
 * @name      group-bare
 * @namespace       form-style
 * @type      Mixin
 *
 * Apply the bare css for form group
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin group-bare() {
  // make form group flex
  display: flex !important;
  flex: 1 !important;
  align-items: center !important;
  > * {
    flex: 1;
  }
  > input[type="submit"],
  > input[type="checkbox"],
  > input[type="radio"],
  > button,
  .form-addon {
    flex: 0;
  }
}

/**
 * @name        group-style
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the style css for form group
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin group-style() {
}

/**
 * @name      addon
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the bare and style css for form addon
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the form addon
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin addon($color: default) {
  @include addon-bare();
  @include addon-style($color);
}

/**
 * @name        addon-bare
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the bare css for form group
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin addon-bare() {
  @extend %field-bare;
  // set input styling
  @include field-size();

  @include sugar.vertical-rhythm {
    margin-bottom: 1em;
  }
}

/**
 * @name      addon-style
 * @namespace     form-style
 * @type      Mixin
 *
 * Apply the bare and style css for form group
 *
 * @param 		{Color} 		[$color=default] 		The color wanted for the select
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin addon-style($color: default) {
  @include field-color($color);
  background-color: sugar.color($color, -opacity 0.08);
  color: sugar.color($color, -darken 10%);
}

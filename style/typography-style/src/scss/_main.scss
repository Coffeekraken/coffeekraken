@use '@coffeekraken/sugar/index' as sugar;

/**
 * @name      title
 * @namespace     typography-style
 * @type    Mixin
 *
 * Apply the title css
 *
 * @param 		{Number} 		$size 		The size wanted. If unitless, will use modular scale to calculate size
 * @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
 @mixin title(
	$size,
	$base : null
) {
	@include title-bare($size);
	@include title-style($size);
}

/**
 * @name      title-bare
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the title bare css
 *
 * @param 		{Number} 		$size 				The size wanted. If unitless, will use modular scale to calculate size
 * @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin title-bare(
	$size,
	$base : null
) {
	@if sugar.unit($size) == '' {
		font-size: sugar.ms($size, $base);
	} @else {
		font-size: $size;
	}
	line-height:1.2;
}
/**
 * @name      title-style
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the title style css
 *
 * @param 		{Number} 		$size 				The size wanted. If unitless, will use modular scale to calculate size
 * @param 		{Integer}		[$base=null] 		The base on which to calculate the modular scale if needed
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin title-style(
	$size,
	$base : null
) {
}

/**
 * @name      paragraph-bare
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the paragraph bare css
 *
 * @param 		{Number} 		$size 				The size wanted
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin paragraph-bare(
	$size
) {
	font-size: $size;
	line-height: 1.5;
}

/**
 * @name      paragraph-style
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the paragraph style css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin paragraph-style() {

}

/**
 * @name      link
 * @namespace     typography-style
 * @type    Mixin
 *
 * Apply the link css
 *
 * @param 		{Color} 		[$color=primary] 		The color used to style link
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin link(
	$color : primary
) {
	@include link-bare();
	@include link-style($color);
}

/**
 * @name      link-bare
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the link bare css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin link-bare(
) {
}

/**
 * @name      link-style
 * @namespace   typography-style
 * @type    Mixin
 *
 * Apply the link style css
 *
 * @param 		{Color} 		[$color=primary] 		The color used to style link
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin link-style(
	$color : primary
) {
	text-decoration:none;
	color: sugar.color($color);
}

/**
 * @name      inline-text
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the inline-text css
 *
 * @param 		{String} 		$tag 		The tag to use the style for
 * @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin inline-text(
	$tag,
	$color : primary
) {
	@include inline-text-bare($tag);
	@include inline-text-style($tag, $color);
}

/**
 * @name      inline-text-bare
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the inline-text bare css
 *
 * @param 		{String} 		$tag 		The tag to use the style for
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin inline-text-bare(
	$tag
) {
	@if $tag == mark or $tag == marked {

	} @else if $tag == del or $tag == deleted {

	} @else if $tag == s or $tag == strikethrough {

	} @else if $tag == ins or $tag == inserted {

	} @else if $tag == underlined or $tag == u {

	} @else if $tag == small {

	} @else if $tag == strong or $tag == bold {

	} @else if $tag == em or $tag == italic {

	}
}
/**
 * @name      inline-text-style
 * @namespace       typography-style
 * @type      Mixin
 *
 * Apply the inline-text css
 *
 * @param 		{String} 		$tag 		The tag to use the style for
 * @param 		{Color} 		[$color=primary] 		The color used to style different inline text elements
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin inline-text-style(
	$tag,
	$color : primary
) {
	@if $tag == mark or $tag == marked {
		background-color: sugar.color($color, -opacity .1);
	} @else if $tag == del or $tag == deleted {
		text-decoration: line-through;
	} @else if $tag == s or $tag == strikethrough {
		text-decoration: line-through;
	} @else if $tag == ins or $tag == inserted {
		text-decoration: underline;
	} @else if $tag == underlined or $tag == u {
		text-decoration: underline;
	} @else if $tag == small {
		font-size:.65em;
	} @else if $tag == strong or $tag == bold {
		font-weight: bold;
	} @else if $tag == em or $tag == italic {
		font-style:italic;
	}
}

/**
 * @name      list
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the list css
 *
 * @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt"
 * @param 		{Color} 			[$color=primary] 	The color used for styling bullets
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin list(
	$tag,
	$color : primary
) {
	@include list-bare($tag);
	@include list-style($tag, $color);
}

/**
 * @name      list-bare
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the list bare css
 *
 * @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt"
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin list-bare(
	$tag
) {
	@if $tag == dl {
		@include sugar.list();
	} @else if length($tag) == 2 and nth($tag,2) == dt {
		font-weight: bold;
		line-height: 1.5;
		margin-bottom: sugar.space(default) * .5;
	} @else if length($tag) == 2 and nth($tag,2) == dd {
		margin-bottom: sugar.space(default);
		line-height: 1.5;
	} @else if $tag == ul {
		@include sugar.list();
	} @else if length($tag) == 2 and nth($tag,1) == ul {
		@include sugar.list-bullet(
			$type : circle,
			$space : 1em
		);
		line-height: 1.5;
		// &:last-child {
		// 	margin-bottom: s-space(default) * .5;
		// }
	} @else if $tag == ol {
		@include sugar.list();
	} @else if length($tag) == 2 and nth($tag,1) == ol {
		@include sugar.list-bullet(
			$type : decimal,
			$size : .6em,
			$offset : .4em 0,
			$space : 1em
		);
		line-height: 1.5;
		// &:last-child {
		// 	margin-bottom: s-space(default) * .5;
		// }
	}
}

/**
 * @name      list-style
 * @namespace       typography-style
 * @type      Mixin
 *
 * Apply the list style css
 *
 * @param 		{String|List} 		$tag 				The tag to style like "ul", "ol li" or "dl dt"
 * @param 		{Color} 			[$color=primary] 	The color used for styling bullets
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin list-style(
	$tag,
	$color : primary
) {
	@if $tag == dl {
	} @else if length($tag) == 2 and nth($tag,2) == dt {
		font-weight: bold;
		color : sugar.color(text);
	} @else if length($tag) == 2 and nth($tag,2) == dd {
		color : sugar.color(text);
	} @else if $tag == ul {

	} @else if length($tag) == 2 and nth($tag,1) == ul {
		@include sugar.list-bullet(
			$type : circle,
			$color : sugar.color($color),
			$space : 1em
		);
		color : sugar.color(text);
	} @else if $tag == ol {

	} @else if length($tag) == 2 and nth($tag,1) == ol {
		@include sugar.list-bullet(
			$type : decimal,
			$color : sugar.color($color),
			$size : .6em,
			$offset : .4em 0,
			$space : 1em
		);
		color : sugar.color(text);
	}
}

/**
 * @name      caption
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the caption css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin caption() {
	@include caption-bare();
	@include caption-style();
}

/**
 * @name      caption-bare
 * @namespace       typography-style
 * @type      Mixin
 *
 * Apply the caption bare css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin caption-bare(
) {
	font-style: italic;
	font-size:.65em;
	display:block;
}
/**
 * @name      caption-style
 * @namespa       typography-style
 * @type      Mixin
 *
 * Apply the caption style css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin caption-style() {
	opacity:.65;
}

/**
 * @name      quote
 * @namespace       typography-style
 * @type      Mixin
 *
 * Apply the quote css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin quote() {
	@include quote-bare();
	@include quote-style();
}

/**
 * @name      quote-bare
 * @namespace       typography-style
 * @type      Mixin
 *
 * Apply the quote bare css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin quote-bare(
) {
	font-size:2.5em;
	font-style: italic;
	@include sugar.font(quote);
	padding: sugar.space(big) / 2 sugar.space(big) sugar.space(big) / 2 sugar.space(big);
	display: block;

	cite {
		font-size: .5em;
		font-style: italic;
		display: block;
		margin-top: sugar.space(default);

		&:before {
			content: "\2014 \0020";
		}
	}
}

/**
 * @name      quote-style
 * @namespace     typography-style
 * @type      Mixin
 *
 * Apply the quote style css
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin quote-style() {
	position: relative;
	&:before,
	&:after {
		display: inline-block;
		position:absolute;
		opacity:.4;
	}
	&:before {
		content:"“";
		top:0; left:0;
	}
	&:after {
		content:"”";
		bottom:0; right:0;
	}
}

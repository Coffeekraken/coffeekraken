{"version":3,"sources":["SFooter.js"],"names":["__blessed","require","__SComponent","__deepMerge","__parseHtml","__color","__ora","__countLine","module","exports","settings","authors","website","width","height","position","top","left","style","bg","toString","fg","padding","bottom","right","_settings","length","authArray","forEach","auth","push","name","content","join","_authorsBox","box","setContent","append","_copyrightBox","text","Date","getFullYear","_commandsStatusBox","getContent","tags","commandsStatusTextArray","key","commands","commandInstance","_footerSpinner","state","color","frame","isWatching","stripTags"],"mappings":"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","sourcesContent":["const __blessed = require('blessed');\nconst __SComponent = require('./SComponent');\nconst __deepMerge = require('../object/deepMerge');\nconst __parseHtml = require('../terminal/parseHtml');\nconst __color = require('../color/color');\nconst __ora = require('ora');\nconst __countLine = require('../string/countLine');\n\n/**\n * @name                  SFooter\n * @namespace           node.blessed\n * @type                  Class\n *\n * This class represent a footer that you can add to your blessed based UI\n *\n * @param        {Object}         [settings = {}]         A settings object to configure your list. Here's the available settings:\n *\n * @example       js\n * const SFooter = require('@coffeekraken/sugar/node/blessed/SFooter');\n * new SFooter({});\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SFooter extends __SComponent {\n  /**\n   * @name                  constructor\n   * @type                  Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          authors: [],\n          website: null,\n          width: '100%',\n          height: 10,\n          position: {\n            top: '100%-1',\n            left: 0\n          },\n          style: {\n            bg: __color('terminal.primary').toString(),\n            fg: __color('terminal.black').toString()\n          },\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: 1,\n            right: 0\n          }\n        },\n        settings\n      )\n    );\n\n    if (this._settings.authors.length) {\n      const authArray = [];\n      this._settings.authors.forEach((auth) => {\n        authArray.push(auth.name);\n      });\n      let content = __parseHtml(\n        ` Made by <bold>${authArray.join(', ')}</bold>`\n      );\n      this._authorsBox = __blessed.box({\n        top: 0,\n        right: 0,\n        height: 1,\n        padding: {\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        },\n        style: {\n          bg: 'black',\n          fg: 'white'\n        }\n      });\n      this._authorsBox.setContent(content);\n      this.append(this._authorsBox);\n    }\n\n    this._copyrightBox = __blessed.text({\n      left: 0,\n      style: {\n        bg: this._settings.style.bg,\n        fg: this._settings.style.fg\n      },\n      content: __parseHtml(`MIT Â©${new Date().getFullYear()} Coffeekraken`)\n    });\n    this.append(this._copyrightBox);\n\n    this._commandsStatusBox = __blessed.text({\n      position: {\n        right: __countLine(this._authorsBox.getContent())\n      },\n      style: {\n        bg: this._settings.style.bg,\n        fg: this._settings.style.fg,\n        bg: 'red'\n      },\n      tags: true\n    });\n    this.append(this._commandsStatusBox);\n\n    // setTimeout(this.update.bind(this));\n    // setInterval(this._updateStatusBar.bind(this), 100);\n  }\n\n  /**\n   * @name            _updateStatusBar\n   * @type            Function\n   * @private\n   *\n   * This method simply update the status bar with the commands statuses\n   *\n   * @since         2.0.0\n   *\n   */\n  _updateStatusBar() {\n    let commandsStatusTextArray = [];\n    for (let key in this._settings.commands) {\n      const commandInstance = this._settings.commands[key];\n      if (!commandInstance._footerSpinner) {\n        commandInstance._footerSpinner = __ora(commandInstance.name);\n      }\n      if (commandInstance.state === 'running') {\n        commandInstance._footerSpinner.color = 'black';\n        commandsStatusTextArray.push(\n          `{${__color(\n            'terminal.cyan'\n          ).toString()}-bg} ${commandInstance._footerSpinner.frame()} (${\n            commandInstance.key\n          }) {/${__color('terminal.cyan').toString()}-bg}`\n        );\n      } else if (commandInstance.isWatching()) {\n        commandInstance._footerSpinner.color = 'black';\n        commandsStatusTextArray.push(\n          `{${__color(\n            'terminal.primary'\n          ).toString()}-bg} ${commandInstance._footerSpinner.frame()} (${\n            commandInstance.key\n          }) {/${__color('terminal.primary').toString()}-bg}`\n        );\n      } else if (commandInstance.state === 'success') {\n        commandInstance._footerSpinner.color = 'black';\n        commandsStatusTextArray.push(\n          `{${__color(\n            'terminal.green'\n          ).toString()}-bg} ${commandInstance._footerSpinner.frame()} (${\n            commandInstance.key\n          }) {/${__color('terminal.green').toString()}-bg}`\n        );\n      } else if (commandInstance.state === 'error') {\n        commandInstance._footerSpinner.color = 'black';\n        commandsStatusTextArray.push(\n          `{${__color(\n            'terminal.red'\n          ).toString()}-bg} ${commandInstance._footerSpinner.frame()} (${\n            commandInstance.key\n          }) {/${__color('terminal.red').toString()}-bg}`\n        );\n      }\n    }\n    this._commandsStatusBox.width = __countLine(\n      __blessed.stripTags(commandsStatusTextArray.join(''))\n    );\n    this._commandsStatusBox.right =\n      __countLine(this._authorsBox.getContent()) + 1;\n    this._commandsStatusBox.setContent(commandsStatusTextArray.join(''));\n  }\n\n  /**\n   * @name            update\n   * @type            Function\n   * @override\n   *\n   * This method simply draw the header\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  update() {\n    if (this._authorsBox) {\n      this._authorsBox.width = __countLine(this._authorsBox.content) + 1;\n    }\n    this.position.height = 1;\n\n    // update status bar\n    // this._updateStatusBar();\n\n    super.update();\n  }\n};\n"]}
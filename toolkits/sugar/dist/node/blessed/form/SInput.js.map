{"version":3,"sources":["SInput.js"],"names":["__blessed","require","__SComponent","__deepMerge","__SPromise","__color","__escapeStack","__activeSpace","module","exports","settings","inputSettings","focus","placeholder","width","height","keys","mouse","inputOnFocus","style","bg","toString","fg","padding","top","bottom","left","right","_escapeKeyPromise","$input","textbox","promise","resolve","reject","trigger","cancel","start","on","console","log","focused","append","remove","setTimeout","placeholderPressed","length","setValue","isBackspace","onceKey","value","key","getValue","update"],"mappings":"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","sourcesContent":["const __blessed = require('blessed');\nconst __SComponent = require('../SComponent');\nconst __deepMerge = require('../../object/deepMerge');\nconst __SPromise = require('../../promise/SPromise');\nconst __color = require('../../color/color');\nconst __escapeStack = require('../../terminal/escapeStack');\nconst __activeSpace = require('../../core/activeSpace');\n\n/**\n * @name                  SInput\n * @namespace           node.blessed.input\n * @type                  Class\n *\n * This class represent a simple input\n *\n * @param        {Object}         [settings = {}]         A settings object to configure your list. Here's the available settings:\n * - escapeKey (false) {Boolean}: Specify if you want to reject the input promise on escape key press\n * - placeholder (null) {String}: Specify a placeholder\n * - width (null) {String|Number}: This is the normal blessed component width parameter but you can specify \"auto\" if you want the input to adapt his width depending on his content\n *\n * // TODO: document the \"promise\" and \"$input\" properties\n *\n * @example       js\n * const SInput = require('@coffeekraken/sugar/node/blessed/form/SInput');\n * new SInput({});\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SInput extends __SComponent {\n  /**\n   * @name                  constructor\n   * @type                  Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    const inputSettings = __deepMerge(\n      {\n        focus: true,\n        placeholder: null,\n        width: '100%',\n        height: 3,\n        keys: true,\n        mouse: true,\n        inputOnFocus: true,\n        style: {\n          bg: __color('terminal.cyan').toString(),\n          fg: __color('terminal.black').toString()\n        },\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      },\n      settings\n    );\n\n    super({\n      // width: '100%',\n      // height: null,\n    });\n\n    this._escapeKeyPromise = null;\n\n    this.$input = __blessed.textbox(inputSettings);\n    this.promise = new __SPromise(\n      (resolve, reject, trigger, cancel) => {}\n    ).start();\n\n    this.$input.height =\n      inputSettings.padding.top + inputSettings.padding.bottom + 1;\n    this.height = inputSettings.padding.top + inputSettings.padding.bottom + 1;\n\n    this.$input.on('blur', () => {\n      console.log('blue');\n      if (this.$input.focused) {\n        console.log('remove');\n      }\n    });\n\n    this.$input.on('focus', () => {\n      __activeSpace.append('form.input');\n      this._escapeKeyPromise = __escapeStack(() => {\n        __activeSpace.remove('.form.input');\n      });\n    });\n\n    this.$input.on('attach', () => {\n      setTimeout(() => {\n        if (inputSettings.focus) this.$input.focus();\n        let placeholderPressed = false;\n        if (inputSettings.placeholder) {\n          const placeholder = inputSettings.placeholder.toString();\n          if (inputSettings.width === 'auto') {\n            this.$input.width =\n              placeholder.length +\n              this.$input.padding.left +\n              this.$input.padding.right +\n              2;\n          }\n          this.$input.setValue(placeholder);\n        }\n        let isBackspace = false;\n        this.$input.onceKey('backspace,space,escape', () => {\n          isBackspace = true;\n        });\n        this.$input.on('keypress', (value, key) => {\n          setTimeout(() => {\n            if (inputSettings.placeholder && !placeholderPressed) {\n              if (!isBackspace) {\n                this.$input.setValue(value);\n              }\n              placeholderPressed = true;\n            }\n            if (inputSettings.width === 'auto') {\n              this.$input.width =\n                this.$input.getValue().length +\n                this.$input.padding.left +\n                this.$input.padding.right +\n                2;\n            }\n            this.update();\n          });\n        });\n        this.$input.on('submit', (value) => {\n          this.promise.resolve(value);\n          this.$input.style.bg = __color('terminal.green').toString();\n          if (inputSettings.width === 'auto') {\n            this.$input.width =\n              this.$input.getValue().length +\n              this.$input.padding.left +\n              this.$input.padding.right;\n          }\n          __activeSpace.remove('.form.input');\n          if (this._escapeKeyPromise) this._escapeKeyPromise.cancel();\n          this.update();\n        });\n        this.$input.on('cancel', () => {\n          this.promise.cancel();\n          this.$input.style.bg = __color('terminal.red').toString();\n          if (inputSettings.width === 'auto') {\n            this.$input.width =\n              this.$input.getValue().length +\n              this.$input.padding.left +\n              this.$input.padding.right;\n          }\n          __activeSpace.remove('.form.input');\n          if (this._escapeKeyPromise) this._escapeKeyPromise.cancel();\n          this.update();\n        });\n        this.update();\n      });\n    });\n\n    this.append(this.$input);\n  }\n};\n"]}
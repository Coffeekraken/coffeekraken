{"version":3,"sources":["SSummaryList.js"],"names":["__blessed","require","__SComponent","__deepMerge","__parseHtml","__countLine","__hotkey","__color","__SPromise","__SInput","__multiple","__activeSpace","__escapeStack","module","exports","items","settings","style","bg","toString","item","fg","selected","$list","list","keys","mouse","interactive","_settings","append","_items","forEach","value","undefined","default","_editingItemIdx","on","_rebuildList","remove","promise","resolve","reject","trigger","cancel","bind","then","catch","_initHotkeys","select","length","_selectedItemIdx","escapeStackPromise","_escapeHotkey","activeSpace","key","_isEditing","_terminate","_downHotkey","down","_upHotkey","up","_enterHotkey","$editInput","width","placeholder","top","left","getLongestListItemName","padding","bottom","setTimeout","detach","longestItemText","text","listItems","map","i","repeat","push","_buildBlessedListItemsArray","clearItems","setItems","selectedItem","position","update","height"],"mappings":"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","sourcesContent":["const __blessed = require('blessed');\nconst __SComponent = require('../SComponent');\nconst __deepMerge = require('../../object/deepMerge');\nconst __parseHtml = require('../../terminal/parseHtml');\nconst __countLine = require('../../string/countLine');\nconst __hotkey = require('../../keyboard/hotkey');\nconst __color = require('../../color/color');\nconst __SPromise = require('../../promise/SPromise');\nconst __SInput = require('../form/SInput');\nconst __multiple = require('../../class/multipleExtends');\nconst __activeSpace = require('../../core/activeSpace');\nconst __escapeStack = require('../../terminal/escapeStack');\n\n/**\n * @name                  SSummaryList\n * @namespace           node.blessed.list\n * @type                  Class\n *\n * This class gives you the ability to display an editable list of informations.\n * This is very useful to display for example a summary of a command to launch, or whatever...\n *\n * @param         {Array}           items                 An array of items object constitued of these properties:\n * - id (null) {String}: The item id\n * - text (null) {String}: The item text to display before the value\n * - default (null) {String}: The item default value\n * @param        {Object}         [settings = {}]         A settings object to configure your this. Here's the available settings:\n *\n * @example       js\n * const SSummaryList = require('@coffeekraken/sugar/node/blessed/list/SSummaryList');\n * const list = new SSummaryList({});\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SSummaryList extends __SComponent {\n  /**\n   * @name                  _editingItemIdx\n   * @type                  Number\n   * @private\n   *\n   * Store the editing list item index\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _editingItemIdx = null;\n\n  /**\n   * @name                  _selectedItemIdx\n   * @type                  Number\n   * @private\n   *\n   * Store the selected item index\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _selectedItemIdx = null;\n\n  /**\n   * @name                  _isEditing\n   * @type                  Boolean\n   * @default               false\n   * @private\n   *\n   * Store if the list is in editing mode or not\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _isEditing = false;\n\n  /**\n   * @name                $list\n   * @type                blessed.List\n   * @default             null\n   * @private\n   *\n   * Store the blessed list component\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  $list = null;\n\n  /**\n   * @name                  _items\n   * @type                  Array\n   *\n   * Store the items list\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _items = [];\n\n  /**\n   * @name                  constructor\n   * @type                  Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(items, settings = {}) {\n    super(\n      __deepMerge(\n        {\n          style: {\n            bg: __color('terminal.black').toString(),\n            item: {\n              bg: __color('terminal.black').toString(),\n              fg: __color('terminal.white').toString()\n            },\n            selected: {\n              bg: __color('terminal.cyan').toString(),\n              fg: __color('terminal.white').toString()\n            }\n          }\n        },\n        settings\n      )\n    );\n\n    // init the actual list component\n    this.$list = __blessed.list({\n      keys: false,\n      mouse: false,\n      interactive: true,\n      ...this._settings\n    });\n\n    this.append(this.$list);\n\n    // save the items\n    this._items = items;\n\n    // init settings items\n    this._items.forEach((item) => {\n      if (item.value === undefined && item.default) {\n        item.value = item.default;\n      }\n    });\n\n    this._editingItemIdx = null;\n\n    this.on('attach', () => {\n      __activeSpace.append('summaryList');\n      this._rebuildList();\n    });\n    this.on('detach', () => {\n      __activeSpace.remove('.summaryList');\n    });\n\n    this.promise = new __SPromise((resolve, reject, trigger, cancel) => {});\n\n    this.on = this.promise.on.bind(this.promise);\n    this.then = this.promise.then.bind(this.promise);\n    this.catch = this.promise.catch.bind(this.promise);\n\n    // this.on('select', (list) => {\n    //   this._terminate();\n    //   this.promise.resolve(settings.items[this.selected]);\n    // });\n    // this.on('cancel', (item) => {\n    //   this._terminate();\n    //   this.promise.cancel();\n    // });\n\n    // init hotkeys\n    this._initHotkeys();\n\n    this.$list.select(this._items.length);\n    this._selectedItemIdx = this._items.length;\n  }\n\n  /**\n   * @name            _initHotkeys\n   * @type            Function\n   * @private\n   *\n   * This method init the hotkeys\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _initHotkeys() {\n    let escapeStackPromise;\n\n    this._escapeHotkey = __hotkey('escape', {\n      activeSpace: '**.summaryList'\n    }).on('press', (key) => {\n      if (escapeStackPromise) escapeStackPromise.cancel();\n      if (this._isEditing) {\n        this._isEditing = false;\n      } else {\n        this._terminate();\n        this.promise.cancel();\n      }\n    });\n    this._downHotkey = __hotkey('down', {\n      activeSpace: '**.summaryList'\n    }).on('press', (key) => {\n      if (this._isEditing) return;\n      this.$list.down(1);\n      this._selectedItemIdx = this.$list.selected;\n      this._rebuildList();\n    });\n    this._upHotkey = __hotkey('up', {\n      activeSpace: '**.summaryList'\n    }).on('press', (key) => {\n      if (this._isEditing) return;\n      this.$list.up(1);\n      this._selectedItemIdx = this.$list.selected;\n      this._rebuildList();\n    });\n    this._enterHotkey = __hotkey('enter', {\n      activeSpace: '**.summaryList'\n    }).on('press', (key) => {\n      if (!this._isEditing) {\n        if (this.$list.selected === this._items.length) {\n          this._terminate();\n          this.promise.resolve(this._items);\n          return;\n        }\n\n        // check if the value is a boolean\n        if (typeof this._items[this.$list.selected].default === 'boolean') {\n          this._items[this.$list.selected].value = !this._items[\n            this.$list.selected\n          ].value;\n          this._rebuildList();\n          return;\n        }\n\n        // init an new empty escape stack\n        escapeStackPromise = __escapeStack(() => {});\n\n        this._isEditing = true;\n        this._editingItemIdx = this.$list.selected;\n        this.$editInput = new __SInput({\n          width: 'auto',\n          placeholder: this._items[this.$list.selected].default,\n          top: this.$list.selected,\n          left: this.getLongestListItemName().length + 4,\n          padding: {\n            top: 0,\n            bottom: 0\n          }\n        });\n        this.$list.style.selected = {\n          bg: 'black',\n          fg: 'white'\n        };\n        this.$editInput.promise\n          .on('resolve', (value) => {\n            this._items[this.$list.selected].value = value;\n          })\n          .on('cancel', () => {})\n          .on('cancel,finally', () => {\n            setTimeout(() => {\n              this._isEditing = false;\n              this._editingItemIdx = null;\n              this.$editInput.detach();\n              this.$list.style.selected = {\n                bg: this._settings.style.selected.bg,\n                fg: this._settings.style.selected.fg\n              };\n              this._rebuildList();\n            });\n          });\n        this._rebuildList();\n        this.append(this.$editInput);\n      }\n    });\n  }\n\n  /**\n   * @name            getLongestListItemName\n   * @type            Function\n   *\n   * This method return the longest list item name\n   *\n   * @return      {String}          The longest list item name\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  getLongestListItemName() {\n    let longestItemText = '';\n    this._items.forEach((item) => {\n      if (longestItemText.length < item.text.length)\n        longestItemText = item.text;\n    });\n    return longestItemText;\n  }\n\n  /**\n   * @name            _terminate\n   * @type            Function\n   * @private\n   *\n   * This method simply \"kill\" the component\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _terminate() {\n    if (this.$editInput) this.remove(this.$editInput);\n    this.$list.detach();\n    this._escapeHotkey.cancel();\n    this._downHotkey.cancel();\n    this._upHotkey.cancel();\n    this._enterHotkey.cancel();\n  }\n\n  /**\n   * @name            _buildBlessedListItemsArray\n   * @type            Function\n   * @private\n   *\n   * This method build the blessed list items array to pass to the blessed list component\n   *\n   * @return      {Array}               The blessed list ready array\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _buildBlessedListItemsArray() {\n    const longestItemText = this.getLongestListItemName();\n    let listItems = this._items.map((item, i) => {\n      let value =\n        this._items[i].value !== undefined\n          ? this._items[i].value\n          : item.default;\n      if (this._editingItemIdx === i) value = '';\n\n      return __parseHtml(\n        (i === this._selectedItemIdx ? ' ' : '') +\n          item.text +\n          ' '.repeat(longestItemText.length - item.text.length) +\n          ' '.repeat(i === this._selectedItemIdx ? 4 : 5) +\n          '<yellow>' +\n          value +\n          '</yellow>'\n      );\n    });\n    listItems.push(\n      (this._selectedItemIdx === this._items.length ? ' ' : '') +\n        __parseHtml(`<bold>Validate!</bold>`) +\n        (this._selectedItemIdx === this._items.length ? ' ' : '')\n    );\n    return listItems;\n  }\n\n  /**\n   * @name              _rebuildList\n   * @type              Function\n   * @private\n   *\n   * This method simply rebuild the blessed list\n   *\n   *\n   */\n  _rebuildList() {\n    let listItems = this._buildBlessedListItemsArray();\n    this.$list.clearItems();\n    this.$list.setItems(listItems);\n    this.$list.select(this._selectedItemIdx);\n    this.$list.items[this._items.length].top += 1;\n\n    this.style.bg = __color('terminal.black').toString();\n\n    this.$list.items.forEach((item) => {\n      item.style.bg = __color('terminal.black').toString();\n    });\n\n    const selectedItem = this.$list.items[this._selectedItemIdx];\n    if (!this._isEditing) {\n      selectedItem.style.bg = __color('terminal.cyan').toString();\n    }\n\n    selectedItem.position.width =\n      __countLine(this._buildBlessedListItemsArray()[this._selectedItemIdx]) +\n      (this._selectedItemIdx === this._items.length ? 2 : 1);\n\n    this.update();\n  }\n\n  update() {\n    this.$list.height = this._items.length + 2;\n    this.height = this._items.length + 2;\n    setTimeout(() => {\n      super.update();\n    });\n  }\n};\n"]}
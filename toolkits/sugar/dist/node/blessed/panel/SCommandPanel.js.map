{"version":3,"sources":["SCommandPanel.js"],"names":["__deepMerge","require","__blessed","__color","__SComponent","__summaryListPopup","__ora","__countLine","__parseHtml","__isOdd","__SPromise","__SCommand","__transitionObjectProperties","__SPopup","__hotkey","__SInputPopup","__activeSpace","__SWindowBox","__convert","__SOutput","module","exports","commands","settings","_settings","_boxesObjectsMap","Map","Array","isArray","_commands","Error","set","key","_sPromise","start","forEach","commandObj","i","commandClass","path","instance","promise","_generateUI","_initCommandBoxes","_displayedCommands","push","_selectListItem","setTimeout","_updateList","on","data","_logSummary","update","event","log","process","state","name","duration","_logPreviousCommand","_summaryFakeCommand","lastProcessObj","stdout","items","summaryListPopup","title","description","command","attach","idx","_multiSelect","$log","children","child","detach","$list","item","j","selected","active","itemIdx","indexOf","splice","displayCommandIdx","boxObj","get","append","$box","isRunning","concurrent","kill","run","box","height","style","bg","toString","fg","padding","top","left","right","bottom","mouse","keys","tags","clickable","width","scrollable","scrollbar","ch","inverse","$actions","$header","opened","doubleClick","_openCommandBox","_closePanelBox","spinner","ora","text","color","medias","itemsArray","_spinner","media","Object","screen","parseInt","list","e","handleListActiveAndSelectedProperty","getItem","pressTimeout","pressInitialiser","pressed","direction","activeItemIdx","length","focused","up","down","focus","$key","$state","setContent","isWatching","frame","spaces","Math","round","repeat","setItem","boxTitle","id","clearInterval","interval","render","setInterval","_closeTransition","cancel","_openTransition","setFront","_closedBoxStateObj","parent","easing","stepObj","assign","clear","currentTop","layout","columns","setScrollPerc","isDestroyed","_updateCommandBoxesStyle","_updateCommandBoxesLayout","_updateCommandBoxesContent"],"mappings":"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","sourcesContent":["const __deepMerge = require('../../object/deepMerge');\nconst __blessed = require('blessed');\nconst __color = require('../../color/color');\nconst __SComponent = require('../SComponent');\nconst __summaryListPopup = require('../list/summaryListPopup');\nconst __ora = require('ora');\nconst __countLine = require('../../string/countLine');\nconst __parseHtml = require('../../terminal/parseHtml');\nconst __isOdd = require('../../is/odd');\nconst __SPromise = require('../../promise/SPromise');\nconst __SCommand = require('../../terminal/SCommand');\nconst __transitionObjectProperties = require('../../transition/objectProperties');\nconst __SPopup = require('../../blessed/popup/SPopup');\nconst __hotkey = require('../../keyboard/hotkey');\nconst __SInputPopup = require('../popup/SInputPopup');\nconst __activeSpace = require('../../core/activeSpace');\nconst __SWindowBox = require('../box/SWindowBox');\nconst __convert = require('../../time/convert');\nconst __SOutput = require('../SOutput');\n\n/**\n * @name                  SCommandPanel\n * @namespace           node.blessed\n * @type                  Class\n *\n * This class is a simple SPanel extended one that accesp an SCommandPanel instance\n * to log the data's from and display an simple UI depending on the SCommandPanel configured keys\n *\n * @param         {SCommandPanel}            process           The SCommandPanel instance you want to attach\n * @param         {Object}              [settings={}]     The settings object to configure your SCommandPanel\n *\n * @example         js\n * const SCommandPanel = require('@coffeekraken/sugar/node/terminal/SCommandPanel');\n * const myPanel = new SCommandPanel(myProcess, {\n *    screen: true\n * });\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SCommandPanel extends __SComponent {\n  /**\n   * @name          _commands\n   * @type          Array|String\n   * @private\n   *\n   * Store the passed \"commands\" parameter that can be either an Array of SCli instances.\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _commands = null;\n\n  /**\n   * @name          $list\n   * @type          blessed.Box\n   * @private\n   *\n   * Store the actual box where the commands list will be pushed\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  $list = null;\n\n  /**\n   * @name          $log\n   * @type          blessed.Box\n   * @private\n   *\n   * Store the actual box where the logs will be pushed\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  $log = null;\n\n  /**\n   * @name          _displayedCommands\n   * @type          String\n   * @private\n   *\n   * Store the current displayed commands\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _displayedCommands = [];\n\n  /**\n   * @name          _updateListInterval\n   * @type          String\n   * @private\n   *\n   * Store the update list interval\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _updateListInterval = null;\n\n  /**\n   * @name          constructor\n   * @type          Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(commands, settings = {}) {\n    const _settings = __deepMerge({}, settings);\n    // extends SPanel\n    super(_settings);\n\n    this._boxesObjectsMap = new Map();\n\n    if (Array.isArray(commands)) {\n      this._commands = commands;\n    } else {\n      throw new Error(\n        `It seems that the passed \"commands\" argument of the SCommandPanel class is not an Array of SCommand instances...`\n      );\n    }\n\n    // this._summaryFakeCommand = {\n    //   id: 'summary',\n    //   settings: {},\n    //   key: '§'\n    // };\n    // this._summaryFakeCommand.on = () => this._summaryFakeCommand;\n    // this._commands.unshift(this._summaryFakeCommand);\n\n    // set the first active space to the first command key\n    __activeSpace.set(`SCommandPanel.${this._commands[0].key}`);\n\n    // pipe all commands \"events\" to the _sPromise internal promise\n    this._sPromise = new __SPromise(() => {}).start();\n    this._commands.forEach((commandObj, i) => {\n      // instanciate the command instance\n      const commandClass = require(commandObj.path);\n      commandObj.instance = new commandClass(commandObj.settings);\n\n      // commandObj.instance.on('beforeStart', () => {\n      //   // const boxObj = this._boxesObjectsMap.get(commandObj);\n      //   // boxObj.$log.clear();\n      //   // boxObj.$log.update();\n      // });\n      // __SPromise.pipe(commandObj, this._sPromise);\n    });\n\n    this.promise = new __SPromise(() => {});\n\n    // subscribe to the commands instances\n    // this._subscribeToCommandsEvents();\n\n    // generate the UI\n    this._generateUI();\n\n    // init command boxes\n    this._initCommandBoxes();\n\n    // add the first commands in the display list\n    this._displayedCommands.push(this._commands[0]);\n\n    // update the list continusly\n    // this._updateListInterval = setInterval(this._updateList.bind(this), 100);\n    // this.screen.on('destroy', () => {\n    //   clearInterval(this._updateListInterval);\n    // });\n    //\n\n    // select first list item\n    this._selectListItem(0);\n\n    // update the list\n    setTimeout(() => {\n      this._updateList();\n    });\n  }\n\n  /**\n   * @name          _subscribeToCommandsEvents\n   * @type          Function\n   * @private\n   *\n   * This method subscribe to the commands events to make corresponding action like log, etc...\n   *\n   * @since     2.0.0\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _subscribeToCommandsEvents() {\n    // subscribe to data\n    this._sPromise\n      .on('start,success,error', (data) => {\n        this._logSummary(data);\n        this.update();\n      })\n      .on('close', (data) => {\n        // this._logSummary(data);\n        this.update();\n      })\n      .on('log', (data) => {\n        this.update();\n      })\n      .on('error', (data) => {\n        this.update();\n      })\n      .on('kill', (data) => {})\n      // subscribe to errors\n      .on('error', (data) => {});\n    // subscribe to ask\n    // .on('ask', async (question) => {\n    //   if (question.type === 'summary') {\n    //     const summary = this.summary(\n    //       question.commandObj,\n    //       question.items\n    //     );\n    //     summary.on('cancel', () => {\n    //       question.reject && question.reject();\n    //     });\n    //     summary.on('resolve', (answer) => {\n    //       question.resolve && question.resolve(answer);\n    //     });\n    //   }\n    // });\n  }\n\n  /**\n   * @name          _logSummary\n   * @type          Function\n   *\n   * This method simply log the importants activities in the summary box\n   *\n   * @param       {Object}        event         The event that happens\n   *\n   * @since       2.0.0\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _logSummary(event) {\n    let log = '';\n    switch (event.process.state) {\n      case 'running':\n        log = `- <primary>${event.name}</primary> has been <cyan>started</cyan>`;\n        break;\n      case 'error':\n        log = `<red><iCross/></red> <primary>${event.name}</primary> is in <red>error</red>`;\n        break;\n      case 'success':\n        log = `<green><iCheck/></green> <primary>${\n          event.name\n        }</primary> has been finished <green>successfully</green> in <cyan>${__convert(\n          event.process.duration,\n          's'\n        )}s</cyan>`;\n        break;\n      case 'killed':\n        log = `<red><iCross/></red> <primary>${event.name}</primary> has been <red>killed</red>`;\n        break;\n    }\n    if (event.name !== this._logPreviousCommand && this._logPreviousCommand)\n      this._summaryFakeCommand.lastProcessObj.stdout.push(' ');\n    this._summaryFakeCommand.lastProcessObj.stdout.push(__parseHtml(log));\n    this.update();\n    this._logPreviousCommand = event.name;\n  }\n\n  /**\n   * @name          summary\n   * @type          Function\n   *\n   * This method display a summary list to the user with the possibility to update\n   * each data and validate\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  summary(commandObj, items) {\n    const summaryListPopup = __summaryListPopup({\n      title: `Run command <bgBlack><bold><primary> ${commandObj.name} </primary></bold></bgBlack> | Are these properties ok?`,\n      description: `<bold><cyan>${commandObj.command}</cyan></bold>`,\n      items\n    });\n    summaryListPopup.attach(this);\n    return summaryListPopup;\n  }\n\n  // /**\n  //  * @name          _clearCommands\n  //  * @type          Function\n  //  * @private\n  //  *\n  //  * This method remove all the command boxes from the content panel as\n  //  * well as in the \"_commands\" property as well as in the \"_boxesObjectsMap\"\n  //  *\n  //  * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n  //  */\n  // _clearCommands() {\n  //   this._commands.forEach((commandObj) => {\n  //     let boxObj = this._boxesObjectsMap.get(commandObj);\n  //     if (!boxObj.$header) return;\n  //     boxObj.$header.destroy();\n  //     boxObj.$actions.destroy();\n  //     boxObj.$log.destroy();\n  //     clearInterval(boxObj.spinner.interval);\n  //     boxObj.$box.destroy();\n  //   });\n  //   // remove all commands in the map\n  //   this._boxesObjectsMap.clear();\n  //   // reset the _commands array\n  //   this._commands = null;\n  // }\n\n  /**\n   * @name          _selectListItem\n   * @type          Function\n   * @private\n   *\n   * Call this function to select a list item\n   *\n   * @param       {Number}      idx       The item idx to select\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _selectListItem(idx) {\n    if (!this._multiSelect) this._displayedCommands = [];\n\n    // remove all the panels\n    this.$log.children.forEach((child) => {\n      child.detach();\n    });\n\n    this.$list.items.forEach((item, j) => {\n      if (idx === j) {\n        item.selected = true;\n        item.active = true;\n        const itemIdx = this._displayedCommands.indexOf(item.commandObj);\n        if (itemIdx != -1) {\n          this._displayedCommands.splice(itemIdx, 1);\n        } else {\n          this._displayedCommands.push(item.commandObj);\n        }\n        __activeSpace.set(`SCommandPanel.${item.commandObj.key}`);\n      } else if (!this._multiSelect) {\n        const displayCommandIdx = this._displayedCommands.indexOf(\n          item.commandObj\n        );\n        if (displayCommandIdx !== -1) {\n          this._displayedCommands.splice(displayCommandIdx, 1);\n        }\n        delete item.active;\n        delete item.selected;\n      }\n    });\n\n    this._commands.forEach((commandObj) => {\n      let boxObj = this._boxesObjectsMap.get(commandObj);\n      if (this._displayedCommands.indexOf(commandObj) === -1) {\n      } else {\n        this.$log.append(boxObj.$box);\n      }\n    });\n\n    // this._updateList();\n    this.update();\n  }\n\n  /**\n   * @name          _initCommandBoxes\n   * @type          Function\n   * @private\n   *\n   * This method create all the command boxes with the log (SOutput) instance, etc, and\n   * save then into the ```_boxesObjectsMap``` map\n   *\n   * @since         2.0.0\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _initCommandBoxes() {\n    this._commands.forEach((commandObj, i) => {\n      const boxObj = {};\n\n      if (commandObj.key) {\n        __hotkey(`${commandObj.key}`).on('press', () => {\n          if (\n            __activeSpace.get() === `SCommandPanel.${commandObj.key}` &&\n            commandObj.instance &&\n            commandObj.instance.on\n          ) {\n            if (commandObj.instance.isRunning() && !commandObj.concurrent) {\n              commandObj.instance.kill();\n            } else if (\n              !commandObj.instance.isRunning() &&\n              commandObj.instance.run\n            ) {\n              commandObj.instance.run();\n            }\n          } else {\n            __activeSpace.set(`SCommandPanel.${commandObj.key}`);\n            this._selectListItem(i);\n          }\n        });\n      }\n      // commandObj._settings.onKeyPress = (instance) => {\n      //   if (__activeSpace.is(`SCommandPanel.${commandObj.key}`)) return true;\n      //   return false;\n      // };\n      commandObj.$box = __blessed.box({\n        height: 3,\n        style: {\n          bg: __color('terminal.primary').toString(),\n          fg: __color('terminal.black').toString()\n        },\n        padding: {\n          top: 1,\n          left: 2,\n          right: 2,\n          bottom: 1\n        },\n        mouse: true,\n        keys: true,\n        tags: true,\n        top: 0,\n        left: 0,\n        right: 0,\n        clickable: true\n      });\n      commandObj.$log = new __SOutput(commandObj.instance, {\n        width: '100%-4',\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        style: {\n          fg: 'white'\n        },\n        mouse: true,\n        keys: true,\n        clickable: false,\n        scrollable: true,\n        scrollbar: {\n          ch: ' ',\n          inverse: true\n        },\n        style: {\n          scrollbar: {\n            bg: __color('terminal.primary').toString()\n          }\n        },\n        padding: {\n          top: 0,\n          left: 2,\n          right: 2,\n          bottom: 0\n        }\n      });\n      commandObj.$actions = __blessed.box({\n        top: 0,\n        right: 0,\n        width: 'shrink',\n        height: 1,\n        style: {}\n      });\n      commandObj.$header = __blessed.box({\n        top: -1,\n        left: 0,\n        right: 0,\n        height: 3,\n        style: {\n          bg: -1,\n          fg: -1\n        },\n        padding: {\n          top: 1\n        }\n      });\n\n      commandObj.opened = null;\n      let doubleClick = false;\n\n      commandObj.$header.on('click', (mouse) => {\n        if (doubleClick === false) {\n          doubleClick = true;\n          setTimeout(() => {\n            doubleClick = false;\n          }, 500);\n          return;\n        }\n\n        if (commandObj.opened === null) {\n          commandObj.opened = true;\n          this._openCommandBox(commandObj);\n        } else {\n          commandObj.opened = !commandObj.opened;\n          if (commandObj.opened) {\n            this._openCommandBox(commandObj);\n          } else {\n            this._closePanelBox(commandObj);\n          }\n        }\n        this.update();\n      });\n\n      commandObj.spinner = {\n        ora: __ora({\n          text: __parseHtml(commandObj.title || commandObj.name),\n          color: 'black'\n        })\n      };\n\n      commandObj.$box.append(commandObj.$header);\n      // commandObj.$box.append(commandObj.$actions);\n      commandObj.$box.append(commandObj.$log);\n    });\n  }\n\n  /**\n   * @name          _generateUI\n   * @type          Function\n   * @private\n   *\n   * This method take the registered keys in the process and generate a nice and clean UI for it\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _generateUI() {\n    const medias = {\n      0: 20,\n      180: 15\n    };\n    const itemsArray = [];\n    this._commands.forEach((commandObj) => {\n      commandObj._spinner = {\n        ora: __ora({\n          text: __parseHtml(commandObj.name),\n          color: 'black'\n        })\n      };\n\n      let name = commandObj.name;\n\n      itemsArray.push(name);\n    });\n\n    let media;\n    Object.keys(medias).forEach((width) => {\n      if (this.screen.width >= parseInt(width)) {\n        media = medias[width];\n      }\n    });\n\n    this.$list = __blessed.list({\n      width: `${media}%-1`,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      mouse: true,\n      keys: true,\n      tags: true,\n      scrollable: true,\n      scrollbar: {\n        ch: ' ',\n        inverse: true\n      },\n      style: {\n        selected: {},\n        item: {},\n        scrollbar: {\n          bg: __color('terminal.primary').toString()\n        }\n      },\n      items: itemsArray,\n      padding: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    });\n    this.$list.on('keypress', (e, key) => {\n      handleListActiveAndSelectedProperty(key.name);\n    });\n    this.$list.on('select', (e, i) => {\n      this._selectListItem(i);\n    });\n    this._commands.forEach((commandObj, i) => {\n      const item = this.$list.getItem(i);\n      item.commandObj = commandObj;\n    });\n\n    // this.$list.items[0].active = true;\n    // this.$list.items[0].selected = true;\n\n    let pressTimeout, pressInitialiser;\n    const pressed = () => {\n      this._multiSelect = true;\n      setTimeout(() => {\n        this._multiSelect = false;\n      });\n    };\n    __hotkey('tab').on('press', () => {\n      if (!pressTimeout) {\n        pressInitialiser = 'tab';\n        pressTimeout = setTimeout(() => {\n          pressTimeout = null;\n          pressInitialiser = null;\n        }, 300);\n      } else if (pressInitialiser !== 'tab') {\n        pressed();\n      }\n    });\n    __hotkey('return').on('press', () => {\n      if (!pressTimeout) {\n        pressInitialiser = 'return';\n        pressTimeout = setTimeout(() => {\n          pressTimeout = null;\n          pressInitialiser = null;\n        }, 300);\n      } else if (pressInitialiser !== 'return') {\n        pressed();\n      }\n    });\n\n    this.$log = __blessed.box({\n      width: `${100 - media}%`,\n      top: 0,\n      left: `${media}%+1`,\n      right: 0,\n      bottom: 0,\n      style: {\n        fg: 'white',\n        bg: 'cyan'\n      },\n      mouse: true,\n      keys: true,\n      scrollable: true,\n      scrollbar: {\n        ch: ' ',\n        inverse: true\n      },\n      style: {\n        scrollbar: {\n          bg: __color('terminal.primary').toString()\n        }\n      },\n      padding: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    });\n\n    const handleListActiveAndSelectedProperty = (direction) => {\n      let activeItemIdx = null;\n      this.$list.items.forEach((item, i) => {\n        if (activeItemIdx !== null) return;\n        if (item.active) activeItemIdx = i;\n      });\n      if (direction === 'up') {\n        if (activeItemIdx >= 1) {\n          delete this.$list.items[activeItemIdx].active;\n          this.$list.items[activeItemIdx - 1].active = true;\n        }\n      } else if (direction === 'down') {\n        if (activeItemIdx < this.$list.items.length - 1) {\n          delete this.$list.items[activeItemIdx].active;\n          this.$list.items[activeItemIdx + 1].active = true;\n        }\n      }\n      this._updateList();\n    };\n\n    this.screen.on('keypress', (e, key) => {\n      if (this.$list.focused) return;\n\n      if (key.name === 'up') {\n        this.$list.up();\n      } else if (key.name === 'down') {\n        this.$list.down();\n      }\n      this.$list.focus();\n      handleListActiveAndSelectedProperty(key.name);\n    });\n\n    this.append(this.$list);\n    this.append(this.$log);\n\n    this.$list.focus();\n  }\n\n  _updateList() {\n    // console.log('DU', Date.now());\n    this._commands.forEach((commandObj, i) => {\n      const item = this.$list.getItem(i);\n\n      if (!item.$key) {\n        item.$key = __blessed.box({\n          width: 3,\n          height: 1,\n          top: 0,\n          left: '100%',\n          right: 0,\n          bottom: 0,\n          style: {\n            fg: 'white'\n          },\n          mouse: false,\n          keys: false,\n          scrollable: false,\n          padding: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          }\n        });\n        item.append(item.$key);\n      }\n\n      if (!item.$state) {\n        item.$state = __blessed.box({\n          width: 3,\n          height: 1,\n          top: 0,\n          left: '100%-3',\n          right: 0,\n          bottom: 0,\n          style: {\n            fg: 'white'\n          },\n          mouse: false,\n          keys: false,\n          scrollable: false,\n          padding: {\n            top: 0,\n            left: 1,\n            right: 0,\n            bottom: 0\n          }\n        });\n        item.append(item.$state);\n      }\n\n      item.padding = {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      };\n      item.top = i * 2;\n\n      let key = `${commandObj.key}`;\n      item.$key.setContent(key);\n\n      let name = commandObj.name;\n      if (\n        commandObj.instance.state === 'running' ||\n        commandObj.instance.isWatching()\n      ) {\n        commandObj._spinner.ora.text = '';\n        commandObj._spinner.ora.color = 'yellow';\n        name = `${commandObj.name}`;\n        if (commandObj.instance.state === 'running')\n          commandObj._spinner.ora.color = 'cyan';\n        if (commandObj.instance.state === 'error')\n          commandObj._spinner.ora.color = 'red';\n        // if (commandObj.state === 'success')\n        //   commandObj._spinner.ora.color = 'green';\n        // }\n        item.$state.setContent(commandObj._spinner.ora.frame());\n      } else if (commandObj.instance.state === 'error') {\n        name = `${commandObj.name}`;\n        item.$state.setContent('×');\n        item.$state.style.fg = __color('terminal.red').toString();\n        // item.$state.style.bg = __color('terminal.red').toString();\n      } else if (commandObj.instance.state === 'success') {\n        name = `${commandObj.name}`;\n        item.$state.setContent('✔');\n        item.$state.style.fg = __color('terminal.green').toString();\n        // item.$state.style.bg = __color('terminal.white').toString();\n      } else {\n        item.$state.setContent('-');\n      }\n\n      if (item.active) {\n        name = `> ${name}`;\n      }\n\n      let spaces = Math.round(this.$list.width - __countLine(name) - 1);\n      if (spaces < 0) spaces = 0;\n      name = name + ' '.repeat(spaces);\n\n      if (item.active || item.selected) {\n        item.style.fg = __color('terminal.primary').toString();\n      } else {\n        item.style.fg = __color('terminal.white').toString();\n      }\n\n      if (commandObj.instance.state === 'running') {\n        item.style.fg = __color('terminal.cyan').toString();\n      } else if (item.active || item.selected) {\n        item.style.fg = __color('terminal.primary').toString();\n      } else if (commandObj.instance.isWatching()) {\n        item.style.fg = __color('terminal.white').toString();\n      } else if (commandObj.instance.state === 'error') {\n        item.style.fg = __color('terminal.red').toString();\n      } else if (commandObj.instance.state === 'success') {\n        item.style.fg = __color('terminal.green').toString();\n      }\n\n      this.$list.setItem(i, __parseHtml(name));\n    });\n\n    // console.log('END', Date.now());\n  }\n\n  /**\n   * @name            _updateCommandBoxesStyle\n   * @type            Function\n   * @private\n   *\n   * This method handle the display of a command box depending on his state, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _updateCommandBoxesStyle() {\n    this._displayedCommands.forEach((commandObj) => {\n      let boxTitle = '';\n      if (commandObj.id) {\n        boxTitle += `<bgBlack><white> ${commandObj.id} </white></bgBlack> `;\n      }\n\n      boxTitle += `<bold>${commandObj.title || commandObj.name}</bold>`;\n      if (\n        commandObj.instance.lastProcessObj &&\n        commandObj.instance.lastProcessObj.duration\n      ) {\n        boxTitle += ` <italic>${\n          commandObj.instance.lastProcessObj.duration / 1000\n        }s</italic>`;\n      }\n\n      if (\n        commandObj.instance.lastProcessObj &&\n        (commandObj.instance.lastProcessObj.state === 'error' ||\n          commandObj.instance.lastProcessObj.state === 'killed')\n      ) {\n        commandObj.$box.style.bg = __color('terminal.red').toString();\n        clearInterval(commandObj.spinner.interval);\n        commandObj.$header.setContent(\n          __parseHtml(\n            `<iCross/>  ${boxTitle} (${commandObj.instance.lastProcessObj.state})`\n          )\n        );\n        commandObj.$box.screen.render();\n      } else if (commandObj.instance.isWatching()) {\n        commandObj.$box.style.bg = __color('terminal.yellow').toString();\n        clearInterval(commandObj.spinner.interval);\n        commandObj.spinner.interval = setInterval(() => {\n          commandObj.spinner.ora.text = __parseHtml(`${boxTitle} (watching)`);\n          commandObj.$header.setContent(commandObj.spinner.ora.frame());\n        }, 50);\n      } else if (\n        commandObj.instance.lastProcessObj &&\n        commandObj.instance.lastProcessObj.state === 'success'\n      ) {\n        commandObj.$box.style.bg = __color('terminal.green').toString();\n        clearInterval(commandObj.spinner.interval);\n        commandObj.$header.setContent(__parseHtml(`<iCheck/>  ${boxTitle}`));\n        commandObj.$box.screen.render();\n      } else if (\n        commandObj.instance.lastProcessObj &&\n        commandObj.instance.lastProcessObj.state === 'running'\n      ) {\n        commandObj.$box.style.bg = __color('terminal.cyan').toString();\n        clearInterval(commandObj.spinner.interval);\n        commandObj.spinner.interval = setInterval(() => {\n          commandObj.spinner.ora.text = __parseHtml(`${boxTitle}`);\n          commandObj.$header.setContent(commandObj.spinner.ora.frame());\n        }, 50);\n      } else {\n        commandObj.$box.style.bg = 'white';\n        commandObj.$header.setContent(\n          __parseHtml(`<iStart/>  ${boxTitle} (idle)`)\n        );\n        commandObj.$box.screen.render();\n      }\n\n      commandObj.$header.style.bg = commandObj.$box.style.bg;\n      commandObj.$header.style.fg = commandObj.$box.style.fg;\n\n      commandObj.$log.top = 2;\n      commandObj.$log.left = 0;\n      commandObj.$log.width = '100%-4';\n      commandObj.$log.height = '100%-4';\n    });\n  }\n\n  /**\n   * @name              _openCommandBox\n   * @type              Function\n   * @private\n   *\n   * This method simply open the passed panel box by animating the transition state\n   *\n   * @param       {SCommand}        commandObj       The command instance for which you want to open the box\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _openCommandBox(commandObj) {\n    if (commandObj._closeTransition) {\n      commandObj._closeTransition.cancel();\n      delete commandObj._closeTransition;\n    }\n    if (commandObj._openTransition) return;\n    commandObj.$box.setFront();\n    commandObj._closedBoxStateObj = {\n      width: commandObj.$box.width,\n      height: commandObj.$box.height,\n      top: commandObj.$box.top,\n      left: commandObj.$box.left,\n      right: commandObj.$box.right,\n      bottom: commandObj.$box.bottom\n    };\n    commandObj._openTransition = __transitionObjectProperties(\n      commandObj._closedBoxStateObj,\n      {\n        width: commandObj.$box.parent.width,\n        height: commandObj.$box.parent.height,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      {\n        duration: '0.3s',\n        easing: 'easeInOutQuint'\n      }\n    )\n      .on('step', (stepObj) => {\n        Object.assign(commandObj.$box, stepObj);\n        commandObj.$box.screen.render();\n      })\n      .on('resolve', () => {\n        delete commandObj._openTransition;\n      });\n  }\n\n  /**\n   * @name              _closePanelBox\n   * @type              Function\n   * @private\n   *\n   * This method simply open the passed panel box by animating the transition state\n   *\n   * @param       {SCommand}        commandObj       The panel that store the box to animate\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _closePanelBox(commandObj) {\n    if (commandObj._openTransition) {\n      commandObj._openTransition.cancel();\n      delete commandObj._openTransition;\n    }\n    if (commandObj._closeTransition) return;\n    commandObj._closeTransition = __transitionObjectProperties(\n      {\n        width: commandObj.$box.width,\n        height: commandObj.$box.height,\n        top: commandObj.$box.top,\n        left: commandObj.$box.left,\n        right: commandObj.$box.right,\n        bottom: commandObj.$box.bottom\n      },\n      commandObj._closedBoxStateObj,\n      {\n        duration: '0.3s',\n        easing: 'easeInOutQuint'\n      }\n    )\n      .on('step', (stepObj) => {\n        Object.assign(commandObj.$box, stepObj);\n        commandObj.$box.screen.render();\n      })\n      .on('resolve', () => {\n        delete commandObj._closeTransition;\n        delete commandObj._closedBoxStateObj;\n      });\n  }\n\n  /**\n   * @name              _updateCommandBoxesContent\n   * @type              Function\n   * @private\n   *\n   * This method take all the current commandObj available and set the layout correctly depending\n   * on how many they are, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _updateCommandBoxesContent() {\n    this._displayedCommands.forEach((commandObj, i) => {\n      const lastProcessObj = commandObj.instance.lastProcessObj;\n\n      if (lastProcessObj && lastProcessObj.state === 'killed') {\n        commandObj.$log.clear();\n        commandObj.$log.log(`<red>The process has been killed...</red>`);\n      } else if (lastProcessObj && lastProcessObj.state === 'error') {\n        // commandObj.$log.pushLine(__parseHtml(`<red>Something went wrong...</red>`));\n      } else {\n        if (\n          lastProcessObj &&\n          lastProcessObj.stdout &&\n          !lastProcessObj.stdout.length\n        ) {\n          commandObj.$log.clear();\n        }\n        // take care of the content of the processBox\n        // commandObj.$log.setContent('');\n        // if (\n        //   lastProcessObj &&\n        //   lastProcessObj.stderr &&\n        //   lastProcessObj.stderr.length\n        // ) {\n        //   lastProcessObj.stderr.forEach((logItem) => {\n        //     commandObj.$log.pushLine(__parseHtml(logItem.value || logItem));\n        //   });\n        // } else if (\n        //   lastProcessObj &&\n        //   lastProcessObj.stdout &&\n        //   lastProcessObj.stdout.length\n        // ) {\n        //   lastProcessObj.stdout.forEach((logItem) => {\n        //     commandObj.$log.pushLine(__parseHtml(logItem.value || logItem));\n        //   });\n        // }\n      }\n\n      // scroll logBox\n      // commandObj.$log.setScrollPerc(100);\n    });\n  }\n\n  /**\n   * @name              _updateCommandBoxesLayout\n   * @type              Function\n   * @private\n   *\n   * This method take all the current commandObj available and set the layout correctly depending\n   * on how many they are, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _updateCommandBoxesLayout() {\n    let currentTop = 0;\n\n    // this._commands.forEach((commandObj) => {\n    //   let boxObj = this._boxesObjectsMap.get(commandObj);\n    //   if (this._displayedCommands.indexOf(commandObj) === -1) {\n    //     if (!boxObj.$box) return;\n    //     boxObj.$box.detach();\n    //   } else {\n    //     this.$log.append(boxObj.$box);\n    //   }\n    // });\n\n    this._displayedCommands.forEach((commandObj, i) => {\n      const lastProcessObj = commandObj.instance.lastProcessObj;\n      let layout = 'default';\n      if (this._displayedCommands.length === 2) layout = 'two';\n      if (this._displayedCommands.length === 3) layout = 'three';\n      if (this._displayedCommands.length === 4) layout = 'four';\n      if (this._displayedCommands.length === 5) layout = 'five';\n      if (this._displayedCommands.length === 6) layout = 'six';\n      if (this._displayedCommands.length === 7) layout = 'seven';\n\n      let width, height, top, left, right, bottom;\n\n      switch (layout) {\n        case 'two':\n          width =\n            i === 1 && __isOdd(process.stdout.columns) ? '50%-2' : '50%-1';\n          height = '100%';\n          top = 0;\n          left = i === 0 ? 0 : '50%+1';\n          right = i === 0 ? '50%+1' : 0;\n          bottom = 0;\n          break;\n        case 'three':\n          if (i === 0 || i === 1) {\n            width = '50%-1';\n            height = '50%';\n            top = 0;\n            left = i === 0 ? 0 : '50%+1';\n            right = i === 0 ? '50%+1' : 0;\n            bottom = 0;\n          } else {\n            top = '50%+1';\n            // height = '50%';\n            width = '100%';\n            left = 0;\n            right = 0;\n            bottom = 0;\n          }\n          break;\n        case 'four':\n          if (i === 0 || i === 1) {\n            width = '50%-1';\n            height = '50%';\n            top = 0;\n            left = i === 0 ? 0 : '50%+1';\n            right = i === 0 ? '50%+1' : 0;\n          } else {\n            top = '50%+1';\n            // height = '50%';\n            width = '50%-1';\n            left = i === 2 ? 0 : '50%+1';\n            right = i === 2 ? '50%+1' : 0;\n            bottom = 0;\n          }\n          break;\n        case 'five':\n          if (i === 0 || i === 1 || i === 2) {\n            width = i === 1 ? '33%-1' : '33%';\n            height = '50%';\n            top = 0;\n            left = i * 33 + `%${i === 1 ? '+2' : i === 2 ? '+3' : ''}`;\n            // right = i === 0 ? '50%+1' : 0;\n          } else {\n            width = '50%-1';\n            // height = '50%';\n            top = '50%+1';\n            left = i === 3 ? 0 : '50%+1';\n            right = i === 3 ? '50%+1' : 0;\n          }\n          break;\n        case 'six':\n          if (i === 0 || i === 1 || i === 2) {\n            width = i === 1 ? '33%-1' : '33%';\n            height = '50%';\n            top = 0;\n            left = i * 33 + `%${i === 1 ? '+2' : i === 2 ? '+3' : ''}`;\n            // right = i === 0 ? '50%+1' : 0;\n          } else {\n            width = i === 4 ? '33%-1' : '33%';\n            // height = '50%';\n            top = '50%+1';\n            left = (i - 3) * 33 + `%${i === 4 ? '+2' : i === 5 ? '+3' : ''}`;\n            // left = i === 3 ? 0 : '50%+1';\n            // right = i === 3 ? '50%+1' : 0;\n          }\n          break;\n        case 'seven':\n          if (i === 0 || i === 1 || i === 2 || i === 3) {\n            width = '25%';\n            height = '50%';\n            top = 0;\n            left =\n              i * 25 +\n              `%${i === 1 ? '+2' : i === 2 ? '+3' : i === 3 ? '+5' : ''}`;\n            // right = i === 0 ? '50%+1' : 0;\n          } else {\n            width = i === 5 ? '33%-1' : '33%';\n            // height = '50%';\n            top = '50%+1';\n            left = (i - 4) * 33 + `%${i === 5 ? '+2' : i === 6 ? '+3' : ''}`;\n            // left = i === 3 ? 0 : '50%+1';\n            // right = i === 3 ? '50%+1' : 0;\n          }\n          break;\n      }\n\n      commandObj.$box.width = width;\n      commandObj.$box.height = height;\n      commandObj.$box.top = top;\n      commandObj.$box.left = left;\n      commandObj.$box.right = right;\n      commandObj.$box.bottom = bottom;\n      // deletecommandObj.$box.width;\n      // deletecommandObj.$box.height;\n\n      if (commandObj.opened && !commandObj._openTransition) {\n        commandObj.$box.setFront();\n        commandObj.$box.width = '100%';\n        commandObj.$box.height = '100%';\n        commandObj.$box.left = 0;\n        commandObj.$box.top = 0;\n        commandObj.$box.right = 0;\n        commandObj.$box.bottom = 0;\n      }\n    });\n\n    this.$log.setScrollPerc(100);\n  }\n\n  update() {\n    if (this.isDestroyed()) return;\n\n    setTimeout(() => {\n      // init and update command boxes\n      this._updateCommandBoxesStyle();\n\n      // update the layout\n      this._updateCommandBoxesLayout();\n\n      // update the content\n      this._updateCommandBoxesContent();\n\n      super.update();\n    });\n  }\n};\n"]}
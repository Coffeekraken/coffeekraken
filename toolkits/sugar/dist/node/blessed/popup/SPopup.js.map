{"version":3,"sources":["SPopup.js"],"names":["__blessed","require","__SComponent","__deepMerge","__parseHtml","__color","__escapeStack","__activeSpace","__SPromise","module","exports","settings","title","description","id","width","height","top","left","style","bg","toString","fg","padding","bottom","right","$title","$description","$content","scrollable","scrollbar","ch","inverse","mouse","keys","_settings","box","content","contentTop","promise","start","trigger","append","escape","previous","cancel","detach","getScrollHeight","Math","round"],"mappings":"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","sourcesContent":["const __blessed = require('blessed');\nconst __SComponent = require('../SComponent');\nconst __deepMerge = require('../../object/deepMerge');\nconst __parseHtml = require('../../terminal/parseHtml');\nconst __color = require('../../color/color');\nconst __escapeStack = require('../../terminal/escapeStack');\nconst __activeSpace = require('../../core/activeSpace');\nconst __SPromise = require('../../promise/SPromise');\n\n/**\n * @name                  SPopup\n * @namespace           node.blessed.popup\n * @type                  Class\n *\n * This class is the base one for all the sugar blessed components like input, panel, etc...\n *\n * @param        {Object}         [settings = {}]         A settings object to configure your list. Here's the available settings:\n * - title (null) {String}: The popup title\n * - description (null) {String}: A description to display in the popup\n * - id (popup) {String}: An id to identify the popup. This id will be appended to the \"activeSpace\" when the popup is opened\n *\n * @example       js\n * const SPopup = require('@coffeekraken/sugar/node/blessed/popup/SPopup');\n * const myPopup = new SPopup();\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SPopup extends __SComponent {\n  /**\n   * @name                  constructor\n   * @type                  Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          title: null,\n          description: null,\n          id: 'popup',\n          width: '80%',\n          height: 200,\n          top: '50%',\n          left: '50%',\n          style: {\n            bg: __color('terminal.primary').toString(),\n            fg: __color('terminal.black').toString()\n          },\n          padding: {\n            top: 0,\n            bottom: 1,\n            left: 2,\n            right: 2\n          },\n          $title: {\n            top: 0,\n            height: 3,\n            padding: {\n              top: 1,\n              bottom: 1,\n              left: 0,\n              right: 0\n            }\n          },\n          $description: {\n            height: 2,\n            style: {\n              bg: __color('terminal.black').toString(),\n              fg: __color('terminal.white').toString()\n            },\n            padding: {\n              top: 1,\n              bottom: 0,\n              left: 2,\n              right: 2\n            }\n          },\n          $content: {\n            left: 0,\n            right: 0,\n            scrollable: true,\n            scrollbar: {\n              ch: ' ',\n              inverse: true\n            },\n            scrollable: true,\n            mouse: true,\n            keys: true,\n            padding: {\n              top: 1,\n              left: 2,\n              bottom: 1,\n              right: 2\n            }\n          }\n        },\n        settings\n      )\n    );\n\n    if (this._settings.title) {\n      this.$title = __blessed.box({\n        style: this._settings.style,\n        ...this._settings.$title,\n        content: __parseHtml(this._settings.title)\n      });\n    }\n\n    if (this._settings.description) {\n      this.$description = __blessed.box({\n        ...this._settings.$description,\n        top: this.$title ? this.$title.height : 0,\n        content: __parseHtml(this._settings.description)\n      });\n    }\n\n    if (this.$title) super.append(this.$title);\n    if (this.$description) super.append(this.$description);\n\n    let contentTop = 0;\n    if (this.$title) contentTop += this.$title.height;\n    if (this.$description) contentTop += this.$description.height;\n    this.$content = __blessed.box({\n      top: contentTop,\n      style: {\n        scrollbar: {\n          bg: this._settings.style.bg || __color('terminal.primary').toString()\n        }\n      },\n      ...(this._settings.$content || {})\n    });\n    this.promise = new __SPromise(() => {}).start();\n\n    super.append(this.$content);\n    this.promise.trigger('open');\n\n    __activeSpace.append(this._settings.id);\n\n    const escape = __escapeStack(() => {\n      __activeSpace.previous();\n      escape.cancel();\n      this.promise.trigger('close');\n      this.detach();\n    });\n  }\n\n  /**\n   * @name            append\n   * @type            Function\n   * @override\n   *\n   * This method is simply used to append content inside the popup\n   *\n   * @return        {SComponent}            Return this component to maintain chainability\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  append(content) {\n    this.$content.append(content);\n    return this;\n  }\n\n  /**\n   * @name            update\n   * @type            Function\n   * @override\n   *\n   * This method simply draw the header\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  update() {\n    this.height = this.$content.getScrollHeight() + 7;\n\n    this.top = `50%-${Math.round(this.height / 2)}`;\n    this.left = `50%-${Math.round(this.width / 2)}`;\n\n    super.update();\n  }\n};\n"]}
{"version":3,"sources":["SDocblocksObjectsToMarkdownStreamAction.js"],"names":["__SActionsStreamAction","require","__SDocblock","module","exports","settings","streamObj","_settings","checkStreamObject","Promise","resolve","reject","docblockInstance","data","filepath","input","toMarkdown","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,sCAAD,CAAtC;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAA3B;AAEA;;;;;;;;;;;;;;;AAaAE,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAgBA;;;;;;;;;AASA,mDAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BACnBA,QADmB;AAE1B;AAED;;;;;;;;;;;AA9BF;AAAA;AAAA,wBAuCMC,SAvCN,EAuCiBD,QAvCjB,EAuC4C;AAAA,UAA3BA,QAA2B;AAA3BA,QAAAA,QAA2B,GAAhB,KAAKE,SAAW;AAAA;;AACxC;AACA,WAAKC,iBAAL,CAAuBF,SAAvB,EAFwC,CAIxC;;AACA,aAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA;AACA,YAAMC,gBAAgB,GAAG,IAAIV,WAAJ,CAAgBI,SAAS,CAACO,IAA1B,EAAgC;AACvDC,UAAAA,QAAQ,EAAER,SAAS,CAACS;AADmC,SAAhC,CAAzB;AAGAT,QAAAA,SAAS,CAACO,IAAV,GAAiBD,gBAAgB,CAACI,UAAjB,EAAjB;AACAN,QAAAA,OAAO,CAACJ,SAAD,CAAP;AACD,OARM,CAAP;AASD;AArDH;;AAAA;AAAA,EAAuEN,sBAAvE,4CAUyB;AACrBa,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AADe,CAVzB","sourcesContent":["const __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __SDocblock = require('../../../docblock/SDocblock');\n\n/**\n * @name                SDocblocksObjectsToMarkdownStreamAction\n * @namespace           node.build.doc.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of converting the docblocks objects in the \"data\" property into markdown string\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SDocblocksObjectsToMarkdownStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    data: {\n      type: 'String',\n      required: true\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(settings);\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings = this._settings) {\n    // make sure we have a correct streamObj\n    this.checkStreamObject(streamObj);\n\n    // return the promise for this action\n    return new Promise((resolve, reject) => {\n      // convert the objects to markdown\n      // console.log(streamObj.data);\n      const docblockInstance = new __SDocblock(streamObj.data, {\n        filepath: streamObj.input\n      });\n      streamObj.data = docblockInstance.toMarkdown();\n      resolve(streamObj);\n    });\n  }\n};\n"]}
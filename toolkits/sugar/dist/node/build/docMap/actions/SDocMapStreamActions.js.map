{"version":3,"sources":["SDocMapStreamActions.js"],"names":["__SActionsStreamAction","require","__SDocMapItem","__deepMerge","module","exports","settings","id","streamObj","resolve","reject","itemsArray","files","forEach","filePath","item","output","push","toJson","data","JSON","stringify","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,sCAAD,CAAtC;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,0BAAD,CAA7B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,2BAAD,CAA3B;AAEA;;;;;;;;;;;;;;;AAaAG,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAsBA;;;;;;;;;AASA,gCAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBH,WAAW,CACT;AACEI,MAAAA,EAAE,EAAE;AADN,KADS,EAITD,QAJS,CAFY;AAS1B;AAED;;;;;;;;;;;AA3CF;AAAA;AAAA,wBAoDME,SApDN,EAoDiBF,QApDjB,EAoD2B;AACvB,2FAAiBE,SAAjB,EAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACrD;AACA,cAAMC,UAAU,GAAG,EAAnB,CAFqD,CAIrD;;AACAH,QAAAA,SAAS,CAACI,KAAV,CAAgBC,OAAhB,CAAyBC,QAAD,IAAc;AACpC;AACA,gBAAMC,IAAI,GAAG,IAAIb,aAAJ,CAAkBY,QAAlB,EAA4B;AACvCE,YAAAA,MAAM,EAAER,SAAS,CAACQ;AADqB,WAA5B,CAAb;AAGAL,UAAAA,UAAU,CAACM,IAAX,CAAgBF,IAAI,CAACG,MAAL,EAAhB;AACD,SAND;AAQAV,QAAAA,SAAS,CAACW,IAAV,GAAiBC,IAAI,CAACC,SAAL,CAAeV,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAAjB;AAEAF,QAAAA,OAAO,CAACD,SAAD,CAAP;AACD,OAhBD;AAiBD;AAtEH;;AAAA;AAAA,EAAoDR,sBAApD,4CAUyB;AACrBY,EAAAA,KAAK,EAAE;AACLU,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADc;AAKrBP,EAAAA,MAAM,EAAE;AACNM,IAAAA,IAAI,EAAE,QADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ;AALa,CAVzB,mCAqBgB,IArBhB","sourcesContent":["const __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __SDocMapItem = require('../../../doc/SDocMapItem');\nconst __deepMerge = require('../../../object/deepMerge');\n\n/**\n * @name                SDocMapStreamActions\n * @namespace           node.build.doc.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of generating the docMap.json file at the root of the documentation directory\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SDocMapStreamActions extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    files: {\n      type: 'Array<String>',\n      required: true\n    },\n    output: {\n      type: 'String',\n      required: true\n    }\n  };\n\n  static once = true;\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'actionStream.action.docMap'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    return super.run(streamObj, async (resolve, reject) => {\n      // create the items array\n      const itemsArray = [];\n\n      // loop on files\n      streamObj.files.forEach((filePath) => {\n        // create a docMap item\n        const item = new __SDocMapItem(filePath, {\n          output: streamObj.output\n        });\n        itemsArray.push(item.toJson());\n      });\n\n      streamObj.data = JSON.stringify(itemsArray, null, 4);\n\n      resolve(streamObj);\n    });\n  }\n};\n"]}
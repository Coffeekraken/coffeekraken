{"version":3,"sources":["STerserStreamAction.js"],"names":["__deepMerge","require","__SActionsStreamAction","__terser","module","exports","settings","id","streamObj","resolve","reject","prod","terserResult","minify","data","output","comments","sourceMap","filename","url","error","Error","code","map","sourcemapData","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAMC,sBAAsB,GAAGD,OAAO,CAAC,sCAAD,CAAtC;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,QAAD,CAAxB;AAEA;;;;;;;;;;;;;;;AAaAG,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAwBA;;;;;;;;;AASA,+BAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBN,WAAW,CACT;AACEO,MAAAA,EAAE,EAAE;AADN,KADS,EAITD,QAJS,CAFY;AAS1B;AAED;;;;;;;;;;;AA7CF;AAAA;AAAA,wBAsDME,SAtDN,EAsDiBF,QAtDjB,EAsD2B;AACvB,0FAAiBE,SAAjB,EAA4B,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/C;AAEA,YAAI,CAACF,SAAS,CAACG,IAAf,EAAqB,OAAOF,OAAO,CAACD,SAAD,CAAd;;AAErB,YAAMI,YAAY,GAAGT,QAAQ,CAACU,MAAT,CACnBL,SAAS,CAACM,IADS,EAEnBd,WAAW,CACT;AACEe,UAAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAE;AADJ,WADV;AAIEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAEV,SAAS,CAACU,QADX;AAETC,YAAAA,GAAG,EAAEX,SAAS,CAACU,QAAV,GAAqB;AAFjB;AAJb,SADS,EAUTZ,QAVS,CAFQ,CAArB,CAL+C,CAqB/C;;;AACA,YAAIM,YAAY,CAACQ,KAAjB,EAAwB;AACtB,gBAAM,IAAIC,KAAJ,CAAUT,YAAY,CAACQ,KAAvB,CAAN;AACD,SAxB8C,CA0B/C;;;AACAZ,QAAAA,SAAS,CAACM,IAAV,GAAiBF,YAAY,CAACU,IAA9B,CA3B+C,CA6B/C;;AACA,YAAIV,YAAY,CAACW,GAAjB,EAAsBf,SAAS,CAACgB,aAAV,GAA0BZ,YAAY,CAACW,GAAvC,CA9ByB,CAgC/C;;AACAd,QAAAA,OAAO,CAACD,SAAD,CAAP;AACD,OAlCD;AAmCD;AA1FH;;AAAA;AAAA,EAAmDN,sBAAnD,4CAUyB;AACrBgB,EAAAA,QAAQ,EAAE;AACRO,IAAAA,IAAI,EAAE,QADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADW;AAKrBZ,EAAAA,IAAI,EAAE;AACJW,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GALe;AASrBF,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE,eADO;AAEbC,IAAAA,QAAQ,EAAE;AAFG;AATM,CAVzB","sourcesContent":["const __deepMerge = require('../../../object/deepMerge');\nconst __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __terser = require('terser');\n\n/**\n * @name                STerserStreamAction\n * @namespace           node.build.js.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of passing terser js on the output files\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class STerserStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    filename: {\n      type: 'String',\n      required: true\n    },\n    data: {\n      type: 'String',\n      required: true\n    },\n    sourcemapData: {\n      type: 'String|Object',\n      required: false\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'actionStream.action.js.terser'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    return super.run(streamObj, (resolve, reject) => {\n      // minify the \"data\"\n\n      if (!streamObj.prod) return resolve(streamObj);\n\n      const terserResult = __terser.minify(\n        streamObj.data,\n        __deepMerge(\n          {\n            output: {\n              comments: false\n            },\n            sourceMap: {\n              filename: streamObj.filename,\n              url: streamObj.filename + '.map'\n            }\n          },\n          settings\n        )\n      );\n\n      // check if has some error\n      if (terserResult.error) {\n        throw new Error(terserResult.error);\n      }\n\n      // otherwise, save the new data in the streamObj\n      streamObj.data = terserResult.code;\n\n      // set the map if has been generated\n      if (terserResult.map) streamObj.sourcemapData = terserResult.map;\n\n      // resolve the new streamObj\n      resolve(streamObj);\n    });\n  }\n};\n"]}
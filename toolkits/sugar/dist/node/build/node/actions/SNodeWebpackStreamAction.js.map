{"version":3,"sources":["SNodeWebpackStreamAction.js"],"names":["__webpack","require","__getFilename","__packageRoot","__deepMerge","__fs","__path","__SActionsStreamAction","__SBuildNodeCli","__sugarConfig","__babel","__tmpDir","__childProcess","module","exports","settings","id","streamObj","babel","resolve","reject","trigger","input","slice","tmpDir","filePath","outFilePath","log","group","name","value","replace","writeFileSync","data","childProcess","execSync","cwd","readFileSync","result","transformAsync","__dirname","filename","sourceMaps","presets","targets","node","catch","error","code","map","sourcemapData"],"mappings":"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","sourcesContent":["const __webpack = require('webpack');\nconst __getFilename = require('../../../fs/filename');\nconst __packageRoot = require('../../../path/packageRoot');\nconst __deepMerge = require('../../../object/deepMerge');\nconst __fs = require('fs');\nconst __path = require('path');\nconst __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __SBuildNodeCli = require('../SBuildNodeCli');\nconst __sugarConfig = require('../../../config/sugar');\nconst __babel = require('@babel/core');\nconst __tmpDir = require('../../../fs/tmpDir');\nconst __childProcess = require('child_process');\n\n/**\n * @name                SNodeCompilerStreamAction\n * @namespace           node.build.node.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of passing babel, typescript, etc... on the output files\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SNodeCompilerStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'actionStream.action.node.webpack'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    settings = __deepMerge(\n      {\n        babel: __sugarConfig('babel')\n      },\n      settings\n    );\n\n    return super.run(streamObj, async (resolve, reject, trigger) => {\n      if (streamObj.input.slice(-2) === 'ts') {\n        // saving the file to render it\n        const tmpDir = __tmpDir();\n        const filePath = `${tmpDir}/${__getFilename(streamObj.input)}`;\n        const outFilePath = `${filePath}.out`;\n\n        this.log({\n          group: settings.name,\n          value: `Precessing the <magenta>typescript</magenta> file \"<cyan>${streamObj.input.replace(\n            `${__packageRoot()}/`,\n            ''\n          )}</cyan>\"...`\n        });\n\n        __fs.writeFileSync(filePath, streamObj.data);\n\n        // compiling the file\n        const childProcess = __childProcess.execSync(\n          `npx tsc --outFile ${outFilePath} ${filePath}`,\n          {\n            cwd: __packageRoot()\n          }\n        );\n\n        streamObj.data = __fs.readFileSync(outFilePath, 'utf8');\n\n        return resolve(streamObj);\n      }\n\n      this.log({\n        group: settings.name,\n        value: `Precessing the <magenta>javascript</magenta> file \"<cyan>${streamObj.input.replace(\n          `${__packageRoot()}/`,\n          ''\n        )}</cyan>\"...`\n      });\n\n      const result = await __babel\n        .transformAsync(streamObj.data, {\n          cwd: __packageRoot(__dirname),\n          filename: streamObj.filename,\n          sourceMaps: true,\n          presets: [\n            [\n              '@babel/preset-env',\n              {\n                targets: {\n                  node: 'current'\n                }\n              }\n            ]\n          ],\n          ...settings.babel\n        })\n        .catch((error) => {\n          return reject(error);\n        });\n\n      streamObj.data = result.code;\n      if (streamObj.map && result.map) {\n        streamObj.sourcemapData = result.map;\n      }\n\n      return resolve(streamObj);\n    });\n  }\n};\n"]}
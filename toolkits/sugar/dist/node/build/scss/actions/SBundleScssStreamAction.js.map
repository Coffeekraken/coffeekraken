{"version":3,"sources":["SBundleScssStreamAction.js"],"names":["__SActionsStreamAction","require","__Bundler","Bundler","__getFilename","__isGlob","__isPath","__deepMerge","module","exports","settings","name","id","streamObj","resolve","reject","input","bundler","undefined","split","slice","join","bundledScssString","bundle","bundledContent","data","e","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,sCAAD,CAAtC;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBE,OAAzC;;AACA,IAAMC,aAAa,GAAGH,OAAO,CAAC,sBAAD,CAA7B;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,2BAAD,CAA3B;AAEA;;;;;;;;;;;;;;;AAaAO,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAgBA;;;;;;;;;AASA,mCAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBH,WAAW,CACT;AACEI,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,EAAE,EAAE;AAFN,KADS,EAKTF,QALS,CAFY;AAU1B;AAED;;;;;;;;;;;AAtCF;AAAA;AAAA,wBA+CMG,SA/CN,EA+CiBH,QA/CjB,EA+C2B;AACvB,8FAAiBG,SAAjB;AAAA,qCAA4B,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AACrD,cAAI,CAACT,QAAQ,CAACO,SAAS,CAACG,KAAX,CAAb,EAAgC;AAC9B,mBAAOF,OAAO,CAACD,SAAD,CAAd;AACD;;AAED,cAAI;AACF,gBAAMI,OAAO,GAAG,IAAIf,SAAJ,CACdgB,SADc,EAEdL,SAAS,CAACG,KAAV,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAAC,CAArC,EAAwCC,IAAxC,CAA6C,GAA7C,CAFc,CAAhB;AAIA,gBAAIC,iBAAiB,SAAS,OACtBL,OAAO,CAACM,MAAR,CAAenB,aAAa,CAACS,SAAS,CAACG,KAAX,CAA5B,CADsB,EAE5BQ,cAFF,CALE,CASF;;AACA,gBAAIX,SAAS,CAACY,IAAd,EAAoBZ,SAAS,CAACY,IAAV,IAAkBH,iBAAlB,CAApB,KACKT,SAAS,CAACY,IAAV,GAAiBH,iBAAjB;AACN,WAZD,CAYE,OAAOI,CAAP,EAAU,CAAE;;AAEdZ,UAAAA,OAAO,CAACD,SAAD,CAAP;AACD,SApBD;;AAAA;AAAA;AAAA;AAAA;AAqBD;AArEH;;AAAA;AAAA,EAAuDb,sBAAvD,4CAUyB;AACrBgB,EAAAA,KAAK,EAAE;AACLW,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,QAAQ,EAAE;AAFL;AADc,CAVzB","sourcesContent":["const __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __Bundler = require('scss-bundle').Bundler;\nconst __getFilename = require('../../../fs/filename');\nconst __isGlob = require('../../../is/glob');\nconst __isPath = require('../../../is/path');\nconst __deepMerge = require('../../../object/deepMerge');\n\n/**\n * @name                SBundleScssStreamAction\n * @namespace           node.build.scss.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of transform a js object to an scss map\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SBundleScssStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    input: {\n      type: 'String',\n      required: true\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          name: 'Bundle',\n          id: 'actionStream.action.scss.bundle'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    return super.run(streamObj, async (resolve, reject) => {\n      if (!__isPath(streamObj.input)) {\n        return resolve(streamObj);\n      }\n\n      try {\n        const bundler = new __Bundler(\n          undefined,\n          streamObj.input.split('/').slice(0, -1).join('/')\n        );\n        let bundledScssString = await (\n          await bundler.bundle(__getFilename(streamObj.input))\n        ).bundledContent;\n\n        // set the bundled content into the \"data\" property\n        if (streamObj.data) streamObj.data += bundledScssString;\n        else streamObj.data = bundledScssString;\n      } catch (e) {}\n\n      resolve(streamObj);\n    });\n  }\n};\n"]}
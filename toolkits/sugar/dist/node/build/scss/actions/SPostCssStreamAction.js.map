{"version":3,"sources":["SPostCssStreamAction.js"],"names":["__SActionsStreamAction","require","__Bundler","Bundler","__getFilename","__postcss","__precss","__autoprefixer","__postcssPresetEnv","__cssnano","__removeComments","__deepMerge","module","exports","settings","name","id","streamObj","resolve","reject","prod","postCssResult","removeAll","process","data","map","inline","from","undefined","css","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,sCAAD,CAAtC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBE,OAAzC;;AACA,MAAMC,aAAa,GAAGH,OAAO,CAAC,sBAAD,CAA7B;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,SAAD,CAAzB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMM,cAAc,GAAGN,OAAO,CAAC,cAAD,CAA9B;;AACA,MAAMO,kBAAkB,GAAGP,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAMQ,SAAS,GAAGR,OAAO,CAAC,SAAD,CAAzB;;AACA,MAAMS,gBAAgB,GAAGT,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMU,WAAW,GAAGV,OAAO,CAAC,2BAAD,CAA3B;AAEA;;;;;;;;;;;;;;;AAaAW,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAoBA;;;;;;;;;AASA,gCAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBH,WAAW,CACT;AACEI,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,EAAE,EAAE;AAFN,KADS,EAKTF,QALS,CAFY;AAU1B;AAED;;;;;;;;;;;AA1CF;AAAA;AAAA,wBAmDMG,SAnDN,EAmDiBH,QAnDjB,EAmD2B;AACvB,2FAAiBG,SAAjB,EAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACrD,YAAI,CAACF,SAAS,CAACG,IAAf,EAAqB,OAAOF,OAAO,CAACD,SAAD,CAAd;AAErB,cAAMI,aAAa,GAAG,MAAMhB,SAAS,CAAC,CACpCC,QADoC,EAEpCC,cAFoC,EAGpCC,kBAHoC,EAIpCC,SAJoC,EAKpCC,gBAAgB,CAAC;AAAEY,UAAAA,SAAS,EAAE;AAAb,SAAD,CALoB,CAAD,CAAT,CAMzBC,OANyB,CAMjBN,SAAS,CAACO,IANO,EAMD;AACzBC,UAAAA,GAAG,EAAER,SAAS,CAACQ,GAAV,GACD;AACEC,YAAAA,MAAM,EAAET,SAAS,CAACG,IAAV,GAAiB,KAAjB,GAAyB;AADnC,WADC,GAID,KALqB;AAMzBO,UAAAA,IAAI,EAAEC,SANmB,CAOzB;;AAPyB,SANC,CAA5B,CAHqD,CAmBrD;;AACA,YAAIP,aAAa,CAACQ,GAAlB,EAAuB;AACrBZ,UAAAA,SAAS,CAACO,IAAV,GAAiBH,aAAa,CAACQ,GAA/B;AACD,SAtBoD,CAuBrD;AACA;AACA;AACA;AAEA;;;AACAX,QAAAA,OAAO,CAACD,SAAD,CAAP;AACD,OA9BD;AA+BD;AAnFH;;AAAA;AAAA,EAAoDjB,sBAApD,4CAUyB;AACrBwB,EAAAA,IAAI,EAAE;AACJM,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADe;AAKrBN,EAAAA,GAAG,EAAE;AACHK,IAAAA,IAAI,EAAE,SADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AALgB,CAVzB","sourcesContent":["const __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __Bundler = require('scss-bundle').Bundler;\nconst __getFilename = require('../../../fs/filename');\nconst __postcss = require('postcss');\nconst __precss = require('precss');\nconst __autoprefixer = require('autoprefixer');\nconst __postcssPresetEnv = require('postcss-preset-env');\nconst __cssnano = require('cssnano');\nconst __removeComments = require('postcss-discard-comments');\nconst __deepMerge = require('../../../object/deepMerge');\n\n/**\n * @name                SPostCssStreamAction\n * @namespace           node.build.scss.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This function is responsible of passing the postCss package on the generated css\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SPostCssStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    data: {\n      type: 'String',\n      required: true\n    },\n    map: {\n      type: 'Boolean',\n      required: false\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          name: 'PostCSS',\n          id: 'actionStream.action.scss.postCss'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    return super.run(streamObj, async (resolve, reject) => {\n      if (!streamObj.prod) return resolve(streamObj);\n\n      const postCssResult = await __postcss([\n        __precss,\n        __autoprefixer,\n        __postcssPresetEnv,\n        __cssnano,\n        __removeComments({ removeAll: true })\n      ]).process(streamObj.data, {\n        map: streamObj.map\n          ? {\n              inline: streamObj.prod ? false : true\n            }\n          : false,\n        from: undefined\n        // to: `${streamObj.outputDir}/${__getFilename(streamObj.input)}`\n      });\n\n      // set the \"data\" property with the new processed css\n      if (postCssResult.css) {\n        streamObj.data = postCssResult.css;\n      }\n      // // set the \"sourcemapData\" property if a map has been generated\n      // if (postCssResult.map) {\n      //   streamObj.sourcemapData = postCssResult.map;\n      // }\n\n      // resolving the action\n      resolve(streamObj);\n    });\n  }\n};\n"]}
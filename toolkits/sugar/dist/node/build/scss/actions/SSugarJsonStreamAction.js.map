{"version":3,"sources":["SSugarJsonStreamAction.js"],"names":["__SActionsStreamAction","require","__deepMerge","__globby","__path","__packageRoot","stream","module","exports","settings","name","id","streamObj","resolve","reject","sugarJsonDirs","warn","dirs","Array","isArray","files","dir","sync","forEach","filePath","sugarJson","sugarJsonPath","dirname","scss","main","data","css","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,sCAAD,CAAtC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,2BAAD,CAA3B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAMI,aAAa,GAAGJ,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAaL,OAAO,CAAC,QAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;AAcAM,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAgBA;;;;;;;;;AASA,kCAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBP,WAAW,CACT;AACEQ,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,EAAE,EAAE;AAFN,KADS,EAKTF,QALS,CAFY;AAU1B;AAED;;;;;;;;;;;AAtCF;AAAA;AAAA,wBA+CMG,SA/CN,EA+CiBH,QA/CjB,EA+C2B;AACvB,6FAAiBG,SAAjB,EAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACrD,YAAI,CAACF,SAAS,CAACG,aAAf,EAA8B;AAC5B,eAAKC,IAAL,CACG,+FAA8FX,aAAa,EAAG,aADjH;AAGAO,UAAAA,SAAS,CAACG,aAAV,GAA0B,CAACV,aAAa,EAAd,CAA1B;AACD,SANoD,CAQrD;;;AACA,YAAIY,IAAI,GAAGL,SAAS,CAACG,aAArB;AACA,YAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0BA,IAAI,GAAG,CAACA,IAAD,CAAP;AAC1B,YAAIG,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;AACpBG,UAAAA,KAAK,GAAG,CACN,GAAGA,KADG,EAEN,GAAGjB,QAAQ,CAACmB,IAAT,CAAc,CACd,GAAED,GAAI,aADQ,EAEd,GAAEA,GAAI,4BAFQ,EAGd,GAAEA,GAAI,8BAHQ,CAAd,CAFG,CAAR;AAQD,SArBoD,CAuBrD;;;AACAD,QAAAA,KAAK,CAACG,OAAN,CAAeC,QAAD,IAAc;AAC1B,gBAAMC,SAAS,GAAGxB,OAAO,CAACuB,QAAD,CAAzB;;AACA,gBAAME,aAAa,GAAGtB,MAAM,CAACuB,OAAP,CAAeH,QAAf,CAAtB;;AACA,cAAIC,SAAS,CAACG,IAAV,IAAkBH,SAAS,CAACG,IAAV,CAAeC,IAArC,EAA2C;AACzCjB,YAAAA,SAAS,CAACkB,IAAV,GAAkB;uBACLJ,aAAc,IAAGD,SAAS,CAACG,IAAV,CAAeC,IAAK;cAC9CjB,SAAS,CAACkB,IAAK;WAFnB;AAID;;AACD,cAAIL,SAAS,CAACM,GAAV,IAAiBN,SAAS,CAACM,GAAV,CAAcF,IAAnC,EAAyC;AACvCjB,YAAAA,SAAS,CAACkB,IAAV,GAAkB;uBACLJ,aAAc,IAAGD,SAAS,CAACM,GAAV,CAAcF,IAAK;cAC7CjB,SAAS,CAACkB,IAAK;WAFnB;AAID;AACF,SAfD;AAiBAjB,QAAAA,OAAO,CAACD,SAAD,CAAP;AACD,OA1CD;AA2CD;AA3FH;;AAAA;AAAA,EAAsDZ,sBAAtD,4CAUyB;AACrBe,EAAAA,aAAa,EAAE;AACbiB,IAAAA,IAAI,EAAE,sBADO;AAEbC,IAAAA,QAAQ,EAAE;AAFG;AADM,CAVzB","sourcesContent":["const __SActionsStreamAction = require('../../../stream/SActionsStreamAction');\nconst __deepMerge = require('../../../object/deepMerge');\nconst __globby = require('globby');\nconst __path = require('path');\nconst __packageRoot = require('../../../path/packageRoot');\nconst { stream } = require('globby');\n\n/**\n * @name                SSugarJsonStreamAction\n * @namespace           node.build.scss.actions\n * @type                Class\n * @extends             SActionsStreamAction\n *\n * This action is responsible of searching for packages with a ```sugar.json``` root file\n * and impoirting the main css and scss files before compilation\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SSugarJsonStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    sugarJsonDirs: {\n      type: 'String|Array<String>',\n      required: false\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          name: 'Sugar Json',\n          id: 'actionStream.action.scss.sugarJson'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings) {\n    return super.run(streamObj, async (resolve, reject) => {\n      if (!streamObj.sugarJsonDirs) {\n        this.warn(\n          `No \"<cyan>sugarJsonDirs</cyan>\" has been specified so use the default value which is \"<cyan>${__packageRoot()}</cyan>\"...`\n        );\n        streamObj.sugarJsonDirs = [__packageRoot()];\n      }\n\n      // search for sugar.json files\n      let dirs = streamObj.sugarJsonDirs;\n      if (!Array.isArray(dirs)) dirs = [dirs];\n      let files = [];\n      for (let dir of dirs) {\n        files = [\n          ...files,\n          ...__globby.sync([\n            `${dir}/sugar.json`,\n            `${dir}/node_modules/*/sugar.json`,\n            `${dir}/node_modules/*/*/sugar.json`\n          ])\n        ];\n      }\n\n      // read each sugar files\n      files.forEach((filePath) => {\n        const sugarJson = require(filePath);\n        const sugarJsonPath = __path.dirname(filePath);\n        if (sugarJson.scss && sugarJson.scss.main) {\n          streamObj.data = `\n            @import \"${sugarJsonPath}/${sugarJson.scss.main}\";\n            ${streamObj.data};\n          `;\n        }\n        if (sugarJson.css && sugarJson.css.main) {\n          streamObj.data = `\n            @import \"${sugarJsonPath}/${sugarJson.css.main}\";\n            ${streamObj.data}\n          `;\n        }\n      });\n\n      resolve(streamObj);\n    });\n  }\n};\n"]}
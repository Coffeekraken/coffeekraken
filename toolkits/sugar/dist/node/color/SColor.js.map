{"version":3,"sources":["SColor.js"],"names":["__SColor","require","__sugarConfig","module","exports","color","sugarConfigColor","match","replace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;AAEA;;;;;;;AAKAE,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;AASA,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;AAED;;;;;;;;;;;;;;;;AAdF;AAAA;AAAA,6BA4BWA,KA5BX,EA4BkB;AACd;AACA,UAAIC,gBAAJ;;AACA,UAAID,KAAK,CAACE,KAAN,CAAY,YAAZ,CAAJ,EAA+B;AAC7BD,QAAAA,gBAAgB,GAAGJ,aAAa,CAC7B,mBAAkBG,KAAK,CAACG,OAAN,CAAc,WAAd,EAA2B,EAA3B,CAA+B,EADpB,CAAhC;AAGD,OAJD,MAIO;AACLF,QAAAA,gBAAgB,GAAGJ,aAAa,CAAE,UAASG,KAAM,EAAjB,CAAhC;AACD;;AACD,UAAIC,gBAAgB,IAAIA,gBAAgB,CAACD,KAAzC,EACE,OAAOC,gBAAgB,CAACD,KAAxB;AACF,UAAIC,gBAAJ,EAAsB,OAAOA,gBAAP;AACtB,kFAAsBD,KAAtB;AACD;AA1CH;;AAAA;AAAA,EAAsCL,QAAtC","sourcesContent":["const __SColor = require('../../../js/color/SColor');\nconst __sugarConfig = require('../config/sugar');\n\n/**\n * @namespace           node.color\n * @src             ../../../js/color/SColor.js\n * @extends         SColor\n */\nmodule.exports = class SColor extends __SColor {\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(color) {\n    super(color);\n  }\n\n  /**\n   * @name            getColor\n   * @type            Function\n   * @override\n   *\n   * This method take as parameter the passed color to the constructor and has to return the\n   * actual real color like color from the static colors listed in the SColor class or maybe\n   * from the Sugar configured colors\n   *\n   * @param       {String}      color         The passed color to the constructor\n   * @return      {String}                    The actual real color taken from the Sugar config or somewhere else...\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  getColor(color) {\n    // try to get the color from the sugar config\n    let sugarConfigColor;\n    if (color.match(/terminal\\./)) {\n      sugarConfigColor = __sugarConfig(\n        `terminal.colors.${color.replace('terminal.', '')}`\n      );\n    } else {\n      sugarConfigColor = __sugarConfig(`colors.${color}`);\n    }\n    if (sugarConfigColor && sugarConfigColor.color)\n      return sugarConfigColor.color;\n    if (sugarConfigColor) return sugarConfigColor;\n    return super.getColor(color);\n  }\n};\n"]}
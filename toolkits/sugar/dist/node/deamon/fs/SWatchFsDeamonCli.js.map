{"version":3,"sources":["SWatchFsDeamonCli.js"],"names":["__SCli","require","__SPromise","__deepMerge","__chokidar","__getFilename","__extension","__packageRoot","__fs","__argsToString","__childProcess","module","exports","settings","id","name","argsObj","resolve","reject","trigger","cancel","runningTests","value","watch","input","persistent","followSymlinks","on","filepath","filename","path","replace","clear","content","readFileSync","deamonReg","deamonMatches","match","command","trim","args","childProcess","spawn","stdio","shell","e","console","log","start","type","alias","description","level","required"],"mappings":"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","sourcesContent":["const __SCli = require('../../cli/SCli');\nconst __SPromise = require('../../promise/SPromise');\nconst __deepMerge = require('../../object/deepMerge');\nconst __chokidar = require('chokidar');\nconst __getFilename = require('../../fs/filename');\nconst __extension = require('../../fs/extension');\nconst __packageRoot = require('../../path/packageRoot');\nconst __fs = require('fs');\nconst __argsToString = require('../../cli/argsToString');\nconst __childProcess = require('child_process');\n\n/**\n * @name            SWatchFsDeamonCli\n * @namespace           node.deamon.fs\n * @type            Class\n * @extends         SCli\n *\n * This class represent the watch filesystem deamon Cli\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SWatchFsDeamonCli extends __SCli {\n  /**\n   * @name          command\n   * @type          String\n   * @static\n   *\n   * Store the command string\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static command = 'sugar deamon.fs %arguments';\n\n  /**\n   * @name          definitionObj\n   * @type          Object\n   * @static\n   *\n   * Store the definition object\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    name: {\n      type: 'String',\n      alias: 'n',\n      description:\n        'Specify the name of a configured deamon in the \"deamons.config.js\" file',\n      level: 1,\n      required: false\n    },\n    input: {\n      type: 'String',\n      alias: 'i',\n      description: 'Input files glob pattern',\n      level: 1,\n      required: false\n    },\n    command: {\n      type: 'String',\n      alias: 'c',\n      description:\n        'Specify the command you want to launch when fs update has been detected',\n      level: 1,\n      required: false\n    }\n  };\n\n  /**\n   * @name          constructor\n   * @type          Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'deamon.fs',\n          name: 'Deamon Fs'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name            _run\n   * @type            Function\n   * @private\n   *\n   * This method is the one that will be called once you call ```run```.\n   * The params passed are processed by the ```run``` parent method so you can\n   * confidently trust them.\n   * You MUST return an SPromise instance so that the spawned process can be\n   * managed automatically in the parent ```run``` method.\n   *\n   * @param       {Object}        argsObj         The object of passed arguments\n   * @param       {Object}        [settings={}]     The passed settings object\n   * @return      {SPromise}                      An SPromise instance through which the parent method can register for events like \"success\", \"log\", etc...\n   *\n   * @since       2.0.0\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _run(argsObj, settings = {}) {\n    return new __SPromise(\n      async function (resolve, reject, trigger, cancel) {\n        const runningTests = {};\n\n        trigger('log', {\n          value: `#start Starting the \"<yellow>${settings.name}</yellow>\" filesystem deamon...`\n        });\n\n        __chokidar\n          .watch(argsObj.input, {\n            persistent: true,\n            followSymlinks: true,\n            ...settings\n          })\n          .on('ready', () => {\n            trigger('log', {\n              value: `#success The \"<yellow>${settings.name}</yellow>\" deamon is <green>ready</green>`\n            });\n          })\n          .on('change', (filepath) => {\n            if (runningTests[filepath]) return;\n            runningTests[filepath] = true;\n\n            const filename = __getFilename(filepath);\n            const path = filepath.replace(`/${filename}`, '');\n            const name = filename.replace(`.${__extension(filename)}`, '');\n\n            trigger('log', {\n              clear: true,\n              value: `Update detected on the file \"<cyan>${path.replace(\n                __packageRoot(filepath) + '/',\n                ''\n              )}</cyan>\"`\n            });\n\n            // reading the file content\n            const content = __fs.readFileSync(filepath, 'utf8');\n            const deamonReg = /\\*\\s?@deamon\\.fs\\s+(.*)/g;\n            const deamonMatches = content.match(deamonReg);\n            let command;\n            if (deamonMatches && deamonMatches[0]) {\n              command = deamonMatches[0]\n                .replace(/\\s?\\*\\s?@deamon\\.fs\\s+/, '')\n                .trim();\n            } else {\n              command = argsObj.command;\n            }\n\n            // preparing the command to run\n            const args = __argsToString(argsObj);\n            command = command.replace('%path', path).replace('%name', name);\n\n            trigger('log', {\n              value: `Launching the command \"<magenta>${command.replace(\n                `${__packageRoot()}/`,\n                ''\n              )}</magenta>\"...`\n            });\n\n            const childProcess = __childProcess\n              .spawn(command, null, {\n                stdio: 'inherit',\n                shell: true\n              })\n              .on('close', () => {\n                trigger('log', {\n                  value: `#success Process finished successfully`\n                });\n                delete runningTests[filepath];\n              })\n              .on('error', (e) => {\n                console.log('EORROROROR', e);\n              });\n          });\n\n        // process.stdin.resume();\n      },\n      {\n        id: 'cli.deamon.fs'\n      }\n    ).start();\n  }\n};\n"]}
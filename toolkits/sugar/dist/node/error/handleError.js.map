{"version":3,"sources":["handleError.js"],"names":["__isChildProcess","require","__packageRoot","module","exports","handleError","error","errorArray","name","push","fileName","lineNumber","stack","message","replace","split","join","files","match","forEach","file","matches","console","log"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,qBAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;AAiBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC3C,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAID,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACE,IAAN,KAAe,OAAjC,EAA0C;AACxCD,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACE,IAAtB;AACAD,IAAAA,UAAU,CAACE,IAAX,CAAgB,IAAhB;AACD;;AACD,MAAIH,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACK,UAA5B,EAAwC;AACtCJ,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACI,QAAN,GAAiB,GAAjB,GAAuBJ,KAAK,CAACK,UAA7C;AACAJ,IAAAA,UAAU,CAACE,IAAX,CAAgB,IAAhB;AACD;;AACD,MAAIH,KAAK,CAACM,KAAV,EAAiB;AACfL,IAAAA,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBZ,aAAa,KAAK,GAAxC,EAA6C,EAA7C,CAAhB;AACA,QAAIU,KAAK,GAAGN,KAAK,CAACM,KAAN,CAAYE,OAAZ,CAAoB,SAApB,EAA+B,EAA/B,EAAmCC,KAAnC,CAAyC,KAAzC,EAAgDC,IAAhD,CAAqD,SAArD,CAAZ;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACM,KAAN,CAAY,mBAAZ,CAAd;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAMC,OAAO,GAAGD,IAAI,CAACF,KAAL,CAAW,eAAX,CAAhB;;AACA,UAAIG,OAAJ,EAAa;AACXD,QAAAA,IAAI,GAAGA,IAAI,CAACN,OAAL,CAAaO,OAAO,CAAC,CAAD,CAApB,qBAAqCA,OAAO,CAAC,CAAD,CAA5C,gBAAP;AACD;;AACDd,MAAAA,UAAU,CAACE,IAAX,CAAgB,GAAhB;AACAF,MAAAA,UAAU,CAACE,IAAX,WACKW,IAAI,CACJN,OADA,CACQ,GADR,EACa,UADb,EAEAA,OAFA,CAEQ,GAFR,EAEa,SAFb,EAGAA,OAHA,CAGQZ,aAAa,KAAK,GAH1B,EAG+B,EAH/B,CADL;AAMD,KAZD;AAaD,GAjBD,MAiBO,IAAII,KAAK,CAACO,OAAV,EAAmBN,UAAU,CAACE,IAAX,CAAgBH,KAAK,CAACO,OAAtB;;AAE1B,MAAIb,gBAAgB,EAApB,EAAwB;AACtBsB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAU,CAACS,IAAX,CAAgB,IAAhB,CAAZ;AACD,GAFD,MAEO;AACL,UAAMV,KAAK,CAACA,KAAN,IAAeA,KAArB;AACD;AACF,CAnCD","sourcesContent":["const __isChildProcess = require('../is/childProcess');\nconst __packageRoot = require('../path/packageRoot');\n\n/**\n * @name                    handleError\n * @namespace               node.error\n * @type                    Function\n *\n * This function take a thrown error and try to display it the best way possible.\n * Simply add the \"uncaughtException\" and the \"unhandledRejection\" listeners on the process object,\n * pass this function as the handler one and that's it...\n *\n * @example           js\n * const handleError = require('@coffeekraken/sugar/node/error/handleError');\n * process.on('uncaughtException', handleError);\n * process.on('unhandledRejection', handleError);\n *\n * @since         2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function handleError(error) {\n  let errorArray = [];\n\n  if (error.name && error.name !== 'Error') {\n    errorArray.push(error.name);\n    errorArray.push('\\n');\n  }\n  if (error.fileName && error.lineNumber) {\n    errorArray.push(error.fileName + ':' + error.lineNumber);\n    errorArray.push('\\n');\n  }\n  if (error.stack) {\n    errorArray.push(error.message.replace(__packageRoot() + '/', ''));\n    let stack = error.stack.replace('Error: ', '').split('at ').join('\\n\\nat ');\n    const files = stack.match(/at\\s(.*)\\((.*)\\)/g);\n    files.forEach((file) => {\n      const matches = file.match(/[0-9]+:[0-9]+/);\n      if (matches) {\n        file = file.replace(matches[0], `<magenta>${matches[0]}</magenta>`);\n      }\n      errorArray.push(' ');\n      errorArray.push(\n        `${file\n          .replace('(', '\\n<cyan>')\n          .replace(')', '</cyan>')\n          .replace(__packageRoot() + '/', '')}`\n      );\n    });\n  } else if (error.message) errorArray.push(error.message);\n\n  if (__isChildProcess()) {\n    console.log(errorArray.join('\\n'));\n  } else {\n    throw error.error || error;\n  }\n};\n"]}
{"version":3,"sources":["folderSize.js"],"names":["__getSize","require","__filesize","module","exports","folderSize","folderPath","rawFormat","Promise","resolve","reject","error","size"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,UAAD,CAA1B,C,CAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,SAAhC,EAAmD;AAAA,MAAnBA,SAAmB;AAAnBA,IAAAA,SAAmB,GAAP,KAAO;AAAA;;AAClE,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCV,IAAAA,SAAS,CAACM,UAAD,EAAa,CAACK,KAAD,EAAQC,IAAR,KAAiB;AACrC,UAAID,KAAJ,EAAW,MAAMA,KAAN;AACXF,MAAAA,OAAO,CAACF,SAAS,GAAGK,IAAH,GAAUV,UAAU,CAACU,IAAD,CAA9B,CAAP;AACD,KAHQ,CAAT;AAID,GALM,CAAP;AAMD,CAPD","sourcesContent":["const __getSize = require('get-folder-size');\nconst __filesize = require('filesize');\n\n// TODO tests\n\n/**\n * @name                            folderSize\n * @namespace           node.fs\n * @type                            Function\n * @async\n *\n * Calculate the size of the passed folder and return it through a promise, either in raw format, either in human readdable one...\n *\n * @param             {String}Â                folderPath                  The folder path to calculate the size\n * @param             {Boolean}               [rawFormat=false]           If true, will return the folder size in raw format\n * @return            {Promise}                                           A promise that will be resolved once the folder size has been calculated\n *\n * @example           js\n * const folderSize = require('@coffeekraken/sugar/node/fs/folderSize');\n * folderSize('my/cool/folder').then((size) => {\n *      // do something...\n * });\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function folderSize(folderPath, rawFormat = false) {\n  return new Promise((resolve, reject) => {\n    __getSize(folderPath, (error, size) => {\n      if (error) throw error;\n      resolve(rawFormat ? size : __filesize(size));\n    });\n  });\n};\n"]}
{"version":3,"sources":["SJestOutputReporter.js"],"names":["__getFilename","require","__packageRoot","__highlight","highlight","SJestOutputReporter","globalConfig","options","_globalConfig","_options","metas","vars","console","log","estimatedTime","obj","path","replace","result","numFailingTests","testResults","forEach","resObj","status","title","contexts","resultObj","failureMessage","testFilePath","lines","split","map","line","i","trim","slice","join","titleBg","numFailedTests","numTotalTests","numPassedTests","module","exports"],"mappings":"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","sourcesContent":["const __getFilename = require('../fs/filename');\nconst __packageRoot = require('../path/packageRoot');\nconst __highlight = require('cli-highlight').highlight;\n\n// my-custom-reporter.js\nclass SJestOutputReporter {\n  constructor(globalConfig, options) {\n    this._globalConfig = globalConfig;\n    this._options = options;\n  }\n\n  onRunStart(metas, vars) {\n    console.log(\n      `<bgYellow><black> Starting tests </black></bgYellow> estimated time: <yellow>${vars.estimatedTime}s</yellow>`\n    );\n  }\n\n  onTestStart(obj) {\n    console.log(\n      `#temp #mb:0 <yellow>│</yellow> <bgCyan> ${__getFilename(\n        obj.path\n      )} </bgCyan> ${obj.path.replace(`${__packageRoot()}/`, '')}`\n    );\n  }\n\n  onTestResult(obj, result) {\n    // console.log('test result', result);\n    if (result.numFailingTests === 0) {\n      console.log(\n        `<yellow>│</yellow> <bgGreen><black> ${__getFilename(\n          obj.path\n        )} </black></bgGreen> ${obj.path.replace(`${__packageRoot()}/`, '')}`\n      );\n    } else {\n      console.log(\n        `#mb:0 <yellow>│</yellow> <bgRed><black> ${__getFilename(\n          obj.path\n        )} </black></bgRed> ${obj.path.replace(`${__packageRoot()}/`, '')}`\n      );\n      console.log(`<yellow>│</yellow>`);\n      result.testResults.forEach((resObj) => {\n        if (resObj.status === 'passed') {\n          console.log(\n            `<yellow>│</yellow> <bgGreen><black> Passed </black></bgGreen> ${resObj.title}`\n          );\n        } else if (resObj.status === 'failed') {\n          console.log(\n            `<yellow>│</yellow> <bgRed><black> Failed </black></bgRed> <red>${resObj.title}</red>`\n          );\n        }\n      });\n    }\n  }\n\n  onRunComplete(contexts, result) {\n    result.testResults.forEach((resultObj) => {\n      if (resultObj.failureMessage) {\n        console.log(\n          `<bgRed><black> ${resultObj.testFilePath.replace(\n            `${__packageRoot()}/`,\n            ''\n          )} </black></bgRed>`\n        );\n\n        const lines = resultObj.failureMessage.split('\\n').map((line, i) => {\n          if (i === 0) {\n            return `<yellow>${line}</yellow>`;\n          } else if (line.trim().slice(0, 8) === 'Expected') {\n            return `<green>${line}</green>`;\n          } else if (line.trim().slice(0, 8) === 'Received') {\n            return `<red>${line}</red>`;\n          } else if (line.trim().slice(0, 3) === 'at ') {\n            return `<cyan>${line}</cyan>`;\n          }\n          return line;\n        });\n        console.log(`<white>${lines.join('\\n')}\\n</white>`);\n      }\n    });\n\n    const titleBg = result.numFailedTests > 0 ? 'bgRed' : 'bgGreen';\n\n    console.log(`<${titleBg}><black> Stats </black></${titleBg}>\\n`);\n    console.log(\n      `- <yellow>total</yellow>  tests: <yellow>${result.numTotalTests}</yellow>`\n    );\n    console.log(\n      `- <green>passed</green> tests: <green>${result.numPassedTests}</green>`\n    );\n    console.log(\n      `- <red>failed</red> tests: <red>${result.numFailedTests}</red>`\n    );\n  }\n}\n\nmodule.exports = SJestOutputReporter;\n"]}
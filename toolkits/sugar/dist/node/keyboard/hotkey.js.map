{"version":3,"sources":["hotkey.js"],"names":["__SPromise","require","__uniqid","__keypress","__activeSpace","hotkeyStack","isListenerAlreadyAdded","module","exports","hotkey","key","settings","once","splitKey","activeSpace","disableWhenEditingForm","uniqid","process","stdin","on","ch","keyObj","Object","keys","forEach","id","obj","is","active","toString","split","map","m","trim","promise","trigger","ctrl","meta","shift","pressedKey","name","resolve","reject","cancel","start"],"mappings":"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","sourcesContent":["const __SPromise = require('../promise/SPromise');\nconst __uniqid = require('../string/uniqid');\nconst __keypress = require('keypress');\nconst __activeSpace = require('../core/activeSpace');\n\n/**\n * @name                hotkey\n * @namespace           node.keyboard\n * @type                Function\n *\n * This function allows you to add keyboard listening process and subscribe to some sequences\n * using the SPromise instance returned.\n *\n * @param        {String}       hotkey          The hotkey to detect\n * @param         {Object}      [settings={}]    An option object to configure your hotkey. Here's the list of available settings:\n * - once (false) {Boolean}: Specify if you want to detect the keyboard event just once\n * - splitKey (+) {String}: Specify the split key to use in the sequences like \"ctrl+a\"\n * @return      {SPromise}                       An SPromise instance on which you can register for \"key\" stack event\n *\n * @example         js\n * const hotkey = require('@coffeekraken/sugar/node/keyboard/hotkey');\n * const promise = hotkey('ctrl+a').on('key', (e) => {\n *    // do something...\n * });\n * promise.cancel();\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nconst hotkeyStack = {};\nlet isListenerAlreadyAdded = false;\nmodule.exports = function hotkey(key, settings = {}) {\n  // extends the settings\n  settings = {\n    once: false,\n    splitKey: '+',\n    activeSpace: null,\n    disableWhenEditingForm: true,\n    ...settings\n  };\n\n  // generate a new uniqid for this listener\n  const uniqid = __uniqid();\n\n  if (!isListenerAlreadyAdded) {\n    isListenerAlreadyAdded = true;\n\n    __keypress(process.stdin);\n\n    process.stdin.on('keypress', function (ch, keyObj) {\n      // loop on each promises registered\n      Object.keys(hotkeyStack).forEach((id) => {\n        const obj = hotkeyStack[id];\n        if (!obj || !obj.key) return;\n        // check if an activeSpace is specified\n        if (obj.settings.disableWhenEditingForm) {\n          if (__activeSpace.is('**.form.*')) return;\n        }\n        if (obj.settings.activeSpace) {\n          if (!__activeSpace.is(obj.settings.activeSpace)) return;\n        }\n        // check if an \"active\" function exists\n        if (obj.settings.active && typeof obj.settings.active === 'function') {\n          if (!obj.settings.active(obj.key)) return;\n        }\n\n        obj.key\n          .toString()\n          .split(',')\n          .map((m) => m.trim())\n          .forEach((key) => {\n            if (ch && ch.toString() === key) {\n              obj.promise.trigger('key', {\n                key,\n                ctrl: keyObj ? keyObj.ctrl : false,\n                meta: keyObj ? keyObj.meta : false,\n                shift: keyObj ? keyObj.shift : false\n              });\n              obj.promise.trigger('press', {\n                key,\n                ctrl: keyObj ? keyObj.ctrl : false,\n                meta: keyObj ? keyObj.meta : false,\n                shift: keyObj ? keyObj.shift : false\n              });\n              return;\n            }\n\n            if (!keyObj) return;\n\n            let pressedKey = keyObj.name;\n            if (keyObj.ctrl)\n              pressedKey = `ctrl${obj.settings.splitKey}${pressedKey}`;\n            if (keyObj.shift)\n              pressedKey = `shift${obj.settings.splitKey}${pressedKey}`;\n            if (keyObj.meta)\n              pressedKey = `alt${obj.settings.splitKey}${pressedKey}`;\n\n            if (pressedKey === key) {\n              obj.promise.trigger('key', {\n                key,\n                ctrl: keyObj ? keyObj.ctrl : false,\n                meta: keyObj ? keyObj.meta : false,\n                shift: keyObj ? keyObj.shift : false\n              });\n              obj.promise.trigger('press', {\n                key,\n                ctrl: keyObj ? keyObj.ctrl : false,\n                meta: keyObj ? keyObj.meta : false,\n                shift: keyObj ? keyObj.shift : false\n              });\n            }\n          });\n      });\n    });\n  }\n\n  const promise = new __SPromise((resolve, reject, trigger, cancel) => {}, {})\n    .on('key,press', (key) => {\n      if (settings.once) {\n        promise.cancel();\n      }\n    })\n    .on('finally,cancel', () => {\n      // delete the callback from the stack\n      delete hotkeyStack[uniqid];\n    })\n    .start();\n\n  // save the trigger function in the stack\n  hotkeyStack[uniqid] = {\n    key,\n    promise,\n    settings\n  };\n\n  // return the promise\n  return promise;\n};\n"]}
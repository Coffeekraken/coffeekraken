{"version":3,"sources":["output.js"],"names":["__SOutput","require","module","exports","proc","settings","output","attach"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAOC,QAAP,EAAyB;AAAA,MAAlBA,QAAkB;AAAlBA,IAAAA,QAAkB,GAAP,EAAO;AAAA;;AACxC,MAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAcI,IAAd,EAAoBC,QAApB,CAAf;AACAC,EAAAA,MAAM,CAACC,MAAP;AACD,CAHD","sourcesContent":["const __SOutput = require('../blessed/SOutput');\n\n/**\n * @name            output\n * @namespace           node.process\n * @type            Function\n *\n * This function simply take a SProcess compatible process instance and display the output\n * accordingly to the context where this process is running. If the output is in a childProcess,\n * it will just console.log the log, error, etc... to the terminal but if the\n * process is in the main terminal instance, it will be wrapped inside a blessed box instance\n * and displayed nicely.\n *\n * @param         {SProcess}          proc        The process to display output for\n * @param         {Object}Â            [settings={}]     An object of blessed settings that will be passed to the main blessed.box instance\n *\n * @example       js\n * const output = require('@coffeekraken/sugar/node/process/output');\n * const spawn = require('@coffeekraken/sugar/node/process/spawn');\n * const proc = spawn('ls -la');\n * output(proc);\n *\n * @since     2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = (proc, settings = {}) => {\n  const output = new __SOutput(proc, settings);\n  output.attach();\n};\n"]}
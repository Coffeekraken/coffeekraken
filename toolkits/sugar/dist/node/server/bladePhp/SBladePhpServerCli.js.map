{"version":3,"sources":["SBladePhpServerCli.js"],"names":["__SPhpServerCli","require","__packageRoot","__deepMerge","__argsToObject","__sugarConfig","module","exports","settings","argsObj","includeAllArgs","_settings","args","definitionObj","serverArgs","server","router","__dirname","pro","setTimeout","log","runningArgsObj","hostname","port","rootDir","cacheDir","type","description","children","default","process","cwd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,wBAAD,CAA3B;;AACA,IAAMG,cAAc,GAAGH,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,oBAAD,CAA7B;AAEA;;;;;;;;;;;;;AAWAK,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAiCA;;;;;;;;;AASA,8BAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BACnBA,QADmB;AAE1B;AAED;;;;;;;;;;;;AA/CF;AAAA;AAAA,wBA0DIC,OA1DJ,EA2DIC,cA3DJ,EA4DI;AAAA,UAFAD,OAEA;AAFAA,QAAAA,OAEA,GAFU,KAAKE,SAAL,CAAeF,OAEzB;AAAA;;AAAA,UADAC,cACA;AADAA,QAAAA,cACA,GADiB,KAAKC,SAAL,CAAeD,cAChC;AAAA;;AACA,UAAME,IAAI,GAAGR,cAAc,CAACK,OAAD,EAAU,KAAKI,aAAf,CAA3B;;AACA,UAAMC,UAAU,GAAGX,WAAW,CAACS,IAAI,CAACG,MAAN,oBACzBV,aAAa,CAAC,cAAD,CADY,EAA9B;;AAGAS,MAAAA,UAAU,CAACE,MAAX,aAAuBd,aAAa,CAClCe,SADkC,CAApC;;AAGA,UAAMC,GAAG,+EAAaJ,UAAb,EAAyBJ,cAAzB,EAAyC,KAAzC,CAAT;;AACAS,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,GAAL,sGAE4B,KAAKC,cAAL,CAAoBC,QAFhD,wDAG4B,KAAKD,cAAL,CAAoBE,IAHhD,wDAI4B,KAAKF,cAAL,CAAoBG,OAJhD,wDAK4BZ,IAAI,CAACY,OALjC,wDAM4BZ,IAAI,CAACa,QANjC,6DAOiC,KAAKJ,cAAL,CAAoBC,QAPrD,cAOiE,KAAKD,cAAL,CAAoBE,IAPrF;AAQD,OATS,CAAV;AAUA,aAAOL,GAAP;AACD;AAhFH;;AAAA;AAAA,EAAkDlB,eAAlD,4CAUyB;AACrBe,EAAAA,MAAM,EAAE;AACNW,IAAAA,IAAI,EAAE,QADA;AAENC,IAAAA,WAAW,EAAE,oBAFP;AAGNC,IAAAA,QAAQ,oBACH5B,eAAe,CAACa,aADb;AAHF,GADa;AAQrBW,EAAAA,OAAO,EAAE;AACPE,IAAAA,IAAI,EAAE,QADC;AAEPC,IAAAA,WAAW,EAAE,4BAFN;AAGPE,IAAAA,OAAO,EACLxB,aAAa,CAAC,eAAD,CAAb,cACGH,aAAa,CAAC4B,OAAO,CAACC,GAAR,EAAD,CADhB;AAJK,GARY;AAerBN,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,QADE;AAERC,IAAAA,WAAW,EAAE,6BAFL;AAGRE,IAAAA,OAAO,EACLxB,aAAa,CAAC,gBAAD,CAAb,cACGH,aAAa,CAAC4B,OAAO,CAACC,GAAR,EAAD,CADhB;AAJM;AAfW,CAVzB","sourcesContent":["const __SPhpServerCli = require('../php/SPhpServerCli');\nconst __packageRoot = require('../../path/packageRoot');\nconst __deepMerge = require('../../object/deepMerge');\nconst __argsToObject = require('../../cli/argsToObject');\nconst __sugarConfig = require('../../config/sugar');\n\n/**\n * @name            SBladePhpServerCli\n * @namespace           node.server.bladePhp\n * @type            Class\n * @extends         SPhpServerCli\n *\n * This class represent the Blade PHP cli\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SBladePhpServerCli extends __SPhpServerCli {\n  /**\n   * @name          definitionObj\n   * @type          Object\n   * @static\n   *\n   * Store the definition object\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    server: {\n      type: 'Object',\n      description: 'PHP server options',\n      children: {\n        ...__SPhpServerCli.definitionObj\n      }\n    },\n    rootDir: {\n      type: 'String',\n      description: 'Blade views root directory',\n      default:\n        __sugarConfig('views.rootDir') ||\n        `${__packageRoot(process.cwd())}/dist/views`\n    },\n    cacheDir: {\n      type: 'String',\n      description: 'Blade views cache directory',\n      default:\n        __sugarConfig('views.cacheDir') ||\n        `${__packageRoot(process.cwd())}/dist/views/.cache`\n    }\n  };\n\n  /**\n   * @name          constructor\n   * @type          Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(settings);\n  }\n\n  /**\n   * @name            run\n   * @type            Function\n   * @override\n   *\n   * This method simply override the default one.\n   * For arguments documentation, check the SCli class.\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(\n    argsObj = this._settings.argsObj,\n    includeAllArgs = this._settings.includeAllArgs\n  ) {\n    const args = __argsToObject(argsObj, this.definitionObj);\n    const serverArgs = __deepMerge(args.server, {\n      ...__sugarConfig('blade.server')\n    });\n    serverArgs.router = `${__packageRoot(\n      __dirname\n    )}/src/php/blade/sBladePhpServerRouter.php`;\n    const pro = super.run(serverArgs, includeAllArgs, false);\n    setTimeout(() => {\n      this.log(`<green>Your Blade PHP server is up and running</green>:\n\nHostname              : <yellow>${this.runningArgsObj.hostname}</yellow>\nPort                  : <yellow>${this.runningArgsObj.port}</yellow>\nRoot directory        : <yellow>${this.runningArgsObj.rootDir}</yellow>\nViews root directory  : <yellow>${args.rootDir}</yellow>\nViews cache directory : <yellow>${args.cacheDir}</yellow>\nAPI Url               : <cyan>http://${this.runningArgsObj.hostname}:${this.runningArgsObj.port}</cyan>`);\n    });\n    return pro;\n  }\n};\n"]}
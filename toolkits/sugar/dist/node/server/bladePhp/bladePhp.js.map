{"version":3,"sources":["bladePhp.js"],"names":["__SBladePhpServerCli","require","module","exports","args","cli","spawn"],"mappings":";;AAAA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,sBAAD,CAApC;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBAC,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAe;AAAA,MAAdA,IAAc;AAAdA,IAAAA,IAAc,GAAP,EAAO;AAAA;;AAC9B,MAAMC,GAAG,GAAG,IAAIL,oBAAJ,EAAZ;AACA,SAAOK,GAAG,CAACC,KAAJ,CAAUF,IAAV,CAAP;AACD,CAHD","sourcesContent":["const __SBladePhpServerCli = require('./SBladePhpServerCli');\n\n/**\n * @name                bladePhp\n * @namespace           node.server.bladePhp\n * @type                Function\n *\n * This function take care of starting a local php server which render some blade templates\n *\n * @param         {Object}          [args={}]         The args object to configure the build process. Check the PhpSCli class definition object for available arguments\n * @return        {SPromise}                An SPromise instance on which you can subscribe for \"compiled\" stack as well as the normal Promise stacks like \"then, catch\" etc... Here's the \"events\" you can subscribe on:\n *\n * @example       js\n * const bladePhpServer = require('@coffeekraken/sugar/node/server/bladePhp');\n * bladePhpServer({\n *\n * })\n *\n * @since           2.0.0\n * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n */\nmodule.exports = (args = {}) => {\n  const cli = new __SBladePhpServerCli();\n  return cli.spawn(args);\n};\n"]}
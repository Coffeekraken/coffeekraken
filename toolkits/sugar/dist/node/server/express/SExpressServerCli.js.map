{"version":3,"sources":["SExpressServerCli.js"],"names":["__SCli","require","__packageRoot","__sugarConfig","module","exports","settings","hostname","type","alias","description","default","level","port","rootDir","process","cwd","viewsDir","viewEngine"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,oBAAD,CAA7B;AAEA;;;;;;;;;;;;;AAWAG,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAWA;;;;;;;;;;AA4CA;;;;;;;;;AASA,6BAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BACnBA,QADmB;AAE1B,GAnEH,CAqEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjGF;AAAA,EAAiDN,MAAjD,sCAUmB,iCAVnB,4CAqByB;AACrBO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,QADE;AAERC,IAAAA,KAAK,EAAE,GAFC;AAGRC,IAAAA,WAAW,EAAE,iBAHL;AAIRC,IAAAA,OAAO,EAAER,aAAa,CAAC,kBAAD,CAAb,IAAqC,WAJtC;AAKRS,IAAAA,KAAK,EAAE;AALC,GADW;AAQrBC,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,WAAW,EAAE,aAHT;AAIJC,IAAAA,OAAO,EAAER,aAAa,CAAC,cAAD,CAAb,IAAiC,IAJtC;AAKJS,IAAAA,KAAK,EAAE;AALH,GARe;AAerBE,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAE,QADC;AAEPE,IAAAA,WAAW,EAAE,uBAFN;AAGPC,IAAAA,OAAO,EAAER,aAAa,CAAC,iBAAD,CAAb,IAAoCD,aAAa,CAACa,OAAO,CAACC,GAAR,EAAD,CAHnD;AAIPJ,IAAAA,KAAK,EAAE;AAJA,GAfY;AAqBrBK,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAE,QADE;AAERE,IAAAA,WAAW,EAAE,wBAFL;AAGRC,IAAAA,OAAO,EACLR,aAAa,CAAC,kBAAD,CAAb,IACAD,aAAa,CAACa,OAAO,CAACC,GAAR,EAAD,CAAb,GAA+B;AALzB,GArBW;AA4BrBE,EAAAA,UAAU,EAAE;AACVV,IAAAA,IAAI,EAAE,QADI;AAEVE,IAAAA,WAAW,EAAE,+BAFH;AAGVC,IAAAA,OAAO,EAAER,aAAa,CAAC,oBAAD,CAAb,IAAuC;AAHtC;AA5BS,CArBzB","sourcesContent":["const __SCli = require('../../cli/SCli');\nconst __packageRoot = require('../../path/packageRoot');\nconst __sugarConfig = require('../../config/sugar');\n\n/**\n * @name            SExpressServerCli\n * @namespace           node.server.express\n * @type            Class\n * @extends         SCli\n *\n * This class represent the express server cli\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SExpressServerCli extends __SCli {\n  /**\n   * @name          command\n   * @type          String\n   * @static\n   *\n   * Store the command string\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static command = 'sugar server.express %arguments';\n\n  /**\n   * @name          definitionObj\n   * @type          Object\n   * @static\n   *\n   * Store the definition object\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    hostname: {\n      type: 'String',\n      alias: 'o',\n      description: 'Server hostname',\n      default: __sugarConfig('express.hostname') || '127.0.0.1',\n      level: 1\n    },\n    port: {\n      type: 'Number',\n      alias: 'p',\n      description: 'Server port',\n      default: __sugarConfig('express.port') || 3000,\n      level: 1\n    },\n    rootDir: {\n      type: 'String',\n      description: 'Server root directory',\n      default: __sugarConfig('express.rootDir') || __packageRoot(process.cwd()),\n      level: 1\n    },\n    viewsDir: {\n      type: 'String',\n      description: 'Server views directory',\n      default:\n        __sugarConfig('express.viewsDir') ||\n        __packageRoot(process.cwd()) + '/views'\n    },\n    viewEngine: {\n      type: 'String',\n      description: 'Server views rendering engine',\n      default: __sugarConfig('express.viewEngine') || 'bladePhp'\n    }\n  };\n\n  /**\n   * @name          constructor\n   * @type          Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(settings);\n  }\n\n  //   /**\n  //    * @name            run\n  //    * @type            Function\n  //    * @override\n  //    *\n  //    * This method simply override the default one.\n  //    * For arguments documentation, check the SCli class.\n  //    *\n  //    * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n  //    */\n  //   run(\n  //     argsObj = this._settings.argsObj,\n  //     includeAllArgs = this._settings.includeAllArgs,\n  //     log = true\n  //   ) {\n  //     const process = super.run(argsObj, includeAllArgs);\n  //     if (!log) return process;\n  //     setTimeout(() => {\n  //       this.log(`<green>Your Express server is up and running</green>:\n\n  // Hostname        : <yellow>${this.runningParamsObj.hostname}</yellow>\n  // Port            : <yellow>${this.runningParamsObj.port}</yellow>\n  // Root directory  : <yellow>${this.runningParamsObj.rootDir}</yellow>\n  // Views directory : <yellow>${this.runningParamsObj.viewsDir}</yellow>\n  // Views engine    : <yellow>${this.runningParamsObj.viewEngine}</yellow>\n  // URL             : <cyan>http://${this.runningParamsObj.hostname}:${this.runningParamsObj.port}</cyan>`);\n  //     });\n  //     return process;\n  //   }\n};\n"]}
{"version":3,"sources":["frontend.js"],"names":["__sugarConfig","require","__deepMerge","__bladePhp","__SNav","__deepMap","__packageRoot","__standardizeJson","__fs","__path","__SPromise","__rimraf","__render","__express","__trimLines","module","exports","args","settings","server","sNavInstance","promise","id","start","assets","value","prop","replace","express","rootDir","menuStack","menu","Object","keys","forEach","menuName","generatorObj","generator","fn","directory","addItem","templateData","env","process","NODE_ENV","JSON","stringify","get","req","res","indexHtmlPath","cwd","indexViewPath","existsSync","viewContent","readFileSync","view","tmpDir","resolve","includes","mkdirSync","copyFileSync","__dirname","newViewContent","writeFileSync","result","packageJson","sync","send","content","baseContent","stringToCompile","handlers","pageName","handlerSettings","handlerFn","handler","slug","handlerPromise","pipe","response","data","title","type","toLowerCase","e","Error","trigger","hostname","port","listen"],"mappings":"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","sourcesContent":["const __sugarConfig = require('../../config/sugar');\nconst __deepMerge = require('../../object/deepMerge');\nconst __bladePhp = require('../../template/bladePhp');\nconst __SNav = require('../../nav/SNav');\nconst __deepMap = require('../../object/deepMap');\nconst __packageRoot = require('../../path/packageRoot');\nconst __standardizeJson = require('../../npm/standardizeJson');\nconst __fs = require('fs');\nconst __path = require('path');\nconst __SPromise = require('../../promise/SPromise');\nconst __rimraf = require('rimraf');\nconst __render = require('../../template/render');\nconst __express = require('express');\nconst __trimLines = require('../../string/trimLines');\n\n/**\n * @name                express\n * @namespace           node.server.frontend\n * @type                Function\n *\n * This function take care of starting a frontend express based server\n *\n * @param         {Object}          [args={}]         The args object to configure the build process. Check the PhpSCli class definition object for available arguments\n * @return        {express}                       The server instance started\n *\n * @event         log       Some informations that you can or not display to your users\n *\n * @example       js\n * const frontendServer = require('@coffeekraken/sugar/node/server/frontend/frontend');\n * frontendServer({});\n *\n * @since           2.0.0\n * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n */\nmodule.exports = (args = {}) => {\n  const settings = __deepMerge(__sugarConfig('frontend'), args);\n  const server = __express();\n  let sNavInstance;\n\n  const promise = new __SPromise(null, {\n    id: 'server.frontend'\n  }).start();\n\n  settings.assets = __deepMap(settings.assets, (value, prop) => {\n    if (prop === 'path') return value.replace(settings.express.rootDir, '');\n    return value;\n  });\n\n  // generate menus\n  const menuStack = {};\n  if (settings.menu) {\n    sNavInstance = new __SNav('main', 'Main', []);\n    Object.keys(settings.menu).forEach(async (menuName) => {\n      // generate the menus\n      const generatorObj = settings.menu[menuName].generator;\n      menuStack[menuName] = await generatorObj.fn(generatorObj.directory);\n      // add the nav to the main navigation\n      sNavInstance.addItem(menuStack[menuName]);\n    });\n  }\n\n  // build the \"templateData\" object to pass to the render engines\n  const templateData = {\n    env: process.env.NODE_ENV || 'development',\n    settings: JSON.stringify(settings)\n  };\n\n  server.get('/', async (req, res) => {\n    const indexHtmlPath = __packageRoot(process.cwd()) + '/index.html';\n    const indexViewPath = `${__sugarConfig('views.rootDir')}/index.blade.php`;\n    if (__fs.existsSync(indexViewPath)) {\n      // get the view content\n      const viewContent = __fs.readFileSync(\n        `${__sugarConfig('views.rootDir')}/index.blade.php`,\n        'utf8'\n      );\n\n      let view = 'index';\n      const tmpDir = __path.resolve(__sugarConfig('views.rootDir'), 'tmp');\n\n      // check if the view does extend a special layout\n      if (!viewContent.includes('@extends(')) {\n        // make sure we have a tmp dir\n        if (!__fs.existsSync(tmpDir)) __fs.mkdirSync(tmpDir);\n        // copy the default layout\n        __fs.copyFileSync(\n          __path.resolve(__dirname, 'views/layouts/main.blade.php'),\n          __path.resolve(tmpDir, 'main.blade.php')\n        );\n        // generate a new view that will extends the default one provided by sugar\n        const newViewContent = `\n          @extends('tmp.main')\n          @section('content')\n            ${viewContent}\n          @endsection\n        `;\n        __fs.writeFileSync(\n          __path.resolve(tmpDir, 'index.blade.php'),\n          newViewContent\n        );\n        // change the view to render\n        view = 'tmp.index';\n      }\n\n      // render the view\n      let result = await __bladePhp(view, {\n        packageJson: __standardizeJson(\n          require(__packageRoot(process.cwd()) + '/package.json')\n        ),\n        ...templateData\n      });\n\n      // remove tmp folder\n      __rimraf.sync(tmpDir);\n\n      res.send(result);\n    } else if (__fs.existsSync(indexHtmlPath)) {\n      const content = __fs.readFileSync(indexHtmlPath, 'utf8');\n      if (!content.includes('<body')) {\n        const baseContent = __fs.readFileSync(\n          __dirname + '/static/index.html',\n          'utf8'\n        );\n        const stringToCompile = baseContent.replace('[content]', content);\n        // const result = renderTemplate(stringToCompile, templateData);\n        res.send(result);\n      } else {\n        // const result = renderTemplate(content, templateData);\n        res.send(result);\n      }\n    } else {\n      res.send(`You need to create at least one of these files:\n      <ul>\n        <li>${indexHtmlPath}</li>\n        <li>${indexViewPath}</li>\n      </ul>\n      `);\n    }\n  });\n\n  // loop on handlers\n  Object.keys(settings.handlers).forEach(async (pageName) => {\n    const handlerSettings = settings.handlers[pageName];\n\n    const handlerFn = require(handlerSettings.handler);\n\n    server.get(\n      [`${handlerSettings.slug}/*`, `${handlerSettings.slug}`],\n      async (req, res) => {\n        try {\n          const handlerPromise = handlerFn(req, server);\n          __SPromise.pipe(handlerPromise, promise);\n          const response = await handlerPromise;\n\n          // handle response\n          const view = response.view || 'pages.404';\n          const data = response.data || null;\n          const title = response.title || 'Page not found';\n          const type = response.type || 'text/html';\n\n          // prepariong the result\n          let result;\n          switch (type.toLowerCase()) {\n            case 'application/json':\n              result = data;\n              break;\n            case 'text/html':\n            default:\n              result = await __render(view, {\n                packageJson: __standardizeJson(\n                  require(__packageRoot(process.cwd()) + '/package.json')\n                ),\n                ...templateData,\n                ...data\n              });\n              break;\n          }\n\n          // send the result to the client\n          res.send(result);\n        } catch (e) {\n          // console.log(e);\n          throw new Error(e);\n          // res.redirect('/404');\n        }\n      }\n    );\n  });\n\n  promise.trigger('log', {\n    type: 'header',\n    value: __trimLines(`Your <primary>Frontend Express</primary> server is <green>up and running</green>:\n\n      - Hostname        : <yellow>${settings.hostname}</yellow>\n      - Port            : <yellow>${settings.port}</yellow>\n      - Root directory  : <yellow>${settings.rootDir}</yellow>\n      - URL             : <cyan>http://${settings.hostname}:${settings.port}</cyan>`)\n  });\n\n  server.listen(settings.express.port, settings.express.hostname);\n\n  return promise;\n};\n"]}
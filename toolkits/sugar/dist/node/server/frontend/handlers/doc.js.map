{"version":3,"sources":["doc.js"],"names":["__sugarConfig","require","__fs","__marked","__jsDom","JSDOM","module","exports","doc","req","server","Promise","resolve","reject","docPath","filePath","params","title","mdData","readFileSync","htmlData","$dom","replace","window","document","querySelector","textContent","view","content"],"mappings":";;AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,uBAAD,CAA7B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAApB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,OAAD,CAAP,CAAiBI,KAAjC;AAEA;;;;;;;;;;;;;;;;AAcAC,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0B;AACzC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC;AACA,UAAMC,OAAO,GAAGd,aAAa,CAAC,aAAD,CAA7B;;AACA,UAAMe,QAAQ,GAAI,GAAED,OAAQ,IAAGL,GAAG,CAACO,MAAJ,CAAW,CAAX,CAAc,KAA7C;;AACA,QAAIC,KAAK,GAAGjB,aAAa,CAAC,0BAAD,CAAzB,CAJsC,CAMtC;AACA;AAEA;;;AACA,UAAMkB,MAAM,GAAGhB,IAAI,CAACiB,YAAL,CAAkBJ,QAAlB,EAA4B,MAA5B,CAAf,CAVsC,CAYtC;;;AACA,UAAMK,QAAQ,GAAGjB,QAAQ,CAACe,MAAD,CAAzB;;AAEA,UAAMG,IAAI,GAAG,IAAIjB,OAAJ,CAAYgB,QAAZ,CAAb;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CACN,SADM,EAEND,IAAI,CAACE,MAAL,CAAYC,QAAZ,CAAqBC,aAArB,CAAmC,IAAnC,EAAyCC,WAAzC,IAAwD,EAFlD,CAAR,CAhBsC,CAqBtC;AACA;AACA;AAEA;;AACAd,IAAAA,OAAO,CAAC;AACNe,MAAAA,IAAI,EAAE,WADA;AAENV,MAAAA,KAFM;AAGNW,MAAAA,OAAO,EAAG,uBAAsBR,QAAS,QAHnC,CAIN;;AAJM,KAAD,CAAP;AAMD,GAhCM,CAAP;AAiCD,CAlCD","sourcesContent":["const __sugarConfig = require('../../../config/sugar');\nconst __fs = require('fs');\nconst __marked = require('marked');\nconst __jsDom = require('jsdom').JSDOM;\n\n/**\n * @name                doc\n * @namespace           node.server.frontend.handlers\n * @type                Function\n *\n * This function is responsible of responding to express requests made on the \"doc\" section\n *\n * @param         {Object}          req             The express request object\n * @param         {Object}          server          The express server instance\n * @return        {Promise}                         A promise that will be resolved with the response to send to the client\n *\n * @since       2.0.0\n * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function doc(req, server) {\n  return new Promise((resolve, reject) => {\n    // get the path\n    const docPath = __sugarConfig('doc.rootDir');\n    const filePath = `${docPath}/${req.params[0]}.md`;\n    let title = __sugarConfig('frontend.pages.doc.title');\n\n    // try to read the doc file\n    // if (!__fs.existsSync(filePath)) return reject('404');\n\n    // read the file\n    const mdData = __fs.readFileSync(filePath, 'utf8');\n\n    // convert to html\n    const htmlData = __marked(mdData);\n\n    const $dom = new __jsDom(htmlData);\n    title = title.replace(\n      '[title]',\n      $dom.window.document.querySelector('h1').textContent || ''\n    );\n\n    // let content = `\n    //     <my-component param1=\"hello world\"></my-component>\n    //   `;\n\n    // send back the result\n    resolve({\n      view: 'pages.doc',\n      title,\n      content: `<div class=\"marked\">${htmlData}</div>`\n      // content\n    });\n  });\n};\n"]}
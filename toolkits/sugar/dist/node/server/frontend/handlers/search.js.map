{"version":3,"sources":["search.js"],"names":["__sugarConfig","require","__fs","__marked","__jsDom","JSDOM","__filter","module","exports","search","req","server","Promise","resolve","reject","title","keyword","params","split","searchString","replace","searchRules","handlers","rule","resultsArray","key","handler","results","settings","map","item","toJson","view","content","type"],"mappings":";;;;;;AAAA,IAAMA,aAAa,GAAGC,OAAO,CAAC,uBAAD,CAA7B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAApB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,OAAD,CAAP,CAAiBI,KAAjC;;AACA,IAAMC,QAAQ,GAAGL,OAAO,CAAC,wBAAD,CAAxB;AAEA;;;;;;;;;;;;;;;;AAcAM,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AAC5C,SAAO,IAAIC,OAAJ;AAAA,iCAAY,WAAOC,OAAP,EAAgBC,MAAhB,EAA2B;AAC5C,UAAIC,KAAK,mCAAT;AAEA,UAAIC,OAAO,GAAGN,GAAG,CAACO,MAAJ,CAAW,CAAX,IAAgBP,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAhB,GAA8C,KAA5D;AACA,UAAIC,YAAY,GAAGT,GAAG,CAACO,MAAJ,CAAW,CAAX,IAAgBP,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcG,OAAd,CAAsBJ,OAAtB,EAA+B,EAA/B,CAAhB,GAAqD,EAAxE;;AAEA,UAAMK,WAAW,GAAGrB,aAAa,CAC/B,yCAD+B,CAAjC,CAN4C,CAU5C;;;AACA,UAAIsB,QAAQ,GAAGhB,QAAQ,CAACe,WAAD,EAAeE,IAAD,IAAU;AAC7C,YAAIA,IAAI,CAACP,OAAL,IAAgBO,IAAI,CAACP,OAAL,KAAiBA,OAArC,EAA8C,OAAO,IAAP;AAC9C,eAAO,KAAP;AACD,OAHsB,CAAvB,CAX4C,CAgB5C;;;AACA,UAAIQ,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAT,IAAgBH,QAAhB,EAA0B;AACxB,YAAMI,OAAO,GAAGJ,QAAQ,CAACG,GAAD,CAAxB;AACA,YAAME,OAAO,SAASD,OAAO,CAACA,OAAR,CAAgBP,YAAhB,EAA8BO,OAAO,CAACE,QAAtC,CAAtB;AACAJ,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkB,GAAGG,OAArB,CAAf;AACD,OAtB2C,CAwB5C;;;AACAH,MAAAA,YAAY,GAAGA,YAAY,CAACK,GAAb,CAAkBC,IAAD,IAAU;AACxC,eAAOA,IAAI,CAACC,MAAL,EAAP;AACD,OAFc,CAAf,CAzB4C,CA6B5C;;AACAlB,MAAAA,OAAO,CAAC;AACNmB,QAAAA,IAAI,EAAE,mBADA;AAENjB,QAAAA,KAFM;AAGNkB,QAAAA,OAAO,EAAET,YAHH;AAINU,QAAAA,IAAI,EAAE;AAJA,OAAD,CAAP;AAMD,KApCM;;AAAA;AAAA;AAAA;AAAA,MAAP;AAqCD,CAtCD","sourcesContent":["const __sugarConfig = require('../../../config/sugar');\nconst __fs = require('fs');\nconst __marked = require('marked');\nconst __jsDom = require('jsdom').JSDOM;\nconst __filter = require('../../../object/filter');\n\n/**\n * @name                search\n * @namespace           node.server.frontend.handlers\n * @type                Function\n *\n * This function is responsible of responding to express requests made on the \"search\" section\n *\n * @param         {Object}          req             The express request object\n * @param         {Object}          server          The express server instance\n * @return        {Promise}                         A promise that will be resolved with the response to send to the client\n *\n * @since       2.0.0\n * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function search(req, server) {\n  return new Promise(async (resolve, reject) => {\n    let title = `Search results | 18 results`;\n\n    let keyword = req.params[0] ? req.params[0].split(' ')[0] : 'doc';\n    let searchString = req.params[0] ? req.params[0].replace(keyword, '') : '';\n\n    const searchRules = __sugarConfig(\n      'frontend.handlers.search.settings.rules'\n    );\n\n    // preparing the handlers to use for the research\n    let handlers = __filter(searchRules, (rule) => {\n      if (rule.keyword && rule.keyword === keyword) return true;\n      return false;\n    });\n\n    // loop on each handlers to proceed to the search\n    let resultsArray = [];\n    for (let key in handlers) {\n      const handler = handlers[key];\n      const results = await handler.handler(searchString, handler.settings);\n      resultsArray = [...resultsArray, ...results];\n    }\n\n    // pass all the results info JSON format\n    resultsArray = resultsArray.map((item) => {\n      return item.toJson();\n    });\n\n    // send back the result\n    resolve({\n      view: 'components.search',\n      title,\n      content: resultsArray,\n      type: 'application/json'\n    });\n  });\n};\n"]}
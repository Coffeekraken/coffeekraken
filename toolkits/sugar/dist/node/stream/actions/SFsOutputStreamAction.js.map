{"version":3,"sources":["SFsOutputStreamAction.js"],"names":["__SActionsStreamAction","require","__writeFile","__toString","__packageRoot","__deepMerge","module","exports","settings","id","streamObj","_settings","resolve","reject","trigger","outputStack","warn","outputStackKeys","Object","keys","i","length","key","outputPath","readableOutputPath","replace","process","cwd","value","type","required"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,yBAAD,CAAtC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,uBAAD,CAA1B;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,wBAAD,CAA7B;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,wBAAD,CAA3B;AAEA;;;;;;;;;;;;;;AAYAK,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;;AAgBA;;;;;;;;;AASA,iCAAYC,QAAZ,EAA2B;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,6BAEvBH,WAAW,CACT;AACEI,MAAAA,EAAE,EAAE;AADN,KADS,EAITD,QAJS,CAFY;AAS1B;AAED;;;;;;;;;;;AArCF;AAAA;AAAA,wBA8CME,SA9CN,EA8CiBF,QA9CjB,EA8C4C;AAAA,UAA3BA,QAA2B;AAA3BA,QAAAA,QAA2B,GAAhB,KAAKG,SAAW;AAAA;;AACxC,4FAAiBD,SAAjB,EAA4B,OAAOE,OAAP,EAAgBC,MAAhB,EAAwBC,OAAxB,KAAoC;AAC9D,YAAI,CAACJ,SAAS,CAACK,WAAX,IAA0B,OAAOL,SAAS,CAACK,WAAjB,KAAiC,QAA/D,EAAyE;AACvE,eAAKC,IAAL,CACG,2GADH;AAGA,iBAAOJ,OAAO,CAACF,SAAD,CAAd;AACD,SAN6D,CAQ9D;;;AACA,cAAMO,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYT,SAAS,CAACK,WAAtB,CAAxB;;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,eAAe,CAACI,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,gBAAME,GAAG,GAAGL,eAAe,CAACG,CAAD,CAA3B;AACA,gBAAMG,UAAU,GAAGb,SAAS,CAACK,WAAV,CAAsBO,GAAtB,CAAnB;AACA,gBAAME,kBAAkB,GAAGD,UAAU,CAACE,OAAX,CACzBrB,aAAa,CAACsB,OAAO,CAACC,GAAR,EAAD,CADY,EAEzB,EAFyB,CAA3B;AAIA,cAAI,CAACjB,SAAS,CAACY,GAAD,CAAd,EAAqB;AACrBR,UAAAA,OAAO,CAAC,KAAD,EAAQ;AACbc,YAAAA,KAAK,EAAG,0CAAyCN,GAAI,2BAA0BE,kBAAmB;AADrF,WAAR,CAAP;AAGA,gBAAMtB,WAAW,CAACqB,UAAD,EAAapB,UAAU,CAACO,SAAS,CAACY,GAAD,CAAV,CAAvB,CAAjB;AACD;;AAEDV,QAAAA,OAAO,CAACF,SAAD,CAAP;AACD,OAzBD;AA0BD;AAzEH;;AAAA;AAAA,EAAqDV,sBAArD,4CAUyB;AACrBe,EAAAA,WAAW,EAAE;AACXc,IAAAA,IAAI,EAAE,QADK;AAEXC,IAAAA,QAAQ,EAAE;AAFC;AADQ,CAVzB","sourcesContent":["const __SActionsStreamAction = require('../SActionsStreamAction');\nconst __writeFile = require('../../fs/writeFile');\nconst __toString = require('../../string/toString');\nconst __packageRoot = require('../../path/packageRoot');\nconst __deepMerge = require('../../object/deepMerge');\n\n/**\n * @name            SFsOutputStreamAction\n * @namespace           node.stream.actions\n * @type            Class\n * @extends         SActionsStreamAction\n *\n * This class is a stream action that allows you to save file(s) to the filesystem\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SFsOutputStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    outputStack: {\n      type: 'Object',\n      required: false\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'actionStream.action.fs.output'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings = this._settings) {\n    return super.run(streamObj, async (resolve, reject, trigger) => {\n      if (!streamObj.outputStack || typeof streamObj.outputStack !== 'object') {\n        this.warn(\n          `The streamObj does not contain any \"<cyan>outputStack</cyan>\" property so no file will be saved at all...`\n        );\n        return resolve(streamObj);\n      }\n\n      // loop on the files to save\n      const outputStackKeys = Object.keys(streamObj.outputStack);\n      for (let i = 0; i < outputStackKeys.length; i++) {\n        const key = outputStackKeys[i];\n        const outputPath = streamObj.outputStack[key];\n        const readableOutputPath = outputPath.replace(\n          __packageRoot(process.cwd()),\n          ''\n        );\n        if (!streamObj[key]) continue;\n        trigger('log', {\n          value: `Saving the streamObj property \"<yellow>${key}</yellow>\" under \"<cyan>${readableOutputPath}</cyan>\"`\n        });\n        await __writeFile(outputPath, __toString(streamObj[key]));\n      }\n\n      resolve(streamObj);\n    });\n  }\n};\n"]}
{"version":3,"sources":["SGlobResolverStreamAction.js"],"names":["__SActionsStreamAction","require","__glob","__clone","__extractSame","__getFilename","__deepMerge","module","exports","settings","id","streamObj","_settings","resolve","reject","rootDir","globProperty","files","sync","streamObjArray","forEach","filePath","newStreamObj","cleanedRootDir","replace","outputFilePath","slice","outputDir","push","type","required"],"mappings":"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","sourcesContent":["const __SActionsStreamAction = require('../SActionsStreamAction');\nconst __glob = require('glob');\nconst __clone = require('../../object/clone');\nconst __extractSame = require('../../string/extractSame');\nconst __getFilename = require('../../fs/filename');\nconst __deepMerge = require('../../object/deepMerge');\n\n/**\n * @name            SGlobResolverStreamAction\n * @namespace           node.stream.actions\n * @type            Class\n * @extends         SActionsStreamAction\n *\n * This class is a stream action that allows you resolve glob pattern by specifying the streamObj property that\n * is one. It will then return an array of streamObj handled normally by the SActionsStream instance\n *\n * @param       {Object}Â        streamObj          The streamObj object with the properties described bellow:\n * @return      {Promise}                         A simple promise that will be resolved when the process is finished\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SGlobResolverStreamAction extends __SActionsStreamAction {\n  /**\n   * @name            definitionObj\n   * @type             Object\n   * @static\n   *\n   * Store the definition object that specify the streamObj required properties, types, etc...\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  static definitionObj = {\n    globProperty: {\n      type: 'String',\n      required: true\n    }\n  };\n\n  /**\n   * @name            constructor\n   * @type            Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    super(\n      __deepMerge(\n        {\n          id: 'actionStream.action.globResolver'\n        },\n        settings\n      )\n    );\n  }\n\n  /**\n   * @name          run\n   * @type          Function\n   * @async\n   *\n   * Override the base class run method\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  run(streamObj, settings = this._settings) {\n    return super.run(streamObj, async (resolve, reject) => {\n      // resolve glob pattern\n      const rootDir = streamObj[streamObj.globProperty];\n      const files = __glob.sync(streamObj[streamObj.globProperty]);\n\n      // build the streamObj stack\n      const streamObjArray = [];\n\n      // loop on each files founded\n      files.forEach((filePath) => {\n        const newStreamObj = __clone(streamObj);\n\n        newStreamObj[streamObj.globProperty] = filePath;\n\n        let cleanedRootDir = rootDir;\n        cleanedRootDir = cleanedRootDir.replace(\n          __getFilename(cleanedRootDir),\n          ''\n        );\n        cleanedRootDir = cleanedRootDir\n          .replace(/\\[.*\\]/gm, '')\n          .replace(/\\*{1,2}/gm, '')\n          .replace(/\\(.*\\)/gm, '')\n          .replace(/(\\?|!|\\+|@)/gm, '');\n        cleanedRootDir = cleanedRootDir.replace(/\\/+$/, '');\n\n        let outputFilePath = filePath\n          .replace(cleanedRootDir, '')\n          .replace(__getFilename(filePath), '');\n        if (outputFilePath.slice(0, 1) === '/')\n          outputFilePath = outputFilePath.slice(1);\n\n        newStreamObj.outputDir = newStreamObj.outputDir + '/' + outputFilePath;\n        if (newStreamObj.outputDir.slice(-1) === '/')\n          newStreamObj.outputDir = newStreamObj.outputDir.slice(0, -1);\n\n        delete newStreamObj.globProperty;\n        streamObjArray.push(newStreamObj);\n      });\n\n      resolve(streamObjArray);\n    });\n  }\n};\n"]}
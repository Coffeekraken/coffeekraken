{"version":3,"sources":["SSimpleApp.js"],"names":["__SApp","require","__SHeader","__deepMerge","__blessed","__parseHtml","__splitEvery","__countLine","__parseSchema","__sugarConfig","module","exports","name","settings","_settings","layout","_layout","bind","content","container","box","width","height","menuString","Object","keys","menu","forEach","url","i","menuObj","isActive","title","headerContent","header","blessed","style","bg","top","append"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,SAAD,CAAzB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAMQ,aAAa,GAAGR,OAAO,CAAC,iBAAD,CAA7B;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBAS,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;;AASA,sBAAYC,IAAZ,EAAkBC,QAAlB,EAAiC;AAAA;;AAAA,QAAfA,QAAe;AAAfA,MAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAC/B;AACA,8BAAMD,IAAN,EAAYT,WAAW,CAAC,EAAD,EAAKU,QAAL,CAAvB;AACA,UAAKC,SAAL,CAAeC,MAAf,GAAwB,MAAKC,OAAL,CAAaC,IAAb,+BAAxB;AAH+B;AAIhC;AAED;;;;;;;;;;;AAhBF;AAAA;AAAA,4BAyBUC,OAzBV,EAyBmB;AACf;AACA,UAAMC,SAAS,GAAGf,SAAS,CAACgB,GAAV,CAAc;AAC9BC,QAAAA,KAAK,EAAE,MADuB;AAE9BC,QAAAA,MAAM,EAAE;AAFsB,OAAd,CAAlB,CAFe,CAOf;;;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKX,SAAL,CAAeY,IAA3B,EAAiCC,OAAjC,CAAyC,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnD,YAAMC,OAAO,GAAG,KAAKhB,SAAL,CAAeY,IAAf,CAAoBE,GAApB,CAAhB;AACAL,QAAAA,UAAU,IAAI,KAAKQ,QAAL,CAAcH,GAAd,wBACGE,OAAO,CAACE,KADX,qCAECF,OAAO,CAACE,KAFT,cAAd;AAGD,OALD;AAOA,UAAIC,aAAa,GACf,yDAAkDV,UAAlD,aADF;AAGA,UAAMW,MAAM,GAAG,IAAIhC,SAAJ,CAAc+B,aAAd,EAA6B;AAC1CE,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE5B,aAAa,CAAC,sBAAD;AADZ;AADA;AADiC,OAA7B,CAAf;AAQAS,MAAAA,OAAO,CAACoB,GAAR,GAAcJ,MAAM,CAACZ,MAArB;AACAJ,MAAAA,OAAO,CAACG,KAAR,GAAgB,MAAhB;AAEAF,MAAAA,SAAS,CAACoB,MAAV,CAAiBL,MAAjB;AACAf,MAAAA,SAAS,CAACoB,MAAV,CAAiBrB,OAAjB,EA/Be,CAiCf;;AACA,aAAOC,SAAP;AACD;AA5DH;;AAAA;AAAA,EAA0CnB,MAA1C","sourcesContent":["const __SApp = require('./SApp');\nconst __SHeader = require('./SHeader');\nconst __deepMerge = require('../object/deepMerge');\nconst __blessed = require('blessed');\nconst __parseHtml = require('./parseHtml');\nconst __splitEvery = require('../string/splitEvery');\nconst __countLine = require('../string/countLine');\nconst __parseSchema = require('../url/parseSchema');\nconst __sugarConfig = require('../config/sugar');\n\n/**\n * @name                    SSimpleApp\n * @namespace           node.terminal\n * @type                    Class\n *\n * This class define an application in the terminal that you can easily configure to have the look and feel that you want\n * through simple settings described bellow.\n *\n * @param           {String}          name            Specify a name for this application\n * @param           {Object}          [settings={}]   An object of settings described bellow:\n *\n * @example         js\n * const SSimpleApp = require('@coffeekraken/sugar/node/terminal/SSimpleApp');\n * const app = new SSimpleApp('My Cool Application', {\n * });\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SSimpleApp extends __SApp {\n  /**\n   * @name              constructor\n   * @type              Function\n   * @constructor\n   *\n   * Constructor\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(name, settings = {}) {\n    // extend from blessed.box\n    super(name, __deepMerge({}, settings));\n    this._settings.layout = this._layout.bind(this);\n  }\n\n  /**\n   * @name              _layout\n   * @type              Function\n   * @private\n   *\n   * Render the layout of the app\n   *\n   * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _layout(content) {\n    // make a container box\n    const container = __blessed.box({\n      width: '100%',\n      height: '100%'\n    });\n\n    // preparing the menu\n    let menuString = '';\n    Object.keys(this._settings.menu).forEach((url, i) => {\n      const menuObj = this._settings.menu[url];\n      menuString += this.isActive(url)\n        ? `<bgBlack> ${menuObj.title} </bgBlack>`\n        : `<black> ${menuObj.title} </black>`;\n    });\n\n    let headerContent =\n      `<black>Coffeekraken Sugar</black>\\n` + `{right}${menuString}{/right}`;\n\n    const header = new __SHeader(headerContent, {\n      blessed: {\n        style: {\n          bg: __sugarConfig('colors.primary.color')\n        }\n      }\n    });\n\n    content.top = header.height;\n    content.width = '100%';\n\n    container.append(header);\n    container.append(content);\n\n    // return the container\n    return container;\n  }\n};\n"]}
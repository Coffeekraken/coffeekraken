{"version":3,"sources":["center.js"],"names":["__deepMerge","require","__countLine","module","exports","center","text","settings","spaceChar","maxWidth","process","stdout","columns","env","STDOUT_PADDING","lines","Array","isArray","split","map","l","lineLenght","repeat","Math","round","join"],"mappings":";;AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAA3B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBAE,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAqC;AAAA,MAAfA,QAAe;AAAfA,IAAAA,QAAe,GAAJ,EAAI;AAAA;;AACpDA,EAAAA,QAAQ,GAAGP,WAAW,CACpB;AACEQ,IAAAA,SAAS,EAAE;AADb,GADoB,EAIpBD,QAJoB,CAAtB;AAMA,QAAME,QAAQ,GACZC,OAAO,CAACC,MAAR,CAAeC,OAAf,GAAyB,CAACF,OAAO,CAACG,GAAR,CAAYC,cAAZ,IAA8B,CAA/B,IAAoC,CAD/D;AAEA,MAAIC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcX,IAAd,IAAsBA,IAAtB,GAA6BA,IAAI,CAACY,KAAL,CAAW,IAAX,CAAzC;AACAH,EAAAA,KAAK,GAAGA,KAAK,CAACI,GAAN,CAAWC,CAAD,IAAO;AACvB,UAAMC,UAAU,GAAGnB,WAAW,CAACkB,CAAD,CAA9B;;AACA,WAAO,CAAC,IAAIE,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAWf,QAAQ,GAAG,CAAX,GAAeY,UAAU,GAAG,CAAvC,CAAX,IAAwDD,CAAzD,EACJF,KADI,CACEX,QAAQ,CAACC,SADX,EAEJiB,IAFI,CAEC,GAFD,CAAP;AAGD,GALO,CAAR;AAMA,SAAOT,KAAK,CAACC,OAAN,CAAcX,IAAd,IAAsBS,KAAtB,GAA8BA,KAAK,CAACU,IAAN,CAAW,IAAX,CAArC;AACD,CAjBD","sourcesContent":["const __deepMerge = require('../object/deepMerge');\nconst __countLine = require('../string/countLine');\n\n/**\n * @name                                    center\n * @namespace           node.terminal\n * @type                                    Function\n * @test                ./__tests__/center.test.js\n *\n * Allow to center one or more lines in the terminal depending on the process.env.STDOUT_PADDING environment variable\n * Settings:\n * - spaceChar (~) {String}: Which character to consider as a space that will be replaced by an actual space\n *\n * @param                 {String|Array}                  text                    The text to center or array of strings to center\n * @param                 {Object}                  [settings={}]           An object of settings\n * @return                {String}Â                                          The centered text\n *\n * @example             js\n * const center = require('@coffeekraken/sugar/node/terminal/center');\n * center('Hello world'); // => '                 Hello world'\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function center(text, settings = {}) {\n  settings = __deepMerge(\n    {\n      spaceChar: '~'\n    },\n    settings\n  );\n  const maxWidth =\n    process.stdout.columns - (process.env.STDOUT_PADDING || 0) * 2;\n  let lines = Array.isArray(text) ? text : text.split('\\n');\n  lines = lines.map((l) => {\n    const lineLenght = __countLine(l);\n    return (' '.repeat(Math.round(maxWidth / 2 - lineLenght / 2)) + l)\n      .split(settings.spaceChar)\n      .join(' ');\n  });\n  return Array.isArray(text) ? lines : lines.join('\\n');\n};\n"]}
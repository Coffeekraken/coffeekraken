{
    "version": 3,
    "sources": [
        "SAuthTerminalAdapter.js"
    ],
    "names": [
        "__SAuthAdapter",
        "require",
        "__blessed",
        "__terminalKit",
        "__parseHtml",
        "__ora",
        "module",
        "exports",
        "_screen",
        "screen",
        "smartCSR",
        "key",
        "ch",
        "process",
        "exit",
        "_container",
        "remove",
        "destroy",
        "form",
        "top",
        "left",
        "width",
        "stdout",
        "columns",
        "keys",
        "vi",
        "style",
        "fg",
        "append",
        "Promise",
        "resolve",
        "reject",
        "_isValidating",
        "clearTimeout",
        "_validationTimeout",
        "_resetScreen",
        "success",
        "box",
        "content",
        "align",
        "height",
        "render",
        "setTimeout",
        "_oraLoader",
        "loading",
        "text",
        "frame",
        "_validation",
        "settings",
        "titleY",
        "title",
        "infoY",
        "info",
        "errorY",
        "error",
        "usernameLabelY",
        "usernameLabel",
        "usernameY",
        "username",
        "textbox",
        "name",
        "mouse",
        "bg",
        "focus",
        "inputOnFocus",
        "padding",
        "bottom",
        "right",
        "passwordLabelY",
        "passwordLabel",
        "passwordY",
        "password",
        "censor",
        "buttonY",
        "button",
        "hover",
        "e",
        "submit",
        "on",
        "tokenLabelY",
        "tokenLabel",
        "tokenY",
        "token"
    ],
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA9B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,SAAD,CAAzB;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,cAAD,CAA7B;;AACA,IAAMG,WAAW,GAAGH,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,KAAD,CAArB;AAEA;;;;;;;;;;;AASAK,MAAM,CAACC,OAAP;AAAA;;AAAA;;AACE;;;;;;;;AAQA,kCAAc;AAAA;;AAAA,6BACN,CAAC,OAAD,EAAU,QAAV,CADM;AAEb;;AAXH;AAAA;AAAA,mCAaiB;AACb;AACA,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAeN,SAAS,CAACO,MAAV,CAAiB;AAC9BC,UAAAA,QAAQ,EAAE;AADoB,SAAjB,CAAf;;AAGA,aAAKF,OAAL,CAAaG,GAAb,CAAiB,CAAC,KAAD,CAAjB,EAA0B,UAAUC,EAAV,EAAcD,GAAd,EAAmB;AAC3C,iBAAOE,OAAO,CAACC,IAAR,CAAa,CAAb,CAAP;AACD,SAFD;AAGD;;AAED,UAAI,KAAKC,UAAT,EAAqB;AACnB,aAAKP,OAAL,CAAaQ,MAAb,CAAoB,KAAKD,UAAzB;;AACA,aAAKA,UAAL,CAAgBE,OAAhB;AACD;;AAED,WAAKF,UAAL,GAAkBb,SAAS,CAACgB,IAAV,CAAe;AAC/BC,QAAAA,GAAG,EAAE,QAD0B;AAE/BC,QAAAA,IAAI,EAAE,QAFyB;AAG/BC,QAAAA,KAAK,EAAER,OAAO,CAACS,MAAR,CAAeC,OAAf,GAAyB,EAAzB,GAA8B,KAA9B,GAAsC,KAHd;AAI/B;AACAC,QAAAA,IAAI,EAAE,IALyB;AAM/BC,QAAAA,EAAE,EAAE,KAN2B;AAO/BC,QAAAA,KAAK,EAAE;AACLC,UAAAA,EAAE,EAAE;AADC;AAPwB,OAAf,CAAlB;;AAWA,WAAKnB,OAAL,CAAaoB,MAAb,CAAoB,KAAKb,UAAzB;AACD;AAED;;;;;;;;;;AA3CF;AAAA;AAAA,+BAoDa;AACT,aAAO,IAAIc,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAKC,aAAL,GAAqB,KAArB;AACAC,QAAAA,YAAY,CAAC,KAAKC,kBAAN,CAAZ;;AAEA,aAAKC,YAAL;;AAEA,YAAMC,OAAO,GAAGlC,SAAS,CAACmC,GAAV,CAAc;AAC5BhB,UAAAA,KAAK,EAAE,MADqB;AAE5BiB,UAAAA,OAAO,EAAElC,WAAW,CAClB,sDADkB,CAFQ;AAK5BmC,UAAAA,KAAK,EAAE;AALqB,SAAd,CAAhB;;AAQA,aAAKxB,UAAL,CAAgByB,MAAhB,GAAyB,CAAzB;;AACA,aAAKzB,UAAL,CAAgBa,MAAhB,CAAuBQ,OAAvB;;AACA,aAAK5B,OAAL,CAAaiC,MAAb;;AAEAC,QAAAA,UAAU,CAAC,MAAM;AACfZ,UAAAA,OAAO;;AAEP,eAAKtB,OAAL,CAAaS,OAAb;AACD,SAJS,EAIP,IAJO,CAAV;AAKD,OAvBM,CAAP;AAwBD;AAED;;;;;;;;;;AA/EF;AAAA;AAAA;AAAA,wDAwFsB;AAClB,YAAI,CAAC,KAAKe,aAAV,EAAyB,KAAKA,aAAL,GAAqB,IAArB;;AAEzB,aAAKG,YAAL;;AAEA,YAAI,CAAC,KAAKQ,UAAV,EAAsB;AACpB,eAAKA,UAAL,GAAkBtC,KAAK,CACrB,mDADqB,CAAvB;AAGD;;AAED,YAAMuC,OAAO,GAAG1C,SAAS,CAAC2C,IAAV,CAAe;AAC7BP,UAAAA,OAAO,EAAE,KAAKK,UAAL,CAAgBG,KAAhB,EADoB;AAE7BP,UAAAA,KAAK,EAAE;AAFsB,SAAf,CAAhB;;AAKA,aAAKxB,UAAL,CAAgByB,MAAhB,GAAyB,CAAzB;;AACA,aAAKzB,UAAL,CAAgBa,MAAhB,CAAuBgB,OAAvB;;AACA,aAAKpC,OAAL,CAAaiC,MAAb;;AAEA,YAAI,KAAKT,aAAT,EAAwB;AACtB,eAAKE,kBAAL,GAA0BQ,UAAU,CAAC,MAAM;AACzC,iBAAKK,WAAL;AACD,WAFmC,EAEjC,EAFiC,CAApC;AAGD;;AAED,eAAO,IAAP;AACD,OAnHH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqHE;;;;;;;;;;;;;;;;AArHF;AAAA;AAAA,2BAoISC,QApIT,EAoIwB;AAAA,UAAfA,QAAe;AAAfA,QAAAA,QAAe,GAAJ,EAAI;AAAA;;AACpB,aAAO,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAKI,YAAL;;AAEA,aAAKH,aAAL,GAAqB,KAArB;AACAC,QAAAA,YAAY,CAAC,KAAKC,kBAAN,CAAZ;AAEA,YAAMe,MAAM,GAAG,CAAf;;AACA,YAAMC,KAAK,GAAGhD,SAAS,CAAC2C,IAAV,CAAe;AAC3BL,UAAAA,MAAM,EAAE,CADmB;AAE3BrB,UAAAA,GAAG,EAAE8B,MAFsB;AAG3BvB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAHoB;AAM3BW,UAAAA,OAAO,EAAEU,QAAQ,CAACE,KAAT,IAAkB;AANA,SAAf,CAAd;;AASA,YAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAT,GAAgBH,MAAM,GAAG,CAAzB,GAA6BA,MAA3C;;AACA,YAAMG,IAAI,GAAGlD,SAAS,CAAC2C,IAAV,CAAe;AAC1B1B,UAAAA,GAAG,EAAEgC,KADqB;AAE1BzB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAFmB;AAK1BW,UAAAA,OAAO,EAAEU,QAAQ,CAACI,IAAT,IAAiB;AALA,SAAf,CAAb;;AAQA,YAAMC,MAAM,GAAGL,QAAQ,CAACM,KAAT,GAAiBH,KAAK,GAAG,CAAzB,GAA6BA,KAA5C;;AACA,YAAMG,KAAK,GAAGpD,SAAS,CAAC2C,IAAV,CAAe;AAC3BL,UAAAA,MAAM,EAAE,CADmB;AAE3BrB,UAAAA,GAAG,EAAEkC,MAFsB;AAG3B3B,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAHoB;AAM3BW,UAAAA,OAAO,EAAEU,QAAQ,CAACM,KAAT,IAAkB;AANA,SAAf,CAAd;;AASA,YAAMC,cAAc,GAAGF,MAAM,GAAG,CAAhC;;AACA,YAAMG,aAAa,GAAGtD,SAAS,CAAC2C,IAAV,CAAe;AACnCL,UAAAA,MAAM,EAAE,CAD2B;AAEnCrB,UAAAA,GAAG,EAAEoC,cAF8B;AAGnC7B,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAH4B;AAMnCW,UAAAA,OAAO,EAAE;AAN0B,SAAf,CAAtB;;AASA,YAAMmB,SAAS,GAAGF,cAAc,GAAG,CAAnC;;AACA,YAAMG,QAAQ,GAAGxD,SAAS,CAACyD,OAAV,CAAkB;AACjCC,UAAAA,IAAI,EAAE,UAD2B;AAEjCpB,UAAAA,MAAM,EAAE,CAFyB;AAGjCrB,UAAAA,GAAG,EAAEsC,SAH4B;AAIjCI,UAAAA,KAAK,EAAE,IAJ0B;AAKjCnC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,OADC;AAELmC,YAAAA,EAAE,EAAE,SAFC;AAGLC,YAAAA,KAAK,EAAE;AACLD,cAAAA,EAAE,EAAE,QADC;AAELnC,cAAAA,EAAE,EAAE;AAFC;AAHF,WAL0B;AAajCqC,UAAAA,YAAY,EAAE,IAbmB;AAcjCC,UAAAA,OAAO,EAAE;AACP9C,YAAAA,GAAG,EAAE,CADE;AAEP+C,YAAAA,MAAM,EAAE,CAFD;AAGP9C,YAAAA,IAAI,EAAE,CAHC;AAIP+C,YAAAA,KAAK,EAAE;AAJA;AAdwB,SAAlB,CAAjB;;AAsBA,YAAMC,cAAc,GAAGX,SAAS,GAAG,CAAnC;;AACA,YAAMY,aAAa,GAAGnE,SAAS,CAAC2C,IAAV,CAAe;AACnCL,UAAAA,MAAM,EAAE,CAD2B;AAEnCrB,UAAAA,GAAG,EAAEiD,cAF8B;AAGnC1C,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAH4B;AAMnCW,UAAAA,OAAO,EAAE;AAN0B,SAAf,CAAtB;;AASA,YAAMgC,SAAS,GAAGF,cAAc,GAAG,CAAnC;;AACA,YAAMG,QAAQ,GAAGrE,SAAS,CAACyD,OAAV,CAAkB;AACjCC,UAAAA,IAAI,EAAE,UAD2B;AAEjCpB,UAAAA,MAAM,EAAE,CAFyB;AAGjCrB,UAAAA,GAAG,EAAEmD,SAH4B;AAIjCT,UAAAA,KAAK,EAAE,IAJ0B;AAKjCnC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,OADC;AAELmC,YAAAA,EAAE,EAAE,SAFC;AAGLC,YAAAA,KAAK,EAAE;AACLD,cAAAA,EAAE,EAAE,QADC;AAELnC,cAAAA,EAAE,EAAE;AAFC;AAHF,WAL0B;AAajC6C,UAAAA,MAAM,EAAE,IAbyB;AAcjCR,UAAAA,YAAY,EAAE,IAdmB;AAejCC,UAAAA,OAAO,EAAE;AACP9C,YAAAA,GAAG,EAAE,CADE;AAEP+C,YAAAA,MAAM,EAAE,CAFD;AAGP9C,YAAAA,IAAI,EAAE,CAHC;AAIP+C,YAAAA,KAAK,EAAE;AAJA;AAfwB,SAAlB,CAAjB;;AAuBA,YAAMM,OAAO,GAAGH,SAAS,GAAG,CAA5B;;AACA,YAAMI,MAAM,GAAGxE,SAAS,CAACwE,MAAV,CAAiB;AAC9BlC,UAAAA,MAAM,EAAE,CADsB;AAE9BnB,UAAAA,KAAK,EAAE,EAFuB;AAG9BF,UAAAA,GAAG,EAAEsD,OAHyB;AAI9BN,UAAAA,KAAK,EAAE,CAJuB;AAK9B5B,UAAAA,KAAK,EAAE,QALuB;AAM9BsB,UAAAA,KAAK,EAAE,IANuB;AAO9BnC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,OADC;AAELmC,YAAAA,EAAE,EAAE,QAFC;AAGLa,YAAAA,KAAK,EAAE;AACLb,cAAAA,EAAE,EAAE;AADC;AAHF,WAPuB;AAc9BxB,UAAAA,OAAO,EAAE,SAdqB;AAe9B2B,UAAAA,OAAO,EAAE;AACP9C,YAAAA,GAAG,EAAE,CADE;AAEP+C,YAAAA,MAAM,EAAE,CAFD;AAGP9C,YAAAA,IAAI,EAAE,CAHC;AAIP+C,YAAAA,KAAK,EAAE;AAJA;AAfqB,SAAjB,CAAf;;AAuBA,aAAKpD,UAAL,CAAgBa,MAAhB,CAAuBsB,KAAvB;;AAEA,YAAIF,QAAQ,CAACI,IAAb,EAAmB;AACjB,eAAKrC,UAAL,CAAgBa,MAAhB,CAAuBwB,IAAvB;AACD;;AACD,YAAIJ,QAAQ,CAACM,KAAb,EAAoB;AAClB,eAAKvC,UAAL,CAAgBa,MAAhB,CAAuB0B,KAAvB;AACD;;AAED,aAAKvC,UAAL,CAAgBa,MAAhB,CAAuB4B,aAAvB;;AACA,aAAKzC,UAAL,CAAgBa,MAAhB,CAAuB8B,QAAvB;;AACA,aAAK3C,UAAL,CAAgBa,MAAhB,CAAuByC,aAAvB;;AACA,aAAKtD,UAAL,CAAgBa,MAAhB,CAAuB2C,QAAvB;;AACA,aAAKxD,UAAL,CAAgBa,MAAhB,CAAuB8C,MAAvB;;AAEA,aAAKlE,OAAL,CAAaiC,MAAb;;AAEAiB,QAAAA,QAAQ,CAACK,KAAT;AAEAL,QAAAA,QAAQ,CAAC/C,GAAT,CAAa,CAAC,OAAD,CAAb,EAAyBiE,CAAD,IAAO;AAC7B,eAAK7D,UAAL,CAAgB8D,MAAhB;AACD,SAFD;AAGAN,QAAAA,QAAQ,CAAC5D,GAAT,CAAa,CAAC,OAAD,CAAb,EAAyBiE,CAAD,IAAO;AAC7B,eAAK7D,UAAL,CAAgB8D,MAAhB;AACD,SAFD;AAGAH,QAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAoBF,CAAD,IAAO;AACxB,eAAK7D,UAAL,CAAgB8D,MAAhB;AACD,SAFD;;AAIA,aAAK9D,UAAL,CAAgB+D,EAAhB,CAAmB,QAAnB,EAA8BF,CAAD,IAAO;AAClC9C,UAAAA,OAAO,CAAC;AACN4B,YAAAA,QAAQ,EAAEkB,CAAC,CAAClB,QADN;AAENa,YAAAA,QAAQ,EAAEK,CAAC,CAACL;AAFN,WAAD,CAAP;AAID,SALD;AAMD,OAjKM,CAAP;AAkKD;AAED;;;;;;;;;;;;;;;;AAzSF;AAAA;AAAA,4BAwTUvB,QAxTV,EAwTyB;AAAA,UAAfA,QAAe;AAAfA,QAAAA,QAAe,GAAJ,EAAI;AAAA;;AACrB,aAAO,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAKI,YAAL;;AAEA,aAAKH,aAAL,GAAqB,KAArB;AACAC,QAAAA,YAAY,CAAC,KAAKC,kBAAN,CAAZ;AAEA,YAAMe,MAAM,GAAG,CAAf;;AACA,YAAMC,KAAK,GAAGhD,SAAS,CAAC2C,IAAV,CAAe;AAC3BL,UAAAA,MAAM,EAAE,CADmB;AAE3BrB,UAAAA,GAAG,EAAE8B,MAFsB;AAG3BvB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAHoB;AAM3BW,UAAAA,OAAO,EAAEU,QAAQ,CAACE,KAAT,IAAkB;AANA,SAAf,CAAd;;AASA,YAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAT,GAAgBH,MAAM,GAAG,CAAzB,GAA6BA,MAA3C;;AACA,YAAMG,IAAI,GAAGlD,SAAS,CAAC2C,IAAV,CAAe;AAC1B1B,UAAAA,GAAG,EAAEgC,KADqB;AAE1BzB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAFmB;AAK1BW,UAAAA,OAAO,EAAEU,QAAQ,CAACI,IAAT,IAAiB;AALA,SAAf,CAAb;;AAQA,YAAMC,MAAM,GAAGL,QAAQ,CAACM,KAAT,GAAiBH,KAAK,GAAG,CAAzB,GAA6BA,KAA5C;;AACA,YAAMG,KAAK,GAAGpD,SAAS,CAAC2C,IAAV,CAAe;AAC3B1B,UAAAA,GAAG,EAAEkC,MADsB;AAE3B3B,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAFoB;AAK3BW,UAAAA,OAAO,EAAEU,QAAQ,CAACM,KAAT,IAAkB;AALA,SAAf,CAAd;;AAQA,YAAMyB,WAAW,GAAG1B,MAAM,GAAG,CAA7B;;AACA,YAAM2B,UAAU,GAAG9E,SAAS,CAAC2C,IAAV,CAAe;AAChCL,UAAAA,MAAM,EAAE,CADwB;AAEhCrB,UAAAA,GAAG,EAAE4D,WAF2B;AAGhCrD,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE;AADC,WAHyB;AAMhCW,UAAAA,OAAO,EAAE;AANuB,SAAf,CAAnB;;AASA,YAAM2C,MAAM,GAAGF,WAAW,GAAG,CAA7B;;AACA,YAAMG,KAAK,GAAGhF,SAAS,CAACyD,OAAV,CAAkB;AAC9BC,UAAAA,IAAI,EAAE,OADwB;AAE9BpB,UAAAA,MAAM,EAAE,CAFsB;AAG9BrB,UAAAA,GAAG,EAAE8D,MAHyB;AAI9BpB,UAAAA,KAAK,EAAE,IAJuB;AAK9BnC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,OADC;AAELmC,YAAAA,EAAE,EAAE,SAFC;AAGLC,YAAAA,KAAK,EAAE;AACLD,cAAAA,EAAE,EAAE,QADC;AAELnC,cAAAA,EAAE,EAAE;AAFC;AAHF,WALuB;AAa9BqC,UAAAA,YAAY,EAAE,IAbgB;AAc9BC,UAAAA,OAAO,EAAE;AACP9C,YAAAA,GAAG,EAAE,CADE;AAEP+C,YAAAA,MAAM,EAAE,CAFD;AAGP9C,YAAAA,IAAI,EAAE,CAHC;AAIP+C,YAAAA,KAAK,EAAE;AAJA;AAdqB,SAAlB,CAAd;;AAsBA,YAAMM,OAAO,GAAGQ,MAAM,GAAG,CAAzB;;AACA,YAAMP,MAAM,GAAGxE,SAAS,CAACwE,MAAV,CAAiB;AAC9BlC,UAAAA,MAAM,EAAE,CADsB;AAE9BnB,UAAAA,KAAK,EAAE,EAFuB;AAG9BF,UAAAA,GAAG,EAAEsD,OAHyB;AAI9BN,UAAAA,KAAK,EAAE,CAJuB;AAK9B5B,UAAAA,KAAK,EAAE,QALuB;AAM9BsB,UAAAA,KAAK,EAAE,IANuB;AAO9BnC,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAE,OADC;AAELmC,YAAAA,EAAE,EAAE,QAFC;AAGLa,YAAAA,KAAK,EAAE;AACLb,cAAAA,EAAE,EAAE;AADC;AAHF,WAPuB;AAc9BxB,UAAAA,OAAO,EAAE,SAdqB;AAe9B2B,UAAAA,OAAO,EAAE;AACP9C,YAAAA,GAAG,EAAE,CADE;AAEP+C,YAAAA,MAAM,EAAE,CAFD;AAGP9C,YAAAA,IAAI,EAAE,CAHC;AAIP+C,YAAAA,KAAK,EAAE;AAJA;AAfqB,SAAjB,CAAf;;AAuBA,aAAKpD,UAAL,CAAgBa,MAAhB,CAAuBsB,KAAvB;;AAEA,YAAIF,QAAQ,CAACI,IAAb,EAAmB;AACjB,eAAKrC,UAAL,CAAgBa,MAAhB,CAAuBwB,IAAvB;AACD;;AACD,YAAIJ,QAAQ,CAACM,KAAb,EAAoB;AAClB,eAAKvC,UAAL,CAAgBa,MAAhB,CAAuB0B,KAAvB;AACD;;AAED,aAAKvC,UAAL,CAAgBa,MAAhB,CAAuBoD,UAAvB;;AACA,aAAKjE,UAAL,CAAgBa,MAAhB,CAAuBsD,KAAvB;;AACA,aAAKnE,UAAL,CAAgBa,MAAhB,CAAuB8C,MAAvB;;AAEA,aAAKlE,OAAL,CAAaiC,MAAb;;AAEAyC,QAAAA,KAAK,CAACnB,KAAN;AAEAmB,QAAAA,KAAK,CAACvE,GAAN,CAAU,CAAC,OAAD,CAAV,EAAsBiE,CAAD,IAAO;AAC1B,eAAK7D,UAAL,CAAgB8D,MAAhB;AACD,SAFD;AAGAH,QAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAoBF,CAAD,IAAO;AACxB,eAAK7D,UAAL,CAAgB8D,MAAhB;AACD,SAFD;;AAIA,aAAK9D,UAAL,CAAgB+D,EAAhB,CAAmB,QAAnB,EAA8BF,CAAD,IAAO;AAClC9C,UAAAA,OAAO,CAAC;AACNoD,YAAAA,KAAK,EAAEN,CAAC,CAACM;AADH,WAAD,CAAP;AAGD,SAJD;AAKD,OAxHM,CAAP;AAyHD;AAlbH;;AAAA;AAAA,EAAoDlF,cAApD",
    "sourcesContent": [
        "const __SAuthAdapter = require('./SAuthAdapter');\nconst __blessed = require('blessed');\nconst __terminalKit = require('terminal-kit');\nconst __parseHtml = require('../../../terminal/parseHtml');\nconst __ora = require('ora');\n\n/**\n * @name                            STerminalAuthAdapter\n * @namespace           node.auth.adapters\n * @type                            Class\n *\n * Terminal SAuth adapter that allows you to ask the auth informations through the terminal\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class STerminalAuthAdapter extends __SAuthAdapter {\n  /**\n   * @name                          constructor\n   * @type                          Function\n   *\n   * Construct the STerminalAuthAdapter instance\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor() {\n    super(['basic', 'bearer']);\n  }\n\n  _resetScreen() {\n    // if (this._screen) this._screen.destroy();\n    if (!this._screen) {\n      this._screen = __blessed.screen({\n        smartCSR: true\n      });\n      this._screen.key(['C-c'], function (ch, key) {\n        return process.exit(0);\n      });\n    }\n\n    if (this._container) {\n      this._screen.remove(this._container);\n      this._container.destroy();\n    }\n\n    this._container = __blessed.form({\n      top: 'center',\n      left: 'center',\n      width: process.stdout.columns < 50 ? '90%' : '50%',\n      // tags: true,\n      keys: true,\n      vi: false,\n      style: {\n        fg: 'white'\n      }\n    });\n    this._screen.append(this._container);\n  }\n\n  /**\n   * @name                      _success\n   * @type                      Function\n   * @async\n   *\n   * Display the success message to the user\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _success() {\n    return new Promise((resolve, reject) => {\n      this._isValidating = false;\n      clearTimeout(this._validationTimeout);\n\n      this._resetScreen();\n\n      const success = __blessed.box({\n        width: '100%',\n        content: __parseHtml(\n          '<green>✓ Your auth info have been validated!</green>'\n        ),\n        align: 'center'\n      });\n\n      this._container.height = 1;\n      this._container.append(success);\n      this._screen.render();\n\n      setTimeout(() => {\n        resolve();\n\n        this._screen.destroy();\n      }, 2000);\n    });\n  }\n\n  /**\n   * @name                      _validation\n   * @type                      Function\n   * @async\n   *\n   * Display the validation message to the user\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  async _validation() {\n    if (!this._isValidating) this._isValidating = true;\n\n    this._resetScreen();\n\n    if (!this._oraLoader) {\n      this._oraLoader = __ora(\n        'Please wait while your auth info are validated...'\n      );\n    }\n\n    const loading = __blessed.text({\n      content: this._oraLoader.frame(),\n      align: 'center'\n    });\n\n    this._container.height = 1;\n    this._container.append(loading);\n    this._screen.render();\n\n    if (this._isValidating) {\n      this._validationTimeout = setTimeout(() => {\n        this._validation();\n      }, 20);\n    }\n\n    return true;\n  }\n\n  /**\n   * @name                      _basic\n   * @type                      Function\n   * @async\n   *\n   * Ask the user for username, password\n   *\n   * @param             {Object}              [settings={}]       An object of settings. Here's the options available:\n   * - title (null) {String}: The title to display on top of the form\n   * - error (null) {String}: An error message to display to the user. Can be something like \"Your credentials have been declined. Please try again...\"\n   * - info (null) {String}: An info message to display to the user\n   * @return            {Promise}                     A promise that will be resolved with the getted username, password\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _basic(settings = {}) {\n    return new Promise((resolve, reject) => {\n      this._resetScreen();\n\n      this._isValidating = false;\n      clearTimeout(this._validationTimeout);\n\n      const titleY = 0;\n      const title = __blessed.text({\n        height: 1,\n        top: titleY,\n        style: {\n          fg: 'yellow'\n        },\n        content: settings.title || 'Basic auth'\n      });\n\n      const infoY = settings.info ? titleY + 2 : titleY;\n      const info = __blessed.text({\n        top: infoY,\n        style: {\n          fg: 'white'\n        },\n        content: settings.info || ''\n      });\n\n      const errorY = settings.error ? infoY + 2 : infoY;\n      const error = __blessed.text({\n        height: 1,\n        top: errorY,\n        style: {\n          fg: 'red'\n        },\n        content: settings.error || ''\n      });\n\n      const usernameLabelY = errorY + 2;\n      const usernameLabel = __blessed.text({\n        height: 1,\n        top: usernameLabelY,\n        style: {\n          fg: 'white'\n        },\n        content: 'Username: '\n      });\n\n      const usernameY = usernameLabelY + 2;\n      const username = __blessed.textbox({\n        name: 'username',\n        height: 3,\n        top: usernameY,\n        mouse: true,\n        style: {\n          fg: 'black',\n          bg: '#ffffff',\n          focus: {\n            bg: 'yellow',\n            fg: 'black'\n          }\n        },\n        inputOnFocus: true,\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      });\n\n      const passwordLabelY = usernameY + 4;\n      const passwordLabel = __blessed.text({\n        height: 1,\n        top: passwordLabelY,\n        style: {\n          fg: 'white'\n        },\n        content: 'Password: '\n      });\n\n      const passwordY = passwordLabelY + 2;\n      const password = __blessed.textbox({\n        name: 'password',\n        height: 3,\n        top: passwordY,\n        mouse: true,\n        style: {\n          fg: 'black',\n          bg: '#ffffff',\n          focus: {\n            bg: 'yellow',\n            fg: 'black'\n          }\n        },\n        censor: true,\n        inputOnFocus: true,\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      });\n\n      const buttonY = passwordY + 4;\n      const button = __blessed.button({\n        height: 3,\n        width: 15,\n        top: buttonY,\n        right: 0,\n        align: 'center',\n        mouse: true,\n        style: {\n          fg: 'black',\n          bg: 'yellow',\n          hover: {\n            bg: 'cyan'\n          }\n        },\n        content: '✔ Login',\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      });\n\n      this._container.append(title);\n\n      if (settings.info) {\n        this._container.append(info);\n      }\n      if (settings.error) {\n        this._container.append(error);\n      }\n\n      this._container.append(usernameLabel);\n      this._container.append(username);\n      this._container.append(passwordLabel);\n      this._container.append(password);\n      this._container.append(button);\n\n      this._screen.render();\n\n      username.focus();\n\n      username.key(['enter'], (e) => {\n        this._container.submit();\n      });\n      password.key(['enter'], (e) => {\n        this._container.submit();\n      });\n      button.on('press', (e) => {\n        this._container.submit();\n      });\n\n      this._container.on('submit', (e) => {\n        resolve({\n          username: e.username,\n          password: e.password\n        });\n      });\n    });\n  }\n\n  /**\n   * @name                      _bearer\n   * @type                      Function\n   * @async\n   *\n   * Ask the user for bearer auth info (token)\n   *\n   * @param             {Object}              [settings={}]       An object of settings. Here's the options available:\n   * - title (null) {String}: The title displayed on top of the form\n   * - error (null) {String}: An error message to display to the user. Can be something like \"Your credentials have been declined. Please try again...\"\n   * - info (null) {String}: An info message to display to the user\n   * @return            {Promise}                     A promise that will be resolved with the getted username, password\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _bearer(settings = {}) {\n    return new Promise((resolve, reject) => {\n      this._resetScreen();\n\n      this._isValidating = false;\n      clearTimeout(this._validationTimeout);\n\n      const titleY = 0;\n      const title = __blessed.text({\n        height: 1,\n        top: titleY,\n        style: {\n          fg: 'yellow'\n        },\n        content: settings.title || 'Bearer auth'\n      });\n\n      const infoY = settings.info ? titleY + 2 : titleY;\n      const info = __blessed.text({\n        top: infoY,\n        style: {\n          fg: 'white'\n        },\n        content: settings.info || ''\n      });\n\n      const errorY = settings.error ? infoY + 2 : infoY;\n      const error = __blessed.text({\n        top: errorY,\n        style: {\n          fg: 'red'\n        },\n        content: settings.error || ''\n      });\n\n      const tokenLabelY = errorY + 2;\n      const tokenLabel = __blessed.text({\n        height: 1,\n        top: tokenLabelY,\n        style: {\n          fg: 'white'\n        },\n        content: 'Bearer token: '\n      });\n\n      const tokenY = tokenLabelY + 2;\n      const token = __blessed.textbox({\n        name: 'token',\n        height: 3,\n        top: tokenY,\n        mouse: true,\n        style: {\n          fg: 'black',\n          bg: '#ffffff',\n          focus: {\n            bg: 'yellow',\n            fg: 'black'\n          }\n        },\n        inputOnFocus: true,\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      });\n\n      const buttonY = tokenY + 4;\n      const button = __blessed.button({\n        height: 3,\n        width: 15,\n        top: buttonY,\n        right: 0,\n        align: 'center',\n        mouse: true,\n        style: {\n          fg: 'black',\n          bg: 'yellow',\n          hover: {\n            bg: 'cyan'\n          }\n        },\n        content: '✔ Login',\n        padding: {\n          top: 1,\n          bottom: 1,\n          left: 2,\n          right: 2\n        }\n      });\n\n      this._container.append(title);\n\n      if (settings.info) {\n        this._container.append(info);\n      }\n      if (settings.error) {\n        this._container.append(error);\n      }\n\n      this._container.append(tokenLabel);\n      this._container.append(token);\n      this._container.append(button);\n\n      this._screen.render();\n\n      token.focus();\n\n      token.key(['enter'], (e) => {\n        this._container.submit();\n      });\n      button.on('press', (e) => {\n        this._container.submit();\n      });\n\n      this._container.on('submit', (e) => {\n        resolve({\n          token: e.token\n        });\n      });\n    });\n  }\n};\n"
    ]
}
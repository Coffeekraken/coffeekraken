{
    "version": 3,
    "sources": [
        "SGradientSvgFilter.js"
    ],
    "names": [
        "SGradientSvgFilter",
        "_image",
        "filter",
        "querySelector",
        "_tile",
        "colors",
        "settings",
        "width",
        "height",
        "x0",
        "x1",
        "y0",
        "y1",
        "can",
        "document",
        "createElement",
        "setAttribute",
        "ctx",
        "getContext",
        "grad",
        "createLinearGradient",
        "i",
        "forEach",
        "color",
        "addColorStop",
        "length",
        "fillStyle",
        "fillRect",
        "grad64",
        "toDataURL",
        "r0",
        "r1",
        "createRadialGradient",
        "elm",
        "_setImageSize",
        "window",
        "addEventListener",
        "_onWindowResize",
        "bind",
        "removeEventListener",
        "e",
        "elms",
        "offsetWidth",
        "offsetHeight",
        "removeAttribute",
        "SSvgFilter"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;IAkBMA,kB;;;;;AACJ;;;;;;;;AAQA,gCAAc;AAAA;;AAAA;;AACZ;AAIA,UAAKC,MAAL,GAAc,MAAKC,MAAL,CAAYC,aAAZ,CAA0B,SAA1B,CAAd;AACA,UAAKC,KAAL,GAAa,MAAKF,MAAL,CAAYC,aAAZ,CAA0B,QAA1B,CAAb;AANY;AAOb;AAED;;;;;;;;;;;;;;;2BAWOE,M,EAAQC,Q,EAAe;AAAA,UAAfA,QAAe;AAAfA,QAAAA,QAAe,GAAJ,EAAI;AAAA;;AAC5B,UAAIC,KAAK,GAAGD,QAAQ,CAACC,KAAT,IAAkB,GAA9B;AAAA,UACEC,MAAM,GAAGF,QAAQ,CAACE,MAAT,IAAmB,GAD9B;AAAA,UAEEC,EAAE,GAAGH,QAAQ,CAACG,EAAT,IAAe,CAFtB;AAAA,UAGEC,EAAE,GAAGJ,QAAQ,CAACI,EAAT,IAAeH,KAHtB;AAAA,UAIEI,EAAE,GAAGL,QAAQ,CAACK,EAAT,IAAe,CAJtB;AAAA,UAKEC,EAAE,GAAGN,QAAQ,CAACM,EAAT,IAAe,CALtB;AAMA,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,MAAAA,GAAG,CAACG,YAAJ,CAAiB,OAAjB,EAA0BT,KAA1B;AACAM,MAAAA,GAAG,CAACG,YAAJ,CAAiB,QAAjB,EAA2BR,MAA3B;AACA,UAAIS,GAAG,GAAGJ,GAAG,CAACK,UAAJ,CAAe,IAAf,CAAV;AAAA,UACEC,IAAI,GAAGF,GAAG,CAACG,oBAAJ,CAAyBX,EAAzB,EAA6BE,EAA7B,EAAiCD,EAAjC,EAAqCE,EAArC,CADT,CAV4B,CAY5B;;AACA,UAAIS,CAAC,GAAG,CAAR;AACAhB,MAAAA,MAAM,CAACiB,OAAP,CAAgBC,KAAD,IAAW;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAmB,KAAKnB,MAAM,CAACoB,MAAP,GAAgB,CAArB,CAAD,GAA4BJ,CAA9C,EAAiDE,KAAjD;AACAF,QAAAA,CAAC;AACF,OAHD;AAIAJ,MAAAA,GAAG,CAACS,SAAJ,GAAgBP,IAAhB;AACAF,MAAAA,GAAG,CAACU,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBpB,KAAnB,EAA0BC,MAA1B;AACA,WAAKoB,MAAL,GAAcf,GAAG,CAACgB,SAAJ,EAAd;;AACA,WAAK5B,MAAL,CAAYe,YAAZ,CAAyB,YAAzB,EAAuC,KAAKY,MAA5C;AACD;AAED;;;;;;;;;;;;;;;;;;;;2BAiBOvB,M,EAAQC,Q,EAAe;AAAA,UAAfA,QAAe;AAAfA,QAAAA,QAAe,GAAJ,EAAI;AAAA;;AAC5B,UAAIC,KAAK,GAAGD,QAAQ,CAACC,KAAT,IAAkB,GAA9B;AAAA,UACEC,MAAM,GAAGF,QAAQ,CAACE,MAAT,IAAmB,GAD9B;AAAA,UAEEC,EAAE,GAAGH,QAAQ,CAACG,EAAT,IAAeF,KAAK,GAAG,CAF9B;AAAA,UAGEG,EAAE,GAAGJ,QAAQ,CAACI,EAAT,IAAeH,KAAK,GAAG,CAH9B;AAAA,UAIEuB,EAAE,GAAGxB,QAAQ,CAACwB,EAAT,IAAe,CAJtB;AAAA,UAKEnB,EAAE,GAAGL,QAAQ,CAACK,EAAT,IAAeH,MAAM,GAAG,CAL/B;AAAA,UAMEI,EAAE,GAAGN,QAAQ,CAACM,EAAT,IAAeJ,MAAM,GAAG,CAN/B;AAAA,UAOEuB,EAAE,GAAGzB,QAAQ,CAACyB,EAAT,IAAexB,KAPtB;AAQA,UAAIM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,MAAAA,GAAG,CAACG,YAAJ,CAAiB,OAAjB,EAA0BT,KAA1B;AACAM,MAAAA,GAAG,CAACG,YAAJ,CAAiB,QAAjB,EAA2BR,MAA3B;AACA,UAAIS,GAAG,GAAGJ,GAAG,CAACK,UAAJ,CAAe,IAAf,CAAV;AAAA,UACEC,IAAI,GAAGF,GAAG,CAACe,oBAAJ,CAAyBvB,EAAzB,EAA6BE,EAA7B,EAAiCmB,EAAjC,EAAqCpB,EAArC,EAAyCE,EAAzC,EAA6CmB,EAA7C,CADT,CAZ4B,CAc5B;;AACA,UAAIV,CAAC,GAAG,CAAR;AACAhB,MAAAA,MAAM,CAACiB,OAAP,CAAgBC,KAAD,IAAW;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAmB,KAAKnB,MAAM,CAACoB,MAAP,GAAgB,CAArB,CAAD,GAA4BJ,CAA9C,EAAiDE,KAAjD;AACAF,QAAAA,CAAC;AACF,OAHD;AAIAJ,MAAAA,GAAG,CAACS,SAAJ,GAAgBP,IAAhB;AACAF,MAAAA,GAAG,CAACU,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBpB,KAAnB,EAA0BC,MAA1B;AACA,WAAKoB,MAAL,GAAcf,GAAG,CAACgB,SAAJ,EAAd;;AACA,WAAK5B,MAAL,CAAYe,YAAZ,CAAyB,YAAzB,EAAuC,KAAKY,MAA5C;AACD;AAED;;;;;;;;;;;;;;4BAWQK,G,EAAK;AACX,sFAAcA,GAAd;;AACA,WAAKC,aAAL;;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAlC;AACD;AAED;;;;;;;;;;;;;;gCAWYL,G,EAAK;AACf,0FAAkBA,GAAlB;;AACAE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,eAA1C;AACD;AAED;;;;;;;;;;;;;;oCAWgBG,C,EAAG;AACjB;AACA,WAAKN,aAAL;AACD;AAED;;;;;;;;;;;;oCASgB;AACd,UAAI3B,KAAK,GAAG,KAAKkC,IAAL,CAAU,CAAV,EAAaC,WAAzB;AAAA,UACElC,MAAM,GAAG,KAAKiC,IAAL,CAAU,CAAV,EAAaE,YADxB;;AAEA,UAAIpC,KAAK,IAAIC,MAAb,EAAqB;AACnB,aAAKP,MAAL,CAAYe,YAAZ,CAAyB,OAAzB,EAAkCT,KAAlC;;AACA,aAAKN,MAAL,CAAY2C,eAAZ,CAA4B,QAA5B;AACD,OAHD,MAGO;AACL,aAAK3C,MAAL,CAAYe,YAAZ,CAAyB,QAAzB,EAAmCR,MAAnC;;AACA,aAAKP,MAAL,CAAY2C,eAAZ,CAA4B,OAA5B;AACD,OATa,CAUd;AACA;;AACD;;;;EAtK8BC,oB,GAyKjC;;;eACe7C,kB",
    "sourcesContent": [
        "import SSvgFilter from './SSvgFilter';\n\n/**\n * @name \t\tSGradientSvgFilter\n * @namespace           sugar.js.filter\n * @type      Class\n * @extends \t\tSSvgFilter\n *\n * This SVG filter class apply either a linear or a radial gradient of your choice\n * on an HTMLElement.\n * This is useful cause the gradient will only be applied on part of the elements that is really visible and will respect the opacity\n * of each parts\n *\n * @example \t\tjs\n * const filter = new SGradientSvgFilter();\n * filter.linear(['red','blue','green']);\n * filter.applyTo(myCoolHTMLElement);\n *\n * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nclass SGradientSvgFilter extends SSvgFilter {\n  /**\n   * @name          constructor\n   * @type          Function\n   *\n   * Constructor\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor() {\n    super(`\n\t\t\t<feImage xlink:href=\"\" x=\"0\" y=\"0\" result=\"IMAGEFILL\" preserveAspectRatio=\"none\" />\n\t\t\t<feComposite operator=\"in\" in=\"IMAGEFILL\" in2=\"SourceAlpha\" />\n\t\t`);\n    this._image = this.filter.querySelector('feImage');\n    this._tile = this.filter.querySelector('feTile');\n  }\n\n  /**\n   * @name              linear\n   * @type              Function\n   *\n   * Linear gradient\n   *\n   * @param \t\t{Array} \t\t\tcolors \t\t\tAn array of colors for your gradient\n   * @param \t\t{Object} \t\t\tsettings \t\tThe settings of your gradient that consist of an object like : ```{width: 512, height: 512, x0: 0, x1: 512, y0: 0, y1: 1}```\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  linear(colors, settings = {}) {\n    let width = settings.width || 512,\n      height = settings.height || 512,\n      x0 = settings.x0 || 0,\n      x1 = settings.x1 || width,\n      y0 = settings.y0 || 0,\n      y1 = settings.y1 || 0;\n    let can = document.createElement('canvas');\n    can.setAttribute('width', width);\n    can.setAttribute('height', height);\n    let ctx = can.getContext('2d'),\n      grad = ctx.createLinearGradient(x0, y0, x1, y1);\n    // loop on each colors\n    let i = 0;\n    colors.forEach((color) => {\n      grad.addColorStop((1 / (colors.length - 1)) * i, color);\n      i++;\n    });\n    ctx.fillStyle = grad;\n    ctx.fillRect(0, 0, width, height);\n    this.grad64 = can.toDataURL();\n    this._image.setAttribute('xlink:href', this.grad64);\n  }\n\n  /**\n   * @name          radial\n   * @type          Function\n   *\n   * Radial gradient\n   *\n   * @param \t\t{Array} \t\t\tcolors \t\t\tAn array of colors for your gradient\n   * @param \t\t{Object} \t\t\tsettings \t\tThe settings of your gradient that consist of an object like : ```{width: 512, height: 512, x0: 256, x1: 256, y0: 256, y1: 256, r0: 0, r1: 512}```\n   *\n   * @example         js\n   * myFilter.radial(['#ff0000', '#00ffff], {\n   *    width: 300,\n   *    height: 300\n   * });\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  radial(colors, settings = {}) {\n    let width = settings.width || 512,\n      height = settings.height || 512,\n      x0 = settings.x0 || width / 2,\n      x1 = settings.x1 || width / 2,\n      r0 = settings.r0 || 0,\n      y0 = settings.y0 || height / 2,\n      y1 = settings.y1 || height / 2,\n      r1 = settings.r1 || width;\n    let can = document.createElement('canvas');\n    can.setAttribute('width', width);\n    can.setAttribute('height', height);\n    let ctx = can.getContext('2d'),\n      grad = ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n    // loop on each colors\n    let i = 0;\n    colors.forEach((color) => {\n      grad.addColorStop((1 / (colors.length - 1)) * i, color);\n      i++;\n    });\n    ctx.fillStyle = grad;\n    ctx.fillRect(0, 0, width, height);\n    this.grad64 = can.toDataURL();\n    this._image.setAttribute('xlink:href', this.grad64);\n  }\n\n  /**\n   * @name          applyTo\n   * @type          Function\n   * @override\n   *\n   * Apply the filter to element\n   *\n   * @param \t\t{HTMLElement} \t\telm \t\tThe element on which to apply the filter\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  applyTo(elm) {\n    super.applyTo(elm);\n    this._setImageSize();\n    window.addEventListener('resize', this._onWindowResize.bind(this));\n  }\n\n  /**\n   * @name            unapplyFrom\n   * @type            Function\n   * @override\n   *\n   * Remove the filter from element\n   *\n   * @param \t{HTMLElement} \telm \tThe element to unapply the filter from\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  unapplyFrom(elm) {\n    super.unapplyFrom(elm);\n    window.removeEventListener('resize', this._onWindowResize);\n  }\n\n  /**\n   * @name          _onWindowResize\n   * @type          Function\n   * @private\n   *\n   * When the window is resizing\n   *\n   * @param \t\t{Event} \t\te \t\tThe resize event\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _onWindowResize(e) {\n    // set the image size\n    this._setImageSize();\n  }\n\n  /**\n   * @name        _setImageSize\n   * @type        Function\n   * @private\n   *\n   * Set image width\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _setImageSize() {\n    let width = this.elms[0].offsetWidth,\n      height = this.elms[0].offsetHeight;\n    if (width >= height) {\n      this._image.setAttribute('width', width);\n      this._image.removeAttribute('height');\n    } else {\n      this._image.setAttribute('height', height);\n      this._image.removeAttribute('width');\n    }\n    // this._image.setAttribute('width', width);\n    // this._image.setAttribute('height', height);\n  }\n}\n\n// export modules\nexport default SGradientSvgFilter;\n"
    ]
}
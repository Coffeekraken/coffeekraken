{
    "version": 3,
    "sources": [
        "SLocalStorageFonts.js"
    ],
    "names": [
        "SLocalStorageFonts",
        "settings",
        "version",
        "json_path",
        "debug",
        "_settings",
        "_init",
        "cb",
        "split",
        "length",
        "_cache",
        "window",
        "localStorage",
        "getItem",
        "JSON",
        "parse",
        "_debug",
        "_insertFonts",
        "value",
        "removeItem",
        "e",
        "addEventListener",
        "request",
        "XMLHttpRequest",
        "response",
        "undefined",
        "open",
        "onload",
        "status",
        "responseText",
        "fontface",
        "fonts",
        "forEach",
        "font",
        "prop",
        "setItem",
        "stringify",
        "send",
        "style",
        "document",
        "createElement",
        "innerHTML",
        "head",
        "appendChild",
        "console",
        "log",
        "arguments"
    ],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @name \t\tSLocalStorageFonts\n * @namespace           sugar.js.class\n * @type    Class\n *\n * This class allows to easily store and load custom fonts from the localStorage\n *\n * @example \tjs\n * new SLocalStorageFonts({\n *  \tjson_path : '/fonts/fonts.json#v1'\n * });\n *\n * // the fonts.json file looks like this\n * {\n * \t\t\"fonts\" : [{\n *\t  \t\t\"font-family\" : \"Open Sans\",\n *\t    \t\"font-weight\" : 300,\n *      \t\"src\" : \"url(data:application/font-woff;base64,d09GRgA...\"\n *      }]\n * }\n *\n * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n */\nclass SLocalStorageFonts {\n  /**\n   * Settings\n   * @type \t{Object}\n   */\n  _settings = {\n    /**\n     * Store the version of the fonts to load.\n     * Used for cache busting\n     * @setting\n     * @type \t\t{String}\n     * @default \t1.0\n     */\n    version: 1.0,\n\n    /**\n     * Set the json file to load\n     * @setting\n     * @type \t\t{String}\n     * @default \t/fonts/fonts.json\n     */\n    json_path: '/fonts/fonts.json',\n\n    /**\n     * Set if want the debug messages in the console\n     * @setting\n     * @type \t\t{Boolean}\n     * @default \tfalse\n     */\n    debug: false\n  };\n\n  /**\n   * @constructor\n   * @param \t\t{Object} \tsettings \tThe settings\n   */\n  constructor(settings = {}) {\n    this._settings = {\n      ...this._settings,\n      ...settings\n    };\n    // init\n    this._init();\n  }\n\n  /**\n   * Init\n   */\n  _init() {\n    // check cachebuster\n    let cb = this._settings.json_path.split('#');\n    if (cb.length == 2) {\n      this._settings.version = cb[1];\n      this._settings.json_path = cb[0];\n    }\n\n    try {\n      this._cache = window.localStorage.getItem('sugar-fonts');\n      if (this._cache) {\n        this._cache = JSON.parse(this._cache);\n        if (this._cache.version == this._settings.version) {\n          this._debug('No new version of you fonts');\n          this._insertFonts(this._cache.value);\n        } else {\n          this._debug('New version of your fonts');\n          // busting the cache\n          window.localStorage.removeItem('sugar-fonts');\n          this._cache = null;\n        }\n      }\n    } catch (e) {\n      // localstorage not available\n      this._debug('Your browser seems to not support the localStorage api');\n    }\n\n    // if no cache, load the fonts file\n    if (!this._cache) {\n      window.addEventListener('load', (e) => {\n        let request = new XMLHttpRequest(),\n          response = undefined;\n        request.open('GET', this._settings.json_path, true);\n        request.onload = () => {\n          if (request.status == 200) {\n            try {\n              response = JSON.parse(request.responseText);\n              let fontface = '';\n              response.fonts.forEach((font) => {\n                fontface += '@font-face{';\n                for (let prop in font) {\n                  let value = font[prop];\n                  if (prop == 'font-family') {\n                    value = '\"' + value + '\"';\n                  }\n                  fontface += prop + ':' + value + ';';\n                }\n                fontface += '}';\n              });\n              // insert fonts\n              this._insertFonts(fontface);\n              // save fonts in localstorage\n              window.localStorage.setItem(\n                'sugar-fonts',\n                JSON.stringify({\n                  version: this._settings.version,\n                  value: fontface\n                })\n              );\n            } catch (e) {}\n          }\n        };\n        request.send();\n      });\n    }\n  }\n\n  /**\n   * Insert font\n   */\n  _insertFonts(value) {\n    this._debug('inserting fonts');\n    let style = document.createElement('style');\n    style.innerHTML = value;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Debug\n   */\n  _debug() {\n    if (this._settings.debug) {\n      console.log('SUGAR-LOCALSTORAGEFONTS', arguments);\n    }\n  }\n}\n\n// export modules\nexport default SLocalStorageFonts;\n"
    ]
}
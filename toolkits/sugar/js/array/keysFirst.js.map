{
    "version": 3,
    "sources": [
        "keysFirst.js"
    ],
    "names": [
        "keysFirst",
        "array",
        "keys",
        "filter",
        "key",
        "indexOf",
        "res",
        "concat"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC7C;AACA;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAaC,GAAD,IAAS;AAC1B,WAAOH,KAAK,CAACI,OAAN,CAAcD,GAAd,MAAuB,CAAC,CAA/B;AACD,GAFM,CAAP,CAH6C,CAM7C;;AACA,MAAIE,GAAG,GAAG,GAAGC,MAAH,CAAUL,IAAV,EAAgBK,MAAhB,CAAuBN,KAAvB,CAAV,CAP6C,CAQ7C;;AACAK,EAAAA,GAAG,GAAG,mBAAKA,GAAL,CAAN,CAT6C,CAU7C;;AACA,SAAOA,GAAP;AACD",
    "sourcesContent": [
        "import uniq from 'lodash/uniq';\n\n/**\n * @name        keysFirst\n * @namespace           sugar.js.array\n * @type      Function\n *\n * Make sure the passed array start with the passed keys\n *\n * @param    {Array}    array    The array to sort\n * @param    {Array}    keys    The keys to start the array with\n * @return    {Array}    The processed array\n *\n * @example    js\n * import keysFirst from '@coffeekraken/sugar/js/array/keysFirst'\n * keysFirst(['a','b','d','g','c'], ['d','g'])\n * // ['d','g','a','b','c']\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function keysFirst(array, keys) {\n  // all the keys has to exist in the array stack\n  // otherwise we filter it out\n  keys = keys.filter((key) => {\n    return array.indexOf(key) !== -1;\n  });\n  // add the keys at start\n  let res = [].concat(keys).concat(array);\n  // remove double items\n  res = uniq(res);\n  // return the result\n  return res;\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "basicFormater.js"
    ],
    "names": [
        "__base64",
        "require",
        "module",
        "exports",
        "basicFormater",
        "authInfo",
        "tokenString",
        "encrypt",
        "username",
        "password",
        "token",
        "headers",
        "Authorization"
    ],
    "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAxB;AAEA;;;;;;;;;;;;;;AAYAC,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAChD;AACA,MAAIC,WAAW,GAAGN,QAAQ,CAACO,OAAT,WACbF,QAAQ,CAACG,QADI,cACQH,QAAQ,CAACI,QADjB,EAAlB,CAFgD,CAMhD;;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,WADF;AAELK,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,kBAAWN,WAAX;AADN;AAFJ,GAAP;AAMD,CAbD",
    "sourcesContent": [
        "const __base64 = require('../../../crypt/base64');\n\n/**\n * @name                          basicFormater\n * @namespace           node.auth.formaters\n * @type                          Function\n *\n * This function simply take the basic auth infos (username, password) and return the formated auth object with the headers, etc...\n *\n * @param           {Object}            authInfo            The authentification informations (username, password)\n * @return          {Object}                                The formated auth infos object with headers, etc...\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function basicFormater(authInfo) {\n  // build the username:password info\n  let tokenString = __base64.encrypt(\n    `${authInfo.username}:${authInfo.password}`\n  );\n\n  // build the formated auth object\n  return {\n    token: tokenString,\n    headers: {\n      Authorization: `Basic ${tokenString}`\n    }\n  };\n};\n"
    ]
}
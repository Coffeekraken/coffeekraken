{
    "version": 3,
    "sources": [
        "SCacheAdapter.js"
    ],
    "names": [
        "module",
        "exports",
        "settings",
        "_settings"
    ],
    "mappings": ";;AAAA;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BAA,MAAM,CAACC,OAAP;AACE;;;;;;;;;;AAWA;;;;;;;;;;AAUA,uBAAYC,QAAZ,EAA2B;AAAA,MAAfA,QAAe;AAAfA,IAAAA,QAAe,GAAJ,EAAI;AAAA;;AAAA;;AAAA,qCAZf,EAYe;;AACzB;AACA,OAAKC,SAAL,GAAiBD,QAAjB;AACD,CAzBH",
    "sourcesContent": [
        "import __deepMerge from '../../object/deepMerge';\n\n/**\n * @name                                SCacheAdapter\n * @namespace           sugar.js.cache.cacheAdapters\n * @type                                Class\n *\n * Base class for SCache adapters\n *\n * @example             js\n * class SCacheCoolAdapter extends SCacheAdapter {\n *    constructor(settings = {}) {\n *      super(settings);\n *      // settings are accessible through this._settings\n *    }\n *    async set(name, value, settings = {}) {\n *      const objectToSave = this.processItem(name, value, settings);\n *      // make what you want with the objectToSave...\n *      return objectToSave; // return the objectToSave or false if something goes wrong\n *    }\n *    async get(name) {\n *      // make what you need to get back the cached item\n *      return objectOfCachedItem; // return the cached item in object format\n *    }\n *    async delete(name) {\n *      // make what you need to delete the cached item\n *      return true; // return true or false if something goes wrong\n *    }\n * }\n *\n * @since     2.0.0\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = class SCacheAdapter {\n  /**\n   * @name                              _settings\n   * @type                              Object\n   * @private\n   *\n   * Store the default settings of the SCacheAdapter instance\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  _settings = {};\n\n  /**\n   * @name                              constructor\n   * @type                              Function\n   *\n   * Construct the SCacheAdapter instance with the settings passed in object format. See description bellow.\n   *\n   * @param         {Object}          [settings={}]             An object to configure the SCacheAdapter instance. This is specific to each adapters.settings.settings...\n   *\n   * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(settings = {}) {\n    // store the settings\n    this._settings = settings;\n  }\n};\n"
    ]
}
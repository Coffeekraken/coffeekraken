{
    "version": 3,
    "sources": [
        "rgba2hsl.js"
    ],
    "names": [
        "rgba2hsl",
        "r",
        "g",
        "b",
        "a",
        "max",
        "Math",
        "min",
        "h",
        "s",
        "l",
        "d",
        "floor"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;AAmBe,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAAkC;AAAA,MAAPA,CAAO;AAAPA,IAAAA,CAAO,GAAH,CAAG;AAAA;;AAC/C,MAAI,OAAOH,CAAP,KAAa,QAAjB,EAA2B;AACzBC,IAAAA,CAAC,GAAGD,CAAC,CAACC,CAAN;AACAC,IAAAA,CAAC,GAAGF,CAAC,CAACE,CAAN;AACAC,IAAAA,CAAC,GAAGH,CAAC,CAACG,CAAN;AACAH,IAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACD;;AAEAA,EAAAA,CAAC,IAAI,GAAN,EAAaC,CAAC,IAAI,GAAlB,EAAyBC,CAAC,IAAI,GAA9B;AACA,MAAIE,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASJ,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAAV;AAAA,MACEI,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASN,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CADR;AAEA,MAAIK,CAAJ;AAAA,MACEC,CADF;AAAA,MAEEC,CAAC,GAAG,CAACL,GAAG,GAAGE,GAAP,IAAc,CAFpB;;AAIA,MAAIF,GAAG,IAAIE,GAAX,EAAgB;AACdC,IAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR,CADc,CACH;AACZ,GAFD,MAEO;AACL,QAAIE,CAAC,GAAGN,GAAG,GAAGE,GAAd;AACAE,IAAAA,CAAC,GAAGC,CAAC,GAAG,GAAJ,GAAUC,CAAC,IAAI,IAAIN,GAAJ,GAAUE,GAAd,CAAX,GAAgCI,CAAC,IAAIN,GAAG,GAAGE,GAAV,CAArC;;AACA,YAAQF,GAAR;AACE,WAAKJ,CAAL;AACEO,QAAAA,CAAC,GAAG,CAACN,CAAC,GAAGC,CAAL,IAAUQ,CAAV,IAAeT,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAA3B,CAAJ;AACA;;AACF,WAAKD,CAAL;AACEM,QAAAA,CAAC,GAAG,CAACL,CAAC,GAAGF,CAAL,IAAUU,CAAV,GAAc,CAAlB;AACA;;AACF,WAAKR,CAAL;AACEK,QAAAA,CAAC,GAAG,CAACP,CAAC,GAAGC,CAAL,IAAUS,CAAV,GAAc,CAAlB;AACA;AATJ;;AAWAH,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAO;AACLA,IAAAA,CAAC,EAAEF,IAAI,CAACM,KAAL,CAAWJ,CAAC,GAAG,GAAf,CADE;AAELC,IAAAA,CAAC,EAAEH,IAAI,CAACM,KAAL,CAAWH,CAAC,GAAG,GAAf,CAFE;AAGLC,IAAAA,CAAC,EAAEJ,IAAI,CAACM,KAAL,CAAWF,CAAC,GAAG,GAAf;AAHE,GAAP;AAKD",
    "sourcesContent": [
        "/**\n * @name                  rgba2hsl\n * @namespace           sugar.js.color\n * @type                  Function\n *\n * RGBA to HSL\n *\n * @param       \t{Number|Object}        \tr \t        \tThe red value between 0-255 or an object representing r, b, g, a\n * @param       \t{Number}        \tg \t        \tThe green value between 0-255\n * @param       \t{Number}        \tb \t        \tThe blue value between 0-255\n * @param       \t{Number}        \ta \t        \tThe alpha value between 0-100|0-1\n * @return \t      {object} \t\t                    \tThe hsl object representation\n *\n * @example         js\n * import rgba2hsl from '@coffeekraken/sugar/js/color/rgba2hsl';\n * rgba2hsl(10,20,50,10);\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function rgba2hsl(r, g, b, a = 1) {\n  if (typeof r === 'object') {\n    g = r.g;\n    b = r.b;\n    a = r.a;\n    r = r.r;\n  }\n\n  (r /= 255), (g /= 255), (b /= 255);\n  let max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  let h,\n    s,\n    l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: Math.floor(h * 360),\n    s: Math.floor(s * 100),\n    l: Math.floor(l * 100)\n  };\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "constrain.js"
    ],
    "names": [
        "constrain",
        "value",
        "min",
        "max"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAAsCC,GAAtC,EAAkD;AAAA,MAAxBD,GAAwB;AAAxBA,IAAAA,GAAwB,GAAlB,IAAkB;AAAA;;AAAA,MAAZC,GAAY;AAAZA,IAAAA,GAAY,GAAN,IAAM;AAAA;;AAC/D,MAAID,GAAG,KAAK,IAAR,IAAgBD,KAAK,GAAGC,GAA5B,EAAiCD,KAAK,GAAGC,GAAR;AACjC,MAAIC,GAAG,KAAK,IAAR,IAAgBF,KAAK,GAAGE,GAA5B,EAAiCF,KAAK,GAAGE,GAAR;AACjC,SAAOF,KAAP;AACD",
    "sourcesContent": [
        "/**\n * @name        constrain\n * @namespace           sugar.js.number\n * @type      Function\n *\n * Constrain a value between a min and a max value\n *\n * @param    {Number}    value    The value to constraint\n * @param    {Number}    [min=null]    The min value possible\n * @param    {Number}    [max=null]    The max value possible\n * @return    {Number}    The constrained value\n *\n * @example    js\n * import constrain from '@coffeekraken/sugar/js/numbers/constrain'\n * constrain(100, 0, 50) // 50\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function constrain(value, min = null, max = null) {\n  if (min !== null && value < min) value = min;\n  if (max !== null && value > max) value = max;\n  return value;\n}\n"
    ]
}
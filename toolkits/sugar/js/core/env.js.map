{
    "version": 3,
    "sources": [
        "env.js"
    ],
    "names": [
        "env",
        "dotPath",
        "value",
        "window",
        "process",
        "targetObj",
        "global",
        "toUpperCase",
        "undefined"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,GAAT,CAAaC,OAAb,EAAsBC,KAAtB,EAA6B;AAC1C,MAAI,CAAC,oBAAL,EAAiB;AACf,QAAI,CAACC,MAAM,CAACC,OAAZ,EAAqBD,MAAM,CAACC,OAAP,GAAiB,EAAjB;AACrB,QAAI,CAACD,MAAM,CAACC,OAAP,CAAeJ,GAApB,EAAyBG,MAAM,CAACC,OAAP,CAAeJ,GAAf,GAAqB,EAArB;AAC1B;;AACD,MAAMK,SAAS,GAAG,uBAAaC,MAAM,CAACF,OAAP,CAAeJ,GAA5B,GAAkCG,MAAM,CAACC,OAAP,CAAeJ,GAAnE;;AAEA,MAAIE,KAAK,KAAK,IAAd,EAAoB;AAClB;AACA,yBAASG,SAAT,EAAoBJ,OAAO,CAACM,WAAR,EAApB;AACD,GAHD,MAGO,IAAIL,KAAK,KAAKM,SAAd,EAAyB;AAC9B,sBAAMH,SAAN,EAAiBJ,OAAO,CAACM,WAAR,EAAjB,EAAwC,oBAAQL,KAAR,CAAxC;AACD,GAZyC,CAa1C;;;AACA,SAAO,oBAAQ,kBAAMG,SAAN,EAAiBJ,OAAO,CAACM,WAAR,EAAjB,CAAR,CAAP;AACD",
    "sourcesContent": [
        "import __isNode from '../is/node';\nimport __get from '../object/get';\nimport __set from '../object/set';\nimport __delete from '../object/delete';\nimport __parse from '../string/parse';\n\n/**\n * @name                    env\n * @namespace           sugar.js.core\n * @type                    Function\n *\n * This function allows you to access environment variables through the same method in node and javascript\n *\n * @param           {String}          dotPath         The dot path (something.else) to tell which variable you want\n * @param           {Mixed}           [value=null]    The value you want to assign. If null, you will just get the wanted variable back\n * @return          {Mixed}                           The variable value\n *\n * @example         js\n * import env from '@coffeekraken/sugar/js/dev/env';\n * console.log(env('node_env')); // => production\n * env('something.cool', { hello: 'world' });\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function env(dotPath, value) {\n  if (!__isNode()) {\n    if (!window.process) window.process = {};\n    if (!window.process.env) window.process.env = {};\n  }\n  const targetObj = __isNode() ? global.process.env : window.process.env;\n\n  if (value === null) {\n    // delete the variable\n    __delete(targetObj, dotPath.toUpperCase());\n  } else if (value !== undefined) {\n    __set(targetObj, dotPath.toUpperCase(), __parse(value));\n  }\n  // return the variable value\n  return __parse(__get(targetObj, dotPath.toUpperCase()));\n}\n"
    ]
}
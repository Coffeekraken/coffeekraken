{
    "version": 3,
    "sources": [
        "detectInOutDirection.js"
    ],
    "names": [
        "detectInOutDirection",
        "$elm",
        "mouseEnterHandler",
        "mouseLeaveHandler",
        "promise",
        "__SPromise",
        "resolve",
        "reject",
        "trigger",
        "cancel",
        "e",
        "direction",
        "action",
        "addEventListener",
        "on",
        "removeEventListener",
        "oldX",
        "oldY",
        "threshold",
        "document",
        "calculateDirection",
        "directionX",
        "directionY",
        "diffX",
        "diffY",
        "pageX",
        "pageY"
    ],
    "mappings": "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",
    "sourcesContent": [
        "import __SPromise from '../promise/SPromise';\n\n/**\n * @name      detectInOutDirection\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Detect the mouse direction when entered on the passed element. The direction can be up, down, left or right and will be passed to the two callbacks available.\n * The first one is the `onIn` callback, and the second one is the `onOut`.\n *\n * @param    {HTMLElement}    $elm    The element to listen for mouseover and mouseout on\n * @param    {Function}    onIn    The onIn callback. The direction and the $elm will be passed to it\n * @param    {Function}    onOut    The onOut callback. The direction and the $elm will be passed to it\n * @return    {HTMLElement}    The $elm to maintain chainability\n *\n * @example     js\n * import detectInOutDirection from '@coffeekraken/sugar/js/dom/detectInOutDirection'\n * const detect = detectInOutDirection(myElm).in(direction => {\n *    // do something...\n * }).out(direction => {\n *    // do something...\n * }).then(value => {\n *    // do something\n *    console.log(value); // => { action: 'in', direction: 'up' };\n * });\n *\n * // cancel the detection process\n * detect.cancel();\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function detectInOutDirection($elm) {\n  let mouseEnterHandler, mouseLeaveHandler;\n\n  const promise = new __SPromise((resolve, reject, trigger, cancel) => {\n    mouseEnterHandler = (e) => {\n      trigger('in', direction);\n      trigger('then', {\n        action: 'in',\n        direction\n      });\n    };\n    mouseLeaveHandler = (e) => {\n      trigger('out', direction);\n      trigger('then', {\n        action: 'out',\n        direction\n      });\n    };\n    // detect when mouseenter/leave the element\n    $elm.addEventListener('mouseenter', mouseEnterHandler);\n    $elm.addEventListener('mouseleave', mouseLeaveHandler);\n  }).on('finally', () => {\n    $elm.removeEventListener('mouseenter', mouseEnterHandler);\n    $elm.removeEventListener('mouseleave', mouseLeaveHandler);\n  });\n  return promise;\n}\n\nlet oldX = 0,\n  oldY = 0,\n  threshold = 0,\n  direction = null;\ndocument.addEventListener('mousemove', (e) => {\n  calculateDirection(e);\n});\ndocument.addEventListener('touchstart', (e) => {\n  calculateDirection(e);\n});\nfunction calculateDirection(e) {\n  let directionX = 0,\n    directionY = 0,\n    diffX = 0,\n    diffY = 0;\n  if (e.pageX < oldX - threshold) {\n    directionX = 'left';\n    diffX = oldX - e.pageX;\n    oldX = e.pageX;\n  } else if (e.pageX > oldX + threshold) {\n    directionX = 'right';\n    diffX = e.pageX - oldX;\n    oldX = e.pageX;\n  }\n  if (e.pageY < oldY - threshold) {\n    directionY = 'up';\n    diffY = oldY - e.pageY;\n    oldY = e.pageY;\n  } else if (e.pageY > oldY + threshold) {\n    directionY = 'down';\n    diffY = e.pageY - oldY;\n    oldY = e.pageY;\n  }\n  if (directionX && directionY) {\n    direction = diffX > diffY ? directionX : directionY;\n  } else if (directionX) {\n    direction = directionX;\n  } else if (directionY) {\n    direction = directionY;\n  } else {\n    direction = null;\n  }\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "dispatchEvent.test.js"
    ],
    "names": [
        "describe",
        "document",
        "body",
        "innerHTML",
        "$elm",
        "querySelector",
        "isDetected",
        "addEventListener",
        "e",
        "detail",
        "custom",
        "it",
        "expect",
        "toBe"
    ],
    "mappings": ";;AAAA;;;;AAEAA,QAAQ,CAAC,4BAAD,EAA+B,MAAM;AAE3CC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd;AAIA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAb;AAEA,MAAIC,UAAU,GAAG,KAAjB;AAEAF,EAAAA,IAAI,CAACG,gBAAL,CAAsB,MAAtB,EAA8BC,CAAC,IAAI;AACjC,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,MAAd,EAAsB;AACtBJ,IAAAA,UAAU,GAAG,IAAb;AACD,GAHD;AAKA,8BAAgBF,IAAhB,EAAsB,MAAtB,EAA8B;AAC5BM,IAAAA,MAAM,EAAE;AADoB,GAA9B;AAIAC,EAAAA,EAAE,CAAC,qEAAD,EAAwE,MAAM;AAC9EC,IAAAA,MAAM,CAACN,UAAD,CAAN,CAAmBO,IAAnB,CAAwB,IAAxB;AACD,GAFC,CAAF;AAID,CAvBO,CAAR",
    "sourcesContent": [
        "import __dispatchEvent from '../dispatchEvent';\n\ndescribe('sugar.js.dom.dispatchEvent', () => {\n\n  document.body.innerHTML = `\n      <div id=\"testing\">\n      </div>\n  `;\n  const $elm = document.querySelector('#testing');\n\n  let isDetected = false;\n\n  $elm.addEventListener('coco', e => {\n    if (!e.detail.custom) return;\n    isDetected = true;\n  });\n\n  __dispatchEvent($elm, 'coco', {\n    custom: true\n  });\n\n  it('Should detect the dispatched custom event with custom data attached', () => {\n    expect(isDetected).toBe(true);\n  });\n\n});"
    ]
}
{
    "version": 3,
    "sources": [
        "author.js"
    ],
    "names": [
        "author",
        "data",
        "authorNfo",
        "exec",
        "value",
        "name",
        "email",
        "url"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;AAae,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACnC,MAAMC,SAAS,GAAG,8DAA8DC,IAA9D,CAChBF,IAAI,CAACG,KADW,CAAlB;AAGA,MAAI,CAACF,SAAL,EAAgB,OAAO,IAAP;AAEhB,SAAO;AACLG,IAAAA,IAAI,EAAEH,SAAS,CAAC,CAAD,CADV;AAELI,IAAAA,KAAK,EAAEJ,SAAS,CAAC,CAAD,CAFX;AAGLK,IAAAA,GAAG,EAAEL,SAAS,CAAC,CAAD;AAHT,GAAP;AAKD",
    "sourcesContent": [
        "/**\n * @name              author\n * @namespace           sugar.js.docblock.tags\n * @type              Function\n *\n * Parse the author tag\n *\n * @param       {Object}          data        The data object parsed in the string\n * @return      {Object}                      The formated object\n *\n * @since       2.0.0\n * @author \tOlivier Bossel <olivier.bossel@gmail.com>\n */\nexport default function author(data) {\n  const authorNfo = /^([^<(]+?)?[ \\t]*(?:<([^>(]+?)>)?[ \\t]*(?:\\(([^)]+?)\\)|$)/gm.exec(\n    data.value\n  );\n  if (!authorNfo) return null;\n\n  return {\n    name: authorNfo[1],\n    email: authorNfo[2],\n    url: authorNfo[3]\n  };\n}\n"
    ]
}
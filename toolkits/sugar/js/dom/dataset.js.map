{
    "version": 3,
    "sources": [
        "dataset.js"
    ],
    "names": [
        "dataset",
        "$elm",
        "key",
        "value",
        "getAttribute",
        "v",
        "setAttribute"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,KAA5B,EAA0C;AAAA,MAAdA,KAAc;AAAdA,IAAAA,KAAc,GAAN,IAAM;AAAA;;AACvD,MAAI,CAACF,IAAI,CAACG,YAAV,EAAwB;;AACxB,MAAI,CAACD,KAAL,EAAY;AACV,QAAME,CAAC,GACLJ,IAAI,CAACD,OAAL,CAAaE,GAAb,KAAqBD,IAAI,CAACG,YAAL,CAAkB,UAAU,yBAAaF,GAAb,CAA5B,CADvB;AAEA,WAAO,uBAAWG,CAAX,CAAP;AACD,GAJD,MAIO;AACL;AACA,QAAIL,QAAO,GAAGC,IAAI,CAACD,OAAnB;;AACA,QAAIA,QAAJ,EAAa;AACXC,MAAAA,IAAI,CAACD,OAAL,CAAaE,GAAb,IAAoB,uBAAWC,KAAX,CAApB;AACD,KAFD,MAEO;AACL;AACA;AACAF,MAAAA,IAAI,CAACK,YAAL,CAAkB,UAAU,yBAAaJ,GAAb,CAA5B,EAA+C,uBAAWC,KAAX,CAA/C;AACD,KATI,CAUL;;;AACA,WAAOF,IAAP;AACD;AACF",
    "sourcesContent": [
        "import __uncamelize from '../string/uncamelize';\nimport __autoCast from '../string/autoCast';\nimport __toString from '../string/toString';\n\n/**\n * @name      dataset\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Get or set a value on the passed element with the passed name\n *\n * @param       {HTMLElement}       $elm         The HTMLElement on which to set to value\n * @param       {String}            key         The key to set the data\n * @param       {Mixed}             [value=null]  The value to set\n * @return      {Mixed}                         Return the value wanted or setted\n *\n * @example     js\n * import dataset from '@coffeekraken/sugar/js/dom/dataset';\n * dataset(myCoolElement, 'hello', 'world'); // => 'world';\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function dataset($elm, key, value = null) {\n  if (!$elm.getAttribute) return;\n  if (!value) {\n    const v =\n      $elm.dataset[key] || $elm.getAttribute('data-' + __uncamelize(key));\n    return __autoCast(v);\n  } else {\n    // try to set the value\n    let dataset = $elm.dataset;\n    if (dataset) {\n      $elm.dataset[key] = __toString(value);\n    } else {\n      // set the data through setAttribute\n      // cause no support for dataset\n      $elm.setAttribute('data-' + __uncamelize(key), __toString(value));\n    }\n    // return the element\n    return $elm;\n  }\n}\n"
    ]
}
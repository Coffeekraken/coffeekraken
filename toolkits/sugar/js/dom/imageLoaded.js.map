{
    "version": 3,
    "sources": [
        "imageLoaded.js"
    ],
    "names": [
        "imageLoaded",
        "$img",
        "callback",
        "imgLoadedHandler",
        "imgErrorHandler",
        "__SPromise",
        "resolve",
        "reject",
        "trigger",
        "cancel",
        "hasAttribute",
        "complete",
        "e",
        "addEventListener",
        "id",
        "on",
        "removeEventListener"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBe,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAA4C;AAAA,MAAjBA,QAAiB;AAAjBA,IAAAA,QAAiB,GAAN,IAAM;AAAA;;AACzD,MAAIC,gBAAJ,EAAsBC,eAAtB;AAEA,SAAO,IAAIC,iBAAJ,CACL,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,MAA3B,KAAsC;AACpC;AACA,QAAIR,IAAI,CAACS,YAAL,CAAkB,KAAlB,KAA4BT,IAAI,CAACU,QAArC,EAA+C;AAC7C;AACAL,MAAAA,OAAO,CAACL,IAAD,CAAP,CAF6C,CAG7C;;AACAC,MAAAA,QAAQ,IAAIA,QAAQ,CAACD,IAAD,CAApB;AACD,KALD,MAKO;AACL;AACAE,MAAAA,gBAAgB,GAAIS,CAAD,IAAO;AACxB;AACAN,QAAAA,OAAO,CAACL,IAAD,CAAP,CAFwB,CAGxB;;AACAC,QAAAA,QAAQ,IAAIA,QAAQ,CAACD,IAAD,CAApB;AACD,OALD;;AAMAA,MAAAA,IAAI,CAACY,gBAAL,CAAsB,MAAtB,EAA8BV,gBAA9B,EARK,CASL;;AACAC,MAAAA,eAAe,GAAIQ,CAAD,IAAO;AACvB;AACAL,QAAAA,MAAM,CAACK,CAAD,CAAN;AACD,OAHD;;AAIAX,MAAAA,IAAI,CAACY,gBAAL,CAAsB,OAAtB,EAA+BT,eAA/B;AACD;AACF,GAxBI,EAyBL;AACEU,IAAAA,EAAE,EAAE;AADN,GAzBK,EA4BLC,EA5BK,CA4BF,SA5BE,EA4BS,MAAM;AACpBZ,IAAAA,gBAAgB,IAAIF,IAAI,CAACe,mBAAL,CAAyB,MAAzB,EAAiCb,gBAAjC,CAApB;AACAC,IAAAA,eAAe,IAAIH,IAAI,CAACe,mBAAL,CAAyB,OAAzB,EAAkCZ,eAAlC,CAAnB;AACD,GA/BM,CAAP;AAgCD",
    "sourcesContent": [
        "import __SPromise from '../promise/SPromise';\n\n/**\n * @name      imageLoaded\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Wait until the passed image is fully loaded\n *\n * @param \t\t{HTMLImageElement} \t\t\t$img  \t\tThe image to check the loading state\n * @param \t\t{Function}\t\t\t\t\t[cb=null] \tAn optional callback to call\n * @return \t\t{SPromise} \t\t\t\t\t\t\t\tThe promise that will be resolved when all the images are correctly loaded\n *\n * @example  \tjs\n * import imageLoaded from '@coffeekraken/sugar/js/dom/imageLoaded'\n * imageLoaded(myCoolHTMLImageElement).then(($img) => {\n * \t\t// do something when the image is loaded\n * });\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function imageLoaded($img, callback = null) {\n  let imgLoadedHandler, imgErrorHandler;\n\n  return new __SPromise(\n    (resolve, reject, trigger, cancel) => {\n      // check if image is already loaded\n      if ($img.hasAttribute('src') && $img.complete) {\n        // resolve promise\n        resolve($img);\n        // call the callback if exist\n        callback && callback($img);\n      } else {\n        // wait until loaded\n        imgLoadedHandler = (e) => {\n          // resolve the promise\n          resolve($img);\n          // callback if exist\n          callback && callback($img);\n        };\n        $img.addEventListener('load', imgLoadedHandler);\n        // listen for error\n        imgErrorHandler = (e) => {\n          // reject\n          reject(e);\n        };\n        $img.addEventListener('error', imgErrorHandler);\n      }\n    },\n    {\n      id: 'imageLoaded'\n    }\n  ).on('finally', () => {\n    imgLoadedHandler && $img.removeEventListener('load', imgLoadedHandler);\n    imgErrorHandler && $img.removeEventListener('error', imgErrorHandler);\n  });\n}\n"
    ]
}
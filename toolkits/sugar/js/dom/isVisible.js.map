{
    "version": 3,
    "sources": [
        "isVisible.js"
    ],
    "names": [
        "isVisible",
        "elm",
        "nodeName",
        "toLowerCase",
        "style",
        "window",
        "getComputedStyle",
        "opacity",
        "visibility",
        "display",
        "__isVisible"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;AAmBe,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACrC;AACA,MAAIA,GAAG,CAACC,QAAJ,CAAaC,WAAb,OAA+B,QAAnC,EAA6C,OAAO,IAAP,CAFR,CAIrC;;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,GAAxB,EAA6B,IAA7B,CAAd;AAAA,MACEM,OAAO,GAAGH,KAAK,CAAC,SAAD,CADjB;AAAA,MAEEI,UAAU,GAAGJ,KAAK,CAAC,YAAD,CAFpB;AAAA,MAGEK,OAAO,GAAGL,KAAK,CAAC,SAAD,CAHjB;AAIA,SAAO,QAAQG,OAAR,IAAmB,WAAWE,OAA9B,IAAyC,aAAaD,UAA7D;AACD;;AACDH,MAAM,CAACK,WAAP,GAAqBV,SAArB",
    "sourcesContent": [
        "/**\n * @name      isVisible\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Check if the passed HTMLElement is visible or not.\n * Visible mean that it has not an opacity of 0, not a visibility of hidden and not a display of none\n *\n * @param \t\t{HTMLElement} \t\t\t\telm  \t\tThe element to check\n * @return \t\t{Boolean}\t\t\t\t\t\t\t\tIf the element is visible or not\n *\n * @example  \tjs\n * import isVisible from '@coffeekraken/sugar/js/dom/isVisible'\n * if (isVisible(myCoolHTMLElement) {\n * \t\t// i'm visible\n * }\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function isVisible(elm) {\n  // assume that the script tag is always visible\n  if (elm.nodeName.toLowerCase() === 'script') return true;\n\n  // get style\n  const style = window.getComputedStyle(elm, null),\n    opacity = style['opacity'],\n    visibility = style['visibility'],\n    display = style['display'];\n  return '0' !== opacity && 'none' !== display && 'hidden' !== visibility;\n}\nwindow.__isVisible = isVisible;\n"
    ]
}
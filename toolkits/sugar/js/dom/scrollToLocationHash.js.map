{
    "version": 3,
    "sources": [
        "scrollToLocationHash.js"
    ],
    "names": [
        "scrollToLocationHash",
        "duration",
        "offset",
        "easing",
        "__easeing",
        "hash",
        "document",
        "location",
        "targetElm",
        "querySelector",
        "history",
        "scrollRestoration"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,oBAAT,CACbC,QADa,EAEbC,MAFa,EAGbC,MAHa,EAIb;AAAA,MAHAF,QAGA;AAHAA,IAAAA,QAGA,GAHW,GAGX;AAAA;;AAAA,MAFAC,MAEA;AAFAA,IAAAA,MAEA,GAFS,CAET;AAAA;;AAAA,MADAC,MACA;AADAA,IAAAA,MACA,GADSC,uBACT;AAAA;;AACA;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,QAAT,CAAkBF,IAA/B,CAFA,CAIA;;AACA,MAAI,CAACA,IAAL,EAAW,OALX,CAOA;;AACA,MAAMG,SAAS,GAAGF,QAAQ,CAACG,aAAT,CAAuBJ,IAAvB,CAAlB,CARA,CAUA;;AACA,MAAI,CAACG,SAAL,EAAgB,OAXhB,CAaA;;AACA,MAAI,uBAAuBE,OAA3B,EAAoC;AAClCA,IAAAA,OAAO,CAACC,iBAAR,GAA4B,QAA5B;AACD,GAhBD,CAkBA;;;AACA,yBAAWH,SAAX,EAAsBP,QAAtB,EAAgCE,MAAhC,EAAwCD,MAAxC,EAAgD,KAAhD;AACD",
    "sourcesContent": [
        "import __scrollTo from './scrollTo';\nimport __easeing from '../easing/easeInOutQuint';\n\n/**\n * @name      scrollToLocationHash\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Scroll to the location hash if an hash is present.\n * This function will try to get the target element from the hash and scroll to it\n *\n * @param    {Integer}    [duration=500]    The scroll duration\n * @param    {Integer}    [offset=0]    A pixel value to offset the scroll with\n * @param    {Function}    [easing=__easeing]    An easing function to use to scroll\n *\n * @example \tjs\n * import __scrollToLocationHash from '@coffeekraken/sugar/js/dom/scrollToLocationHash'\n * __scrollToLocationHash(500, 0)\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com) (https://olivierbossel.com)\n */\nexport default function scrollToLocationHash(\n  duration = 500,\n  offset = 0,\n  easing = __easeing\n) {\n  // check if we have an hash in the url\n  const hash = document.location.hash;\n\n  // if not, do nothing\n  if (!hash) return;\n\n  // try to get the hash target in the page\n  const targetElm = document.querySelector(hash);\n\n  // if no target found, do nothing\n  if (!targetElm) return;\n\n  // tell the browser that we handle the scroll restoration manually\n  if ('scrollRestoration' in history) {\n    history.scrollRestoration = 'manual';\n  }\n\n  // scroll to target\n  __scrollTo(targetElm, duration, easing, offset, 'top');\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "styleObject2String.js"
    ],
    "names": [
        "styleObject2String",
        "styleObj",
        "propertiesArray",
        "key",
        "value",
        "undefined",
        "push",
        "join"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBe,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AACnD;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAIC,GAAT,IAAgBF,QAAhB,EAA0B;AACxB,QAAMG,KAAK,GAAGH,QAAQ,CAACE,GAAD,CAAtB,CADwB,CAExB;AACA;;AACA,QAAIC,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,EAArC,EAAyC;AACvC,aAAOH,QAAQ,CAACE,GAAD,CAAf;AACD,KAFD,MAEO;AACLD,MAAAA,eAAe,CAACI,IAAhB,WAAwB,yBAAaH,GAAb,CAAxB,cAA6CC,KAA7C;AACD;AACF,GAZkD,CAanD;;;AACA,SAAOF,eAAe,CAACK,IAAhB,CAAqB,GAArB,CAAP;AACD",
    "sourcesContent": [
        "import __uncamelize from '../string/uncamelize';\n\n/**\n * @name      styleObject2String\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Transform a style object to inline string separated by ;\n *\n * @param \t\t{Object} \t\t\t\tstyleObj \t\tAn object of style to apply\n * @return \t\t(String) \t\t\t\t\t\t\t\tThe string style representation\n *\n * @example \tjs\n * import styleObject2String from '@coffeekraken/sugar/js/dom/styleObject2String'\n * const styleString = styleObject2String({\n * \t\tpaddingLeft : '20px',\n * \t\tdisplay : 'block'\n * });\n * // output => padding-left:20px; display:block;\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function styleObject2String(styleObj) {\n  // process the style object\n  let propertiesArray = [];\n  for (let key in styleObj) {\n    const value = styleObj[key];\n    // if the value is ''\n    // mean that we need to get rid of\n    if (value === undefined || value === '') {\n      delete styleObj[key];\n    } else {\n      propertiesArray.push(`${__uncamelize(key)}:${value};`);\n    }\n  }\n  // return the css text\n  return propertiesArray.join(' ');\n}\n"
    ]
}
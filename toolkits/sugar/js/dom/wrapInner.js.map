{
    "version": 3,
    "sources": [
        "wrapInner.js"
    ],
    "names": [
        "wrapInner",
        "$parent",
        "$wrapper",
        "document",
        "createElement",
        "appendChild",
        "firstChild"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Be,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsC;AACnD,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,IAAAA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuBF,QAAvB,CAAX;AACD;;AACDD,EAAAA,OAAO,CAACI,WAAR,CAAoBH,QAApB;;AACA,SAAOD,OAAO,CAACK,UAAR,KAAuBJ,QAA9B,EAAwC;AACtCA,IAAAA,QAAQ,CAACG,WAAT,CAAqBJ,OAAO,CAACK,UAA7B;AACD;AACF",
    "sourcesContent": [
        "/**\n * @name      wrapInner\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Wrap the content of the passed `$parent` inside a the passed HTMLElement `$wrapper`\n *\n * @param    {HTMLElement}    $parent    The parent to wrap inner\n * @param    {HTMLElement}    $wrapper    The wrapper element\n *\n * @example    js\n * import wrapInner from '@coffeekraken/sugar/js/dom/wrapInner'\n * const $myWrapper = document.createElement('div')\n * // assuming\n * // <div class=\"container\">\n * //   <span>Hello World</span>\n * // </div>\n * wrapInner(document.querySelector('.container'), $myWrapper)\n * // return\n * // <div class=\"container\">\n * //   <div>\n * //     <span>Hello World</span>\n * //   </div>\n * // </div>\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel@gmail.com)\n */\nexport default function wrapInner($parent, $wrapper) {\n  if (typeof $wrapper === 'string') {\n    $wrapper = document.createElement($wrapper);\n  }\n  $parent.appendChild($wrapper);\n  while ($parent.firstChild !== $wrapper) {\n    $wrapper.appendChild($parent.firstChild);\n  }\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "on.js"
    ],
    "names": [
        "__SPromise",
        "require",
        "module",
        "exports",
        "on",
        "name",
        "callback",
        "global",
        "_sugarEventSPromise",
        "id",
        "off"
    ],
    "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBAC,MAAM,CAACC,OAAP,GAAiB,SAASC,EAAT,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAC3C;AACA,MAAI,CAACC,MAAM,CAACC,mBAAZ,EACED,MAAM,CAACC,mBAAP,GAA6B,IAAIR,UAAJ,CAAe;AAC1CS,IAAAA,EAAE,EAAE;AADsC,GAAf,CAA7B,CAHyC,CAM3C;;AACAF,EAAAA,MAAM,CAACC,mBAAP,CAA2BJ,EAA3B,CAA8BC,IAA9B,EAAoCC,QAApC,EAP2C,CAQ3C;;;AACA,SAAO,MAAM;AACXC,IAAAA,MAAM,CAACC,mBAAP,CAA2BE,GAA3B,CAA+BL,IAA/B,EAAqCC,QAArC;AACD,GAFD;AAGD,CAZD",
    "sourcesContent": [
        "const __SPromise = require('../promise/SPromise');\n\n/**\n * @name        on\n * @namespace           sugar.js.event\n * @type          Function\n *\n * This function allows you to subscribe to global events triggered by the \"sugar.js.event.dispatch\" function\n * It use under the hood an SPromise instance\n *\n * @param         {String}        name          The event name you want to subscribe to\n * @param         {Function}      callback      The callback function you want to call\n * @return        {Function}                    Return an \"unsubscribe\" function callable when you want to stop executing the callback\n *\n * @example       js\n * const on = require('@coffeekraken/sugar/js/event/on');\n * on('something', () => {\n *    // do something\n * });\n *\n * @since       2.0.0\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nmodule.exports = function on(name, callback) {\n  // check that the global SPromise exists\n  if (!global._sugarEventSPromise)\n    global._sugarEventSPromise = new __SPromise({\n      id: 'sugarEventSPromise'\n    });\n  // subscribe to the event\n  global._sugarEventSPromise.on(name, callback);\n  // return the unsubscribe function\n  return () => {\n    global._sugarEventSPromise.off(name, callback);\n  };\n};\n"
    ]
}
{
    "version": 3,
    "sources": [
        "filter.js"
    ],
    "names": [
        "filter",
        "object",
        "result",
        "Object",
        "keys",
        "forEach",
        "propertyName"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBe,SAASA,MAAT,CAAgBC,MAAhB,EAAwBD,MAAxB,EAAgC;AAC7C;AACA,MAAME,MAAM,GAAG,EAAf,CAF6C,CAI7C;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA6BC,YAAD,IAAkB;AAC5C;AACA,QAAIN,MAAM,CAACC,MAAM,CAACK,YAAD,CAAP,EAAuBA,YAAvB,CAAV,EAAgD;AAC9C;AACAJ,MAAAA,MAAM,CAACI,YAAD,CAAN,GAAuBL,MAAM,CAACK,YAAD,CAA7B;AACD;AACF,GAND,EAL6C,CAa7C;;AACA,SAAOJ,MAAP;AACD",
    "sourcesContent": [
        "/**\n * @name                        filter\n * @namespace           sugar.js.object\n * @type                        Function\n *\n * Allow to filter an object using a function. It works the same as the filter method on the Array object type.\n * The passed filter function will have as parameter each object properties and must return true or false depending if you want the\n * passed property in the filtered object\n *\n * @param               {Object}                object                The object to filter\n * @param               {Function}              filter                The filter function that take as parameter the property itself, and the property name\n * @return              {Object}Â                                      The filtered object\n *\n * @example           js\n * import filter from '@coffeekraken/sugar/js/object/filter';\n * filter({\n *    coco: 'hello',\n *    plop: true\n * }, (item, name) => typeof item === 'string');\n * // { coco: 'hello' }\n *\n * @author  Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function filter(object, filter) {\n  // init the new object to return\n  const result = {};\n\n  // loop on the object keys\n  Object.keys(object).forEach((propertyName) => {\n    // pass the property in the filter function\n    if (filter(object[propertyName], propertyName)) {\n      // add the property in the new object\n      result[propertyName] = object[propertyName];\n    }\n  });\n\n  // return the filtered object\n  return result;\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "SGooeySvgFilter.js"
    ],
    "names": [
        "SGooeySvgFilter",
        "amount",
        "parseInt",
        "_blur",
        "filter",
        "querySelector",
        "_color_matrix",
        "value",
        "setAttribute",
        "parseFloat",
        "getAttribute",
        "v",
        "split",
        "length",
        "join",
        "SSvgFilter"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;IAmBMA,e;;;;;AACJ;;;;;;;;;;AAUA,2BAAYC,MAAZ,EAAwB;AAAA;;AAAA,QAAZA,MAAY;AAAZA,MAAAA,MAAY,GAAH,CAAG;AAAA;;AAAA;;AACtB,oGACkDA,MADlD,qIAGIC,QAAQ,CAACD,MAAD,CAAR,GAAmB,CAHvB;AAOA,UAAKE,KAAL,GAAa,MAAKC,MAAL,CAAYC,aAAZ,CAA0B,gBAA1B,CAAb;AACA,UAAKC,aAAL,GAAqB,MAAKF,MAAL,CAAYC,aAAZ,CAA0B,eAA1B,CAArB;AATsB;AAUvB;AAED;;;;;;;;;;;;sBAQSE,K,EAAO;AACd,WAAKJ,KAAL,CAAWK,YAAX,CAAwB,cAAxB,EAAwCD,KAAxC;AACD,K;wBACU;AACT,aAAOE,UAAU,CAAC,KAAKN,KAAL,CAAWO,YAAX,CAAwB,cAAxB,CAAD,CAAjB;AACD;AAED;;;;;;;;;;;sBAQaH,K,EAAO;AAClB;AACA,UAAII,CAAC,GAAG,KAAKL,aAAL,CAAmBI,YAAnB,CAAgC,QAAhC,CAAR,CAFkB,CAGlB;;;AACAC,MAAAA,CAAC,GAAGA,CAAC,CAACC,KAAF,CAAQ,GAAR,CAAJ;AACAD,MAAAA,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,GAAkBN,KAAlB,CALkB,CAMlB;;AACA,WAAKD,aAAL,CAAmBE,YAAnB,CAAgC,QAAhC,EAA0CG,CAAC,CAACG,IAAF,CAAO,GAAP,CAA1C;AACD;AAED;;;;;;;;;;;sBAQWP,K,EAAO;AAChB;AACA,UAAII,CAAC,GAAG,KAAKL,aAAL,CAAmBI,YAAnB,CAAgC,QAAhC,CAAR,CAFgB,CAGhB;;;AACAC,MAAAA,CAAC,GAAGA,CAAC,CAACC,KAAF,CAAQ,GAAR,CAAJ;AACAD,MAAAA,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,GAAkBN,KAAlB,CALgB,CAMhB;;AACA,WAAKD,aAAL,CAAmBE,YAAnB,CAAgC,QAAhC,EAA0CG,CAAC,CAACG,IAAF,CAAO,GAAP,CAA1C;AACD;AAED;;;;;;;;;;;sBAQWP,K,EAAO;AAChB,WAAKJ,KAAL,CAAWK,YAAX,CAAwB,cAAxB,EAAwCD,KAAxC;;AACA,WAAKD,aAAL,CAAmBE,YAAnB,CACE,QADF,mDAE4CN,QAAQ,CAACK,KAAD,CAAR,GAAkB,CAF9D;AAID;;;;EAxF2BQ,oB,GA2F9B;;;eACef,e",
    "sourcesContent": [
        "import SSvgFilter from './SSvgFilter';\n\n// TODO tests\n\n/**\n * @name \t\t        SGooeySvgFilter\n * @namespace           sugar.js.filter\n * @type           Class\n * @extends       SSvgFilter\n *\n * This class represent a gooey SVG filter that can be applied on any HTMLElement.\n * Here's the values that you can control on it:\n * - blur: The amout of blur you want\n * - contrast: The amout of contrast you want\n * - shrink: The amount of shrink you want\n * - amout: The overall amount of effect you want\n *\n * @example \t\tjs\n * const filter = new SGooeySvgFilter();\n * filter.applyTo(myCoolHTMLElement);\n *\n * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nclass SGooeySvgFilter extends SSvgFilter {\n  /**\n   * @name              constructor\n   * @type              Function\n   *\n   * Constructor\n   *\n   * @param \t\t{Number} \t\t[amount=8] \t\tThe amount of effect to apply\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  constructor(amount = 8) {\n    super(`\n\t\t\t<feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"${amount}\" result=\"blur\" />\n\t\t\t<feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 ${\n        parseInt(amount) + 9\n      } -9\" result=\"gooey\" />\n\t\t\t<feComposite in=\"SourceGraphic\" in2=\"gooey\" operator=\"atop\"/>\n\t\t`);\n    this._blur = this.filter.querySelector('feGaussianBlur');\n    this._color_matrix = this.filter.querySelector('feColorMatrix');\n  }\n\n  /**\n   * @name                blur\n   * @type                Number\n   *\n   * Get/Set the blur amount to produce the effect\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  set blur(value) {\n    this._blur.setAttribute('stdDeviation', value);\n  }\n  get blur() {\n    return parseFloat(this._blur.getAttribute('stdDeviation'));\n  }\n\n  /**\n   * @name              contrast\n   * @type              Number\n   *\n   * Get the contrast amount to produce the effect\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  set contrast(value) {\n    // get value\n    let v = this._color_matrix.getAttribute('values');\n    // process\n    v = v.split(' ');\n    v[v.length - 2] = value;\n    // apply the new filter\n    this._color_matrix.setAttribute('values', v.join(' '));\n  }\n\n  /**\n   * @name            shrink\n   * @type            Number\n   *\n   * Get the shrink amount to produce the effect\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  set shrink(value) {\n    // get value\n    let v = this._color_matrix.getAttribute('values');\n    // process\n    v = v.split(' ');\n    v[v.length - 1] = value;\n    // apply the new filter\n    this._color_matrix.setAttribute('values', v.join(' '));\n  }\n\n  /**\n   * @name              amount\n   * @type              Number\n   *\n   * Set the overall amount of effect to produce\n   *\n   * @author \t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n   */\n  set amount(value) {\n    this._blur.setAttribute('stdDeviation', value);\n    this._color_matrix.setAttribute(\n      'values',\n      `1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 ${parseInt(value) + 9} -9`\n    );\n  }\n}\n\n// export modules\nexport default SGooeySvgFilter;\n"
    ]
}
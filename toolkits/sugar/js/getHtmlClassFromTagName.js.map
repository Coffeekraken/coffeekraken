{
    "version": 3,
    "sources": [
        "getHtmlClassFromTagName.js"
    ],
    "names": [
        "getHtmlClassFromTagName",
        "tagName",
        "HTMLElement",
        "tagNameUpperFirst",
        "window",
        "__htmlTagToHtmlClassMap"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,uBAAT,CAAiCC,OAAjC,EAA0C;AACvD,MAAI,CAACA,OAAL,EAAc,OAAOC,WAAP;AAEd,MAAMC,iBAAiB,GAAG,yBAAaF,OAAb,CAA1B;AACA,MAAIG,MAAM,eAAQD,iBAAR,aAAV,EACE,OAAOC,MAAM,eAAQD,iBAAR,aAAb;AAEF,MAAIE,+BAAwBJ,OAAxB,CAAJ,EAAsC,OAAOI,+BAAwBJ,OAAxB,CAAP;AAEtC,SAAOC,WAAP;AACD",
    "sourcesContent": [
        "import __upperFirst from '../string/upperFirst';\nimport __htmlTagToHtmlClassMap from './htmlTagToHtmlClassMap';\n\n/**\n * @name            getHtmlClassFromTagName\n * @namespace       sugar.js.html\n * @type            Function\n *\n * This function simply return the HTML{name}Element class depending on the passed\n * tag name like \"p\", \"input\", \"textarea\", etc...\n *\n * @param       {String}      tagName       The tagName to get the class for\n * @return      {HTMLElement}               The HTMLElement class that correspond to the requested tag name\n *\n * @example       js\n * import getHtmlClassFromTagName from '@coffeekraken/sugar/js/html/getHtmlClassFromTagName';\n * getHtmlClassFromTagName('a'); // => HTMLAnchorElement\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function getHtmlClassFromTagName(tagName) {\n  if (!tagName) return HTMLElement;\n\n  const tagNameUpperFirst = __upperFirst(tagName);\n  if (window[`HTML${tagNameUpperFirst}Element`])\n    return window[`HTML${tagNameUpperFirst}Element`];\n\n  if (__htmlTagToHtmlClassMap[tagName]) return __htmlTagToHtmlClassMap[tagName];\n\n  return HTMLElement;\n}\n"
    ]
}
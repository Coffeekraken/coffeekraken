{
    "version": 3,
    "sources": [
        "getTagNameFromHtmlClass.js"
    ],
    "names": [
        "getHtmlhtmlClassFromHtmlClass",
        "htmlClass",
        "key",
        "__htmlTagToHtmlClassMap"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,6BAAT,CAAuCC,SAAvC,EAAkD;AAC/D,MAAI,CAACA,SAAL,EAAgB,OAAO,KAAP;;AAEhB,OAAK,IAAIC,GAAT,IAAgBC,8BAAhB,EAAyC;AACvC,QAAIA,+BAAwBD,GAAxB,MAAiCD,SAArC,EAAgD,OAAOC,GAAP;AACjD;;AAED,SAAO,KAAP;AACD",
    "sourcesContent": [
        "import __upperFirst from '../string/upperFirst';\nimport __htmlTagToHtmlClassMap from './htmlTagToHtmlClassMap';\n\n/**\n * @name            getHtmlhtmlClassFromHtmlClass\n * @namespace       sugar.js.html\n * @type            Function\n *\n * This function simply return the tagname depending on the passed HTML class\n * like HTMLAnchorElement, HTMLLinkElement, etc...\n *\n * @param       {HTMLElement}      htmlClass       The htmlClass to get the tag for\n * @return      {String}               The tagname that correspond to the passed HTMLElement class\n *\n * @example       js\n * import getHtmlhtmlClassFromHtmlClass from '@coffeekraken/sugar/js/html/getHtmlhtmlClassFromHtmlClass';\n * getHtmlhtmlClassFromHtmlClass(HTMLAnchorElement); // => 'a'\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function getHtmlhtmlClassFromHtmlClass(htmlClass) {\n  if (!htmlClass) return false;\n\n  for (let key in __htmlTagToHtmlClassMap) {\n    if (__htmlTagToHtmlClassMap[key] === htmlClass) return key;\n  }\n\n  return false;\n}\n"
    ]
}
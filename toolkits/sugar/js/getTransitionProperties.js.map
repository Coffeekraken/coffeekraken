{
    "version": 3,
    "sources": [
        "getTransitionProperties.js"
    ],
    "names": [
        "splitIfNeeded",
        "what",
        "separator",
        "indexOf",
        "split",
        "map",
        "item",
        "trim",
        "getTransitionProperties",
        "elm",
        "property",
        "duration",
        "timingFunction",
        "delay",
        "props",
        "value",
        "totalDuration",
        "i",
        "delays",
        "concat",
        "forEach",
        "val"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,SAA7B,EAAwC;AACtC,MAAID,IAAI,CAACE,OAAL,CAAaD,SAAb,MAA4B,CAAC,CAAjC,EAAoC;AAClC,WAAOD,IAAI,CAACG,KAAL,CAAWF,SAAX,EAAsBG,GAAtB,CAA2BC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAApC,CAAP;AACD;;AACD,SAAO,CAACN,IAAD,CAAP;AACD;;AAEc,SAASO,uBAAT,CAAiCC,GAAjC,EAAsC;AACnD;AACA,MAAMC,QAAQ,GAAG,+BAAmBD,GAAnB,EAAwB,qBAAxB,CAAjB;AACA,MAAME,QAAQ,GAAG,+BAAmBF,GAAnB,EAAwB,qBAAxB,KAAkD,CAAnE;AACA,MAAMG,cAAc,GAAG,+BAAmBH,GAAnB,EAAwB,4BAAxB,CAAvB;AACA,MAAMI,KAAK,GAAG,+BAAmBJ,GAAnB,EAAwB,kBAAxB,CAAd,CALmD,CAOnD;;AACA,MAAMK,KAAK,GAAG;AACZJ,IAAAA,QAAQ,EAAEV,aAAa,CAACU,QAAD,EAAW,GAAX,CADX;AAEZC,IAAAA,QAAQ,EAAEX,aAAa,CAACW,QAAD,EAAW,GAAX,CAAb,CAA6BN,GAA7B,CAAkCU,KAAD,IACzC,sBAAUA,KAAV,EAAiB,IAAjB,CADQ,CAFE;AAKZF,IAAAA,KAAK,EAAEb,aAAa,CAACa,KAAD,EAAQ,GAAR,CAAb,CAA0BR,GAA1B,CAA+BU,KAAD,IAAW,sBAAUA,KAAV,EAAiB,IAAjB,CAAzC,CALK;AAMZH,IAAAA,cAAc,EAAEZ,aAAa,CAACY,cAAD,EAAiB,GAAjB;AANjB,GAAd;AAQA,MAAII,aAAa,GAAG,CAApB;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAIC,MAAJ,CAAWL,KAAK,CAACD,KAAjB,CAAf;AACA,GAAC,CAAD,EAAIM,MAAJ,CAAWL,KAAK,CAACH,QAAjB,EAA2BS,OAA3B,CAAoCC,GAAD,IAAS;AAC1C,QAAIA,GAAG,GAAGH,MAAM,CAACD,CAAD,CAAZ,GAAkBD,aAAtB,EAAqC;AACnCA,MAAAA,aAAa,GAAGK,GAAG,GAAGH,MAAM,CAACD,CAAD,CAA5B;AACD;;AACDA,IAAAA,CAAC;AACF,GALD;AAMAH,EAAAA,KAAK,CAACE,aAAN,GAAsBA,aAAtB;AACA,SAAOF,KAAP;AACD",
    "sourcesContent": [
        "import __getStyleProperty from './getStyleProperty';\nimport __convert from '../time/convert';\n\n// TODO tests\n\n/**\n * @name      getTransitionProperties\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Get the css transition properties from an HTMLElement in an object format\n *\n * @param \t\t{HTMLElement} \t\t\t\t\telm  \t\tThe element to get the properties from\n * @return \t\t{Object} \t\t\t\t\t\t\t\t\tThe animation properties\n *\n * @example  \tjs\n * import getTransitionProperties from '@coffeekraken/sugar/js/dom/getTransitionProperties'\n * const props = getTransitionProperties(myCoolHTMLElement);\n * // output format\n * // {\n * // \tproperty : ['all'],\n * // \tduration : [200],\n * // \tdelay : [0],\n * // \ttimingFunction : ['linear'],\n * // \ttotalDuration : 200\n * // }\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\n\nfunction splitIfNeeded(what, separator) {\n  if (what.indexOf(separator) !== -1) {\n    return what.split(separator).map((item) => item.trim());\n  }\n  return [what];\n}\n\nexport default function getTransitionProperties(elm) {\n  // get the transition properties\n  const property = __getStyleProperty(elm, 'transition-property');\n  const duration = __getStyleProperty(elm, 'transition-duration') || 0;\n  const timingFunction = __getStyleProperty(elm, 'transition-timing-function');\n  const delay = __getStyleProperty(elm, 'transition-delay');\n\n  // return the transition object\n  const props = {\n    property: splitIfNeeded(property, ','),\n    duration: splitIfNeeded(duration, ',').map((value) =>\n      __convert(value, 'ms')\n    ),\n    delay: splitIfNeeded(delay, ',').map((value) => __convert(value, 'ms')),\n    timingFunction: splitIfNeeded(timingFunction, ',')\n  };\n  let totalDuration = 0;\n  let i = 0;\n  const delays = [0].concat(props.delay);\n  [0].concat(props.duration).forEach((val) => {\n    if (val + delays[i] > totalDuration) {\n      totalDuration = val + delays[i];\n    }\n    i++;\n  });\n  props.totalDuration = totalDuration;\n  return props;\n}\n"
    ]
}
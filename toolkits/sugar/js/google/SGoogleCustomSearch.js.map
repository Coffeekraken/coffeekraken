{
    "version": 3,
    "sources": [
        "SGoogleCustomSearch.js"
    ],
    "names": [
        "SGoogleCustomSearch",
        "apiKey",
        "cx",
        "num",
        "page",
        "_apiKey",
        "_cx",
        "queryString",
        "key",
        "_settings",
        "substr",
        "_searchUrl",
        "keywords",
        "settings",
        "_keywords",
        "_page",
        "q",
        "start",
        "url",
        "_generateSearchUrl",
        "ajx",
        "__SRequest",
        "method",
        "send",
        "search"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BqBA,mB;AACnB;;;;;;;;;;AAWA;;;;;;;;;;AAWA;;;;;;;;;;;AAmCA;;;;;;;;;;AAWA;;;;;;;;;;AAWA;;;;;;;;;;AAWA;;;;;;;;;;;AAWA,+BAAYC,MAAZ,EAAoBC,EAApB,EAAwB;AAAA;;AAAA,qCA5Fd,IA4Fc;;AAAA,iCAjFlB,IAiFkB;;AAAA,uCArEZ;AACV;;;;;;;;;;AAUAC,MAAAA,GAAG,EAAE,EAXK;;AAaV;;;;;;;;;AASAC,MAAAA,IAAI,EAAE;AAtBI,KAqEY;;AAAA,wCAnCX,4CAmCW;;AAAA,mCAxBhB,CAwBgB;;AAAA,uCAbZ,IAaY;;AACtB;AACA,SAAKC,OAAL,GAAeJ,MAAf;AACA,SAAKK,GAAL,GAAWJ,EAAX;AACD;AAED;;;;;;;;;;;;;;;;yCAYqB;AACnB;AACA,UAAIK,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIC,GAAT,IAAgB,KAAKC,SAArB,EAAgC;AAC9BF,QAAAA,WAAW,eAAQC,GAAR,cAAe,KAAKC,SAAL,CAAeD,GAAf,CAAf,CAAX;AACD;;AACDD,MAAAA,WAAW,GAAGA,WAAW,CAACG,MAAZ,CAAmB,CAAnB,CAAd;AACAH,MAAAA,WAAW,cAAOA,WAAP,CAAX,CAPmB,CASnB;;AACA,aAAO,KAAKI,UAAL,GAAkBJ,WAAzB;AACD;AAED;;;;;;;;;;;;;;;iDAWaK,Q,EAAUC,Q,EAAe;AAAA,YAAfA,QAAe;AAAfA,UAAAA,QAAe,GAAJ,EAAI;AAAA;;AACpC;AACA,aAAKC,SAAL,GAAiBF,QAAjB,CAFoC,CAIpC;;AACA,aAAKG,KAAL,GAAaF,QAAQ,CAACT,IAAT,IAAiB,CAA9B,CALoC,CAOpC;;AACA,YAAMD,GAAG,GAAGU,QAAQ,CAACV,GAAT,IAAgB,EAA5B;AACA,aAAKM,SAAL;AACED,UAAAA,GAAG,EAAE,KAAKH,OADZ;AAEEH,UAAAA,EAAE,EAAE,KAAKI,GAFX;AAGEU,UAAAA,CAAC,EAAEJ,QAHL;AAIET,UAAAA,GAAG,EAAEA,GAJP;AAKEc,UAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,GAAa,CAAd,IAAmBZ,GAAnB,GAAyB;AALlC,WAMKU,QANL,EAToC,CAkBpC;;AACA,YAAMK,GAAG,GAAG,KAAKC,kBAAL,EAAZ,CAnBoC,CAqBpC;;;AACA,YAAMC,GAAG,GAAG,IAAIC,iBAAJ,CAAe;AACzBC,UAAAA,MAAM,EAAE,KADiB;AAEzBJ,UAAAA;AAFyB,SAAf,CAAZ,CAtBoC,CA2BpC;;AACA,eAAOE,GAAG,CAACG,IAAJ,EAAP;AACD,O;;;;;;;;AAED;;;;;;;;;;;;;;;kDAWa;AACX;AACA,eAAO,KAAKC,MAAL,CAAY,KAAKV,SAAjB,kCACF,KAAKL,SADH;AAELL,UAAAA,IAAI,EAAE,KAAKW,KAAL,GAAa;AAFd,WAAP;AAID,O;;;;;;;;AAED;;;;;;;;;;;;;;;qDAWiB;AACf;AACA,eAAO,KAAKS,MAAL,CAAY,KAAKV,SAAjB,kCACF,KAAKL,SADH;AAELL,UAAAA,IAAI,EAAE,KAAKW,KAAL,IAAc,KAAKA,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsB,CAApC;AAFD,WAAP;AAID,O",
    "sourcesContent": [
        "import __SRequest from '../http/SRequest';\n\n/**\n * @name \t\t                SGoogleCustomSearch\n * @namespace           sugar.js.google\n * @type                    Class\n *\n * This class let you make with ease search requests to the google custom search service\n * with useful features like:\n * - Simple pagination system\n * - Promise support\n *\n * @example \t            js\n * // create a google search instance\n * const googleSearch = new SGoogleCustomSearch('myApiKey', 'myCustomSearchContextKey');\n *\n * // make a search...\n * googleSearch.search('hello world').then((response) => {\n * \t\t// do something with the google response...\n * });\n *\n * // get the nexts results\n * googleSearch.next().then((response) => {\n * \t\t// do something with the new response...\n * });\n *\n * @see \t\thttps://developers.google.com/custom-search/\n * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n */\nexport default class SGoogleCustomSearch {\n  /**\n   * @name              _apiKey\n   * @type              String\n   * @private\n   *\n   * Store the api key used to reach the google services\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _apiKey = null;\n\n  /**\n   * @name              _cx\n   * @type              String\n   * @private\n   *\n   * Store the context key used to reach the good google search instance\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _cx = null;\n\n  /**\n   * @name              _settings\n   * @type              Object\n   * @private\n   *\n   * Store the actual query object to be able to call\n   * next page etc...\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _settings = {\n    /**\n     * @name              num\n     * @type              Number\n     * @default           10\n     *\n     * How many results by page wanted\n     * Can be between 1 and 10\n     *\n     * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n     */\n    num: 10,\n\n    /**\n     * @name                page\n     * @type                Number\n     * @default             1\n     *\n     * The page to request\n     *\n     * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n     */\n    page: 1\n  };\n\n  /**\n   * @name            _searchUrl\n   * @type            String\n   * @private\n   *\n   * Store the google search url\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _searchUrl = 'https://www.googleapis.com/customsearch/v1';\n\n  /**\n   * @name              _page\n   * @type              Number\n   * @private\n   *\n   * Store the current page\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _page = 1;\n\n  /**\n   * @name        _keywords\n   * @type        String\n   * @private\n   *\n   * The keywords searched\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _keywords = null;\n\n  /**\n   * @name                constructor\n   * @type                Function\n   *\n   * Constructor\n   *\n   * @param \t        {String} \t        apiKey \t\t          The google api key to reach the services\n   * @param \t        {String}        \tcx \t\t            \tThe google custom search context\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  constructor(apiKey, cx) {\n    // save the props\n    this._apiKey = apiKey;\n    this._cx = cx;\n  }\n\n  /**\n   * @name            _generateSearchUrl\n   * @type            Function\n   * @private\n   *\n   * Generate and return the correct search url depending on\n   * parameters like the current page, etc...\n   *\n   * @return \t{String} \tThe generated url\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  _generateSearchUrl() {\n    // construct url\n    let queryString = '';\n    for (let key in this._settings) {\n      queryString += `&${key}=${this._settings[key]}`;\n    }\n    queryString = queryString.substr(1);\n    queryString = `?${queryString}`;\n\n    // process the url\n    return this._searchUrl + queryString;\n  }\n\n  /**\n   * @name              search\n   * @type              Function\n   * @async\n   *\n   * Launch a search\n   *\n   * @param \t      {String} \t          keywords \t            The keywords to search\n   * @param       \t{Object} \t          settings            \tThe settings object\n   * @return      \t{Promise} \t\t                        \t\tA promise of results\n   */\n  async search(keywords, settings = {}) {\n    // save the keywords into the instance\n    this._keywords = keywords;\n\n    // reset the page count\n    this._page = settings.page || 1;\n\n    // construct query object\n    const num = settings.num || 10;\n    this._settings = {\n      key: this._apiKey,\n      cx: this._cx,\n      q: keywords,\n      num: num,\n      start: (this._page - 1) * num + 1,\n      ...settings\n    };\n\n    // get the url\n    const url = this._generateSearchUrl();\n\n    // process to the ajax query\n    const ajx = new __SRequest({\n      method: 'GET',\n      url\n    });\n\n    // launch the request end send back the promise\n    return ajx.send();\n  }\n\n  /**\n   * @name            next\n   * @type            Function\n   * @async\n   *\n   * Load the next page\n   *\n   * @return \t\t{Promise} \t\tThe promise of next page results\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  async next() {\n    // update the page count\n    return this.search(this._keywords, {\n      ...this._settings,\n      page: this._page + 1\n    });\n  }\n\n  /**\n   * @name            previous\n   * @type            Function\n   * @async\n   *\n   * Load the previous page\n   *\n   * @return \t\t{Promise} \t\tThe promise of previous page results\n   *\n   * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n   */\n  async previous() {\n    // update the page count\n    return this.search(this._keywords, {\n      ...this._settings,\n      page: this._page - (this._page <= 1 ? 0 : 1)\n    });\n  }\n}\n"
    ]
}
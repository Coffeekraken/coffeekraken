{
    "version": 3,
    "sources": [
        "hsl2rgba.js"
    ],
    "names": [
        "hsl2rgba",
        "h",
        "s",
        "l",
        "a",
        "parseFloat",
        "r",
        "g",
        "b",
        "hue2rgb",
        "p",
        "q",
        "t",
        "Math",
        "round"
    ],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @name              hsl2rgba\n * @namespace           sugar.js.color\n * @type              Function\n *\n * HSL to RGBA\n *\n * @param\t        {Number|Object}        \th\t\t        The hue value between 0-360 or an object representing h, s, l, (a)\n * @param\t        {Number}        \ts \t        \tThe saturation value between 0-100|0-1\n * @param\t        {Number}        \tl \t        \tThe luminence value between 0-100|0-1\n * @param\t        {Number}        \ta \t        \tThe alpha value between 0-100|0-1\n * @return \t      {object} \t\t                  \tThe rgba object representation\n *\n * @example         js\n * import hsl2rgba from '@coffeekraken/sugar/js/color/hsl2rgba';\n * hsl2rgba(10,20,30);\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function hsl2rgba(h, s, l, a = 1) {\n  if (typeof h === 'object') {\n    s = h.s;\n    l = h.l;\n    a = h.a;\n    h = h.h;\n  }\n\n  // manage arguments\n  h = parseFloat(h);\n  s = parseFloat(s);\n  l = parseFloat(l);\n  a = parseFloat(a);\n  if (h > 1) h = (1 / 360) * h;\n  if (s > 1) s = (1 / 100) * s;\n  if (l > 1) l = (1 / 100) * l;\n  if (a > 1) a = (1 / 100) * a;\n\n  let r, g, b;\n  if (s == 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    let p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n    a: a\n  };\n}\n"
    ]
}
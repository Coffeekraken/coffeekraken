{
    "version": 3,
    "sources": [
        "insertAfter.js"
    ],
    "names": [
        "insertAfter",
        "elm",
        "refElm",
        "nextSibling",
        "parentNode",
        "appendChild",
        "insertBefore"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBe,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAC/C;AACA,MAAMC,WAAW,GAAGD,MAAM,CAACC,WAA3B;;AACA,MAAI,CAACA,WAAL,EAAkB;AAChBD,IAAAA,MAAM,CAACE,UAAP,CAAkBC,WAAlB,CAA8BJ,GAA9B;AACD,GAFD,MAEO;AACLC,IAAAA,MAAM,CAACE,UAAP,CAAkBE,YAAlB,CAA+BL,GAA/B,EAAoCE,WAApC;AACD;AACF",
    "sourcesContent": [
        "/**\n * @name      insertAfter\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Insert an HTMLElement after another HTMLElement\n *\n * @param \t\t{HTMLElement} \t\t\t\telm  \t\tThe element to insert\n * @param \t\t{HTMLElement} \t\t\t\trefElm \t\tThe element after which to insert the passed element\n *\n * @example  \tjs\n * import insertAfter from '@coffeekraken/sugar/js/dom/insertAfter'\n * insertAfter(myElementToInsert, theReferenceElement);\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function insertAfter(elm, refElm) {\n  // next sibling of ref elm\n  const nextSibling = refElm.nextSibling;\n  if (!nextSibling) {\n    refElm.parentNode.appendChild(elm);\n  } else {\n    refElm.parentNode.insertBefore(elm, nextSibling);\n  }\n}\n"
    ]
}
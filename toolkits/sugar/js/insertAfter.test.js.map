{
    "version": 3,
    "sources": [
        "insertAfter.test.js"
    ],
    "names": [
        "__insertAfter",
        "require",
        "describe",
        "document",
        "body",
        "innerHTML",
        "$elm",
        "querySelector",
        "$add",
        "createElement",
        "it",
        "expect",
        "nextSibling",
        "toEqual"
    ],
    "mappings": ";;AAAA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AAEAC,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AAEzCC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd;AAGA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAb;AACA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAb;;AAEAT,EAAAA,aAAa,CAACQ,IAAD,EAAOF,IAAP,CAAb;;AAEAI,EAAAA,EAAE,CAAC,6CAAD,EAAgD,MAAM;AACtDC,IAAAA,MAAM,CAACL,IAAI,CAACM,WAAN,CAAN,CAAyBC,OAAzB,CAAiCL,IAAjC;AACD,GAFC,CAAF;AAID,CAdO,CAAR",
    "sourcesContent": [
        "const __insertAfter = require('../insertAfter');\n\ndescribe('sugar.js.dom.insertAfter', () => {\n\n  document.body.innerHTML = `\n    <div id=\"testing\"></div>\n  `;\n  const $elm = document.querySelector('#testing');\n  const $add = document.createElement('a');\n\n  __insertAfter($add, $elm);\n\n  it('Should append the new element tag correctly', () => {\n    expect($elm.nextSibling).toEqual($add);\n  });\n\n});"
    ]
}
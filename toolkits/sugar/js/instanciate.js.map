{
    "version": 3,
    "sources": [
        "instanciate.js"
    ],
    "names": [
        "instanciate",
        "actionObj",
        "type",
        "Error",
        "descriptorObj",
        "cls",
        "__typeMap",
        "Object",
        "keys",
        "join",
        "instance",
        "settings"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Be,SAASA,WAAT,CAAqBC,SAArB,EAAgC;AAC7C,MAAI,CAACA,SAAS,CAACC,IAAf,EAAqB;AACnB,UAAM,IAAIC,KAAJ,kFAAN;AAGD;;AACD,MAAI,CAACF,SAAS,CAACG,aAAf,EAA8B;AAC5B,UAAM,IAAID,KAAJ,0GAAN;AAGD;;AAED,MAAME,GAAG,GAAG,kBAAMC,gBAAN,EAAiBL,SAAS,CAACC,IAA3B,CAAZ;;AAEA,MAAI,CAACG,GAAL,EAAU;AACR,UAAM,IAAIF,KAAJ,oFACsEI,MAAM,CAACC,IAAP,CACxE,sBAAUF,gBAAV,CADwE,EAExEG,IAFwE,CAEnE,IAFmE,CADtE,SAAN;AAKD,GApB4C,CAsB7C;;;AACA,MAAMC,QAAQ,GAAG,IAAIL,GAAJ,CAAQJ,SAAS,CAACG,aAAlB,EAAiCH,SAAS,CAACU,QAAV,IAAsB,EAAvD,CAAjB;AACA,SAAOD,QAAP;AACD",
    "sourcesContent": [
        "import __typeMap from './typeMap';\nimport __get from '../object/get';\nimport __flatten from '../object/flatten';\n\n/**\n * @name            instanciate\n * @namespace       sugar.js.action\n * @type            Function\n * @static\n *\n * This static method simply take an action descriptor object, instanciate\n * an action object from the corresponding class and return this instance.\n *\n * @param       {Object}Â      actionObj         The action object that MUST have at least an ```type``` property, an ```descriptor``` one and optionaly a ```settings``` one.\n * @return      {SAction}                       The instanciated SAction object\n *\n * @example       js\n * import SAction from '@coffeekraken/sugar/js/action/SAction';\n * const myInstance = instanciate({\n *    type: 'url',\n *    descriptor: {\n *      url: 'https://google.com',\n *      target: '_popup'\n *    },\n *    settings: {}\n * });\n *\n * @since       2.0.0\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function instanciate(actionObj) {\n  if (!actionObj.type) {\n    throw new Error(\n      `instanciate: The actionObj parameter MUST have a <cyan>type</cyan> property...`\n    );\n  }\n  if (!actionObj.descriptorObj) {\n    throw new Error(\n      `instanciate: The actionObj parameter MUST have a <cyan>descriptorObj</cyan> property of type Object...`\n    );\n  }\n\n  const cls = __get(__typeMap, actionObj.type);\n\n  if (!cls) {\n    throw new Error(\n      `instanciate: Your passed \"type\" is not valid and must be one of those: ${Object.keys(\n        __flatten(__typeMap)\n      ).join(', ')}...`\n    );\n  }\n\n  // instanciate the object\n  const instance = new cls(actionObj.descriptorObj, actionObj.settings || {});\n  return instance;\n}\n"
    ]
}
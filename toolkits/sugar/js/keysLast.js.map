{
    "version": 3,
    "sources": [
        "keysLast.js"
    ],
    "names": [
        "keysLast",
        "array",
        "keys",
        "filter",
        "key",
        "indexOf",
        "res",
        "concat",
        "reverse"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;AAiBe,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC5C;AACA;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAaC,GAAD,IAAS;AAC1B,WAAOH,KAAK,CAACI,OAAN,CAAcD,GAAd,MAAuB,CAAC,CAA/B;AACD,GAFM,CAAP,CAH4C,CAM5C;;AACA,MAAIE,GAAG,GAAG,GAAGC,MAAH,CAAUN,KAAV,EAAiBM,MAAjB,CAAwBL,IAAxB,CAAV,CAP4C,CAQ5C;;AACAI,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAAN,CAT4C,CAU5C;;AACAF,EAAAA,GAAG,GAAG,mBAAKA,GAAL,CAAN,CAX4C,CAY5C;;AACAA,EAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAAN,CAb4C,CAc5C;;AACA,SAAOF,GAAP;AACD",
    "sourcesContent": [
        "import uniq from 'lodash/uniq';\n\n/**\n * @name        keysLast\n * @namespace           sugar.js.array\n * @type      Function\n *\n * Make sure the passed array ends with the passed keys\n * @param    {Array}    array    The array to process\n * @param    {Array}    keys    The keys to end the array with\n * @return    {Array}    The processed array\n *\n * @example    js\n * import keysLast from '@coffeekraken/sugar/js/array/keysLast'\n * keysLast(['a','b','d','g','c'], ['d','g'])\n * // ['a','b','c','d','g']\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function keysLast(array, keys) {\n  // all the keys has to exist in the array stack\n  // otherwise we filter it out\n  keys = keys.filter((key) => {\n    return array.indexOf(key) !== -1;\n  });\n  // add the keys at start\n  let res = [].concat(array).concat(keys);\n  // reverse the array\n  res = res.reverse();\n  // remove double items\n  res = uniq(res);\n  // reverse back the array\n  res = res.reverse();\n  // return the result\n  return res;\n}\n"
    ]
}
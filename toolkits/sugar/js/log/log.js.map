{
    "version": 3,
    "sources": [
        "log.js"
    ],
    "names": [
        "log",
        "message",
        "global",
        "window",
        "_sLogDefaultInstance",
        "__SLog"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;AAgBe,SAASA,GAAT,CAAaC,OAAb,EAAsB;AACnC,MAAI,CAAC,CAACC,MAAM,IAAIC,MAAX,EAAmBC,oBAAxB,EAA8C;AAC5C,KAACF,MAAM,IAAIC,MAAX,EAAmBC,oBAAnB,GAA0C,IAAIC,aAAJ,CAAW,EAAX,CAA1C;AACD;;AACD,SAAO,CAACH,MAAM,IAAIC,MAAX,EAAmBC,oBAAnB,CAAwCJ,GAAxC,CAA4CC,OAA5C,CAAP;AACD",
    "sourcesContent": [
        "import __SLog from './SLog';\n\n/**\n * @name              log\n * @namespace           sugar.js.log\n * @type              Function\n *\n * This function is a simple wrapper around the SLog class that let you use the log features quickly\n *\n * @param           {Mixed}             message           The message to log\n * @return          {Promise}Â                             A promise resolved once your message has been correctly logged\n *\n * @example         js\n * import log from '@coffeekraken/sugar/js/log/log';\n * log('Hello world');\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function log(message) {\n  if (!(global || window)._sLogDefaultInstance) {\n    (global || window)._sLogDefaultInstance = new __SLog({});\n  }\n  return (global || window)._sLogDefaultInstance.log(message);\n}\n"
    ]
}
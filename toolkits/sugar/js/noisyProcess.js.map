{
    "version": 3,
    "sources": [
        "noisyProcess.js"
    ],
    "names": [
        "isNoisyProcess",
        "noisy",
        "undefined"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBe,SAASA,cAAT,GAA0B;AACvC,MAAMC,KAAK,GAAG,kBAAM,eAAN,CAAd;AACA,SAAOA,KAAK,KAAKC,SAAV,GACH,OAAOD,KAAP,KAAiB,SAAjB,GACEA,KADF,GAEE,IAHC,GAIH,KAJJ;AAKD",
    "sourcesContent": [
        "import __env from '../core/env';\n\n/**\n * @name              isNoisyProcess\n * @namespace         sugar.js.is\n * @type              Function\n *\n * This function simply return true or false depending is the process is a noisy one or not.\n * A noisy process is a process that has the environment variable \"NOISY_PROCESS\" setted to true.\n * This tells the process features like the SPromise class for example to console.log his actions\n * so the main process (cause normally a noisy process is a child process as well) can catch these\n * printed \"object\" and pipe them in the main process automatically\n *\n * @return        {Boolean}           true if is a noisy process, false if not\n *\n * @example         js\n * import isNoisyProcess from '@coffeekraken/sugar/js/is/noisyProcess';\n * isNoisyProcess(); // => false\n *\n * @since         2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function isNoisyProcess() {\n  const noisy = __env('NOISY_PROCESS');\n  return noisy !== undefined\n    ? typeof noisy === 'boolean'\n      ? noisy\n      : true\n    : false;\n}\n"
    ]
}
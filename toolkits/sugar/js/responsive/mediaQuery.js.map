{
    "version": 3,
    "sources": [
        "mediaQuery.js"
    ],
    "names": [
        "__mediaQueryPromisesStack",
        "__activeMedia",
        "mediaQuery",
        "mediaName"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMA,yBAAyB,GAAG,EAAlC;;AACA,IAAIC,aAAJ;;AAEe,SAASC,UAAT,CAAoBC,SAApB,EAAqC;AAAA,MAAjBA,SAAiB;AAAjBA,IAAAA,SAAiB,GAAL,GAAK;AAAA;AAAE",
    "sourcesContent": [
        "import __SPromise from '../promise/SPromise';\n\n/**\n * @name\t\t\t\t\tmediaQuery\n * @type \t\t\t\t\tFunction\n * @async\n *\n * This function add a listener and return you an SPromise instance on which you can subscribe for\n * events like \"match\" or \"unmatch\".\n *\n * @param           {String}            mediaName           The media query name you want to listen to. Can be any queries defined in the config.media.queries stack\n * @return          {SPromise}                              An SPromise instance on which you can subscribe for events like \"match\" or \"unmatch\"\n *\n * @example         js\n * import mediaQuery from '@coffeekraken/sugar/js/responsive/mediaQuery';\n * mediaQuery('mobile').on('match', () => {\n *      // do something\n * });\n *\n * @since \t\t\t\t\t2.0.0\n * @author\t\t\t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nconst __mediaQueryPromisesStack = {};\nlet __activeMedia;\n\nexport default function mediaQuery(mediaName = '*') {}\n"
    ]
}
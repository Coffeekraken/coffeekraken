{
    "version": 3,
    "sources": [
        "rtrim.js"
    ],
    "names": [
        "rtrim",
        "string",
        "needle",
        "trimResult",
        "substr",
        "length",
        "trim"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;AAkBe,SAASA,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,UAA/B,EAAkD;AAAA,MAAnBA,UAAmB;AAAnBA,IAAAA,UAAmB,GAAN,IAAM;AAAA;;AAC/D,MAAIF,MAAM,CAACG,MAAP,CAAcF,MAAM,CAACG,MAAP,GAAgB,CAAC,CAA/B,MAAsCH,MAA1C,EAAkD;AAChD,QAAIC,UAAJ,EAAgB;AACd,aAAOF,MAAM,CAACG,MAAP,CAAc,CAAd,EAAiBH,MAAM,CAACI,MAAP,GAAgBH,MAAM,CAACG,MAAxC,EAAgDC,IAAhD,EAAP;AACD,KAFD,MAEO;AACL,aAAOL,MAAM,CAACG,MAAP,CAAc,CAAd,EAAiBH,MAAM,CAACI,MAAP,GAAgBH,MAAM,CAACG,MAAxC,CAAP;AACD;AACF,GAP8D,CAQ/D;;;AACA,SAAOJ,MAAP;AACD",
    "sourcesContent": [
        "/**\n * @name        rtrim\n * @namespace           sugar.js.string\n * @type      Function\n *\n * Trim right a specified string\n *\n * @param    {String}    string    The string to trim\n * @param    {String}    needle    The string to find an cut out if found\n * @param     {Boolean}     [trimResult=true]       Specify if you want to trim the trimed string\n * @return    {String}    The trimed string\n *\n * @example    js\n * import rtrim from '@coffeekraken/sugar/js/string/rtrim'\n * rtrim('Hello World', 'ld') // Hello Wor\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function rtrim(string, needle, trimResult = true) {\n  if (string.substr(needle.length * -1) === needle) {\n    if (trimResult) {\n      return string.substr(0, string.length - needle.length).trim();\n    } else {\n      return string.substr(0, string.length - needle.length);\n    }\n  }\n  // nothing to trim\n  return string;\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "stylesheetsReady.js"
    ],
    "names": [
        "stylesheetsReady",
        "links",
        "cb",
        "neededStylesheetsStack",
        "neededStylesheetsCount",
        "length",
        "loadedStylesheedsCount",
        "loadedStylesheetsCallbacks",
        "loadedStylesheedsProcess",
        "stylesheetsDependenciesStatus",
        "Promise",
        "resolve",
        "reject",
        "push",
        "forEach",
        "call",
        "link",
        "then",
        "callback",
        "error",
        "console"
    ],
    "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;AAsBe,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,EAAjC,EAA4C;AAAA,MAAXA,EAAW;AAAXA,IAAAA,EAAW,GAAN,IAAM;AAAA;;AACzD,MAAIC,sBAAsB,GAAGF,KAA7B;AACA,MAAIG,sBAAsB,GAAGH,KAAK,CAACI,MAAnC;AACA,MAAIC,sBAAsB,GAAG,CAA7B;AACA,MAAIC,0BAA0B,GAAG,EAAjC;AACA,MAAIC,wBAAwB,GAAG,KAA/B;AACA,MAAIC,6BAA6B,GAAG,KAApC;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIH,6BAAJ,EAAmC;AACjCP,MAAAA,EAAE,KAAK,IAAP,IAAeA,EAAE,EAAjB;AACAS,MAAAA,OAAO;AACP;AACD,KALqC,CAOtC;;;AACA,QAAI,CAACP,sBAAL,EAA6B;AAC3B;AACAK,MAAAA,6BAA6B,GAAG,IAAhC,CAF2B,CAG3B;;AACAP,MAAAA,EAAE,KAAK,IAAP,IAAeA,EAAE,EAAjB;AACAS,MAAAA,OAAO;AACP;AACD,KAfqC,CAiBtC;AACA;;;AACAJ,IAAAA,0BAA0B,CAACM,IAA3B,CAAgC,MAAM;AACpCX,MAAAA,EAAE,KAAK,IAAP,IAAeA,EAAE,EAAjB;AACAS,MAAAA,OAAO;AACR,KAHD,EAnBsC,CAwBtC;AACA;;AACA,QAAI,CAACH,wBAAL,EAA+B;AAC7B;AACAA,MAAAA,wBAAwB,GAAG,IAA3B;;AAEA,UAAIL,sBAAsB,CAACE,MAA3B,EAAmC;AACjC,WAAGS,OAAH,CAAWC,IAAX,CAAgBZ,sBAAhB,EAAyCa,IAAD,IAAU;AAChD;AACA,mCAAWA,IAAX,EAAiBC,IAAjB,CACGD,IAAD,IAAU;AACR;AACAV,YAAAA,sBAAsB,GAFd,CAGR;;AACA,gBAAIA,sBAAsB,IAAIF,sBAA9B,EAAsD;AACpD;AACAK,cAAAA,6BAA6B,GAAG,IAAhC,CAFoD,CAGpD;;AACAF,cAAAA,0BAA0B,CAACO,OAA3B,CAAoCI,QAAD,IAAc;AAC/C;AACAA,gBAAAA,QAAQ;AACT,eAHD;AAID;AACF,WAdH,EAeGC,KAAD,IAAW;AACT;AACAC,YAAAA,OAAO,CAACD,KAAR,CACE,mDADF,EAEEA,KAFF;AAID,WArBH;AAuBD,SAzBD;AA0BD;AACF;AACF,GA3DM,CAAP;AA4DD",
    "sourcesContent": [
        "import linkLoaded from './linkLoaded';\n/**\n * @name      stylesheetsReady\n * @namespace           sugar.js.dom\n * @type      Function\n *\n * Wait until all the HTMLLinkElement's are properly loaded\n *\n * @param \t\t{Array}<HTMLLinkElement> \t\tlinks \t\t\tThe HTMLLinkElement tags to process\n * @param \t\t{Function} \t\t\t\t\t\t[cb=null] \t\tAn optional callback function to call when all the links are loaded\n * @return \t\t{Promise} \t\t\t\t\t\t\t\t\t\tThe promise that will be resolved when all the links are loaded\n *\n * @example \tjs\n * import stylesheetsReady from '@coffeekraken/sugar/js/dom/stylesheetsReady'\n * stylesheetsReady([\n * \t\tmyHTMLLinkElement1,\n * \t\tmyHTMLLinkElement2\n * ]).then(() => {\n * \t\t// do something when all the links are loaded\n * });\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function stylesheetsReady(links, cb = null) {\n  let neededStylesheetsStack = links;\n  let neededStylesheetsCount = links.length;\n  let loadedStylesheedsCount = 0;\n  let loadedStylesheetsCallbacks = [];\n  let loadedStylesheedsProcess = false;\n  let stylesheetsDependenciesStatus = false;\n\n  return new Promise((resolve, reject) => {\n    if (stylesheetsDependenciesStatus) {\n      cb !== null && cb();\n      resolve();\n      return;\n    }\n\n    // check if has some needed stylesheeds\n    if (!neededStylesheetsCount) {\n      // update the stylesheetsDependenciesStatus\n      stylesheetsDependenciesStatus = true;\n      // no dependencies or already loaded\n      cb !== null && cb();\n      resolve();\n      return;\n    }\n\n    // add the callback into the loaded stylesheets stack\n    // add the the callback stack\n    loadedStylesheetsCallbacks.push(() => {\n      cb !== null && cb();\n      resolve();\n    });\n\n    // check if already a process of checking for loaded\n    // stylesheets\n    if (!loadedStylesheedsProcess) {\n      // update the status\n      loadedStylesheedsProcess = true;\n\n      if (neededStylesheetsStack.length) {\n        [].forEach.call(neededStylesheetsStack, (link) => {\n          // check loaded\n          linkLoaded(link).then(\n            (link) => {\n              // update the loaded stylesheet count\n              loadedStylesheedsCount++;\n              // check if all stylesheets has been loaded\n              if (loadedStylesheedsCount >= neededStylesheetsCount) {\n                // update the stylesheetsDependenciesStatus\n                stylesheetsDependenciesStatus = true;\n                // loop on all the loadedStylesheetsCallbacks\n                loadedStylesheetsCallbacks.forEach((callback) => {\n                  // apply the callback\n                  callback();\n                });\n              }\n            },\n            (error) => {\n              // something goes wrong...\n              console.error(\n                'The following link as not been loaded properly...',\n                error\n              );\n            }\n          );\n        });\n      }\n    }\n  });\n}\n"
    ]
}
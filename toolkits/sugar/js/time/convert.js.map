{
    "version": 3,
    "sources": [
        "convert.js"
    ],
    "names": [
        "convert",
        "from",
        "to",
        "fromMs",
        "fromNumber",
        "parseFloat",
        "fromLength",
        "toString",
        "length",
        "fromString",
        "slice",
        "Error"
    ],
    "mappings": "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",
    "sourcesContent": [
        "/**\n * @name                                  convert\n * @namespace           sugar.js.time\n * @type                                  Function\n *\n * This function allows you to convert time like seconds, ms, hours, minutes, etc... from one format to another\n *\n * @param           {String|Number}             from                  The value to start from like \"10s\", \"20ms\", \"2h\", etc...\n * @param           {String}                    [to='ms']             The format you want to get back\n * @return          {Number}                                          The converted value\n *\n * @example           js\n * import convert from '@coffeekraken/sugar/js/time/convert';\n * convert('10s', 'ms'); // => 10000\n *\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function convert(from, to = 'ms') {\n  // init the fromMs variable\n  let fromMs = from;\n\n  // check if the time is a string to convert it to ms\n  if (typeof from === 'string') {\n    const fromNumber = parseFloat(from);\n    const fromLength = fromNumber.toString().length;\n    const fromString = from.slice(fromLength);\n\n    if (\n      fromString === 'ms' ||\n      fromString === 'millisecond' ||\n      fromString === 'milliseconds'\n    ) {\n      fromMs = fromNumber;\n    } else if (\n      fromString === 's' ||\n      fromString === 'second' ||\n      fromString === 'seconds'\n    ) {\n      fromMs = fromNumber * 1000;\n    } else if (\n      fromString === 'm' ||\n      fromString === 'minute' ||\n      fromString === 'minutes'\n    ) {\n      fromMs = fromNumber * 60 * 1000;\n    } else if (\n      fromString === 'h' ||\n      fromString === 'hour' ||\n      fromString === 'months'\n    ) {\n      fromMs = fromNumber * 60 * 60 * 1000;\n    } else if (\n      fromString === 'd' ||\n      fromString === 'day' ||\n      fromString === 'days'\n    ) {\n      fromMs = fromNumber * 24 * 60 * 60 * 1000;\n    } else if (\n      fromString === 'w' ||\n      fromString === 'week' ||\n      fromString === 'weeks'\n    ) {\n      fromMs = fromNumber * 7 * 24 * 60 * 60 * 1000;\n    } else if (fromString === 'month' || fromString === 'months') {\n      fromMs = fromNumber * 31 * 24 * 60 * 60 * 1000;\n    } else if (\n      fromString === 'y' ||\n      fromString === 'year' ||\n      fromString === 'years'\n    ) {\n      fromMs = fromNumber * 365 * 24 * 60 * 60 * 1000;\n    }\n  }\n\n  // convert not the fromMs value to the requested format\n  switch (to) {\n    case 'ms':\n    case 'millisecond':\n    case 'milliseconds':\n      return fromMs;\n      break;\n    case 's':\n    case 'second':\n    case 'seconds':\n      return fromMs / 1000;\n      break;\n    case 'm':\n    case 'minute':\n    case 'minutes':\n      return fromMs / 1000 / 60;\n      break;\n    case 'h':\n    case 'hour':\n    case 'hours':\n      return fromMs / 1000 / 60 / 60;\n      break;\n    case 'd':\n    case 'day':\n    case 'days':\n      return fromMs / 1000 / 60 / 60 / 24;\n      break;\n    case 'w':\n    case 'week':\n    case 'weeks':\n      return fromMs / 1000 / 60 / 60 / 24 / 7;\n      break;\n    case 'month':\n    case 'months':\n      return fromMs / 1000 / 60 / 60 / 24 / 31;\n      break;\n    case 'y':\n    case 'year':\n    case 'years':\n      return fromMs / 1000 / 60 / 60 / 24 / 365;\n      break;\n    default:\n      throw new Error(\n        `You try to convert \"${from}\" to \"${to}\" but this format does not exist... The valids formats are \"ms,s,m,h,d,w,month,y\"...`\n      );\n      break;\n  }\n}\n"
    ]
}
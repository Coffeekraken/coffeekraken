{
    "version": 3,
    "sources": [
        "toPlainObject.js"
    ],
    "names": [
        "toPlainObject",
        "theClass",
        "originalClass",
        "keys",
        "Object",
        "getOwnPropertyNames",
        "reduce",
        "classAsObj",
        "key"
    ],
    "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBe,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC9C,MAAMC,aAAa,GAAGD,QAAQ,IAAI,EAAlC;AACA,MAAME,IAAI,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,aAA3B,CAAb;AACA,SAAOC,IAAI,CAACG,MAAL,CAAY,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACtCD,IAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBN,aAAa,CAACM,GAAD,CAA/B;AACA,WAAOD,UAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID",
    "sourcesContent": [
        "/**\n * @name                          toPlainObject\n * @namespace          sugar.js.class\n * @type                          Function\n *\n * This function take a instance as parameter and return a plain object of it\n *\n * @param               {Mixed}               instance                Any class instance to transform into a plain object\n * @return              {Object}                                      A plain object version of the the class instance\n *\n * @example             js\n * import toPlainObject from '@coffeekraken/sugar/js/class/toPlainObject';\n * class Coco {\n *    constructor() {\n *      this.hello = 'world';\n *    }\n * }\n * toPlainObject(new Coco()); // => { hello: 'world' }\n *\n * @author \t\tOlivier Bossel<olivier.bossel@gmail.com>\n */\nexport default function toPlainObject(theClass) {\n  const originalClass = theClass || {};\n  const keys = Object.getOwnPropertyNames(originalClass);\n  return keys.reduce((classAsObj, key) => {\n    classAsObj[key] = originalClass[key];\n    return classAsObj;\n  }, {});\n}\n"
    ]
}
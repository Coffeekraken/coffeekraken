{
    "version": 3,
    "sources": [
        "trimLines.js"
    ],
    "names": [
        "trimLines",
        "string",
        "settings",
        "leftPadding",
        "rightPadding",
        "keepEmptyLines",
        "split",
        "map",
        "line",
        "trim",
        "repeat",
        "filter",
        "join"
    ],
    "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAA0C;AAAA,MAAfA,QAAe;AAAfA,IAAAA,QAAe,GAAJ,EAAI;AAAA;;AACvDA,EAAAA,QAAQ,GAAG,wBACT;AACEC,IAAAA,WAAW,EAAE,CADf;AAEEC,IAAAA,YAAY,EAAE,CAFhB;AAGEC,IAAAA,cAAc,EAAE;AAHlB,GADS,EAMTH,QANS,CAAX;AASAD,EAAAA,MAAM,GAAGA,MAAM,CACZK,KADM,CACA,IADA,EAENC,GAFM,CAEDC,IAAD,IAAU;AACbA,IAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;;AACA,QAAI,CAACP,QAAQ,CAACG,cAAd,EAA8B;AAC5B,UAAIG,IAAI,KAAK,EAAb,EAAiB,OAAO,CAAC,CAAR;AAClB;;AACD,QAAIN,QAAQ,CAACC,WAAb,EACEK,IAAI,aAAM,IAAIE,MAAJ,CAAWR,QAAQ,CAACC,WAApB,CAAN,SAAyCK,IAAzC,CAAJ;AACF,QAAIN,QAAQ,CAACE,YAAb,EACEI,IAAI,aAAMA,IAAN,SAAa,IAAIE,MAAJ,CAAWR,QAAQ,CAACE,YAApB,CAAb,CAAJ;AACF,WAAOI,IAAP;AACD,GAZM,EAaNG,MAbM,CAaEH,IAAD,IAAUA,IAAI,KAAK,CAAC,CAbrB,EAcNI,IAdM,CAcD,IAdC,CAAT;AAgBA,SAAOX,MAAP;AACD",
    "sourcesContent": [
        "import __deepMerge from '../object/deepMerge';\n\n/**\n * @name          trimLines\n * @namespace     sugar.js.string\n * @type          Function\n *\n * This function take a string and trim each lines\n *\n * @param       {String}        string        The string to trim lines of\n * @param       {Object}        [settings={}]     An object settings. Here's the object properties:\n * - leftPadding (0) {Number}: Specify a left padding to set. 1 padding represent 1 space character\n * - rightPadding (0) {Number}: Specify a right padding to set.\n * - keepEmptyLines (true) {Boolean}: Specify if you want to keep empty lines or not\n *\n * @example         js\n * import trimLines from '@coffeekraken/sugar/js/string/trimLines';\n * trimLines(`my cool lines\n *      that have some lines to trim\n * and some not...`);\n * // my cool lines\n * // that have some lines to trim\n * // and some not...\n *\n * @since       2.0.0\n * @author    Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function trimLines(string, settings = {}) {\n  settings = __deepMerge(\n    {\n      leftPadding: 0,\n      rightPadding: 0,\n      keepEmptyLines: true\n    },\n    settings\n  );\n\n  string = string\n    .split('\\n')\n    .map((line) => {\n      line = line.trim();\n      if (!settings.keepEmptyLines) {\n        if (line === '') return -1;\n      }\n      if (settings.leftPadding)\n        line = `${' '.repeat(settings.leftPadding)}${line}`;\n      if (settings.rightPadding)\n        line = `${line}${' '.repeat(settings.rightPadding)}`;\n      return line;\n    })\n    .filter((line) => line !== -1)\n    .join('\\n');\n\n  return string;\n}\n"
    ]
}
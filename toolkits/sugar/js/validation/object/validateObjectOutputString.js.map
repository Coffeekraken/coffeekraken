{
    "version": 3,
    "sources": [
        "validateObjectOutputString.js"
    ],
    "names": [
        "validateObjectOutputString",
        "validateObjectResultObj",
        "settings",
        "stringsArray",
        "push",
        "$interface",
        "$name",
        "$issues",
        "length",
        "map",
        "v",
        "join",
        "forEach",
        "attrName",
        "attrIssueObj",
        "string",
        "interface",
        "name"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCe,SAASA,0BAAT,CACbC,uBADa,EAEbC,QAFa,EAGb;AAAA,MADAA,QACA;AADAA,IAAAA,QACA,GADW,EACX;AAAA;;AACA,MAAMC,YAAY,GAAG,EAArB;AAEAA,EAAAA,YAAY,CAACC,IAAb,CACE,mGAIAH,uBAAuB,CAACI,UAAxB,iCAC2BJ,uBAAuB,CAACI,UADnD,eAEI,EANJ,uCAQsBJ,uBAAuB,CAACK,KAAxB,IAAiC,SARvD,iCASOL,uBAAuB,CAACM,OAAxB,CAAgCC,MAAhC,GAAyC,CAAzC,GAA6C,GAA7C,GAAmD,EAT1D,cAUEP,uBAAuB,CAACM,OAAxB,CAAgCC,MAAhC,GAAyC,CAAzC,GAA6C,EAA7C,GAAkD,GAVpD,uBAWaP,uBAAuB,CAACM,OAAxB,CAAgCC,MAX7C,gCAYSP,uBAAuB,CAACM,OAAxB,CAAgCC,MAAhC,GAAyC,CAAzC,GAA6C,KAA7C,GAAqD,GAZ9D,cAaEP,uBAAuB,CAACM,OAAxB,CAAgCC,MAAhC,GAAyC,CAAzC,GAA6C,EAA7C,GAAkD,IAbpD,cAcIP,uBAAuB,CAACM,OAAxB,CACDE,GADC,CACIC,CAAD,IAAO;AACV,8BAAmBA,CAAnB;AACD,GAHC,EAIDC,IAJC,CAII,IAJJ,CAdJ,EADF;AAsBAV,EAAAA,uBAAuB,CAACM,OAAxB,CAAgCK,OAAhC,CAAyCC,QAAD,IAAc;AACpD,QAAMC,YAAY,GAAGb,uBAAuB,CAACY,QAAD,CAA5C;AACA,QAAME,MAAM,GAAG,wCAA4BD,YAA5B,EAA0C;AACvDE,MAAAA,SAAS,EAAEf,uBAAuB,CAACI,UADoB;AAEvDY,MAAAA,IAAI,oBAAahB,uBAAuB,CAACK,KAArC,gCAAgEO,QAAhE;AAFmD,KAA1C,CAAf;AAIAV,IAAAA,YAAY,CAACC,IAAb,CAAkBW,MAAlB;AACD,GAPD;AASA,SAAO,wBAAYZ,YAAY,CAACQ,IAAb,CAAkB,MAAlB,CAAZ,CAAP;AACD",
    "sourcesContent": [
        "import __validateValueOutputString from '../value/validateValueOutputString';\nimport __parseHtml from '../../console/parseHtml';\nimport __trimLines from '../../string/trimLines';\nimport __toString from '../../string/toString';\n\n/**\n * @name                validateObjectOutputString\n * @namespace           sugar.js.validation.object\n * @type                Function\n *\n * This function take the resulting object of the ```validateObject``` one and transform it into\n * a nice human readable string.\n *\n * @param         {Object}          validateObjectResultObj           The validateObject resulting object\n * @return        {String}                                        A human readable string of the resulting object\n *\n * @todo          tests\n *\n * @example       js\n * import validateObjectOutputString from '@coffeekraken/sugar/js/validation/object/validateObjectOutputString';\n * import validateObject from '@coffeekraken/sugar/js/validation/object/validateObject';\n * const resultObj = validateObject({\n *    plop: true,\n *    hello: 'world'\n * }, {\n *    plop: {\n *      type: 'String',\n *      required: true\n *    },\n *    hello: {\n *      type: 'String',\n *      required: true\n *    }\n * });\n * validateObjectOutputString(resultObj);\n *\n * @since       2.0.0\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function validateObjectOutputString(\n  validateObjectResultObj,\n  settings = {}\n) {\n  const stringsArray = [];\n\n  stringsArray.push(\n    __trimLines(`\n  <underline><green>Object validation</green></underline>\n\n  ${\n    validateObjectResultObj.$interface\n      ? `- Interface:  <cyan>${validateObjectResultObj.$interface}</cyan>`\n      : ''\n  }\n  - Name:       <yellow>${validateObjectResultObj.$name || 'unnamed'}</yellow>\n  - Error${validateObjectResultObj.$issues.length > 1 ? 's' : ''}:${\n      validateObjectResultObj.$issues.length > 1 ? '' : ' '\n    }     <red>${validateObjectResultObj.$issues.length}</red>\n  - Propert${validateObjectResultObj.$issues.length > 1 ? 'ies' : 'y'}:${\n      validateObjectResultObj.$issues.length > 1 ? '' : '  '\n    } ${validateObjectResultObj.$issues\n      .map((v) => {\n        return `<magenta>${v}</magenta>`;\n      })\n      .join(', ')}`)\n  );\n\n  validateObjectResultObj.$issues.forEach((attrName) => {\n    const attrIssueObj = validateObjectResultObj[attrName];\n    const string = __validateValueOutputString(attrIssueObj, {\n      interface: validateObjectResultObj.$interface,\n      name: `<yellow>${validateObjectResultObj.$name}</yellow>.<magenta>${attrName}</magenta>`\n    });\n    stringsArray.push(string);\n  });\n\n  return __parseHtml(stringsArray.join('\\n\\n'));\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "validateValueOutputString.js"
    ],
    "names": [
        "validateValueOutputString",
        "validateValueResultObj",
        "settings",
        "issuesArray",
        "name",
        "$name",
        "interface",
        "$interface",
        "push",
        "$received",
        "string",
        "value",
        "beautify",
        "__packageRoot",
        "require",
        "replace",
        "__dirname",
        "$issues",
        "forEach",
        "issue",
        "$messages",
        "join"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBe,SAASA,yBAAT,CACbC,sBADa,EAEbC,QAFa,EAGb;AAAA,MADAA,QACA;AADAA,IAAAA,QACA,GADW,EACX;AAAA;;AACA,MAAIC,WAAW,GAAG,EAAlB;AAEAD,EAAAA,QAAQ,GAAG,wBAAY;AACrBE,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,IAAiBH,sBAAsB,CAACI,KADzB;AAErBC,IAAAA,SAAS,EAAEJ,QAAQ,CAACI,SAAT,IAAsBL,sBAAsB,CAACM;AAFnC,GAAZ,CAAX;;AAKA,MAAIL,QAAQ,CAACE,IAAb,EAAmB;AACjBD,IAAAA,WAAW,CAACK,IAAZ,mCAAuCN,QAAQ,CAACE,IAAhD;AACD;;AAED,MAAIH,sBAAsB,CAACQ,SAA3B,EAAsC;AACpC,QAAIC,MAAM,+DAAmD,uBAC3DT,sBAAsB,CAACQ,SAAvB,CAAiCE,KAD0B,EAE3D;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAF2D,CAAnD,cAAV;;AAKA,QAAI,oBAAJ,EAAgB;AACd,UAAMC,aAAa,GAAGC,OAAO,CAAC,2CAAD,CAA7B;;AACAJ,MAAAA,MAAM,GAAGA,MAAM,CAACK,OAAP,WAAkBF,aAAa,EAA/B,QAAsC,EAAtC,CAAT;AACAH,MAAAA,MAAM,GAAGA,MAAM,CAACK,OAAP,WAAkBF,aAAa,CAACG,SAAD,CAA/B,QAA+C,EAA/C,CAAT;AACD;;AAEDb,IAAAA,WAAW,CAACK,IAAZ,CAAiBE,MAAjB;AACD;;AAEDT,EAAAA,sBAAsB,CAACgB,OAAvB,CAA+BC,OAA/B,CAAwCC,KAAD,IAAW;AAChD,QAAIlB,sBAAsB,CAACmB,SAAvB,CAAiCD,KAAjC,CAAJ,EAA6C;AAC3ChB,MAAAA,WAAW,CAACK,IAAZ,qCAC0BP,sBAAsB,CAACmB,SAAvB,CAAiCD,KAAjC,CAD1B;AAGD;AACF,GAND;AAQA,SAAO,wBAAYhB,WAAW,CAACkB,IAAZ,CAAiB,IAAjB,CAAZ,IAAsC,IAA7C;AACD",
    "sourcesContent": [
        "import __parseHtml from '../../console/parseHtml';\nimport __toString from '../../string/toString';\nimport __deepMerge from '../../object/deepMerge';\nimport __isNode from '../../is/node';\n\n/**\n * @name                validateValueOutputString\n * @namespace           sugar.js.validation.value\n * @type                Function\n *\n * This function take the resulting object of the ```validateValue``` one and transform it into\n * a nice human readable string.\n *\n * @param         {Object}          validateValueResultObj           The validateValue resulting object\n * @return        {String}                                        A human readable string of the resulting object\n *\n * @todo          tests\n *\n * @example       js\n * import validateValueOutputString from '@coffeekraken/sugar/js/validation/object/validateValueOutputString';\n * import validateValue from '@coffeekraken/sugar/js/validation/object/validateValue';\n * const resultObj = validateValue(true, {\n *    type: 'String',\n *    required: true\n * });\n * validateValueOutputString(resultObj);\n *\n * @since       2.0.0\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function validateValueOutputString(\n  validateValueResultObj,\n  settings = {}\n) {\n  let issuesArray = [];\n\n  settings = __deepMerge({\n    name: settings.name || validateValueResultObj.$name,\n    interface: settings.interface || validateValueResultObj.$interface\n  });\n\n  if (settings.name) {\n    issuesArray.push(`<yellow>│</yellow> ${settings.name}\\n<yellow>│</yellow>`);\n  }\n\n  if (validateValueResultObj.$received) {\n    let string = `<yellow>│</yellow> - Received value: <yellow>${__toString(\n      validateValueResultObj.$received.value,\n      { beautify: true }\n    )}</yellow>`;\n\n    if (__isNode()) {\n      const __packageRoot = require('@coffeekraken/sugar/node/path/packageRoot');\n      string = string.replace(`${__packageRoot()}/`, '');\n      string = string.replace(`${__packageRoot(__dirname)}/`, '');\n    }\n\n    issuesArray.push(string);\n  }\n\n  validateValueResultObj.$issues.forEach((issue) => {\n    if (validateValueResultObj.$messages[issue]) {\n      issuesArray.push(\n        `<yellow>│</yellow> - ${validateValueResultObj.$messages[issue]}`\n      );\n    }\n  });\n\n  return __parseHtml(issuesArray.join('\\n')) + '\\n';\n}\n"
    ]
}
{
    "version": 3,
    "sources": [
        "SLitHtmlWebComponent.js"
    ],
    "names": [
        "SLitHtmlWebComponentGenerator",
        "extendSettings",
        "settings",
        "html",
        "render",
        "asyncReplace",
        "asyncAppend",
        "cache",
        "classMap",
        "ifDefined",
        "guard",
        "repeat",
        "styleMap",
        "templateContent",
        "unsafeHTML",
        "unsafeSVG",
        "until",
        "tplFn",
        "constructor",
        "template",
        "bind",
        "tpl",
        "props",
        "_settings",
        "lit",
        "$container",
        "on",
        "addClass",
        "document",
        "createElement",
        "_refreshIdReferences",
        "dispatch",
        "_mediaQuery",
        "media",
        "prop",
        "propObj",
        "Promise",
        "resolve",
        "reject",
        "setTimeout"
    ],
    "mappings": "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",
    "sourcesContent": [
        "import __SWebComponent from './SWebComponent';\nimport { render, html } from 'lit-html';\nimport __throttle from '../function/throttle';\nimport __insertAfter from '../dom/insertAfter';\nimport __deepMerge from '../object/deepMerge';\nimport { asyncReplace } from 'lit-html/directives/async-replace.js';\nimport { asyncAppend } from 'lit-html/directives/async-append.js';\nimport { cache } from 'lit-html/directives/cache.js';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { guard } from 'lit-html/directives/guard';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { styleMap } from 'lit-html/directives/style-map.js';\nimport { templateContent } from 'lit-html/directives/template-content';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { unsafeSVG } from 'lit-html/directives/unsafe-svg';\nimport { until } from 'lit-html/directives/until.js';\nimport __canHaveChildren from '../dom/canHaveChildren';\n\n/**\n * @name              SLitHtmlWebComponent\n * @namespace           sugar.js.webcomponent\n * @type              Class\n * @extends           SWebComponent\n *\n * // TODO: example\n *\n * Base class that you can extends to create some SWebComponent with Lit Html rendering capabilities\n *\n * @param       {Object}        [settings={}]         A setting object to configure your webcomponent instance:\n * - defaultProps ({}) {Object}: Specify the default properties values\n * - physicalProps ([]) {Array<String>}: List all the properties that need to be ALWAYS on the html element (for styling purpose for example...)\n * - requiredProps ([]) {Array<String>}: List all the properties that MUST be passed to the component\n *\n * @example         js\n * import SLitHtmlWebComponent from '@coffeekraken/sugar/js/webcomponent/SLitHtmlWebComponent';\n * class MyCoolComponent extends SLitHtmlWebComponent {\n *\n *    constructor(settings = {}) {\n *      super(settings);\n *    }\n *\n * }\n *\n * @since       2.0.0\n * @see       https://lit-html.polymer-project.org/\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nfunction SLitHtmlWebComponentGenerator(extendSettings = {}) {\n  return class SLitHtmlWebComponent extends __SWebComponent(extendSettings) {\n    /**\n     * @name        template\n     * @type        Function\n     * @static\n     *\n     * This static variable store a function that has as parameter the state object\n     * of your component and the lit-html ```html``` function that you can use in your template.\n     * This function MUST return a template string representing your component HTML depending on the state\n     * object at this point.\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    static template = (props, settings, lit) => lit.html`\n      <p>\n        You need to specify a static template property for your component...\n      </p>\n    `;\n\n    /**\n     * @name        lit\n     * @type        Object\n     *\n     * Store all the litHtml functions that you may need\n     *\n     * @see       https://lit-html.polymer-project.org/guide/template-reference\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    lit = {\n      html,\n      render,\n      asyncReplace,\n      asyncAppend,\n      cache,\n      classMap,\n      ifDefined,\n      guard,\n      repeat,\n      styleMap,\n      templateContent,\n      unsafeHTML,\n      unsafeSVG,\n      until\n    };\n\n    /**\n     * @name        constructor\n     * @type        Function\n     * @constructor\n     *\n     * Constructor\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    constructor(settings = {}) {\n      super(__deepMerge({}, settings));\n      // wait until mounted to render the component first time\n      this.on('mounted:1', () => {\n        // insert the container in the document\n        if (__canHaveChildren(this)) {\n          this.$container = this;\n          this.addClass('', this);\n        } else {\n          this.$container = document.createElement('div');\n          this.addClass('', this.$container);\n          __insertAfter(this.$container, this);\n        }\n        // render for the first time\n        this.render();\n        // refresh references\n        this._refreshIdReferences();\n        // dispatch a ready event\n        this.dispatch('ready', this);\n        // listen for media query change to update the view\n        this._mediaQuery.on('match', (media) => {\n          this.render();\n        });\n      });\n    }\n\n    /**\n     * @name          $root\n     * @type          Function\n     * @get\n     *\n     * Access the root element of the webcomponent from which the requests like ```$``` and ```$$``` will be executed\n     *\n     * @since         2.0.0\n     * @author\t\t\t\t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    get $root() {\n      return this.$container || this;\n    }\n\n    /**\n     * @name          render\n     * @type          Function\n     *\n     * This method is called every time an update has been made in the state object\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    render = __throttle(function () {\n      const tplFn = this.constructor.template.bind(this);\n      const tpl = tplFn(this.props, this._settings, this.lit);\n      render(tpl, this.$container);\n    }, 50);\n\n    /**\n     * @name          handleProp\n     * @type          Function\n     * @async\n     *\n     * This method is supposed to be overrided by your component integration\n     * to handle the props updates and delete actions.\n     * The passed description object has this format:\n     * ```js\n     * {\n     *    action: 'set|delete',\n     *    path: 'something.cool',\n     *    oldValue: '...',\n     *    value: '...'\n     * }\n     * ```\n     *\n     * @param     {String}      prop      The property name that has been updated or deleted\n     * @param     {Object}      descriptionObj      The description object that describe the update or delete action\n     * @return    {Promise}                A promise that has to be resolved once the update has been handled correctly. You have to pass the prop variable to the resolve function\n     *\n     * @since     2.0.0\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    handleProp(prop, propObj) {\n      return new Promise((resolve, reject) => {\n        // this.render();\n        setTimeout(() => {\n          this.render();\n        });\n        resolve(prop);\n      });\n    }\n  };\n}\n\nexport default SLitHtmlWebComponentGenerator;\n"
    ]
}
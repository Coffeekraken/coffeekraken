{
    "version": 3,
    "sources": [
        "SLitHtmlWebComponent.js"
    ],
    "names": [
        "SLitHtmlWebComponent",
        "extend",
        "HTMLElement",
        "settings",
        "html",
        "render",
        "asyncReplace",
        "asyncAppend",
        "cache",
        "classMap",
        "ifDefined",
        "guard",
        "repeat",
        "styleMap",
        "templateContent",
        "unsafeHTML",
        "unsafeSVG",
        "until",
        "tpl",
        "constructor",
        "template",
        "_props",
        "_settings",
        "lit",
        "$container",
        "document",
        "createElement",
        "className",
        "on",
        "dispatch",
        "path",
        "$result",
        "querySelector",
        "includes",
        "metas",
        "dashName",
        "replace",
        "querySelectorAll",
        "prop",
        "propObj",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "props",
        "component"
    ],
    "mappings": "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",
    "sourcesContent": [
        "import __SWebComponent from './SWebComponent';\nimport { render, html } from 'lit-html';\nimport __throttle from '../function/throttle';\nimport __insertAfter from '../dom/insertAfter';\nimport __deepMerge from '../object/deepMerge';\nimport { asyncReplace } from 'lit-html/directives/async-replace.js';\nimport { asyncAppend } from 'lit-html/directives/async-append.js';\nimport { cache } from 'lit-html/directives/cache.js';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { guard } from 'lit-html/directives/guard';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { styleMap } from 'lit-html/directives/style-map.js';\nimport { templateContent } from 'lit-html/directives/template-content';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { unsafeSVG } from 'lit-html/directives/unsafe-svg';\nimport { until } from 'lit-html/directives/until.js';\n\n/**\n * @name              SLitHtmlWebComponent\n * @namespace           sugar.js.webcomponent\n * @type              Class\n * @extends           SWebComponent\n *\n * // TODO: example\n *\n * Base class that you can extends to create some SWebComponent with Lit Html rendering capabilities\n *\n * @param       {Object}        [settings={}]         A setting object to configure your webcomponent instance:\n * - defaultProps ({}) {Object}: Specify the default properties values\n * - physicalProps ([]) {Array<String>}: List all the properties that need to be ALWAYS on the html element (for styling purpose for example...)\n * - requiredProps ([]) {Array<String>}: List all the properties that MUST be passed to the component\n *\n * @example         js\n * import SLitHtmlWebComponent from '@coffeekraken/sugar/js/webcomponent/SLitHtmlWebComponent';\n * class MyCoolComponent extends SLitHtmlWebComponent {\n *\n *    constructor(settings = {}) {\n *      super(settings);\n *    }\n *\n * }\n *\n * @since       2.0.0\n * @see       https://lit-html.polymer-project.org/\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function SLitHtmlWebComponent(extend = HTMLElement) {\n  return class SLitHtmlWebComponent extends __SWebComponent(extend) {\n    /**\n     * @name        template\n     * @type        Function\n     * @static\n     *\n     * This static variable store a function that has as parameter the state object\n     * of your component and the lit-html ```html``` function that you can use in your template.\n     * This function MUST return a template string representing your component HTML depending on the state\n     * object at this point.\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    static template = (props, component, html) => html`\n      <p>\n        You need to specify a static template property for your component...\n      </p>\n    `;\n\n    /**\n     * @name        lit\n     * @type        Object\n     *\n     * Store all the litHtml functions that you may need\n     *\n     * @see       https://lit-html.polymer-project.org/guide/template-reference\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    lit = {\n      html,\n      render,\n      asyncReplace,\n      asyncAppend,\n      cache,\n      classMap,\n      ifDefined,\n      guard,\n      repeat,\n      styleMap,\n      templateContent,\n      unsafeHTML,\n      unsafeSVG,\n      until\n    };\n\n    /**\n     * @name        constructor\n     * @type        Function\n     * @constructor\n     *\n     * Constructor\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    constructor(settings = {}) {\n      super(__deepMerge({}, settings));\n      // generate a container for the component\n      this.$container = document.createElement('div');\n      this.$container.className = this.className();\n      // wait until mounted to render the component first time\n      this.on('mounted{1}', () => {\n        // insert the container in the document\n        __insertAfter(this.$container, this);\n        // render for the first time\n        this.render();\n        // dispatch a ready event\n        this.dispatch('ready', this);\n      });\n    }\n\n    /**\n     * @name          render\n     * @type          Function\n     *\n     * This method is called every time an update has been made in the state object\n     *\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    render = __throttle(function () {\n      const tpl = this.constructor.template(\n        this._props,\n        this,\n        this._settings,\n        this.lit\n      );\n      render(tpl, this.$container);\n    }, 50);\n\n    $(path) {\n      let $result = this.$container.querySelector(path);\n      if (!$result && !path.includes(`.${this.metas.dashName}__`)) {\n        path = path.replace(/^\\./, `.${this.metas.dashName}__`);\n        $result = this.$container.querySelector(path);\n      }\n      return $result;\n    }\n    $$(path) {\n      let $result = this.$container.querySelectorAll(path);\n      if (!$result && !path.includes(`.${this.metas.dashName}__`)) {\n        path = path.replace(/^\\./, `.${this.metas.dashName}__`);\n        $result = this.$container.querySelectorAll(path);\n      }\n      return $result;\n    }\n\n    /**\n     * @name          handleProp\n     * @type          Function\n     * @async\n     *\n     * This method is supposed to be overrided by your component integration\n     * to handle the props updates and delete actions.\n     * The passed description object has this format:\n     * ```js\n     * {\n     *    action: 'set|delete',\n     *    path: 'something.cool',\n     *    oldValue: '...',\n     *    value: '...'\n     * }\n     * ```\n     *\n     * @param     {String}      prop      The property name that has been updated or deleted\n     * @param     {Object}      descriptionObj      The description object that describe the update or delete action\n     * @return    {Promise}                A promise that has to be resolved once the update has been handled correctly. You have to pass the prop variable to the resolve function\n     *\n     * @since     2.0.0\n     * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n     */\n    handleProp(prop, propObj) {\n      return new Promise((resolve, reject) => {\n        // this.render();\n        setTimeout(() => {\n          this.render();\n        });\n        resolve(prop);\n      });\n    }\n  };\n}\n"
    ]
}
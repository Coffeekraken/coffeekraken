/**
  * @name            title-classes
  * @namespace       sugar.scss.components
  * @type            Mixin
  *
  * This mixin generate all the css needed to display properly some titles.
  *
  * @param       {Number}      [$count:6]                                How many titles to generate
  * @param          {String}        [$name:'h']                 The name you want for your titles
  * @param         {List<String>}    [$scope=null]       The scope you want to generate. Usually "all", "bare" or "style"            
  *
  * @example         html
  * <h1 class="#{sel(h1)}">My title</h1>
  * <h2 class="#{sel(h2)}">My title</h2>
  * <h3 class="#{sel(h3)}">My title</h3>
  *
  * @example           scss
  * @include Sugar.title-classes();
  *
  * @since       2.0.0
  * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
  */
  @mixin title-classes(
    $count: 6,
    $name: 'h',
    $scope: null
  ) {

   @for $i from 1 through $count {
   /**
    * @name              .#{sel(#{$name}#{$i})}, .#{sel(#{text-format-class()})} h#{$i}
    * @namespace         sugar.scss.components
    * @type              Classname
    *
    * This class can be applied on any ```#{$name}``` component to specify his size to ```#{$i}```
    *
    * @example         html
    * <h#{$i} class="#{sel(#{$name}#{$i})}">I'm a cool "#{$i}" title</h#{$i}>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
    */
    .#{sel(#{text-format-class()})} h#{$i},
    .#{sel(#{$name}#{$i})} {
       @include title($i, $scope);
    }
  }
}
  
/**
 * @name              title
 * @namespace         sugar.scss.components
 * @type              Mixin
 *
 * This mixin generate all the properties for a title depending on the parameters you set.
 *
 * @param         {Number}Â        $level          The title level you want to generate
 * @param         {List<String>}    [$scope=null]       The scope you want to generate. Usually "all", "bare" or "style"            
 *
 * @since       2.0.0
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin title(
  $level,
  $scope: null
) {
    @include scope('bare', $scope) {
        display: block;
        $size: setting('typography.titles.h#{$level}.font-size');
        font-size: font-size($size);
    }
    @include scope('style', $scope) {
        $family: setting('typography.titles.h#{$level}.font-family');
        font-family: font-family($family);

        $props: setting('typography.titles.h#{$level}');
        @each $prop in map-keys($props) {
            @if $prop != 'font-size' and $prop != 'font-family' {
                #{$prop}: map-get($props, $prop);
            }
        }
    }
}

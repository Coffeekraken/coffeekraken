/**
  * @name            title-classes
  * @namespace       scss.components
  * @type            Mixin
  *
  * This mixin generate all the css needed to display properly some titles.
  *
  * @param       {Number}      [$count:6]                                How many titles to generate
  *
  * @example         html
  * <h1 class="#{sel(h1)}">My title</h1>
  * <h2 class="#{sel(h2)}">My title</h2>
  * <h3 class="#{sel(h3)}">My title</h3>
  *
  * @example           scss
  * @include Sugar.title-classes();
  *
  * @since       2.0.0
  * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
  */
  @mixin title-classes(
    $count: 6,
    $name: 'h'
  ) {
    @include title-bare-classes($count, $name);
    @include title-style-classes($count, $name);
  }
  
  /**
   * @name              title-bare-classes
   * @namespace         scss.components
   * @type              Mixin
   *
   * This mixin generate all the bare classes depending on the parameters you set.
   *
   * @param       {Number}      [$count:6]                                How many titles to generate
   *
   * @since       2.0.0
   * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
   */
  @mixin title-bare-classes(
    $count: 6,
    $name: 'h'
  ) {
    @for $i from 1 through $count {
      /**
       * @name              #{sel(#{$name}#{$i})}, #{sel(#{text-format-class()})} h#{$i}
       * @namespace         scss.components
       * @type              Classname
       *
       * This class can be applied on any ```#{$name}``` component to specify his size to ```#{$i}```
       *
       * @example         html
       * <h#{$i} class="#{sel(#{$name}#{$i})}">I'm a cool "#{$i}" title</h#{$i}>
       *
       * @since       2.0.0
       * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
       */
      .#{sel(#{text-format-class()})} h#{$i},
      .#{sel(#{$name}#{$i})} {
        @include title-bare($i);
      }
    }
  }
  
  
  /**
   * @name              title-style-classes
   * @namespace         scss.components.btn
   * @type              Mixin
   *
   * This mixin generate all the style classes depending on the parameters you set.
   *
   * @param       {List}      [$colors:map-keys(setting('colors'))]       The colors you want to generate
   * @param       {String}      [$name='btn']                         The name to use for the generation of the classes
   *
   * @since       2.0.0
   * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
   */
  @mixin title-style-classes(
    $count: 6,
    $name: 'h'
  ) {
    @for $i from 1 through $count {
      /**
       * @name              #{sel(#{$name}#{$i})}, #{sel(#{text-format-class()})} h#{$i}
       * @namespace         scss.components
       * @type              Classname
       *
       * This class can be applied on any ```#{$name}``` component
       *
       * @example         html
       * <h#{$i} class="#{sel(#{$name}#{$i})}">I'm a cool "#{$i}" title</h#{$i}>
       *
       * @since       2.0.0
       * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
       */
    .#{sel(#{text-format-class()})} h#{$i},
    .#{sel(#{$name}#{$i})} {
        @include title-style($i);
      }
    }
  }
  
  
  /**
   * @name              title
   * @namespace         scss.components.title
   * @type              Mixin
   *
   * This mixin generate all the properties for a title depending on the parameters you set.
   *
   * @param         {Number}        $level          The title level you want to generate
   *
   * @since       2.0.0
   * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
   */
   @mixin title(
    $level
  ) {
    @include title-bare($level);
    @include title-style($level);
  }
  
  
  /**
   * @name              title-bare
   * @namespace         scss.components
   * @type              Mixin
   *
   * This mixin generate all the bare properties for a title depending on the parameters you set.
   *
   * @param       {Number}      $level          The title level you want to generate
   *
   * @since       2.0.0
   * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
   */
  @mixin title-bare(
    $level
  ) {
    display: block;
    $size: setting('typography.formats.h#{$level}.font-size');
    font-size: font-size($size);
  }
  
  
  /**
   * @name              title-style
   * @namespace         scss.components
   * @type              Mixin
   *
   * This mixin generate all the style properties for a title depending on the parameters you set.
   *
   * @param       {Number}      $level          The title level you want to generate
   *
   * @since       2.0.0
   * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
   */
  @mixin title-style(
    $level
  ) {
    $family: setting('typography.formats.h#{$level}.font-family');
    font-family: font-family($family);
  }
  
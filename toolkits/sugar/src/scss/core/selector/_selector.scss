/**
 * @name      selector
 * @namespace           scss.core.string
 * @type    function
 *
 * Process selector to avoid having --default, etc...
 *
 * @param 		{String} 		$selector 		The selector to process
 * @return 		{String} 						The processed selector
 *
 * @example 	scss
 * Sugar.selector('.input--default'); // => .input
 * Sugar.selector('.input-default'); // => .input
 * Sugar.selector('.input.default'); // => .input
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@function selector($selector) {
  $prefix: setting('classes.generate.prefix');
  @if $prefix {
    @if str-slice(selector, 1, 1) == '.' {
      $selector: str-slice($selector, 2, 999999999);
      $selector: '.#{$prefix}-#{$selector}';
    } @else if str-slice($selector, 1, 1) == '#' {
      $selector: str-slice($selector, 2, 999999999);
      $selector: '##{$prefix}-#{$selector}';
    } @else {
      $selector: '.#{$prefix}-#{$selector}';
    }
  }
  $selector: str-replace($selector, "--default", "");
  $selector: str-replace($selector, "-default", "");
  $selector: str-replace($selector, ".default", "");
  @return $selector;
}

@use 'sass:meta';
@use 'sass:string';

/**
 * @name                  mediaQuery
 * @namespace             sugar.scss.responsive.mixin
 * @type                  Mixin
 *
 * This mixin allows you to specify easily which media (defined in the media.config.js file) has to be targeted.
 * You can specify multiple medias if needed and specify how you want to target the specific media.
 * Check out the examples for more info.
 * By default, the Sugar toolkit offer these medias to be targeted:
 * - mobile
 * - mobile-portrait
 * - mobile-landscape
 * - tablet
 * - tablet-portrait
 * - tablet-landscape
 * - desktop
 *
 * You can use some "actions" to specify your target. The available actions are:
 * - '>': Greater than...
 * - '<': Lower than...
 * - '=': Equal...
 * - '>=': Greater or equal...
 * - '>=': Lower or equal...
 *
 * Your media queries can be something like this: '<tablet', '>mobile <desktop', '=tablet-landscape'.
 * If you don't specicy any action in your queries, by default the "defaultAction" property in the media.config.js file will
 * be applied and this default action is setted to ">=". This is setted like this to work in "mobile first" schema by default.
 *
 * @param       {String}        $media      The media(s) you want to target.
 *
 * @example       scss
 * .my-cool-container {
 *    background: red;
 *
 *    @include Sugar.media(tablet) {
 *      background: blue;
 *    }
 *
 *    @include Sugar.media('>=desktop') {
 *      background: green;
 *    }
 * }
 *
 * @since       2.0.0
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin mediaQuery($medias) {
  $mediaQueryString: mediaQueryString($medias);
  @media #{$mediaQueryString} {
    @content;
  }
}

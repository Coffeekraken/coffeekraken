


<!-- @namespace    sugar.scss.core.color -->
<!-- @name    color -->

# ```js color ```


Get a registered color by name or wrap a new color into a sugar.color call
to manipulate it with ease.
Supported actions :
- hue {Deg}
- lighten {Percent}
- darken {Percent}
- saturate {Percent}
- desaturate {Percent}
- grayscale {Boolean}
- complement {Boolean}
- invert {Boolean}
- opacity {Percent}
- mix {Color}
- lightness {Percent}
- saturation {Percent}

## Parameters

- **$color**  String,Color: The color name or the color value to manipulate

- **$modifier**  String,List: The color modifier to apply. Can be a registered modifier name or a modifier list



## Example (scss)

```scss
// default color (settings.colors.default)
$myColor : sugar.color(default);
// primary color (settings.colors.primary)
$primary : sugar.color(primary);
// manipulate
$primary-dark : sugar.color(primary, -darken 10%);
// registered modifier
$primary-light : sugar.color(primary, light);
// $name as list
$modified primary : sugar.color((primary, -darken 10%));
```


### Author
- **Olivier Bossel** <a href="mailto:olivier.bossel@gmail.com">olivier.bossel@gmail.com</a> 




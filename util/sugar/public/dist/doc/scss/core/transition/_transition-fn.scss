


<!-- @namespace    sugar.scss.core.transition -->
<!-- @name    transition -->

# ```js transition ```


Take a transition as parameter and parse it to return the {List} corresponding
The $transitions parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s
The $transitions argument will be parsed with the [./_parse-properties.scss] function.

## Parameters

- **$transitions**  List: The registered transition(s) name(s) or the transition(s) strings(s) to transform into list



## Example (scss)

```scss
// register a transition
\@include sugar.setup((
		transitions : (
			fast : all .2s ease-in-out 0s,
			// other transitions...
		)
));

// registered transition
.my-cool-element {
		transition : sugar.transition(fast);
		// transition : all .2s ease-in-out 0s;
}

// custom transition
.my-cool-element {
 	transition : sugar.transition(fast -delay .5s, fast width ease-in);
 	// transition : all .2s ease-in-out .5s, width .2s ease-in 0s;
}
```


### Author
- **Olivier Bossel** <a href="mailto:olivier.bossel@gmail.com">olivier.bossel@gmail.com</a> 




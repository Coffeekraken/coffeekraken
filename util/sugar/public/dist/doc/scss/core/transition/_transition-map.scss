


<!-- @namespace    sugar.scss.core.transition -->
<!-- @name    transition-map -->

# ```js transition-map ```


Take a transition as parameter and parse it to return the {Map} corresponding
The $transition parameter can be either a registered transition name or a custom css transition like : all .2s ease-in-out 2s
The $transition argument will be parsed with the [./_parse-properties.scss] function.

## Parameters

- **$transition**  List: The registered transition name or the transition string to transform into map



## Example (scss)

```scss
// register a transition
\@include sugar.setup((
		transitions : (
			fast : all .2s ease-in-out,
			// other transitions...
		)
));

// registered transition
sugar.transition-map(fast);
// {
// 	property : all,
// 	duration : .2s,
// 	ease : ease-in-out
// }

// custom transition
sugar.transition-map(fast -delay .5s);
// {
// 	property : all,
// 	duration : .2s,
// 	ease : ease-in-out,
// 	delay : .5s
// }
```


### Author
- **Olivier Bossel** <a href="mailto:olivier.bossel@gmail.com">olivier.bossel@gmail.com</a> 




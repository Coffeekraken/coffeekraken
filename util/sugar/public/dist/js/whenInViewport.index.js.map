{"version":3,"sources":["webpack:///./node_modules/in-viewport/in-viewport.js","webpack:///./src/js/dom/whenInViewport.js"],"names":["whenInViewport","elm","offset","Promise","resolve","reject"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxRA;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBe,SAASA,cAAT,CAAwBC,GAAxB,EAA0C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACvD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,6BACEJ,GADF,EAEE;AACEC,YAAM,EAAEA;AADV,KAFF,EAKE,MAAM;AACJE,aAAO,CAACH,GAAD,CAAP;AACD,KAPH;AASD,GAVM,CAAP;AAWD","file":"whenInViewport.index.js","sourcesContent":["module.exports = inViewport;\n\nvar instances = [];\nvar supportsMutationObserver = typeof global.MutationObserver === 'function';\n\nfunction inViewport(elt, params, cb) {\n  var opts = {\n    container: global.document.body,\n    offset: 0,\n    debounce: 15,\n    failsafe: 150\n  };\n\n  if (params === undefined || typeof params === 'function') {\n    cb = params;\n    params = {};\n  }\n\n  var container = opts.container = params.container || opts.container;\n  var offset = opts.offset = params.offset || opts.offset;\n  var debounceValue = opts.debounce = params.debounce || opts.debounce;\n  var failsafe = opts.failsafe = params.failsafe || opts.failsafe;\n\n  // ensure backward compatibility with failsafe as boolean\n  if (failsafe === true) {\n    failsafe = 150;\n  } else if(failsafe === false) {\n    failsafe = 0;\n  }\n\n  // failsafe check always needs to be higher than debounceValue\n  if (failsafe > 0 && failsafe < debounceValue) {\n      failsafe = debounceValue + 50;\n  }\n\n  for (var i = 0; i < instances.length; i++) {\n    if (\n      instances[i].container === container &&\n      instances[i]._debounce === debounceValue &&\n      instances[i]._failsafe === failsafe\n    ) {\n      return instances[i].isInViewport(elt, offset, cb);\n    }\n  }\n\n  return instances[\n    instances.push(createInViewport(container, debounceValue, failsafe)) - 1\n  ].isInViewport(elt, offset, cb);\n}\n\nfunction addEvent(el, type, fn) {\n  if (el.attachEvent) {\n    el.attachEvent('on' + type, fn);\n  } else {\n    el.addEventListener(type, fn, false);\n  }\n}\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this, args = arguments;\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n\n    function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }\n  };\n}\n\n// https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\nvar contains = function() {\n  if (!global.document) {\n    return true;\n  }\n  return global.document.documentElement.compareDocumentPosition ?\n    function (a, b) {\n      return !!(a.compareDocumentPosition(b) & 16);\n    } :\n    global.document.documentElement.contains ?\n      function (a, b) {\n        return a !== b && ( a.contains ? a.contains(b) : false );\n      } :\n      function (a, b) {\n        while (b = b.parentNode) {\n          if (b === a) {\n            return true;\n          }\n        }\n        return false;\n      };\n}\n\nfunction createInViewport(container, debounceValue, failsafe) {\n  var watches = createWatches();\n\n  var scrollContainer = container === global.document.body ? global : container;\n  var debouncedCheck = debounce(watches.checkAll(watchInViewport), debounceValue);\n\n  addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n  if (scrollContainer === global) {\n    addEvent(global, 'resize', debouncedCheck);\n  }\n\n  if (supportsMutationObserver) {\n    observeDOM(watches, container, debouncedCheck);\n  }\n\n  // failsafe check, every X we check for visible images\n  // usecase: a hidden parent containing eleements\n  // when the parent becomes visible, we have no event that the children\n  // became visible\n  if (failsafe > 0) {\n    setInterval(debouncedCheck, failsafe);\n  }\n\n  function isInViewport(elt, offset, cb) {\n    if (!cb) {\n      return isVisible(elt, offset);\n    }\n\n    var remote = createRemote(elt, offset, cb);\n    remote.watch();\n    return remote;\n  }\n\n  function createRemote(elt, offset, cb) {\n    function watch() {\n      watches.add(elt, offset, cb);\n    }\n\n    function dispose() {\n      watches.remove(elt);\n    }\n\n    return {\n      watch: watch,\n      dispose: dispose\n    };\n  }\n\n  function watchInViewport(elt, offset, cb) {\n    if (isVisible(elt, offset)) {\n      watches.remove(elt);\n      cb(elt);\n    }\n  }\n\n  function isVisible(elt, offset) {\n    if (!elt) {\n      return false;\n    }\n\n    if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n      return false;\n    }\n\n    // Check if the element is visible\n    // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n    if (!elt.offsetWidth || !elt.offsetHeight) {\n      return false;\n    }\n\n    var eltRect = elt.getBoundingClientRect();\n    var viewport = {};\n\n    if (container === global.document.body) {\n      viewport = {\n        top: -offset,\n        left: -offset,\n        right: global.document.documentElement.clientWidth + offset,\n        bottom: global.document.documentElement.clientHeight + offset\n      };\n    } else {\n      var containerRect = container.getBoundingClientRect();\n      viewport = {\n        top: containerRect.top - offset,\n        left: containerRect.left - offset,\n        right: containerRect.right + offset,\n        bottom: containerRect.bottom + offset\n      };\n    }\n\n    // The element must overlap with the visible part of the viewport\n    var visible =\n      (\n        eltRect.right >= viewport.left &&\n        eltRect.left <= viewport.right &&\n        eltRect.bottom >= viewport.top &&\n        eltRect.top <= viewport.bottom\n      );\n\n    return visible;\n  }\n\n  return {\n    container: container,\n    isInViewport: isInViewport,\n    _debounce: debounceValue,\n    _failsafe: failsafe\n  };\n}\n\nfunction createWatches() {\n  var watches = [];\n\n  function add(elt, offset, cb) {\n    if (!isWatched(elt)) {\n      watches.push([elt, offset, cb]);\n    }\n  }\n\n  function remove(elt) {\n    var pos = indexOf(elt);\n    if (pos !== -1) {\n      watches.splice(pos, 1);\n    }\n  }\n\n  function indexOf(elt) {\n    for (var i = watches.length - 1; i >= 0; i--) {\n      if (watches[i][0] === elt) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  function isWatched(elt) {\n    return indexOf(elt) !== -1;\n  }\n\n  function checkAll(cb) {\n    return function () {\n      for (var i = watches.length - 1; i >= 0; i--) {\n        cb.apply(this, watches[i]);\n      }\n    };\n  }\n\n  return {\n    add: add,\n    remove: remove,\n    isWatched: isWatched,\n    checkAll: checkAll\n  };\n}\n\nfunction observeDOM(watches, container, cb) {\n  var observer = new MutationObserver(watch);\n  var filter = Array.prototype.filter;\n  var concat = Array.prototype.concat;\n\n  observer.observe(container, {\n    childList: true,\n    subtree: true,\n    // changes like style/width/height/display will be catched\n    attributes: true\n  });\n\n  function watch(mutations) {\n    // some new DOM nodes where previously watched\n    // we should check their positions\n    if (mutations.some(knownNodes) === true) {\n      setTimeout(cb, 0);\n    }\n  }\n\n  function knownNodes(mutation) {\n    var nodes = concat.call([],\n      Array.prototype.slice.call(mutation.addedNodes),\n      mutation.target\n    );\n    return filter.call(nodes, watches.isWatched).length > 0;\n  }\n}\n","import __inViewport from 'in-viewport';\n\n/**\n * @name      whenInViewport\n * @namespace           js.dom\n * @type      Function\n *\n * Monitor an HTMLElement to be notified when it is in the viewport\n *\n * @param \t\t{HTMLElement} \t\t\t\telm \t\t\t\t\tThe element to monitor\n * @param \t\t{Number} \t\t\t\t\t[offset=50] \t\t\tAn offset that represent the distance before entering the viewport for the detection\n * @return \t\t(Promise) \t\t\t\t\t\t\t\t\t\t\tThe promise that will be resolved when the element is in the viewport\n *\n * @example \tjs\n * import whenInViewport from '@coffeekraken/sugar/js/dom/whenInViewport'\n * whenInViewport(myCoolHTMLElement).then((elm) => {\n * \t\t// do something with your element that has entered the viewport...\n * });\n *\n * @author \t\tOlivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)\n */\nexport default function whenInViewport(elm, offset = 50) {\n  return new Promise((resolve, reject) => {\n    __inViewport(\n      elm,\n      {\n        offset: offset\n      },\n      () => {\n        resolve(elm);\n      }\n    );\n  });\n}\n"],"sourceRoot":""}
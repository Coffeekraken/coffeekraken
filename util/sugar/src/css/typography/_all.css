/**
 * @name      rhythm-width
 * @namespace     sugar.scss.typography
 * @type      function
 *
 * Return the Map properties representation for the rhythme width
 * The rhythme width is the width of an element that target a certain number of letters by line
 *
 * @param 			{Integer} 			[$letters-count=settings.typography.line-letters-count] 		The number of letters to target by line
 * @return 			{Map} 																		The Map properties representation
 *
 * @example     scss
 * sugar.rhythm-width(50);
 * // return
 * // (
 * // 	display : block,
 * // 	max-width : 50ex
 * // )
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name        rhythm-width
 * @namespace     sugar.scss.typography
 * @type      mixin
 *
 * Print out the css on a container that will make the lines displays a maximum number of characters.
 *
 * @example 	scss
 * h1 {
 * 	\@include sugar.rhythm-width(45);
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    selection
 * @namespace     sugar.scss.typography
 * @type      mixin
 *
 * Set the user selection styling with ease
 *
 * @example 	scss
 * \@include sugar.selection() {
 * 	background: red;
 * 	color: white;
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name      text-hide
 * @namespace     sugar.scss.typography
 * @type      mixin
 *
 * Hide the contained text
 *
 * @example 	scss
 * .my-cool-container {
 * 	\@include sugar.text-hide();
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name      text-truncate
 * @namespace     sugar.scss.typography
 * @type      mixin
 *
 * Print out the style to truncate the text if needed
 *
 * @example 	scss
 * h1 {
 * 	\@include sugar.text-truncate();
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */

/*# sourceMappingURL=_all.css.map */
/**
 * @name        settings
 * @type        {Map}
 *
 * Store all the settings
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
/**
 * @name        current-context
 * @type        {String}
 * @private
 *
 * Store the current context
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
/**
 * @name          font-size
 * @type          {Number}
 * @private
 *
 * Store the current registered font size
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
/**
 * @name            $svg-icons
 * @type            {Map}
 * @private
 *
 * Store all the registered svg icons
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
/**
 * @name          classes
 * @type          {Map}
 * @private
 *
 * Store all the classes in their namespaces
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
 */
/**
 * @name      convert
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert a passed value to the wanted unit
 * The conversion between some units that depends on a font-size will take the settings.typography.font-size value as reference.
 *
 * Available conversions
 * - from px
 * 	- to em
 * 	- to rem
 * 	- to pt
 * 	- to %
 *
 * - from em
 * 	- to rem
 * 	- to px
 * 	- to pt
 * 	- to %
 *
 * - from pt
 * 	- to em
 * 	- to rem
 * 	- to px
 * 	- to pt
 * 	- to %
 *
 * - from rem
 * 	- to em
 * 	- to px
 * 	- to pt
 * 	- to %
 *
 * @param 			{Number} 		$value 			The value to convert
 * @param 			{String} 		$unit 			The unit in which to convert the value
 * @return 			{Number} 						The converted value
 *
 * @example     scss
 * // if the settings.typography.font-size === 16px
 * sugar.convert(24px, rem) // 1.5rem
 * sugar.convert(3rem, pt) // 36pt
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name      is-unitless
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Check if the passed variable is unitless or not
 *
 * @param         {Number}        $number       The number to check
 * @return        {Boolean}                     true if unitless, false if not
 *
 * @example       scss
 * sugar.is-unitless(20); // => true
 * sugar.is-unitless(10px); // => false
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    strip-units
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Return a number without any units
 *
 * @param 			{Number} 		$number 		The number to process
 * @return 			{Number} 						The number without units
 *
 * @example       scss
 * sugar.strip-units(12px); // => 12
 * sugar.strip-units(30rem); // => 30
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    to-em
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert the passed value to em
 *
 * @param 			{Number} 		$value 		The value to convert
 * @return 			{Number} 					The em converted value
 *
 * @example     scss
 * sugar.to-em(10px);
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    to-percent
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert the passed value to %
 *
 * @param 			{Number} 		$value 		The value to convert
 * @return 			{Number} 					The % converted value
 *
 * @example     scss
 * sugar.to-percent(10px);
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name      to-pt
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert the passed value to pt
 *
 * @param 			{Number} 		$value 		The value to convert
 * @return 			{Number} 					The pt converted value
 *
 * @example       scss
 * sugar.to-pt(10px);
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    to-px
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert the passed value to px
 *
 * @param 			{Number} 		$value 		The value to convert
 * @return 			{Number} 					The px converted value
 *
 * @example       scss
 * sugar.to-px(10rem);
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    to-rem
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Convert the passed value to rem
 *
 * @param 			{Number} 		$value 		The value to convert
 * @return 			{Number} 					The rem converted value
 *
 * @example     scss
 * sugar.to-rem(10px);
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
/**
 * @name    unit
 * @namespace     sugar.scss.unit
 * @type      function
 *
 * Return the unit of the passed number
 *
 * @param       {Number}      $number       The number to get the unit from
 * @return      {String}                    The unit
 *
 * @example     scss
 * sugar.unit(10px); // => px
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */

/*# sourceMappingURL=_all.css.map */
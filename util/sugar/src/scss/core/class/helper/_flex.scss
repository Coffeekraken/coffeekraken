@mixin classes-helper-flex() {

  @if class-match-namespace("sugar.helper.flex") {
    /**
    * @name 		s-flex
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex
    * @type        class
    *
    * Apply the display flex styling to the element
    *
    * @example 	html
    * <div class="s-flex">
    *   I'm in an element that has display flex applied
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex {
      display: flex;
    }
  }


  @if class-match-namespace("sugar.helper.flex-inline") {
    /**
    * @name 		s-flex-inline
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex-inline
    * @type        class
    *
    * Apply the display flex-inline styling to the element
    *
    * @example 	html
    * <div class="s-flex-inline">
    *   I'm in an element that has display flex-inline applied
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-inline {
      display: flex-inline;
    }
  }


  @if class-match-namespace("sugar.helper.flex.justify.start") {
    /**
    * @name 		s-flex-justify-start
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.justify.start
    * @type        class
    *
    * Apply the property ```justify-content``` to **start**
    *
    * @example 	html
    * <div class="s-flex-justify-start">
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-justify-start {
      display: flex;
      justify-content: start;
    }
  }


  @if class-match-namespace("sugar.helper.flex.justify.end") {
    /**
    * @name 		s-flex-justify-end
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.justify.end
    * @type        class
    *
    * Apply the property ```justify-content``` to **end**
    *
    * @example 	html
    * <div class="s-flex-justify-end">
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-justify-end {
      display: flex;
      justify-content: end;
    }
  }


  @if class-match-namespace("sugar.helper.flex.justify.center") {
    /**
    * @name 		s-flex-justify-center
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.justify.center
    * @type        class
    *
    * Apply the property ```justify-content``` to **center**
    *
    * @example 	html
    * <div class="s-flex-justify-center">
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-justify-center {
      display: flex;
      justify-content: center;
    }
  }


  @if class-match-namespace("sugar.helper.flex.justify.between") {
    /**
    * @name 		s-flex-justify-between
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.justify.between
    * @type        class
    *
    * Apply the property ```justify-content``` to **space-between**
    *
    * @example 	html
    * <div class="s-flex-justify-between">
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-justify-between {
      display: flex;
      justify-content: space-between;
    }
  }


  @if class-match-namespace("sugar.helper.flex.justify.around") {
    /**
    * @name 		s-flex-justify-around
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.justify.around
    * @type        class
    *
    * Apply the property ```justify-content``` to **space-around**
    *
    * @example 	html
    * <div class="s-flex-justify-around">
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-justify-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-justify-around {
      display: flex;
      justify-content: space-around;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.start") {
    /**
    * @name 		s-flex-align-start
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.start
    * @type        class
    *
    * Apply the property ```align-items``` to **flex-start**
    *
    * @example 	html
    * <div class="s-flex-align-start">
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-start {
      display: flex;
      align-items: flex-start;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.end") {
    /**
    * @name 		s-flex-align-end
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.end
    * @type        class
    *
    * Apply the property ```align-items``` to **flex-end**
    *
    * @example 	html
    * <div class="s-flex-align-end">
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-end {
      display: flex;
      align-items: flex-end;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.center") {
    /**
    * @name 		s-flex-align-center
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.center
    * @type        class
    *
    * Apply the property ```align-items``` to **center**
    *
    * @example 	html
    * <div class="s-flex-align-center">
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-center {
      display: flex;
      align-items: center;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.baseline") {
    /**
    * @name 		s-flex-align-baseline
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.baseline
    * @type        class
    *
    * Apply the property ```align-items``` to **baseline**
    *
    * @example 	html
    * <div class="s-flex-align-baseline">
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-baseline {
      display: flex;
      align-items: baseline;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.stretch") {
    /**
    * @name 		s-flex-align-stretch
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.stretch
    * @type        class
    *
    * Apply the property ```align-items``` to **stretch**
    *
    * @example 	html
    * <div class="s-flex-align-stretch">
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    *   <div>I will be aligned depending on the flex-align-{side} parent class</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-stretch {
      display: flex;
      align-items: stretch;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.self.start") {
    /**
    * @name 		s-flex-align-self-start
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.self.start
    * @type        class
    *
    * Apply the property ```align-self``` to **flex-start**
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item</div>
    *   <div class="s-flex-align-self-start>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-self-start {
      align-self: flex-start;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.self.end") {
    /**
    * @name 		s-flex-align-self-end
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.self.end
    * @type        class
    *
    * Apply the property ```align-self``` to **flex-end**
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item</div>
    *   <div class="s-flex-align-self-end>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-self-end {
      align-self: flex-end;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.self.center") {
    /**
    * @name 		s-flex-align-self-center
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.self.center
    * @type        class
    *
    * Apply the property ```align-self``` to **flex-center**
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item</div>
    *   <div class="s-flex-align-self-center>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-self-center {
      align-self: center;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.self.baseline") {
    /**
    * @name 		s-flex-align-self-baseline
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.self.baseline
    * @type        class
    *
    * Apply the property ```align-self``` to **flex-baseline**
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item</div>
    *   <div class="s-flex-align-self-baseline>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-self-baseline {
      align-self: baseline;
    }
  }


  @if class-match-namespace("sugar.helper.flex.align.self.stretch") {
    /**
    * @name 		s-flex-align-self-stretch
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.align.self.stretch
    * @type        class
    *
    * Apply the property ```align-self``` to **flex-stretch**
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item</div>
    *   <div class="s-flex-align-self-stretch>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-align-self-stretch {
      align-self: stretch;
    }
  }


  @if class-match-namespace("sugar.helper.flex.wrap.no") {
    /**
    * @name 		s-flex-nowrap
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.wrap.no
    * @type        class
    *
    * Apply the ```flex-wrap``` property to **nowrap**
    *
    * @example 	html
    * <div class="s-flex-nowrap">
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-nowrap {
      display: flex;
      flex-wrap: nowrap;
    }
  }


  @if class-match-namespace("sugar.helper.flex.wrap") {
    /**
    * @name 		s-flex-wrap
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.wrap
    * @type        class
    *
    * Apply the ```flex-wrap``` property to **wrap**
    *
    * @example 	html
    * <div class="s-flex-wrap">
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-wrap {
      display: flex;
      flex-wrap: wrap;
    }
  }


  @if class-match-namespace("sugar.helper.flex.wrap.reverse") {
    /**
    * @name 		s-flex-wrap-reverse
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.wrap.reverse
    * @type        class
    *
    * Apply the ```flex-wrap``` property to **wrap-reverse**
    *
    * @example 	html
    * <div class="s-flex-wrap-reverse">
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    *   <div>I'm a flex item</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    .s-flex-wrap-reverse {
      display: flex;
      flex-wrap: wrap-reverse;
    }
  }

  @if class-match-namespace("sugar.helper.flex.order") {
    $orderCount: setting('helpers.flex.order-count');
    /**
    * @name 		s-flex-order-{i}
    * @namespace           scss.core.class.helper
    * @class-namespace     sugar.helper.flex.order
    * @type        class
    *
    * Set the order on a specific flex item.
    * You will have <primary>#{$orderCount}</primary> available. This can be
    * changed by updating the **config.scss.helpers.flex.order-count** configuration.
    *
    * @example 	html
    * <div class="s-flex">
    *   <div>I'm a flex item 0</div>
    *   <div>I'm a flex item 1</div>
    *   <div>I'm a flex item 2</div>
    *   <div>I'm a flex item 3</div>
    *   <div class="s-flex-order-1">I'm a flex item 4</div>
    *   <div>I'm a flex item 5</div>
    *   <div>I'm a flex item 6</div>
    *   <div>I'm a flex item 7</div>
    *   <div>I'm a flex item 8</div>
    *   <div>I'm a flex item 9</div>
    * </div>
    *
    * @since       2.0.0
    * @author 			Olivier Bossel <olivier.bossel@gmail.com>   (https://olivierbossel.com)
    */
    @for $i from 1 through $orderCount {
      .s-flex-order-#{$i} {
        order: $i;
      }
    }
  }
}

@use "sass:math";
@use "sass:meta";
/**
 * @name    interpolate
 * @namespace     sugar.scss.core.size
 * @type    function
 *
 * Return the specified or calculated value of the given stack and size
 * depending on the settings.sizes ratios stack
 *
 * @param 		{Map} 			$value 			The stack from which to interpolate the value
 * @param 		{String} 		$size 			The size wanted (has to exist in the settings.sizes stack)
 * @return 		{Number} 						The $value.$size value or the interpolated one depending on the settings.sizes ratios
 *
 * @example     scss
 * // settings.sizes
 * \@include Sugar.setup((
 * 		sizes : (
 * 			small : 0.5,
 * 			default : 1, // default is ALWAYS 1
 * 			big : 1.5
 * 		)
 * ));
 *
 * $myStack : (
 * 		default : 3rem,
 * 		big : 6rem
 * )
 *
 * Sugar.interpolate($myStack, big) // 6rem cause specified in the $myStack value
 * Sugar.interpolate($myStack, small) // 1.5rem => calculated like : 3rem * 0.5 = 1.5rem
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@function interpolate($value, $size) {

  $value: test-argument(
    'sugar.interpolate',
    'value',
    number,
    $value
  );
  $size: test-argument(
    'sugar.interpolate',
    'size',
    string,
    $size
  );

  // get what we need to interpolate the value
  $ratio: setting("sizes.#{$size}");

  @if not $ratio {
    @error ('You have to specify a config.sizes.#{$size} ratio');
  }

  @if meta.type-of($value) == number {
    @return $value * $ratio;
  }

}

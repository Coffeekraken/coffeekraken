/**
 * This file is responsible to register the static helper classes like:
 *
 * - sugar.helper.pull.left : ```.pull-left```
 * - sugar.helper.pull.right : ```.pull-right```
 * - sugar.helper.position.relative : ```.relative```
 * - sugar.helper.position.absolute : ```.absolute```
 * - sugar.helper.clear.left : ```.clear-left```
 * - sugar.helper.clear.right : ```.clear-right```
 * - sugar.helper.clear.both : ```.clear```
 * - sugar.helper.pointer.events.all : ```.pointer-events-all```
 * - sugar.helper.pointer.events.none : ```.pointer-events-none```
 * - sugar.helper.display.show : ```.show```
 * - sugar.helper.display.show-inline : ```.show-inline```
 * - sugar.helper.display.hidden : ```.hidden```
 * - sugar.helper.display.hide : ```.hide```
 * - sugar.helper.display.visible : ```.visible```
 * - sugar.helper.display.invisible : ```.invisible```
 * - sugar.helper.display.visually-hidden : ```.visually-hidden```
 * - sugar.helper.text.hidden : ```.t-hidden```
 * - sugar.helper.text.truncate : ```.t-truncate```
 * - sugar.helper.text.align.left : ```.t-left```
 * - sugar.helper.text.align.right : ```.t-right```
 * - sugar.helper.text.align.center : ```.t-center```
 * - sugar.helper.text.align.justify : ```.t-justify```
 * - sugar.helper.text.transform.lowercase : ```.t-lowercase```
 * - sugar.helper.text.transform.uppercase : ```.t-uppercase```
 * - sugar.helper.text.transform.capitalize : ```.t-capitalize```
 * - sugar.helper.font.weight.bold : ```.f-bold```
 * - sugar.helper.font.weight.lighter : ```.f-lighter```
 * - sugar.helper.font.weight.bolder : ```.f-bolder```
 * - sugar.helper.font.weight.normal : ```.f-normal```
 * - sugar.helper.font.style.italic : ```.f-italic```
 * - sugar.helper.font.style.oblique : ```.f-oblique```
 * - sugar.helper.font.variant.small-caps : ```.f-small-caps```
 * - sugar.helper.block.align.center : ```.block-center```
 * - sugar.helper.ratio.21-9 : ```.ratio-21-9```
 * - sugar.helper.ratio.16-9 : ```.ratio-16-9```
 * - sugar.helper.ratio.4-3 : ```.ratio-4-3```
 * - sugar.helper.ratio.1-1 : ```.ratio-1-1```
 * - sugar.helper.size.abs.cover : ```.abs-cover```
 * - sugar.helper.size.abs.contain : ```.abs-contain```
 * - sugar.helper.size.abs.fit : ```.abs-fit```
 * - sugar.helper.media.object : ```.mo .mo--center .mo--end .mo__content```
 * - sugar.helper.clearfix.default : ```.clearfix```
 * - sugar.helper.clearfix.float : ```.clearfix-float```
 * - sugar.helper.clearfix.micro : ```.clearfix-micro```
 * - sugar.helper.clearfix.overflow : ```.clearfix-overflow```
 * - sugar.helper.clearfix.facebook : ```.clearfix-facebook```
 * - sugar.helper.no-transitions : ```.no-transitions```
 * - sugar.helper.clear-transitions : ```.clear-transitions```
 * - sugar.helper.no-animations : ```.no-animations```
 * - sugar.helper.clear-animations : ```.clear-animations```
 * - sugar.helper.no-transmations : ```.no-transmations```
 * - sugar.helper.clear-transmations : ```.clear-transmations```
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */

//
// Pull
//
@include register-class(pull-left, "sugar.helper.pull.left") {
  /**
	 * @name 		```.pull-left```
	 * Allows you to pull an element to the left side
	 * @styleguide 	Helpers / Pull
	 * @example 	html
   * <div>
	 * 	<span class="pull-left">Hello world</span>
	 * </div>
	 */
  float: left;
}
@include register-class(pull-right, "sugar.helper.pull.right") {
  /**
	 * @name 		```.pull-right```
	 * Allows you to pull an element to the right side
	 * @styleguide 	Helpers / Pull
	 * @example 	html
   * <div>
	 * 	<span class="pull-right">Hello world</span>
	 * </div>
	 */
  float: right;
}

//
// Position
//
@include register-class(relative, "sugar.helper.position.relative") {
  /**
	 * @name 		```.relative```
	 * Set an element position as ```relative```
	 * @styleguide 	Helpers / Position
	 * @example 	html
	 * <div class="relative">
	 * 	I'm relative now
	 * </div>
	 */
  position: relative;
}
@include register-class(absolute, "sugar.helper.position.absolute") {
  /**
	 * @name 		```.absolute```
	 * Set an element position as ```absolute```
	 * @styleguide 	Helpers / Position
	 * @example 	html
	 * <div class="absolute">
	 * 	I'm absolute now
	 * </div>
	 */
  position: absolute;
}

//
// Clear
//
@include register-class(clear-left, "sugar.helper.clear.left") {
  /**
	 * @name 		```.clear-left```
	 * Clear the left float on the element
	 * @styleguide 	Helpers / Float
	 * @example 	html
	 * <div class="clear-left">
	 * 	I clear the left float
	 * </div>
	 */
  clear: left;
}
@include register-class(clear-right, "sugar.helper.clear.right") {
  /**
	 * @name 		```.clear-right```
	 * Clear the right float on the element
	 * @styleguide 	Helpers / Float
	 * @example 	html
	 * <div class="clear-right">
	 * 	I clear the right float
	 * </div>
	 */
  clear: right;
}
@include register-class(clear, "sugar.helper.clear.both") {
  /**
	 * @name 		```.clear```
	 * Clear both float on the element
	 * @styleguide 	Helpers / Float
	 * @example 	html
	 * <div class="clear">
	 * 	I clear both floats
	 * </div>
	 */
  clear: both;
}

//
// Pointer
//
@include register-class(
  pointer-events-none,
  "sugar.helper.pointer.events.none"
) {
  /**
	 * @name 		```.pointer-events-none```
	 * Disable any pointer events
	 * @styleguide 	Helpers / Pointer events
	 * @example 	html
	 * <div class="pointer-events-none">
	 * 	I will not react to any pointer events
	 * </div>
	 */
  pointer-events: none;
}
@include register-class(
  pointer-events-all,
  "sugar.helper.pointer.events.all"
) {
  /**
	 * @name 		```.pointer-events-all```
	 * Disable any pointer events
	 * @styleguide 	Helpers / Pointer events
	 * @example 	html
	 * <div class="pointer-events-all">
	 * 	I will not react to any pointer events
	 * </div>
	 */
  pointer-events: all;
}

//
// Show / hide
//
@include register-class(block, "sugar.helper.display.block") {
  /**
	 * @name 		```.block```
	 * Display the element as ```block```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="block">
	 * 	I'm displayed as block
	 * </div>
	 */
  display: block;
}
@include register-class(inline, "sugar.helper.display.inline") {
  /**
	 * @name 		```.inline```
	 * Display the element as ```inline```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="inline">
	 * 	I'm displayed as inline
	 * </div>
	 */
  display: inline;
}
@include register-class(inline-block, "sugar.helper.display.inline-block") {
  /**
	 * @name 		```.inline-block```
	 * Display the element as ```inline-block```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="inline-block">
	 * 	I'm displayed as inline-block
	 * </div>
	 */
  display: inline-block;
}
@include register-class(show, "sugar.helper.display.show") {
  /**
	 * @name 		```.show```
	 * Display the element as ```block```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="show">
	 * 	I'm displayed
	 * </div>
	 */
  display: block;
}
@include register-class(show-inline, "sugar.helper.display.show-inline") {
  /**
	 * @name 		```.show-inline```
	 * Display the element as ```inline-block```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="show-inline">
	 * 	I'm inline displayed
	 * </div>
	 */
  display: inline-block;
}
@include register-class(hidden, "sugar.helper.display.hidden") {
  /**
	 * @name 		```.hidden```
	 * Hide the element by setting the display to ```none```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="hidden">
	 * 	I'm hidden
	 * </div>
	 */
  display: none;
}
@include register-class(hide, "sugar.helper.display.hide") {
  /**
	 * @name 		```.hide```
	 * Hide the element by setting the display to ```none```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="hide">
	 * 	I'm hidden
	 * </div>
	 */
  display: none;
}
@include register-class(visible, "sugar.helper.display.visible") {
  /**
	 * @name 		```.visible```
	 * Display the element by setting the visibility to ```visible```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="visible">
	 * 	I'm visible
	 * </div>
	 */
  visibility: visible;
}
@include register-class(invisible, "sugar.helper.display.invisible") {
  /**
	 * @name 		```.invisible```
	 * Display the element by setting the visibility to ```hidden```
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="invisible">
	 * 	I'm invisible
	 * </div>
	 */
  visibility: hidden;
}
@include register-class(
  visually-hidden,
  "sugar.helper.display.visually-hidden"
) {
  /**
	 * @name 		```.visually-hidden```
	 * Hide the element from display but not for SEO.
	 * This class use some tricks to make the element dissapear without using some ```display:none;```, etc...
	 * @styleguide 	Helpers / Display
	 * @example 	html
	 * <div class="visually-hidden">
	 * 	I'm only visually hidden
	 * </div>
	 */
  @include visually-hidden();
}

//
// Text
//
@include register-class(t-hidden, "sugar.helper.text.hidden") {
  /**
	 * @name 		```.t-hidden```
	 * Hide the text
	 * @styleguide 	Helpers / Text
	 * @example 	html
	 * <div class="t-hidden">
	 * 	I'm not visible
	 * </div>
	 */
  @include text-hide();
}
@include register-class(t-truncate, "sugar.helper.text.truncate") {
  /**
	 * @name 		```.t-truncate```
	 * Hide the text
	 * @styleguide 	Helpers / Text
	 * @example 	html
	 * <div class="t-truncate">
	 * 	I'm truncated cause I talk a lot too much Nulla mauris eros, finibus ac faucibus et, tempus quis risus. Praesent sit amet nulla vel libero euismod sodales eu nec.
	 * </div>
	 */
  @include text-truncate();
}
@include register-class(t-left, "sugar.helper.text.align.left") {
  /**
	 * @name 		```.t-left```
	 * Align the text to the left
	 * @styleguide 	Helpers / Text Align
	 * @example 	html
	 * <div class="t-left">
	 * 	I'm left aligned
	 * </div>
	 */
  text-align: left;
}
@include register-class(t-right, "sugar.helper.text.align.right") {
  /**
	 * @name 		```.t-right```
	 * Align the text to the right
	 * @styleguide 	Helpers / Text Align
	 * @example 	html
	 * <div class="t-right">
	 * 	I'm right aligned
	 * </div>
	 */
  text-align: right;
}
@include register-class(t-center, "sugar.helper.text.align.center") {
  /**
	 * @name 		```.t-center```
	 * Align the text to the center
	 * @styleguide 	Helpers / Text Align
	 * @example 	html
	 * <div class="t-center">
	 * 	I'm centered
	 * </div>
	 */
  text-align: center;
}
@include register-class(t-justify, "sugar.helper.text.align.justify") {
  /**
	 * @name 		```.t-justify```
	 * Make the text justified
	 * @styleguide 	Helpers / Text Align
	 * @example 	html
	 * <div class="t-justify">
	 * 	Nullam vel feugiat nunc. Phasellus facilisis, nisi sit amet viverra rhoncus, arcu risus volutpat dolor, sed euismod magna tellus ac purus. Praesent augue lorem, ullamcorper ac accumsan nec, suscipit eu.
	 * </div>
	 */
  text-align: justify;
}
@include register-class(
  t-lowercase,
  "sugar.helper.text.transform.lowercase"
) {
  /**
	 * @name 		```.t-lowercase```
	 * Transform the text to lowercase
	 * @styleguide 	Helpers / Text Transform
	 * @example 	html
	 * <div class="t-lowercase">
	 * 	I'M LOWERCASE
	 * </div>
	 */
  text-transform: lowercase;
}
@include register-class(
  t-uppercase,
  "sugar.helper.text.transform.uppercase"
) {
  /**
	 * @name 		```.t-uppercase```
	 * Transform the text to uppercase
	 * @styleguide 	Helpers / Text Transform
	 * @example 	html
	 * <div class="t-uppercase">
	 * 	I'm uppercase
	 * </div>
	 */
  text-transform: uppercase;
}
@include register-class(
  t-capitalize,
  "sugar.helper.text.transform.capitalize"
) {
  /**
	 * @name 		```.t-capitalize```
	 * Capizalize the words
	 * @styleguide 	Helpers / Text Transform
	 * @example 	html
	 * <div class="t-capitalize">
	 * 	I'm capitalized
	 * </div>
	 */
  text-transform: capitalize;
}

//
// Fonts
//
@include register-class(f-bold, "sugar.helper.font.weight.bold") {
  /**
	 * @name 		```.f-bold```
	 * Set the font-weight to ```bold```
	 * @styleguide 	Helpers / Font Weight
	 * @example 	html
	 * This <span class="f-bold">word</span> is bold
	 */
  font-weight: bold;
}
@include register-class(f-lighter, "sugar.helper.font.weight.lighter") {
  /**
	 * @name 		```.f-lighter```
	 * Set the font-weight to ```lighter```
	 * @styleguide 	Helpers / Font Weight
	 * @example 	html
	 * 	This <span class="f-lighter">word</span> is lighter
	 */
  font-weight: lighter;
}
@include register-class(f-bolder, "sugar.helper.font.weight.bolder") {
  /**
	 * @name 		```.f-bolder```
	 * Set the font-weight to ```bolder```
	 * @styleguide 	Helpers / Font Weight
	 * @example 	html
	 * This <span class="f-bolder">word</span> is bolder
	 */
  font-weight: bolder;
}
@include register-class(f-normal, "sugar.helper.font.weight.normal") {
  /**
	 * @name 		```.f-normal```
	 * Set the font-weight to ```normal```
	 * @styleguide 	Helpers / Font Weight
	 * @example 	html
	 * <div class="f-bold">
	 * 	This <span class="f-normal">word</span> is normal
	 * </div>
	 */
  font-weight: normal;
  font-style: normal;
}
@include register-class(f-italic, "sugar.helper.font.style.italic") {
  /**
	 * @name 		```.f-italic```
	 * Set the font-style to ```italic```
	 * @styleguide 	Helpers / Font
	 * @example 	html
	 * This <span class="f-italic">word</span> is italic
	 */
  font-style: italic;
}
@include register-class(f-oblique, "sugar.helper.font.style.oblique") {
  /**
	 * @name 		```.f-oblique```
	 * Set the font-style to ```oblique```
	 * @styleguide 	Helpers / Font Style
	 * @example 	html
	 * This <span class="f-oblique">word</span> is oblique
	 */
  font-style: oblique;
}
@include register-class(
  f-small-caps,
  "sugar.helper.font.variant.small-caps"
) {
  /**
	 * @name 		```.f-small-caps```
	 * Set the font-variant to ```small-caps```
	 * @styleguide 	Helpers / Font Variant
	 * @example 	html
	 * This <span class="f-small-caps">word</span> is small-caps
	 */
  font-variant: small-caps;
}

//
// Blocks
//
@include register-class(block-center, "sugar.helper.block.align.center") {
  /**
	 * @name 		```.block-center```
	 * Set the element to as ```display:block``` and center it
	 * @styleguide 	Helpers / Block
	 * @example 	html
	 * <div class="block-center bkg-primary" style="width:100px;">
	 * 	I'm a centered block
	 * </div>
	 */
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//
// Images
//
@include register-class(abs-cover, "sugar.helper.size.abs.cover") {
  /**
	 * @name 		```.abs-cover```
	 * Set a size that will cover the entire parent surface by positionning it in absolute
	 * @styleguide 	Helpers / Sizes
	 * @example 	html
	 * <div class="ratio-16-9">
	 * 	<img src="https://source.unsplash.com/random" class="abs-cover" />
	 * </div>
	 */
  @include size(cover, $position: absolute);
}
@include register-class(abs-contain, "sugar.helper.size.abs.contain") {
  /**
	 * @name 		```.abs-contain```
	 * Set a size that will contain the entire parent surface by positionning it in absolute
	 * @styleguide 	Helpers / Sizes
	 * @example 	html
	 * <div class="ratio-16-9">
	 * 	<img src="https://source.unsplash.com/random" class="abs-contain" />
	 * </div>
	 */
  @include size(contain, $position: absolute);
}
@include register-class(abs-fit, "sugar.helper.size.abs.fit") {
  /**
	 * @name 		```.abs-fit```
	 * Set a size that will fit the entire parent surface by positionning it in absolute
	 * @styleguide 	Helpers / Sizes
	 * @example 	html
	 * <div class="ratio-16-9">
	 * 	<img src="https://source.unsplash.com/random" class="abs-fit" />
	 * </div>
	 */
  @include size(fit, $position: absolute);
}

//
// Media object
//
@include register-class(mo, "sugar.helper.media.object") {
  /**
	 * @name 		```.mo .mo--center .mo__content```
	 * Famous media object class
	 * @styleguide 	Helpers / Media object
	 * @example 	html
	 * <div class="mo">
	 *   <div class="mo__content">
	 *     <img src="https://source.unsplash.com/random/100x100" />
	 *   </div>
	 *   <div class="mo__content">
	 *     <h2 class="h3">Hello World</h2>
	 *     <p class="p">Phasellus fringilla aliquet justo eget pulvinar. Donec in justo leo.</p>
	 *   </div>
	 * </div>
	 */
  display: flex;
  flex-wrap: nowrap;

  @at-root {
    .mo--center {
      align-items: center;
    }
    .mo--end {
      align-items: flex-end;
    }
    .mo__content {
      flex: 0 1 auto;
    }
  }
}

//
// Clearfix
//
@include register-class(clearfix, "sugar.helper.clearfix.default") {
  /**
	 * @name 		```.clearfix```
	 * Apply the micro clearfix on the element
	 * @styleguide 	Helpers / Clearfix
	 * @example 	html
	 * <div class="clearfix bkg-primary">
	 * 	<div class="pull-right">right pulled</div>
	 * </div>
	 * <div class="bkg-primary">
	 * 	<div class="pull-right">right pulled without clearfix</div>
	 * </div>
	 */
  @include clearfix(micro);
}
@include register-class(clearfix-float, "sugar.helper.clearfix.float") {
  /**
	 * @name 		```.clearfix-float```
	 * Apply the float clearfix on the element
	 * @styleguide 	Helpers / Clearfix
	 * @example 	html
	 * <div class="clearfix-float bkg-primary">
	 * 	<div class="pull-right">right pulled</div>
	 * </div>
	 * <div class="bkg-primary">
	 * 	<div class="pull-right">right pulled without clearfix</div>
	 * </div>
	 */
  @include clearfix(float);
}
@include register-class(clearfix-micro, "sugar.helper.clearfix.micro") {
  /**
	 * @name 		```.clearfix```
	 * Apply the micro clearfix on the element
	 * @styleguide 	Helpers / Clearfix
	 * @example 	html
	 * <div class="clearfix bkg-primary">
	 * 	<div class="pull-right">right pulled</div>
	 * </div>
	 * <div class="bkg-primary">
	 * 	<div class="pull-right">right pulled without clearfix</div>
	 * </div>
	 */
  @include clearfix(micro);
}
@include register-class(clearfix-overflow, "sugar.helper.clearfix.overflow") {
  /**
	 * @name 		```.clearfix-overflow```
	 * Apply the overflow clearfix on the element
	 * @styleguide 	Helpers / Clearfix
	 * @example 	html
	 * <div class="clearfix-overflow bkg-primary">
	 * 	<div class="pull-right">right pulled</div>
	 * </div>
	 * <div class="bkg-primary">
	 * 	<div class="pull-right">right pulled without clearfix</div>
	 * </div>
	 */
  @include clearfix(overflow);
}
@include register-class(clearfix-facebook, "sugar.helper.clearfix.facebook") {
  /**
	 * @name 		```.clearfix-facebook```
	 * Apply the facebook clearfix on the element
	 * @styleguide 	Helpers / Clearfix
	 * @example 	html
	 * <div class="clearfix-facebook bkg-primary">
	 * 	<div class="pull-right">right pulled</div>
	 * </div>
	 * <div class="bkg-primary">
	 * 	<div class="pull-right">right pulled without clearfix</div>
	 * </div>
	 */
  @include clearfix(facebook);
}

//
// Ratios
//
@include register-class(ratio-21-9, "sugar.helper.ratio.21-9") {
  /**
	 * @name 		```.ratio-21-9```
	 * Keep a 16/9 ratio on a particular element. Applied by setting height to 0 and paddingtop to 100% / 16 * 9
	 * @styleguide 	Helpers / Ratios
	 * @example 	html
	 * <div class="bkg-primary ratio-21-9"></div>
	 */
  @include ratio(21/9);
}
@include register-class(ratio-16-9, "sugar.helper.ratio.16-9") {
  /**
	 * @name 		```.ratio-16-9```
	 * Keep a 16/9 ratio on a particular element. Applied by setting height to 0 and paddingtop to 100% / 16 * 9
	 * @styleguide 	Helpers / Ratios
	 * @example 	html
	 * <div class="bkg-primary ratio-16-9"></div>
	 */
  @include ratio(16/9);
}
@include register-class(ratio-4-3, "sugar.helper.ratio.4-3") {
  /**
	 * @name 		```.ratio-4-3```
	 * Keep a 4/3 ratio on a particular element. Applied by setting height to 0 and paddingtop to 100% / 4 * 3
	 * @styleguide 	Helpers / Ratios
	 * @example 	html
	 * <div class="bkg-primary ratio-4-3"></div>
	 */
  @include ratio(4/3);
}
@include register-class(ratio-1-1, "sugar.helper.ratio.1-1") {
  /**
	 * @name 		```.ratio-1-1```
	 * Keep a 1/1 ratio on a particular element. Applied by setting height to 0 and paddingtop to 100%
	 * @styleguide 	Helpers / Ratios
	 * @example 	html
	 * <div class="bkg-primary ratio-1-1"></div>
	 */
  @include ratio(1);
}

//
// Transition / Animation
//
@include register-class(no-transitions, "sugar.helper.no-transitions") {
  /**
	 * @name 		```.no-transitions```
	 * Disable the transitions <span class="f-bold">only on the element</span>
	 * @styleguide 	Helpers / Transitions
	 * @example 	html
	 * <div class="no-transitions">
	 * 	I have no more transitions
	 * 	<div>But I have</div>
	 * </div>
	 */
  &,
  &:before,
  &:after {
    transition: none !important;
  }
}
@include register-class(clear-transitions, "sugar.helper.clear-transitions") {
  /**
	 * @name 		```.clear-transitions```
	 * Disable the transitions <span class="f-bold">on the element and all his children</span>
	 * @styleguide 	Helpers / Transitions
	 * @example 	html
	 * <div class="clear-transitions">
	 * 	I have no more transitions
	 * 	<div>Me neither</div>
	 * </div>
	 */
  &,
  &:before,
  &:after,
  & *,
  & *:before,
  & *:after {
    transition: none !important;
  }
}
@include register-class(no-animations, "sugar.helper.no-animations") {
  /**
	 * @name 		```.no-animations```
	 * Disable the animations <span class="f-bold">only on the element</span>
	 * @styleguide 	Helpers / Animations
	 * @example 	html
	 * <div class="no-animations">
	 * 	I have no more animations
	 * 	<div>But I have</div>
	 * </div>
	 */
  &,
  &:before,
  &:after {
    animation: none !important;
  }
}
@include register-class(clear-animations, "sugar.helper.clear-animations") {
  /**
	 * @name 		```.clear-animations```
	 * Disable the transitions <span class="f-bold">on the element and all his children</span>
	 * @styleguide 	Helpers / Animations
	 * @example 	html
	 * <div class="clear-animations">
	 * 	I have no more animations
	 * 	<div>Me neither</div>
	 * </div>
	 */
  &,
  &:before,
  &:after,
  & *,
  & *:before,
  & *:after {
    animation: none !important;
  }
}
@include register-class(no-transmations, "sugar.helper.no-transmations") {
  /**
	 * @name 		```.no-transmations```
	 * Disable the animations and transitions <span class="f-bold">only on the element</span>
	 * @styleguide 	Helpers / Transmations
	 * @example 	html
	 * <div class="no-transmations">
	 * 	I have no more animations or transitions
	 * 	<div>But I have</div>
	 * </div>
	 */
  &,
  &:before,
  &:after {
    transition: none !important;
    animation: none !important;
  }
}
@include register-class(
  clear-transmations,
  "sugar.helper.clear-transmations"
) {
  /**
	 * @name 		```.clear-transmations```
	 * Disable the animations and transitions <span class="f-bold">on the element and all his children</span>
	 * @styleguide 	Helpers / Transmations
	 * @example 	html
	 * <div class="clear-transmations">
	 * 	I have no more animations or transitions
	 * 	<div>Me neither</div>
	 * </div>
	 */
  &,
  &:before,
  &:after,
  & *,
  & *:before,
  & *:after {
    transition: none !important;
    animation: none !important;
  }
}

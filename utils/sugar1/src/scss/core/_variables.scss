/**
 * Store the current context
 * @type      {String}
 */
$current-context: default !default;

/**
 * Store the component name setted by the sugar.component-name mixin
 * @type      {String}
 */
$component-name: null !default;

/**
 * Store the current registered font size
 * @type      {Number}
 */
$font-size: null !default;

/**
 * Stpre aéé the classes in their namespaces
 * @type      (Map)
 */
$classes: () !default; // store all the classes in their namespaces

/**
 * Some variables used in the math functions
 */
$math-pi: 3.14159265359;
$math-default-threshold: $math-pi/180/20;
$math-precision: 10;

/**
 * Store all the settings
 * @type      {Map}
 */
$settings: (
  // store all the settings
  unit: rem,
  // set the base unit to use across the system
  reset: true,
  // by default, a reset will be applied
  border-box: true,
  // set if need to set all as border box model
  sizes: (
    // store all the ratios between sizes
    smaller: 0.3,
    small: 0.6,
    default: 1,
    // the default size is required and need to stay to 1
    medium: 1.4,
    big: 2,
    bigger: 3
  ),
  typography: (
    font-family: default,
    // set the font to use by default
    font-size: 14px,
    // default font-size
    font-sizes: null,
    // map of font-sizes by media (size : media)
    line-letters-count: 55,
    // optimal letters count in a line
    font-format: (
      // font format used in font-face
      eot: embedded-opentype,
      woff2: woff2,
      woff: woff,
      ttf: truetype,
      otf: opentype,
      svg: svg,
      svgz: svgz
    )
  ),
  look-and-feel: (
    // store some settings for the look and feel
    border-radius: 0em,
    padding-vertical: 1.4em,
    padding-horizontal: 0.8em,
    disabled-opacity: 0.5,
    line-height: 1.4
  ),
  spaces: (
    // store all the spaces available
    smaller: 5px,
    small: 10px,
    default: 20px,
    medium: 40px,
    big: 70px,
    bigger: 100px
  ),
  colors: (
    // store all the colors
    default: (
      color: #848e91
    ),
    title: (
      color: #2b3438
    ),
    text: (
      color: default
    ),
    link: (
      color: primary
    ),
    primary: (
      color: #f2bc2b
    ),
    secondary: (
      color: #2b3438
    ),
    success: (
      color: #5cb85c
    ),
    warning: (
      color: #f0ad4e
    ),
    error: (
      color: #d9534f
    ),
    info: (
      color: #2199e8
    )
  ),
  modular-scale: (
    base: 1rem,
    ratio: 1.33
  ),
  text-format: (
    scope-class: tf
  ),
  vertical-rhythm: (
    // Vertical rhythme options
    scope-class: vr // the class in which the vertical rhythme will be applied
  ),
  fonts: (
    // store all the fonts
    default: (
      font-family: (
        "Helvetica Neue",
        Helvetica,
        Verdana,
        Arial,
        sans-serif
      ),
      font-weight: normal,
      cap-height: 0.65
    ),
    quote: (
      font-family: (
        Palatino,
        Times,
        Georgia,
        serif
      ),
      font-weight: normal,
      cap-height: 0.65
    ),
    code: (
      font-family: (
        Menlo,
        Monaco,
        Consolas,
        "Courier New",
        monospace
      ),
      font-weight: normal,
      cap-height: 0.65
    )
  ),
  filters: (// store all the registered filters
  ),
  transitions: (
    // store all the transition settings
    fast: all 0.1s ease-in-out 0s,
    default: all 0.2s ease-in-out 0s, // default transition
    slow: all 0.5s ease-in-out 0s
  ),
  debug: (
    test-arguments: true
  )
) !default;

/**
 * @name      loader-spinner
 * Generate a spinner loader
 *
 * @param         {String}        [$type=linear]          Specify the type of spinner loader that you want. Can be elastic, linear, fade-in, fade-out or fade-in-out
 * @param         {Number}        [$size=1em]             Specify the size of the spinner loader
 * @param         {Number}        [$width=0.3em]          Specify the width of the spinner loader
 * @param         {Color}         [$color=color(primary)]   Specify the color of the spinner loader
 * @param         {Color}         [$bgcolor=inherit]        Specify the background color of the spinner loader
 * @param         {Number}        [$length=3/4]           The length of the spinner loader
 * @param         {Second}        [$a-duration=1s]        The duration of the spinner loader animation
 * @param         {String}        [$a-ease=null]          Specify an ease to use for the spinner loader animation
 *
 * @example     scss
 * .my-cool-loader {
 *    @include sugar.loader-spinner();
 * }
 *
 * @author 			Olivier Bossel <olivier.bossel@gmail.com> (https://olivierbossel.com)
 */
@mixin loader-spinner(
  $type: linear,
  $size: 1em,
  $width: 0.3em,
  $color: color(primary),
  $bgcolor: inherit,
  $length: 3/4,
  $a-duration: 1s,
  $a-ease: null
) {
  $type: test-argument(
    "sugar.loader-spinner",
    "type",
    (elastic, linear, fade-in, fade-out, fade-in-out),
    $type
  );
  $size: test-argument("sugar.loader-spinner", "size", number, $size);
  $width: test-argument("sugar.loader-spinner", "width", number, $width);
  $color: test-argument("sugar.loader-spinner", "color", color, $color);
  @if $bgcolor != inherit {
    $bgcolor: test-argument("sugar.loader-spinner", "bgcolor", color, $bgcolor);
  }
  $length: test-argument("sugar.loader-spinner", "length", number, $length);
  $a-duration: test-argument(
    "sugar.loader-spinner",
    "a-duration",
    second,
    $a-duration
  );
  $a-ease: test-argument("sugar.loader-spinner", "a-ease", string, $a-ease);

  @if $type == elastic and not $a-ease {
    $a-ease: ease;
  } @else if not $a-ease {
    $a-ease: linear;
  }

  $a-name: str-unquote("spinner-#{str-unique-id()}");
  $p-step: 1 / $a-duration;

  @if $type == linear {
    & {
      font-size: $size;
      position: relative;
      text-indent: -9999em;
      border-top: $width solid color-transparentize($color, 0.8);
      border-right: $width solid color-transparentize($color, 0.8);
      border-bottom: $width solid color-transparentize($color, 0.8);
      border-left: $width solid color-transparentize($color, 0);
      transform: translateZ(0);
      animation: $a-name $a-duration $a-ease 0s infinite;
    }
    &,
    &:after {
      border-radius: 50%;
      width: 1em;
      height: 1em;
    }
    @keyframes #{$a-name} {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  } @else if $type == elastic {
    background: inherit;
    &,
    &:before,
    &:after {
      border-radius: 50%;
    }
    &:before,
    &:after {
      position: absolute;
      content: "";
    }
    &:before {
      width: 5.2em;
      height: 10.2em;
      background: $bgcolor;
      border-radius: 10.2em 0 0 10.2em;
      top: -0.1em;
      left: -0.1em;
      transform-origin: 5.2em 5.1em;
      animation: $a-name $a-duration infinite $a-ease $a-duration * $length;
    }
    & {
      font-size: $size / 10;
      text-indent: -99999em;
      position: relative;
      width: 10em;
      height: 10em;
      box-shadow: inset 0 0 0 $width $color;
      transform: translateZ(0);
    }
    &:after {
      width: 5.2em;
      height: 10.2em;
      background: $bgcolor;
      border-radius: 0 10.2em 10.2em 0;
      top: -0.1em;
      left: 5.1em;
      transform-origin: 0px 5.1em;
      animation: $a-name $a-duration infinite ease;
    }
    @keyframes #{$a-name} {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  } @else if $type == fade-out {
    & {
      font-size: $size;
      text-indent: -9999em;
      width: 1em;
      height: 1em;
      border-radius: 50%;
      background: $color;
      background: linear-gradient(
        to right,
        color-transparentize($color, 0) 10%,
        color-transparentize($color, 1) 42%
      );
      position: relative;
      animation: $a-name $a-duration $a-ease 0s infinite;
      transform: translateZ(0);
    }
    &:before {
      width: 50%;
      height: 50%;
      background: $color;
      border-radius: 100% 0 0 0;
      position: absolute;
      top: 0;
      left: 0;
      content: "";
    }
    $width: $size - $width * 2;
    &:after {
      background: $bgcolor;
      width: $width;
      height: $width;
      border-radius: 50%;
      content: "";
      margin: auto;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
    }
    @keyframes #{$a-name} {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  } @else if $type == fade-in {
    & {
      font-size: $size;
      text-indent: -9999em;
      width: 1em;
      height: 1em;
      border-radius: 50%;
      background: $color;
      background: linear-gradient(
        to left,
        color-transparentize($color, 1) 52%,
        color-transparentize($color, 0) 90%
      );
      position: relative;
      animation: $a-name $a-duration $a-ease 0s infinite;
      transform: translateZ(0);
    }
    &:before {
      width: 50%;
      height: 50%;
      background: $color;
      border-radius: 0 0 0 100%;
      position: absolute;
      bottom: 0;
      left: 0;
      content: "";
    }
    $width: $size - $width * 2;
    &:after {
      background: $bgcolor;
      width: $width;
      height: $width;
      border-radius: 50%;
      content: "";
      margin: auto;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
    }
    @keyframes #{$a-name} {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  } @else if $type == fade-in-out {
    font-size: $size;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    //overflow: hidden;
    &:before {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background: linear-gradient($color, color-transparentize($color, 1) 60%);
      animation: $a-name $a-duration infinite linear;
    }
    $width: $size - $width * 2;
    &:after {
      background: $bgcolor;
      width: $width;
      height: $width;
      border-radius: 50%;
      content: "";
      margin: auto;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
    }
    @keyframes #{$a-name} {
      to {
        transform: rotate(360deg);
      }
    }
  }
}

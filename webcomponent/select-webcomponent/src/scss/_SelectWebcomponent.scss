@use 'sugar/index' as sugar;
@use 'form-style/index' as form-style;

%select {
}
%select__dropdown {
  // opacity:0;
  // pointer-events:none;
  // position:absolute;
  // top:100%; left:0;
  // z-index: 1;
  // width:100%;
  // height:0;
  // overflow-y: hidden;
}
%select__selection {
  // vertical-align: middle;
  // > * {
  // 	display:inline-block;
  // 	vertical-align: middle;
  // }
}
%select--dropup__dropdown {
  // top:auto; bottom:calc(#{unquote("100% + #{10px}")});
}
%select--opened__dropdown {
  // opacity:1;
  // pointer-events:all;
  // height:auto;
}
%select__search-field {
}
%select__options {
  // overflow-y: auto;
  // overflow-x: hidden;
  // height: 100%;
  // max-height: 100vh;
}
%select__option {
  // list-style: none;
  // cursor: pointer;
}
%select__option--disabled {
  // pointer-events: none;
}
%select__option--hidden {
  // display:none;
}
%select__selection {
}
%select__selection-tag {
  display: inline-block;
}
%select__reset {
  background-size: 100% 100%;
  background-color: transparent;
  border: none;
  position: absolute;
}
%select__selection-tag-close {
  background-size: 100% 100%;
}

/**
 * @name      classes
 * @namespace     select-webcomponent
 * @type        Mixin
 *
 * Provide all the classes of the s-select component for a default style
 * Styling options:
 * - ```[color="{$color}"]``` : apply a color to the select component
 *
 * @param 		{List<Color>} 		[$colors=default primary secondary] 		The colors to generate
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes($colors: default primary secondary) {
  @include classes-bare();
  @include classes-style($colors);
}

/**
 * @name      classes-bare
 * @namespace     select-webcomponent
 * @type        Mixin
 *
 * Provide the bare styling for the s-select classes
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes-bare() {
  // silent classes
  .ck-select {
    @extend %select !optional;
  }
  .ck-select__dropdown {
    @extend %select__dropdown !optional;
  }
  .ck-select__selection {
    @extend %select__selection !optional;
  }
  .ck-select--dropup .ck-select__dropdown {
    @extend %select--dropup__dropdown !optional;
  }
  .ck-select--opened .ck-select__dropdown {
    @extend %select--opened__dropdown !optional;
  }
  .ck-select__options {
    @extend %select__options !optional;
  }
  .ck-select__option {
    @extend %select__option !optional;
  }
  .ck-select__option--disabled {
    @extend %select__option--disabled !optional;
    opacity: sugar.lnf(disabled-opacity);
  }
  .ck-select__option--hidden {
    @extend %select__option--hidden !optional;
  }
  .ck-select__selection-tag {
    @extend %select__selection-tag !optional;
  }
  .ck-select__selection-tag-close {
    @extend %select__selection-tag-close !optional;
    height: 0.8em;
    width: 0.8em;
    vertical-align: middle;
    cursor: pointer;
    display: inline-block;
  }
  .ck-select__reset {
    @extend %select__reset !optional;
    right: sugar.lnf(padding-vertical);
    top: 50%;
    transform: translateY(-50%);
    height: 1em;
    width: 1em;
    vertical-align: middle;
    cursor: pointer;
    outline: none;
    font-size: 0.8em;
  }

  // style
  .ck-select__search-field {
    border-radius: sugar.lnf(border-radius);
    padding: sugar.lnf(padding-horizontal) sugar.lnf(padding-vertical);
  }

  .ck-select {
    @include form-style.select-bare();
    $paddingTag: sugar.lnf(padding-horizontal);
    $padding: sugar.lnf(padding-horizontal) * 0.6;

    $h: 1em;
    &.ck-select--multiple {
      transition: none;

      &:not(.ck-select--placeholder) {
        padding: $padding / 2 sugar.lnf(padding-vertical);
        height: auto !important;
      }
    }
    .ck-select__dropdown {
      border-radius: sugar.lnf(border-radius);
    }
    .ck-select__search-container {
      padding: sugar.lnf(padding-horizontal);
    }
    .ck-select__search-field {
      @include form-style.input-bare();
      border-radius: sugar.lnf(border-radius);
    }
    .ck-select__selection-tag {
      border-radius: sugar.lnf(border-radius);
      font-size: 0.9em;
      margin-right: sugar.lnf(padding-vertical) / 3;
      margin-top: $padding / 2;
      margin-bottom: $padding / 2;

      height: calc(#{$paddingTag} + 0.9em);
      line-height: calc(#{$paddingTag} + 0.9em + 0.1em);

      padding: 0 sugar.lnf(padding-vertical) / 2;
      position: relative;
      left: - sugar.lnf(padding-vertical) / 2;
    }
    .ck-select__selection-tag-close {
      margin-left: sugar.lnf(padding-vertical) / 3;
    }
    .ck-select__option:not(.ck-select__option--custom),
    .ck-select__optgroup:not(.ck-select__optgroup--custom) {
      padding: sugar.lnf(padding-horizontal) sugar.lnf(padding-vertical);
    }
    .ck-select__option--in-optgroup {
      padding-left: sugar.lnf(padding-vertical) * 1.5 !important;
    }
  }
}

/**
 * @name      classes-style
 * @namespace     select-webcomponent
 * @type        Mixin
 *
 * Provide all the style classes of the s-select component for a default style
 * Styling options:
 * - ```[color="{$color}"]``` : apply a color to the select component
 *
 * @param 		{List<Color>} 		[$colors=default primary secondary] 		The colors to generate
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes-style($colors: default primary secondary) {
  .ck-select {
    background-color: white;
    @include form-style.select-style(default);

    @include sugar.vertical-rhythm {
      margin-bottom: 1rem;
    }

    select:disabled + & {
      opacity: sugar.lnf(disabled-opacity);
    }
  }
  .ck-select__search-field {
    width: 100%;
    height: 100%;
    outline: none;
    color: sugar.color(text);
    background-color: white;
    border: 1px solid sugar.color(default, -opacity 0.5);

    @include sugar.input-placeholder() {
      color: sugar.color(text, -opacity 0.4);
    }
  }
  .ck-select__dropdown {
    top: calc(#{unquote("100% + #{3px}")});
    margin-top: sugar.to-rem(20px);
    @include sugar.transition(fast);
    background: white;
    @include sugar.effect-depth(10);
  }
  .ck-select--opened .ck-select__dropdown {
    margin-top: 0;
  }
  .ck-select {
    .ck-select__optgroup:not(.ck-select__optgroup--custom) {
      font-weight: bold;
    }
  }
  .ck-select__option {
    color: sugar.color(text);
    @include sugar.transition(background fast);
  }
  select[required] + .ck-select--placeholder {
    .ck-select__selection {
      &:after {
        content: " *";
        color: sugar.color(error);
        font-size: 0.7em;
      }
    }
  }

  @each $color in $colors {
    $sel: ".ck-select--#{$color}";
    select[is="ck-select"][color="#{$color}"] + .ck-select,
    #{sugar.selector($sel)} {
      @include form-style.select-style($color);

      .ck-select__search-container {
        background: sugar.color($color, -opacity 0.1);
        border-bottom: 1px solid sugar.color($color, -opacity 0.2);
      }
      .ck-select__selection-tag {
        background: sugar.color($color, -opacity 0.6);
        color: white;
      }
      .ck-select__reset,
      .ck-select__selection-tag-close {
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><style>path{fill%3A#{sugar.str-replace("#{sugar.color($color)}","#","%23")};}</style><path d="M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z"/></svg>');
        opacity: 0.65;

        &:hover {
          opacity: 1;
        }
      }
      .ck-select__option--selected {
        background: sugar.color($color, -opacity 0.2);
      }
      .ck-select__option {
        &.active {
          background: sugar.color($color, -opacity 0.3);
        }
        &:hover,
        &:active {
          background: sugar.color($color, -opacity 0.6);
          color: white;
        }
      }
      .ck-select__search-result {
        background: sugar.color($color);
        color: white;
      }
    }
  }
}

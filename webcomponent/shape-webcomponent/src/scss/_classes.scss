@use '@coffeekraken/sugar/index' as sugar;

/**
 * @name 					classes
 * @namespace 		drawer-webcomponent
 * @type 					Mixin
 *
 * Print out the bare and style component css
 *
 * @param 	{String} 			$name 				The name of the drawer
 * @param 	{Number} 			[$size=400px] 		The size of the drawer
 * @param 	{String} 			[$side=left] 		The side of the drawer. Can be top left bottom or right
 * @param 	{String} 			[$type=push] 		The type of drawer. Can be push, slide or reveal
 * @param 	{String} 			[$method=translate] The method to animate the drawer. Can be translate of position
 *
 * @example 	scss
 * \@use 'node_modules/@coffeekraken/drawer-webcomponent/index' as drawer-webcomponent;
 * \@include drawer-webcomponent.classes(
 * 	$name : menu,
 * 	$side : right
 * );
 * \@include drawer-webcomponent.element(content) {
 * 	\@include drawer-webcomponent.opened(menu) {
 *  	transform: scale(.9);
 *  }
 * }
 *
 * @author 		Olivier Bossel <olivier.bossel@gmail.com>
 */
@mixin classes(
	$name,
	$size : 400px,
	$side : left,
	$type : push,
	$method : translate
) {
	$_s-drawer-current-name : $name !global;
	@include classes-bare($name, $size, $side, $type, $method) {
		@content;
	}
	$_s-drawer-current-name : null !global;
}

$_s-drawer-current-name : null;
@function current-name() {
	@return $_s-drawer-current-name;
}

@mixin classes-bare(
	$name,
	$size : 400px,
	$side : left,
	$type : push,
	$method : translate
) {
	$name : sugar.test-argument('drawer-webcomponent','name',string,$name);
	$size : sugar.test-argument('drawer-webcomponent','size',number,$size);
	$side : sugar.test-argument('drawer-webcomponent','side',(top,right,bottom,left),$side);
	$type : sugar.test-argument('drawer-webcomponent','type',(reveal,slide,push),$type);
	$method : sugar.test-argument('drawer-webcomponent','method',(position,translate),$method);


	html, body {
		height: 100%;
	}

	#{selector(null, $name)} {
		position: fixed;
		display: block;
		@if $side == left {
			@if $type == push or $type == slide {
				@if $method == translate {
					@include sugar.translate($size * -1);
				} @else {
					right: auto;
					left : $size * -1;
				}
			} @else if $type == reveal {
				left: 0;
			}
		} @else if $side == right {
			@if $type == push or $type == slide {
				@if $method == translate {
					@include sugar.translate(0);
					left: 100%;
				} @else {
					left: auto;
					right : $size * -1;
				}
			} @else if $type == reveal {
				right: 0;
			}
		} @else if $side == top {
			@if $type == push or $type == slide {
				@if $method == translate {
					@include sugar.translate(0, $size * -1);
				} @else {
					bottom: auto;
					top : $size * -1;
				}
			} @else if $type == reveal {
				top: 0;
			}
		} @else if $side == bottom {
			@if $type == push or $type == slide {
				@if $method == translate {
					@include sugar.translate(0,0);
					top: 100%;
				} @else {
					top: auto;
					bottom: $size * -1;
				}
			} @else if $type == reveal {
				bottom: 0;
			}
		}

		@if $side == left or $side == right {
			// height: 100%;
			bottom:0;
			width: $size;
			top: 0;
		} @else if $side == top or $side == bottom {
			left : 0;
			height: $size;
			// width: 100%;
			right: 0;
		}

		@if $type == 'slide' {
			z-index:2;
		} @else {
			z-index:1;
		}

		overflow-x: hidden;
		overflow-y: auto;
		-webkit-overflow-scrolling: touch;
		@include sugar.transition();
	}
	/* actual page content pane */
	#{selector('content', $name)} {
		width: 100%; min-height:100vh;
		@include sugar.transition();
		position: relative;
		display: block;
		@if $method == position {
			top: 0;
			left: 0;
			right: 0;
			bottom:0;
		} @else if $method == translate {
			@include sugar.translate(0,0);
		}
		@if $type == 'slide' {
			z-index:1;
		} @else {
			z-index:2;
		}
	}

	#{selector('overlay', $name)} {
		position: fixed;
		top:0;
		left:0;
		right:0;
		bottom:0;
		height: 100%;
		width: 100%;
		background: rgba(255, 255, 255, 0);
		opacity: 0;
		pointer-events: none;
		@if $method == translate {
			@include sugar.translate(0,0);
		}
		@include sugar.transition();

		@if $type == 'slide' {
			z-index:2;
		} @else {
			z-index:4;
		}
	}

	#{selector('bkg', $name)} {
		display: block;
		position:fixed;
		top:0; left:0;
		width:100%;
		height:100%;
		z-index:0;
		visibility:hidden;
		@include sugar.transition();
	}

	#{selector('toggle', $name)}:checked ~ #{selector('overlay', $name)} {
		opacity: 1;
		pointer-events: all;
		@if $side == left {
			@if $method == translate {
				@include sugar.translate($size);
			} @else {
				right : auto;
				left : $size;
			}
		} @else if $side == right {
			@if $method == translate {
				@include sugar.translate($size * -1);
			} @else {
				left : auto;
				right : $size;
			}
		} @else if $side == top {
			@if $method == translate {
				@include sugar.translate(0, $size);
			} @else {
				bottom : auto;
				top : $size;
			}
		} @else if $side == bottom {
			@if $method == translate {
				@include sugar.translate(0, $size * -1);
			} @else {
				top : auto;
				bottom : $size;
			}
		}
		cursor: pointer;
	}

	#{selector('toggle', $name)}:checked ~ #{selector('bkg', $name)} {
		visibility: visible;
		@include sugar.transition(visibility 0s linear 0s);
	}

	#{selector('toggle', $name)}:checked ~ #{selector(null, $name)} {
		@if $type == push or $type == slide {
			@if $side == left {
				@if $method == translate {
					@include sugar.translate(0);
				} @else {
					right : auto;
					left : 0;
				}
			} @else if $side == right {
				@if $method == translate {
					@include sugar.translate($size * -1);
				} @else {
					left : auto;
					right : 0;
				}
			} @else if $side == top {
				@if $method == translate {
					@include sugar.translate(0,0);
				} @else {
					bottom : auto;
					top : 0;
				}
			} @else if $side == bottom {
				@if $method == translate {
					@include sugar.translate(0, $size * -1);
				} @else {
					top : auto;
					bottom : 0;
				}
			}
		}
	}

	#{selector('toggle', $name)}:checked ~ #{selector('content', $name)} {
		@if $type != slide {
			@if $side == left {
				@if $method == translate {
					@include sugar.translate($size);
				} @else {
					right : auto;
					left : $size;
				}
			} @else if $side == right {
				@if $method == translate {
					@include sugar.translate($size * -1);
				} @else {
					left : auto;
					right : $size;
				}
			} @else if $side == top {
				@if $method == translate {
					@include sugar.translate(0, $size);
				} @else {
					bottom : auto;
					top : $size;
				}
			} @else if $side == bottom {
				@if $method == translate {
					@include sugar.translate(0, $size * -1);
				} @else {
					top : auto;
					bottom : $size;
				}
				height: 100%;
			}
		}
	}

	@content;

}
